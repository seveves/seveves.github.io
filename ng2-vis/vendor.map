{"version":3,"file":"vendor.bundle.js","sources":["webpack:///./demo/vendor.ts","webpack:///./~/@angular/core/bundles/core.umd.js","webpack:///./~/rxjs/Observable.js","webpack:///./~/rxjs/Subscriber.js","webpack:///./~/rxjs/util/root.js","webpack:///./~/@angular/common/bundles/common.umd.js","webpack:///./~/@angular/platform-browser/bundles/platform-browser.umd.js","webpack:///./~/rxjs/Subject.js","webpack:///./~/rxjs/Subscription.js","webpack:///./~/rxjs/symbol/observable.js","webpack:///./~/rxjs/symbol/rxSubscriber.js","webpack:///./~/rxjs/util/isArray.js","webpack:///./~/vis/dist/vis.js","webpack:///./~/@angular/forms/bundles/forms.umd.js","webpack:///./~/@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js","webpack:///./~/rxjs/observable/PromiseObservable.js","webpack:///./~/rxjs/observable/fromPromise.js","webpack:///./~/rxjs/util/ObjectUnsubscribedError.js","webpack:///./~/rxjs/util/errorObject.js","webpack:///./~/rxjs/util/isFunction.js","webpack:///./~/@angular/compiler/bundles/compiler.umd.js","webpack:///./~/rxjs/Observer.js","webpack:///./~/rxjs/SubjectSubscription.js","webpack:///./~/rxjs/operator/toPromise.js","webpack:///./~/rxjs/util/UnsubscriptionError.js","webpack:///./~/rxjs/util/isObject.js","webpack:///./~/rxjs/util/toSubscriber.js","webpack:///./~/rxjs/util/tryCatch.js"],"sourcesContent":["// For vendors for example jQuery, Lodash, angular2-jwt just import them here unless you plan on\r\n// chunking vendors files for async loading. You would need to import the async loaded vendors\r\n// at the entry point of the async loaded file. Also see custom-typings.d.ts as you also need to\r\n// run `typings install x` where `x` is your module\r\n\r\n// Angular 2\r\nimport '@angular/common';\r\nimport '@angular/core';\r\nimport '@angular/forms';\r\nimport '@angular/platform-browser';\r\nimport '@angular/platform-browser-dynamic';\r\n\r\nimport 'vis';\r\n\r\n/*\r\nif ('production' === ENV) {\r\n  // Production\r\n\r\n} else {\r\n  // Development\r\n\r\n}\r\n*/\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./demo/vendor.ts\n **/","/**\n * @license Angular v2.2.4\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/Subject'), require('rxjs/Observable')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'rxjs/Subject', 'rxjs/Observable'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = global.ng.core || {}),global.Rx,global.Rx));\n}(this, function (exports,rxjs_Subject,rxjs_Observable) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = self;\n        }\n        else {\n            globalScope = global;\n        }\n    }\n    else {\n        globalScope = window;\n    }\n    function scheduleMicroTask(fn) {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var global$1 = globalScope;\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    global$1.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    function isPresent(obj) {\n        return obj != null;\n    }\n    function isBlank(obj) {\n        return obj == null;\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return token.overriddenName;\n        }\n        if (token.name) {\n            return token.name;\n        }\n        var res = token.toString();\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    function print(obj) {\n        // tslint:disable-next-line:no-console\n        console.log(obj);\n    }\n    function warn(obj) {\n        console.warn(obj);\n    }\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            if (globalScope.Symbol && Symbol.iterator) {\n                _symbolIterator = Symbol.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function isPrimitive(obj) {\n        return !isJsObject(obj);\n    }\n\n    var _nextClassId = 0;\n    var Reflect = global$1.Reflect;\n    function extractAnnotation(annotation) {\n        if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n            // it is a decorator, extract annotation\n            annotation = annotation.annotation;\n        }\n        return annotation;\n    }\n    function applyParams(fnOrArray, key) {\n        if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n            fnOrArray === Number || fnOrArray === Array) {\n            throw new Error(\"Can not use native \" + stringify(fnOrArray) + \" as constructor\");\n        }\n        if (typeof fnOrArray === 'function') {\n            return fnOrArray;\n        }\n        if (Array.isArray(fnOrArray)) {\n            var annotations = fnOrArray;\n            var annoLength = annotations.length - 1;\n            var fn = fnOrArray[annoLength];\n            if (typeof fn !== 'function') {\n                throw new Error(\"Last position of Class method array must be Function in key \" + key + \" was '\" + stringify(fn) + \"'\");\n            }\n            if (annoLength != fn.length) {\n                throw new Error(\"Number of annotations (\" + annoLength + \") does not match number of arguments (\" + fn.length + \") in the function: \" + stringify(fn));\n            }\n            var paramsAnnotations = [];\n            for (var i = 0, ii = annotations.length - 1; i < ii; i++) {\n                var paramAnnotations = [];\n                paramsAnnotations.push(paramAnnotations);\n                var annotation = annotations[i];\n                if (Array.isArray(annotation)) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        paramAnnotations.push(extractAnnotation(annotation[j]));\n                    }\n                }\n                else if (typeof annotation === 'function') {\n                    paramAnnotations.push(extractAnnotation(annotation));\n                }\n                else {\n                    paramAnnotations.push(annotation);\n                }\n            }\n            Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n            return fn;\n        }\n        throw new Error(\"Only Function or Array is supported in Class definition for key '\" + key + \"' is '\" + stringify(fnOrArray) + \"'\");\n    }\n    /**\n     * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n     *\n     * ## Basic Example\n     *\n     * ```\n     * var Greeter = ng.Class({\n     *   constructor: function(name) {\n     *     this.name = name;\n     *   },\n     *\n     *   greet: function() {\n     *     alert('Hello ' + this.name + '!');\n     *   }\n     * });\n     * ```\n     *\n     * is equivalent to ES6:\n     *\n     * ```\n     * class Greeter {\n     *   constructor(name) {\n     *     this.name = name;\n     *   }\n     *\n     *   greet() {\n     *     alert('Hello ' + this.name + '!');\n     *   }\n     * }\n     * ```\n     *\n     * or equivalent to ES5:\n     *\n     * ```\n     * var Greeter = function (name) {\n     *   this.name = name;\n     * }\n     *\n     * Greeter.prototype.greet = function () {\n     *   alert('Hello ' + this.name + '!');\n     * }\n     * ```\n     *\n     * ### Example with parameter annotations\n     *\n     * ```\n     * var MyService = ng.Class({\n     *   constructor: [String, [new Optional(), Service], function(name, myService) {\n     *     ...\n     *   }]\n     * });\n     * ```\n     *\n     * is equivalent to ES6:\n     *\n     * ```\n     * class MyService {\n     *   constructor(name: string, @Optional() myService: Service) {\n     *     ...\n     *   }\n     * }\n     * ```\n     *\n     * ### Example with inheritance\n     *\n     * ```\n     * var Shape = ng.Class({\n     *   constructor: (color) {\n     *     this.color = color;\n     *   }\n     * });\n     *\n     * var Square = ng.Class({\n     *   extends: Shape,\n     *   constructor: function(color, size) {\n     *     Shape.call(this, color);\n     *     this.size = size;\n     *   }\n     * });\n     * ```\n     * @stable\n     */\n    function Class(clsDef) {\n        var constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n        var proto = constructor.prototype;\n        if (clsDef.hasOwnProperty('extends')) {\n            if (typeof clsDef.extends === 'function') {\n                constructor.prototype = proto =\n                    Object.create(clsDef.extends.prototype);\n            }\n            else {\n                throw new Error(\"Class definition 'extends' property must be a constructor function was: \" + stringify(clsDef.extends));\n            }\n        }\n        for (var key in clsDef) {\n            if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n                proto[key] = applyParams(clsDef[key], key);\n            }\n        }\n        if (this && this.annotations instanceof Array) {\n            Reflect.defineMetadata('annotations', this.annotations, constructor);\n        }\n        var constructorName = constructor['name'];\n        if (!constructorName || constructorName === 'constructor') {\n            constructor['overriddenName'] = \"class\" + _nextClassId++;\n        }\n        return constructor;\n    }\n    function makeDecorator(name, props, parentClass, chainFn) {\n        if (chainFn === void 0) { chainFn = null; }\n        var metaCtor = makeMetadataCtor([props]);\n        function DecoratorFactory(objOrType) {\n            if (!(Reflect && Reflect.getMetadata)) {\n                throw 'reflect-metadata shim is required when using class decorators';\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call(this, objOrType);\n                return this;\n            }\n            var annotationInstance = new DecoratorFactory(objOrType);\n            var chainAnnotation = typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n            chainAnnotation.push(annotationInstance);\n            var TypeDecorator = function TypeDecorator(cls) {\n                var annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n                annotations.push(annotationInstance);\n                Reflect.defineMetadata('annotations', annotations, cls);\n                return cls;\n            };\n            TypeDecorator.annotations = chainAnnotation;\n            TypeDecorator.Class = Class;\n            if (chainFn)\n                chainFn(TypeDecorator);\n            return TypeDecorator;\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            props.forEach(function (prop, i) {\n                var argVal = args[i];\n                if (Array.isArray(prop)) {\n                    // plain parameter\n                    _this[prop[0]] = argVal === undefined ? prop[1] : argVal;\n                }\n                else {\n                    for (var propName in prop) {\n                        _this[propName] =\n                            argVal && argVal.hasOwnProperty(propName) ? argVal[propName] : prop[propName];\n                    }\n                }\n            });\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, [void 0].concat(args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                var parameters = Reflect.getMetadata('parameters', cls) || [];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                parameters[index] = parameters[index] || [];\n                parameters[index].push(annotationInstance);\n                Reflect.defineMetadata('parameters', parameters, cls);\n                return cls;\n            }\n            var _a;\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, [void 0].concat(args)))();\n            return function PropDecorator(target, name) {\n                var meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                Reflect.defineMetadata('propMetadata', meta, target.constructor);\n            };\n            var _a;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * Inject decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', [['token', undefined]]);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional', []);\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Injectable = makeParamDecorator('Injectable', []);\n    /**\n     * Self decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self', []);\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf', []);\n    /**\n     * Host decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host', []);\n\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n     *\n     * ```typescript\n     * var t = new OpaqueToken(\"value\");\n     *\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: t, useValue: \"bindingValue\"}\n     * ]);\n     *\n     * expect(injector.get(t)).toEqual(\"bindingValue\");\n     * ```\n     *\n     * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n     * caused by multiple providers using the same string as two different tokens.\n     *\n     * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n     * error messages.\n     * @stable\n     */\n    // so that metadata is gathered for this class\n    var OpaqueToken = (function () {\n        function OpaqueToken(_desc) {\n            this._desc = _desc;\n        }\n        OpaqueToken.prototype.toString = function () { return \"Token \" + this._desc; };\n        OpaqueToken.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        OpaqueToken.ctorParameters = [\n            null,\n        ];\n        return OpaqueToken;\n    }());\n\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new OpaqueToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', [['attributeName', undefined]]);\n    /**\n     * Base class for query metadata.\n     *\n     * See {@link ContentChildren}, {@link ContentChild}, {@link ViewChildren}, {@link ViewChild} for\n     * more information.\n     *\n     * @stable\n     */\n    var Query = (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *  @stable\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', [\n        ['selector', undefined], {\n            first: false,\n            isViewQuery: false,\n            descendants: false,\n            read: undefined,\n        }\n    ], Query);\n    /**\n     * @whatItDoes Configures a content query.\n     *\n     * @howToUse\n     *\n     * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n     *\n     * @description\n     *\n     * You can use ContentChild to get the first element or the directive matching the selector from the\n     * content DOM. If the content DOM changes, and a new child matches the selector,\n     * the property will be updated.\n     *\n     * Content queries are set before the `ngAfterContentInit` callback is called.\n     *\n     * **Metadata Properties**:\n     *\n     * * **selector** - the directive type or the name used for querying.\n     * * **read** - read a different token from the queried element.\n     *\n     * Let's look at an example:\n     *\n     * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n     *\n     * **npm package**: `@angular/core`\n     *\n     * @stable\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', [\n        ['selector', undefined], {\n            first: true,\n            isViewQuery: false,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n    /**\n     * @whatItDoes Configures a view query.\n     *\n     * @howToUse\n     *\n     * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n     *\n     * @description\n     *\n     * You can use ViewChildren to get the {@link QueryList} of elements or directives from the\n     * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n     * and the changes observable of the query list will emit a new value.\n     *\n     * View queries are set before the `ngAfterViewInit` callback is called.\n     *\n     * **Metadata Properties**:\n     *\n     * * **selector** - the directive type or the name used for querying.\n     * * **read** - read a different token from the queried elements.\n     *\n     * Let's look at an example:\n     *\n     * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n     *\n     * **npm package**: `@angular/core`\n     *\n     * @stable\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', [\n        ['selector', undefined], {\n            first: false,\n            isViewQuery: true,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', [\n        ['selector', undefined], {\n            first: true,\n            isViewQuery: true,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n\n    /**\n     * Describes within the change detector which strategy will be used the next time change\n     * detection is triggered.\n     * @stable\n     */\n    exports.ChangeDetectionStrategy;\n    (function (ChangeDetectionStrategy) {\n        /**\n         * `OnPush` means that the change detector's mode will be set to `CheckOnce` during hydration.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * `Default` means that the change detector's mode will be set to `CheckAlways` during hydration.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    /**\n     * Describes the status of the detector.\n     */\n    var ChangeDetectorStatus;\n    (function (ChangeDetectorStatus) {\n        /**\n         * `CheckOnce` means that after calling detectChanges the mode of the change detector\n         * will become `Checked`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * `Checked` means that the change detector should be skipped until its mode changes to\n         * `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n         * will remain `CheckAlways`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * `Detached` means that the change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * `Errored` means that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state will no longer detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * `Destroyed` means that the change detector is destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(ChangeDetectorStatus || (ChangeDetectorStatus = {}));\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return isBlank(changeDetectionStrategy) ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * Directive decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Directive = makeDecorator('Directive', {\n        selector: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        host: undefined,\n        providers: undefined,\n        exportAs: undefined,\n        queries: undefined\n    });\n    /**\n     * Component decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', {\n        selector: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        host: undefined,\n        exportAs: undefined,\n        moduleId: undefined,\n        providers: undefined,\n        viewProviders: undefined,\n        changeDetection: exports.ChangeDetectionStrategy.Default,\n        queries: undefined,\n        templateUrl: undefined,\n        template: undefined,\n        styleUrls: undefined,\n        styles: undefined,\n        animations: undefined,\n        encapsulation: undefined,\n        interpolation: undefined,\n        entryComponents: undefined\n    }, Directive);\n    /**\n     * Pipe decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', {\n        name: undefined,\n        pure: true,\n    });\n    /**\n     * Input decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', [['bindingPropertyName', undefined]]);\n    /**\n     * Output decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', [['bindingPropertyName', undefined]]);\n    /**\n     * HostBinding decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', [['hostPropertyName', undefined]]);\n    /**\n     * HostBinding decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', [['eventName', undefined], ['args', []]]);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @stable\n     */\n    var LifecycleHooks;\n    (function (LifecycleHooks) {\n        LifecycleHooks[LifecycleHooks[\"OnInit\"] = 0] = \"OnInit\";\n        LifecycleHooks[LifecycleHooks[\"OnDestroy\"] = 1] = \"OnDestroy\";\n        LifecycleHooks[LifecycleHooks[\"DoCheck\"] = 2] = \"DoCheck\";\n        LifecycleHooks[LifecycleHooks[\"OnChanges\"] = 3] = \"OnChanges\";\n        LifecycleHooks[LifecycleHooks[\"AfterContentInit\"] = 4] = \"AfterContentInit\";\n        LifecycleHooks[LifecycleHooks[\"AfterContentChecked\"] = 5] = \"AfterContentChecked\";\n        LifecycleHooks[LifecycleHooks[\"AfterViewInit\"] = 6] = \"AfterViewInit\";\n        LifecycleHooks[LifecycleHooks[\"AfterViewChecked\"] = 7] = \"AfterViewChecked\";\n    })(LifecycleHooks || (LifecycleHooks = {}));\n    var LIFECYCLE_HOOKS_VALUES = [\n        LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n        LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n        LifecycleHooks.AfterViewChecked\n    ];\n    /**\n     * @whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n     *\n     * @description\n     * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n     * and content children are checked if at least one of them has changed.\n     * The `changes` parameter contains the changed properties.\n     *\n     * See {@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var OnChanges = (function () {\n        function OnChanges() {\n        }\n        return OnChanges;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n     * initialized.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n     *\n     * @description\n     * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n     * first time, and before any of its children have been checked. It is invoked only once when the\n     * directive is instantiated.\n     *\n     * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var OnInit = (function () {\n        function OnInit() {\n        }\n        return OnInit;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n     *\n     * @description\n     * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n     * algorithm. The default change detection algorithm looks for differences by comparing\n     * bound-property values by reference across change detection runs.\n     *\n     * Note that a directive typically should not use both `DoCheck` and {@link OnChanges} to respond to\n     * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n     * detector detects changes.\n     *\n     * See {@link KeyValueDiffers} and {@link IterableDiffers} for implementing custom dirty checking\n     * for collections.\n     *\n     * See {@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var DoCheck = (function () {\n        function DoCheck() {\n        }\n        return DoCheck;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called when a directive or pipe is destroyed.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n     *\n     * @description\n     * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n     * instance is destroyed.\n     *\n     * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var OnDestroy = (function () {\n        function OnDestroy() {\n        }\n        return OnDestroy;\n    }());\n    /**\n     *\n     * @whatItDoes Lifecycle hook that is called after a directive's content has been fully\n     * initialized.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterContentInit = (function () {\n        function AfterContentInit() {\n        }\n        return AfterContentInit;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after every check of a directive's content.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterContentChecked = (function () {\n        function AfterContentChecked() {\n        }\n        return AfterContentChecked;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after a component's view has been fully\n     * initialized.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterViewInit = (function () {\n        function AfterViewInit() {\n        }\n        return AfterViewInit;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after every check of a component's view.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterViewChecked = (function () {\n        function AfterViewChecked() {\n        }\n        return AfterViewChecked;\n    }());\n\n    /**\n     * Defines a schema that will allow:\n     * - any non-Angular elements with a `-` in their name,\n     * - any properties on elements with a `-` in their name which is the common rule for custom\n     * elements.\n     *\n     * @stable\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that will allow any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * NgModule decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', {\n        providers: undefined,\n        declarations: undefined,\n        imports: undefined,\n        exports: undefined,\n        entryComponents: undefined,\n        bootstrap: undefined,\n        schemas: undefined,\n        id: undefined,\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines template and style encapsulation options available for Component's {@link Component}.\n     *\n     * See {@link ViewMetadata#encapsulation}.\n     * @stable\n     */\n    exports.ViewEncapsulation;\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via\n         * {@link ViewMetadata#styles} or {@link ViewMetadata#stylesUrls}, and adding the new Host Element\n         * attribute to all selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n    /**\n     * Metadata properties available for configuring Views.\n     *\n     * For details on the `@Component` annotation, see {@link Component}.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   selector: 'greet',\n     *   template: 'Hello {{name}}!',\n     * })\n     * class Greet {\n     *   name: string;\n     *\n     *   constructor() {\n     *     this.name = 'World';\n     *   }\n     * }\n     * ```\n     *\n     * @deprecated Use Component instead.\n     *\n     * {@link Component}\n     */\n    var ViewMetadata = (function () {\n        function ViewMetadata(_a) {\n            var _b = _a === void 0 ? {} : _a, templateUrl = _b.templateUrl, template = _b.template, encapsulation = _b.encapsulation, styles = _b.styles, styleUrls = _b.styleUrls, animations = _b.animations, interpolation = _b.interpolation;\n            this.templateUrl = templateUrl;\n            this.template = template;\n            this.styleUrls = styleUrls;\n            this.styles = styles;\n            this.encapsulation = encapsulation;\n            this.animations = animations;\n            this.interpolation = interpolation;\n        }\n        return ViewMetadata;\n    }());\n\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared,\n     * but not yet defined. It is also used when the `token` which we use when creating a query is not\n     * yet defined.\n     *\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * See: {@link forwardRef}\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    function unimplemented() {\n        throw new Error('unimplemented');\n    }\n    /**\n     * @stable\n     */\n    var BaseError = (function (_super) {\n        __extends(BaseError, _super);\n        function BaseError(message) {\n            // Errors don't use current this, instead they create a new instance.\n            // We have to do forward all of our api to the nativeInstance.\n            var nativeError = _super.call(this, message);\n            this._nativeError = nativeError;\n        }\n        Object.defineProperty(BaseError.prototype, \"message\", {\n            get: function () { return this._nativeError.message; },\n            set: function (message) { this._nativeError.message = message; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"name\", {\n            get: function () { return this._nativeError.name; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"stack\", {\n            get: function () { return this._nativeError.stack; },\n            set: function (value) { this._nativeError.stack = value; },\n            enumerable: true,\n            configurable: true\n        });\n        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n        return BaseError;\n    }(Error));\n    /**\n     * @stable\n     */\n    var WrappedError = (function (_super) {\n        __extends(WrappedError, _super);\n        function WrappedError(message, error) {\n            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n            this.originalError = error;\n        }\n        Object.defineProperty(WrappedError.prototype, \"stack\", {\n            get: function () {\n                return (this.originalError instanceof Error ? this.originalError : this._nativeError)\n                    .stack;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return WrappedError;\n    }(BaseError));\n\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var _NullInjector = (function () {\n        function _NullInjector() {\n        }\n        _NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                throw new Error(\"No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return _NullInjector;\n    }());\n    /**\n     * @whatItDoes Injector interface\n     * @howToUse\n     * ```\n     * const injector: Injector = ...;\n     * injector.get(...);\n     * ```\n     *\n     * @description\n     * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @stable\n     */\n    var Injector = (function () {\n        function Injector() {\n        }\n        /**\n         * Retrieves an instance from the injector based on the provided token.\n         * If not found:\n         * - Throws {@link NoProviderError} if no `notFoundValue` that is not equal to\n         * Injector.THROW_IF_NOT_FOUND is given\n         * - Returns the `notFoundValue` otherwise\n         */\n        Injector.prototype.get = function (token, notFoundValue) { return unimplemented(); };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new _NullInjector();\n        return Injector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    /**\n     * Base class for all errors arising from misconfigured providers.\n     * @stable\n     */\n    var AbstractProviderError = (function (_super) {\n        __extends$1(AbstractProviderError, _super);\n        function AbstractProviderError(injector, key, constructResolvingMessage) {\n            _super.call(this, 'DI Error');\n            this.keys = [key];\n            this.injectors = [injector];\n            this.constructResolvingMessage = constructResolvingMessage;\n            this.message = this.constructResolvingMessage(this.keys);\n        }\n        AbstractProviderError.prototype.addKey = function (injector, key) {\n            this.injectors.push(injector);\n            this.keys.push(key);\n            this.message = this.constructResolvingMessage(this.keys);\n        };\n        return AbstractProviderError;\n    }(BaseError));\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     * @stable\n     */\n    var NoProviderError = (function (_super) {\n        __extends$1(NoProviderError, _super);\n        function NoProviderError(injector, key) {\n            _super.call(this, injector, key, function (keys) {\n                var first = stringify(keys[0].token);\n                return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n            });\n        }\n        return NoProviderError;\n    }(AbstractProviderError));\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     * @stable\n     */\n    var CyclicDependencyError = (function (_super) {\n        __extends$1(CyclicDependencyError, _super);\n        function CyclicDependencyError(injector, key) {\n            _super.call(this, injector, key, function (keys) {\n                return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n            });\n        }\n        return CyclicDependencyError;\n    }(AbstractProviderError));\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     * @stable\n     */\n    var InstantiationError = (function (_super) {\n        __extends$1(InstantiationError, _super);\n        function InstantiationError(injector, originalException, originalStack, key) {\n            _super.call(this, 'DI Error', originalException);\n            this.keys = [key];\n            this.injectors = [injector];\n        }\n        InstantiationError.prototype.addKey = function (injector, key) {\n            this.injectors.push(injector);\n            this.keys.push(key);\n        };\n        Object.defineProperty(InstantiationError.prototype, \"message\", {\n            get: function () {\n                var first = stringify(this.keys[0].token);\n                return this.originalError.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(this.keys) + \".\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(InstantiationError.prototype, \"causeKey\", {\n            get: function () { return this.keys[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        return InstantiationError;\n    }(WrappedError));\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     * @stable\n     */\n    var InvalidProviderError = (function (_super) {\n        __extends$1(InvalidProviderError, _super);\n        function InvalidProviderError(provider) {\n            _super.call(this, \"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n        }\n        return InvalidProviderError;\n    }(BaseError));\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     * @stable\n     */\n    var NoAnnotationError = (function (_super) {\n        __extends$1(NoAnnotationError, _super);\n        function NoAnnotationError(typeOrFunc, params) {\n            _super.call(this, NoAnnotationError._genMessage(typeOrFunc, params));\n        }\n        NoAnnotationError._genMessage = function (typeOrFunc, params) {\n            var signature = [];\n            for (var i = 0, ii = params.length; i < ii; i++) {\n                var parameter = params[i];\n                if (!parameter || parameter.length == 0) {\n                    signature.push('?');\n                }\n                else {\n                    signature.push(parameter.map(stringify).join(' '));\n                }\n            }\n            return 'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n                signature.join(', ') + '). ' +\n                'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n                stringify(typeOrFunc) + '\\' is decorated with Injectable.';\n        };\n        return NoAnnotationError;\n    }(BaseError));\n    /**\n     * Thrown when getting an object by index.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     * @stable\n     */\n    var OutOfBoundsError = (function (_super) {\n        __extends$1(OutOfBoundsError, _super);\n        function OutOfBoundsError(index) {\n            _super.call(this, \"Index \" + index + \" is out-of-bounds.\");\n        }\n        return OutOfBoundsError;\n    }(BaseError));\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    var MixingMultiProvidersWithRegularProvidersError = (function (_super) {\n        __extends$1(MixingMultiProvidersWithRegularProvidersError, _super);\n        function MixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n            _super.call(this, 'Cannot mix multi providers and regular providers, got: ' + provider1.toString() + ' ' +\n                provider2.toString());\n        }\n        return MixingMultiProvidersWithRegularProvidersError;\n    }(BaseError));\n\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @experimental\n     */\n    var ReflectiveKey = (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n        }\n        Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n            /**\n             * Returns a stringified token.\n             */\n            get: function () { return stringify(this.token); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    /**\n     * @internal\n     */\n    var KeyRegistry = (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @whatItDoes Represents a type that a Component or other object is instances of.\n     *\n     * @description\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @stable\n     */\n    var Type = Function;\n\n    var ReflectionCapabilities = (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || global$1.Reflect;\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new (t.bind.apply(t, [void 0].concat(args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && isPresent(paramAnnotations[i])) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Prefer the direct API.\n            if (type.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // API for metadata created by invoking the decorators.\n            if (isPresent(this._reflect) && isPresent(this._reflect.getMetadata)) {\n                var paramAnnotations = this._reflect.getMetadata('parameters', type);\n                var paramTypes = this._reflect.getMetadata('design:paramtypes', type);\n                if (paramTypes || paramAnnotations) {\n                    return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n                }\n            }\n            // The array has to be filled with `undefined` because holes would be skipped by `some`\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (this._reflect && this._reflect.getMetadata) {\n                var annotations = this._reflect.getMetadata('annotations', typeOrFunc);\n                if (annotations)\n                    return annotations;\n            }\n            return [];\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (this._reflect && this._reflect.getMetadata) {\n                var propMetadata = this._reflect.getMetadata('propMetadata', typeOrFunc);\n                if (propMetadata)\n                    return propMetadata;\n            }\n            return {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, runtime) { return runtime; };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides read-only access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var ReflectorReader = (function () {\n        function ReflectorReader() {\n        }\n        return ReflectorReader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = (function (_super) {\n        __extends$2(Reflector, _super);\n        function Reflector(reflectionCapabilities) {\n            _super.call(this);\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }(ReflectorReader));\n\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = (function () {\n        function ReflectiveDependency(key, optional, lowerBoundVisibility, upperBoundVisibility, properties) {\n            this.key = key;\n            this.optional = optional;\n            this.lowerBoundVisibility = lowerBoundVisibility;\n            this.upperBoundVisibility = upperBoundVisibility;\n            this.properties = properties;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null, null, []);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n        }\n        Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n            get: function () { return this.resolvedFactories[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving {@link\n     * Provider}.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = (function () {\n        function ResolvedReflectiveFactory(\n            /**\n             * Factory function which can return an instance of an object represented by a key.\n             */\n            factory, \n            /**\n             * Arguments (dependencies) to the `factory` function.\n             */\n            dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the {@link Provider} into {@link ResolvedProvider}.\n     *\n     * {@link Injector} internally only uses {@link ResolvedProvider}, {@link Provider} contains\n     * convenience provider syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where\n     * each key is contained exactly once and multi providers\n     * have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw new MixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw new InvalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw new NoAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var depProps = [];\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null, null, depProps);\n            }\n            else {\n                return _createDependency(metadata, optional, null, null, depProps);\n            }\n        }\n        var lowerBoundVisibility = null;\n        var upperBoundVisibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self) {\n                upperBoundVisibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof Host) {\n                upperBoundVisibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof SkipSelf) {\n                lowerBoundVisibility = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, lowerBoundVisibility, upperBoundVisibility, depProps);\n        }\n        else {\n            throw new NoAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, lowerBoundVisibility, upperBoundVisibility, depProps) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, lowerBoundVisibility, upperBoundVisibility, depProps);\n    }\n\n    // Threshold for the dynamic version\n    var _MAX_CONSTRUCTION_COUNTER = 10;\n    var UNDEFINED = new Object();\n    var ReflectiveProtoInjectorInlineStrategy = (function () {\n        function ReflectiveProtoInjectorInlineStrategy(protoEI, providers) {\n            this.provider0 = null;\n            this.provider1 = null;\n            this.provider2 = null;\n            this.provider3 = null;\n            this.provider4 = null;\n            this.provider5 = null;\n            this.provider6 = null;\n            this.provider7 = null;\n            this.provider8 = null;\n            this.provider9 = null;\n            this.keyId0 = null;\n            this.keyId1 = null;\n            this.keyId2 = null;\n            this.keyId3 = null;\n            this.keyId4 = null;\n            this.keyId5 = null;\n            this.keyId6 = null;\n            this.keyId7 = null;\n            this.keyId8 = null;\n            this.keyId9 = null;\n            var length = providers.length;\n            if (length > 0) {\n                this.provider0 = providers[0];\n                this.keyId0 = providers[0].key.id;\n            }\n            if (length > 1) {\n                this.provider1 = providers[1];\n                this.keyId1 = providers[1].key.id;\n            }\n            if (length > 2) {\n                this.provider2 = providers[2];\n                this.keyId2 = providers[2].key.id;\n            }\n            if (length > 3) {\n                this.provider3 = providers[3];\n                this.keyId3 = providers[3].key.id;\n            }\n            if (length > 4) {\n                this.provider4 = providers[4];\n                this.keyId4 = providers[4].key.id;\n            }\n            if (length > 5) {\n                this.provider5 = providers[5];\n                this.keyId5 = providers[5].key.id;\n            }\n            if (length > 6) {\n                this.provider6 = providers[6];\n                this.keyId6 = providers[6].key.id;\n            }\n            if (length > 7) {\n                this.provider7 = providers[7];\n                this.keyId7 = providers[7].key.id;\n            }\n            if (length > 8) {\n                this.provider8 = providers[8];\n                this.keyId8 = providers[8].key.id;\n            }\n            if (length > 9) {\n                this.provider9 = providers[9];\n                this.keyId9 = providers[9].key.id;\n            }\n        }\n        ReflectiveProtoInjectorInlineStrategy.prototype.getProviderAtIndex = function (index) {\n            if (index == 0)\n                return this.provider0;\n            if (index == 1)\n                return this.provider1;\n            if (index == 2)\n                return this.provider2;\n            if (index == 3)\n                return this.provider3;\n            if (index == 4)\n                return this.provider4;\n            if (index == 5)\n                return this.provider5;\n            if (index == 6)\n                return this.provider6;\n            if (index == 7)\n                return this.provider7;\n            if (index == 8)\n                return this.provider8;\n            if (index == 9)\n                return this.provider9;\n            throw new OutOfBoundsError(index);\n        };\n        ReflectiveProtoInjectorInlineStrategy.prototype.createInjectorStrategy = function (injector) {\n            return new ReflectiveInjectorInlineStrategy(injector, this);\n        };\n        return ReflectiveProtoInjectorInlineStrategy;\n    }());\n    var ReflectiveProtoInjectorDynamicStrategy = (function () {\n        function ReflectiveProtoInjectorDynamicStrategy(protoInj, providers) {\n            this.providers = providers;\n            var len = providers.length;\n            this.keyIds = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = providers[i].key.id;\n            }\n        }\n        ReflectiveProtoInjectorDynamicStrategy.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this.providers.length) {\n                throw new OutOfBoundsError(index);\n            }\n            return this.providers[index];\n        };\n        ReflectiveProtoInjectorDynamicStrategy.prototype.createInjectorStrategy = function (ei) {\n            return new ReflectiveInjectorDynamicStrategy(this, ei);\n        };\n        return ReflectiveProtoInjectorDynamicStrategy;\n    }());\n    var ReflectiveProtoInjector = (function () {\n        function ReflectiveProtoInjector(providers) {\n            this.numberOfProviders = providers.length;\n            this._strategy = providers.length > _MAX_CONSTRUCTION_COUNTER ?\n                new ReflectiveProtoInjectorDynamicStrategy(this, providers) :\n                new ReflectiveProtoInjectorInlineStrategy(this, providers);\n        }\n        ReflectiveProtoInjector.fromResolvedProviders = function (providers) {\n            return new ReflectiveProtoInjector(providers);\n        };\n        ReflectiveProtoInjector.prototype.getProviderAtIndex = function (index) {\n            return this._strategy.getProviderAtIndex(index);\n        };\n        return ReflectiveProtoInjector;\n    }());\n    var ReflectiveInjectorInlineStrategy = (function () {\n        function ReflectiveInjectorInlineStrategy(injector, protoStrategy) {\n            this.injector = injector;\n            this.protoStrategy = protoStrategy;\n            this.obj0 = UNDEFINED;\n            this.obj1 = UNDEFINED;\n            this.obj2 = UNDEFINED;\n            this.obj3 = UNDEFINED;\n            this.obj4 = UNDEFINED;\n            this.obj5 = UNDEFINED;\n            this.obj6 = UNDEFINED;\n            this.obj7 = UNDEFINED;\n            this.obj8 = UNDEFINED;\n            this.obj9 = UNDEFINED;\n        }\n        ReflectiveInjectorInlineStrategy.prototype.resetConstructionCounter = function () { this.injector._constructionCounter = 0; };\n        ReflectiveInjectorInlineStrategy.prototype.instantiateProvider = function (provider) {\n            return this.injector._new(provider);\n        };\n        ReflectiveInjectorInlineStrategy.prototype.getObjByKeyId = function (keyId) {\n            var p = this.protoStrategy;\n            var inj = this.injector;\n            if (p.keyId0 === keyId) {\n                if (this.obj0 === UNDEFINED) {\n                    this.obj0 = inj._new(p.provider0);\n                }\n                return this.obj0;\n            }\n            if (p.keyId1 === keyId) {\n                if (this.obj1 === UNDEFINED) {\n                    this.obj1 = inj._new(p.provider1);\n                }\n                return this.obj1;\n            }\n            if (p.keyId2 === keyId) {\n                if (this.obj2 === UNDEFINED) {\n                    this.obj2 = inj._new(p.provider2);\n                }\n                return this.obj2;\n            }\n            if (p.keyId3 === keyId) {\n                if (this.obj3 === UNDEFINED) {\n                    this.obj3 = inj._new(p.provider3);\n                }\n                return this.obj3;\n            }\n            if (p.keyId4 === keyId) {\n                if (this.obj4 === UNDEFINED) {\n                    this.obj4 = inj._new(p.provider4);\n                }\n                return this.obj4;\n            }\n            if (p.keyId5 === keyId) {\n                if (this.obj5 === UNDEFINED) {\n                    this.obj5 = inj._new(p.provider5);\n                }\n                return this.obj5;\n            }\n            if (p.keyId6 === keyId) {\n                if (this.obj6 === UNDEFINED) {\n                    this.obj6 = inj._new(p.provider6);\n                }\n                return this.obj6;\n            }\n            if (p.keyId7 === keyId) {\n                if (this.obj7 === UNDEFINED) {\n                    this.obj7 = inj._new(p.provider7);\n                }\n                return this.obj7;\n            }\n            if (p.keyId8 === keyId) {\n                if (this.obj8 === UNDEFINED) {\n                    this.obj8 = inj._new(p.provider8);\n                }\n                return this.obj8;\n            }\n            if (p.keyId9 === keyId) {\n                if (this.obj9 === UNDEFINED) {\n                    this.obj9 = inj._new(p.provider9);\n                }\n                return this.obj9;\n            }\n            return UNDEFINED;\n        };\n        ReflectiveInjectorInlineStrategy.prototype.getObjAtIndex = function (index) {\n            if (index == 0)\n                return this.obj0;\n            if (index == 1)\n                return this.obj1;\n            if (index == 2)\n                return this.obj2;\n            if (index == 3)\n                return this.obj3;\n            if (index == 4)\n                return this.obj4;\n            if (index == 5)\n                return this.obj5;\n            if (index == 6)\n                return this.obj6;\n            if (index == 7)\n                return this.obj7;\n            if (index == 8)\n                return this.obj8;\n            if (index == 9)\n                return this.obj9;\n            throw new OutOfBoundsError(index);\n        };\n        ReflectiveInjectorInlineStrategy.prototype.getMaxNumberOfObjects = function () { return _MAX_CONSTRUCTION_COUNTER; };\n        return ReflectiveInjectorInlineStrategy;\n    }());\n    var ReflectiveInjectorDynamicStrategy = (function () {\n        function ReflectiveInjectorDynamicStrategy(protoStrategy, injector) {\n            this.protoStrategy = protoStrategy;\n            this.injector = injector;\n            this.objs = new Array(protoStrategy.providers.length).fill(UNDEFINED);\n        }\n        ReflectiveInjectorDynamicStrategy.prototype.resetConstructionCounter = function () { this.injector._constructionCounter = 0; };\n        ReflectiveInjectorDynamicStrategy.prototype.instantiateProvider = function (provider) {\n            return this.injector._new(provider);\n        };\n        ReflectiveInjectorDynamicStrategy.prototype.getObjByKeyId = function (keyId) {\n            var p = this.protoStrategy;\n            for (var i = 0; i < p.keyIds.length; i++) {\n                if (p.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this.injector._new(p.providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        ReflectiveInjectorDynamicStrategy.prototype.getObjAtIndex = function (index) {\n            if (index < 0 || index >= this.objs.length) {\n                throw new OutOfBoundsError(index);\n            }\n            return this.objs[index];\n        };\n        ReflectiveInjectorDynamicStrategy.prototype.getMaxNumberOfObjects = function () { return this.objs.length; };\n        return ReflectiveInjectorDynamicStrategy;\n    }());\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @stable\n     */\n    var ReflectiveInjector = (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of {@link ResolvedReflectiveProvider}s.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         * See {@link ReflectiveInjector#fromResolvedProviders} for more info.\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, {@link Provider},\n         * or a recursive array of more providers.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         *\n         * This function is slower than the corresponding `fromResolvedProviders`\n         * because it needs to resolve the passed-in providers first.\n         * See {@link Injector#resolve} and {@link Injector#fromResolvedProviders}.\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            if (parent === void 0) { parent = null; }\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            if (parent === void 0) { parent = null; }\n            return new ReflectiveInjector_(ReflectiveProtoInjector.fromResolvedProviders(providers), parent);\n        };\n        Object.defineProperty(ReflectiveInjector.prototype, \"parent\", {\n            /**\n             * Parent of this injector.\n             *\n             * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n             * -->\n             *\n             * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n             *\n             * ```typescript\n             * var parent = ReflectiveInjector.resolveAndCreate([]);\n             * var child = parent.resolveAndCreateChild([]);\n             * expect(child.parent).toBe(parent);\n             * ```\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Resolves an array of providers and creates a child injector from those providers.\n         *\n         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n         * -->\n         *\n         * The passed-in providers can be an array of `Type`, {@link Provider},\n         * or a recursive array of more providers.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n         *\n         * ```typescript\n         * class ParentProvider {}\n         * class ChildProvider {}\n         *\n         * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n         * var child = parent.resolveAndCreateChild([ChildProvider]);\n         *\n         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n         * ```\n         *\n         * This function is slower than the corresponding `createChildFromResolved`\n         * because it needs to resolve the passed-in providers first.\n         * See {@link Injector#resolve} and {@link Injector#createChildFromResolved}.\n         */\n        ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) { return unimplemented(); };\n        /**\n         * Creates a child injector from previously resolved providers.\n         *\n         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n         * -->\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n         *\n         * ```typescript\n         * class ParentProvider {}\n         * class ChildProvider {}\n         *\n         * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n         * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n         *\n         * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n         * var child = parent.createChildFromResolved(childProviders);\n         *\n         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n         * ```\n         */\n        ReflectiveInjector.prototype.createChildFromResolved = function (providers) {\n            return unimplemented();\n        };\n        /**\n         * Resolves a provider and instantiates an object in the context of the injector.\n         *\n         * The created object does not get cached by the injector.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n         *\n         * var car = injector.resolveAndInstantiate(Car);\n         * expect(car.engine).toBe(injector.get(Engine));\n         * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n         * ```\n         */\n        ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) { return unimplemented(); };\n        /**\n         * Instantiates an object using a resolved provider in the context of the injector.\n         *\n         * The created object does not get cached by the injector.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n         * var carProvider = ReflectiveInjector.resolve([Car])[0];\n         * var car = injector.instantiateResolved(carProvider);\n         * expect(car.engine).toBe(injector.get(Engine));\n         * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n         * ```\n         */\n        ReflectiveInjector.prototype.instantiateResolved = function (provider) { return unimplemented(); };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_proto /* ProtoInjector */, _parent) {\n            if (_parent === void 0) { _parent = null; }\n            /** @internal */\n            this._constructionCounter = 0;\n            this._proto = _proto;\n            this._parent = _parent;\n            this._strategy = _proto._strategy.createInjectorStrategy(this);\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.getAt = function (index) { return this._strategy.getObjAtIndex(index); };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"parent\", {\n            get: function () { return this._parent; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ReflectiveInjector_.prototype, \"internalStrategy\", {\n            /**\n             * @internal\n             * Internal. Do not use.\n             * We return `any` not to export the InjectorStrategy type.\n             */\n            get: function () { return this._strategy; },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var proto = new ReflectiveProtoInjector(providers);\n            var inj = new ReflectiveInjector_(proto);\n            inj._parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._strategy.getMaxNumberOfObjects()) {\n                throw new CyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps = ResolvedReflectiveFactory.dependencies;\n            var length = deps.length;\n            var d0;\n            var d1;\n            var d2;\n            var d3;\n            var d4;\n            var d5;\n            var d6;\n            var d7;\n            var d8;\n            var d9;\n            var d10;\n            var d11;\n            var d12;\n            var d13;\n            var d14;\n            var d15;\n            var d16;\n            var d17;\n            var d18;\n            var d19;\n            try {\n                d0 = length > 0 ? this._getByReflectiveDependency(provider, deps[0]) : null;\n                d1 = length > 1 ? this._getByReflectiveDependency(provider, deps[1]) : null;\n                d2 = length > 2 ? this._getByReflectiveDependency(provider, deps[2]) : null;\n                d3 = length > 3 ? this._getByReflectiveDependency(provider, deps[3]) : null;\n                d4 = length > 4 ? this._getByReflectiveDependency(provider, deps[4]) : null;\n                d5 = length > 5 ? this._getByReflectiveDependency(provider, deps[5]) : null;\n                d6 = length > 6 ? this._getByReflectiveDependency(provider, deps[6]) : null;\n                d7 = length > 7 ? this._getByReflectiveDependency(provider, deps[7]) : null;\n                d8 = length > 8 ? this._getByReflectiveDependency(provider, deps[8]) : null;\n                d9 = length > 9 ? this._getByReflectiveDependency(provider, deps[9]) : null;\n                d10 = length > 10 ? this._getByReflectiveDependency(provider, deps[10]) : null;\n                d11 = length > 11 ? this._getByReflectiveDependency(provider, deps[11]) : null;\n                d12 = length > 12 ? this._getByReflectiveDependency(provider, deps[12]) : null;\n                d13 = length > 13 ? this._getByReflectiveDependency(provider, deps[13]) : null;\n                d14 = length > 14 ? this._getByReflectiveDependency(provider, deps[14]) : null;\n                d15 = length > 15 ? this._getByReflectiveDependency(provider, deps[15]) : null;\n                d16 = length > 16 ? this._getByReflectiveDependency(provider, deps[16]) : null;\n                d17 = length > 17 ? this._getByReflectiveDependency(provider, deps[17]) : null;\n                d18 = length > 18 ? this._getByReflectiveDependency(provider, deps[18]) : null;\n                d19 = length > 19 ? this._getByReflectiveDependency(provider, deps[19]) : null;\n            }\n            catch (e) {\n                if (e instanceof AbstractProviderError || e instanceof InstantiationError) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                switch (length) {\n                    case 0:\n                        obj = factory();\n                        break;\n                    case 1:\n                        obj = factory(d0);\n                        break;\n                    case 2:\n                        obj = factory(d0, d1);\n                        break;\n                    case 3:\n                        obj = factory(d0, d1, d2);\n                        break;\n                    case 4:\n                        obj = factory(d0, d1, d2, d3);\n                        break;\n                    case 5:\n                        obj = factory(d0, d1, d2, d3, d4);\n                        break;\n                    case 6:\n                        obj = factory(d0, d1, d2, d3, d4, d5);\n                        break;\n                    case 7:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6);\n                        break;\n                    case 8:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7);\n                        break;\n                    case 9:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8);\n                        break;\n                    case 10:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9);\n                        break;\n                    case 11:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10);\n                        break;\n                    case 12:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11);\n                        break;\n                    case 13:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12);\n                        break;\n                    case 14:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13);\n                        break;\n                    case 15:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14);\n                        break;\n                    case 16:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15);\n                        break;\n                    case 17:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16);\n                        break;\n                    case 18:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17);\n                        break;\n                    case 19:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18);\n                        break;\n                    case 20:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19);\n                        break;\n                    default:\n                        throw new Error(\"Cannot instantiate '\" + provider.key.displayName + \"' because it has more than 20 dependencies\");\n                }\n            }\n            catch (e) {\n                throw new InstantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (provider, dep) {\n            return this._getByKey(dep.key, dep.lowerBoundVisibility, dep.upperBoundVisibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, lowerBoundVisibility, upperBoundVisibility, notFoundValue) {\n            if (key === INJECTOR_KEY) {\n                return this;\n            }\n            if (upperBoundVisibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, lowerBoundVisibility);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw new NoProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._strategy.getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, lowerBoundVisibility) {\n            var inj;\n            if (lowerBoundVisibility instanceof SkipSelf) {\n                inj = this._parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._strategy.getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_._parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        return ReflectiveInjector_;\n    }());\n    var INJECTOR_KEY = ReflectiveKey.get(Injector);\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._proto.numberOfProviders);\n        for (var i = 0; i < injector._proto.numberOfProviders; ++i) {\n            res[i] = fn(injector._proto.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @whatItDoes Provides a hook for centralized exception handling.\n     *\n     * @description\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @stable\n     */\n    var ErrorHandler = (function () {\n        function ErrorHandler(rethrowError) {\n            if (rethrowError === void 0) { rethrowError = true; }\n            /**\n             * @internal\n             */\n            this._console = console;\n            this.rethrowError = rethrowError;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var originalStack = this._findOriginalStack(error);\n            var context = this._findContext(error);\n            this._console.error(\"EXCEPTION: \" + this._extractMessage(error));\n            if (originalError) {\n                this._console.error(\"ORIGINAL EXCEPTION: \" + this._extractMessage(originalError));\n            }\n            if (originalStack) {\n                this._console.error('ORIGINAL STACKTRACE:');\n                this._console.error(originalStack);\n            }\n            if (context) {\n                this._console.error('ERROR CONTEXT:');\n                this._console.error(context);\n            }\n            // We rethrow exceptions, so operations like 'bootstrap' will result in an error\n            // when an error happens. If we do not rethrow, bootstrap will always succeed.\n            if (this.rethrowError)\n                throw error;\n        };\n        /** @internal */\n        ErrorHandler.prototype._extractMessage = function (error) {\n            return error instanceof Error ? error.message : error.toString();\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return error.context ? error.context :\n                    this._findContext(error.originalError);\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = error.originalError;\n            while (e && e.originalError) {\n                e = e.originalError;\n            }\n            return e;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalStack = function (error) {\n            if (!(error instanceof Error))\n                return null;\n            var e = error;\n            var stack = e.stack;\n            while (e instanceof Error && e.originalError) {\n                e = e.originalError;\n                if (e instanceof Error && e.stack) {\n                    stack = e.stack;\n                }\n            }\n            return stack;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        StringMapWrapper.merge = function (m1, m2) {\n            var m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        StringMapWrapper.equals = function (m1, m2) {\n            var k1 = Object.keys(m1);\n            var k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var i = 0; i < k1.length; i++) {\n                var key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        ListWrapper.removeAll = function (list, items) {\n            for (var i = 0; i < items.length; ++i) {\n                var index = list.indexOf(items[i]);\n                if (index > -1) {\n                    list.splice(index, 1);\n                }\n            }\n        };\n        ListWrapper.remove = function (list, el) {\n            var index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        ListWrapper.flatten = function (list) {\n            return list.reduce(function (flat, item) {\n                var flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n                return flat.concat(flatItem);\n            }, []);\n        };\n        return ListWrapper;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) &&\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n\n    /**\n     * A function that will be executed when an application is initialized.\n     * @experimental\n     */\n    var APP_INITIALIZER = new OpaqueToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @experimental\n     */\n    var ApplicationInitStatus = (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this._done = false;\n            var asyncInitPromises = [];\n            if (appInits) {\n                for (var i = 0; i < appInits.length; i++) {\n                    var initResult = appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            this._donePromise = Promise.all(asyncInitPromises).then(function () { _this._done = true; });\n            if (asyncInitPromises.length === 0) {\n                this._done = true;\n            }\n        }\n        Object.defineProperty(ApplicationInitStatus.prototype, \"done\", {\n            get: function () { return this._done; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ApplicationInitStatus.prototype, \"donePromise\", {\n            get: function () { return this._donePromise; },\n            enumerable: true,\n            configurable: true\n        });\n        ApplicationInitStatus.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ApplicationInitStatus.ctorParameters = [\n            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n        ];\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new OpaqueToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new OpaqueToken('Platform Initializer');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new OpaqueToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new OpaqueToken('Application Packages Root URL');\n\n    var Console = (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) { print(message); };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) { warn(message); };\n        Console.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        Console.ctorParameters = [];\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Indicates that a component is still being loaded in a synchronous compile.\n     *\n     * @stable\n     */\n    var ComponentStillLoadingError = (function (_super) {\n        __extends$4(ComponentStillLoadingError, _super);\n        function ComponentStillLoadingError(compType) {\n            _super.call(this, \"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n            this.compType = compType;\n        }\n        return ComponentStillLoadingError;\n    }(BaseError));\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     * @stable\n     */\n    var Compiler = (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents`\n         * have to be inlined. Otherwise throws a {@link ComponentStillLoadingError}.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new OpaqueToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @stable\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    var DefaultIterableDifferFactory = (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (cdRef, trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @stable\n     */\n    var DefaultIterableDiffer = (function () {\n        function DefaultIterableDiffer(_trackByFn) {\n            this._trackByFn = _trackByFn;\n            this._length = null;\n            this._collection = null;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = this._trackByFn || trackByIdentity;\n        }\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"collection\", {\n            get: function () { return this._collection; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"length\", {\n            get: function () { return this._length; },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (isBlank(collection))\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + collection + \"'\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        // todo(vicb): optim for UnmodifiableListView (frozen arrays)\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                var list = collection;\n                this._length = collection.length;\n                for (var index_1 = 0; index_1 < this._length; index_1++) {\n                    item = list[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item /** TODO #9100 */) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this._length = index;\n            }\n            this._truncate(record);\n            this._collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new CollectionChangeRecord(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link CollectionChangeRecord}s from the previous collection\n         *\n         * - `record` The first excess {@link CollectionChangeRecord}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // todo(vicb)\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // todo(vicb)\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // todo(vicb)\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // todo(vicb)\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // todo(vicb)\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // todo(vicb)\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // todo(vicb)\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // todo(vicb)\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // todo(vicb)\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // todo(vicb)\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype.toString = function () {\n            var list = [];\n            this.forEachItem(function (record /** TODO #9100 */) { return list.push(record); });\n            var previous = [];\n            this.forEachPreviousItem(function (record /** TODO #9100 */) { return previous.push(record); });\n            var additions = [];\n            this.forEachAddedItem(function (record /** TODO #9100 */) { return additions.push(record); });\n            var moves = [];\n            this.forEachMovedItem(function (record /** TODO #9100 */) { return moves.push(record); });\n            var removals = [];\n            this.forEachRemovedItem(function (record /** TODO #9100 */) { return removals.push(record); });\n            var identityChanges = [];\n            this.forEachIdentityChange(function (record /** TODO #9100 */) { return identityChanges.push(record); });\n            return 'collection: ' + list.join(', ') + '\\n' +\n                'previous: ' + previous.join(', ') + '\\n' +\n                'additions: ' + additions.join(', ') + '\\n' +\n                'moves: ' + moves.join(', ') + '\\n' +\n                'removals: ' + removals.join(', ') + '\\n' +\n                'identityChanges: ' + identityChanges.join(', ') + '\\n';\n        };\n        return DefaultIterableDiffer;\n    }());\n    /**\n     * @stable\n     */\n    var CollectionChangeRecord = (function () {\n        function CollectionChangeRecord(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        CollectionChangeRecord.prototype.toString = function () {\n            return this.previousIndex === this.currentIndex ? stringify(this.item) :\n                stringify(this.item) + '[' +\n                    stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n        };\n        return CollectionChangeRecord;\n    }());\n    // A linked list of CollectionChangeRecords with the same CollectionChangeRecord.item\n    var _DuplicateItemRecordList = (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // todo(vicb)\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a CollectionChangeRecord having CollectionChangeRecord.trackById == trackById and\n        // CollectionChangeRecord.currentIndex >= afterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, afterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((afterIndex === null || afterIndex < record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link CollectionChangeRecord} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // todo(vicb)\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (CollectionChangeRecord cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the CollectionChangeRecord value may be one which we\n         * have already iterated over, we use the afterIndex to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the last `a` not the first or second.\n         */\n        _DuplicateMap.prototype.get = function (trackById, afterIndex) {\n            if (afterIndex === void 0) { afterIndex = null; }\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, afterIndex) : null;\n        };\n        /**\n         * Removes a {@link CollectionChangeRecord} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        _DuplicateMap.prototype.toString = function () { return '_DuplicateMap(' + stringify(this.map) + ')'; };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    var DefaultKeyValueDifferFactory = (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function (cdRef) { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + map + \"'\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var records = this._records;\n            var oldSeqRecord = this._mapHead;\n            var lastOldSeqRecord = null;\n            var lastNewSeqRecord = null;\n            var seqChanged = false;\n            this._forEach(map, function (value, key) {\n                var newSeqRecord;\n                if (oldSeqRecord && key === oldSeqRecord.key) {\n                    newSeqRecord = oldSeqRecord;\n                    _this._maybeAddToChanges(newSeqRecord, value);\n                }\n                else {\n                    seqChanged = true;\n                    if (oldSeqRecord !== null) {\n                        _this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n                        _this._addToRemovals(oldSeqRecord);\n                    }\n                    if (records.has(key)) {\n                        newSeqRecord = records.get(key);\n                        _this._maybeAddToChanges(newSeqRecord, value);\n                    }\n                    else {\n                        newSeqRecord = new KeyValueChangeRecord(key);\n                        records.set(key, newSeqRecord);\n                        newSeqRecord.currentValue = value;\n                        _this._addToAdditions(newSeqRecord);\n                    }\n                }\n                if (seqChanged) {\n                    if (_this._isInRemovals(newSeqRecord)) {\n                        _this._removeFromRemovals(newSeqRecord);\n                    }\n                    if (lastNewSeqRecord == null) {\n                        _this._mapHead = newSeqRecord;\n                    }\n                    else {\n                        lastNewSeqRecord._next = newSeqRecord;\n                    }\n                }\n                lastOldSeqRecord = oldSeqRecord;\n                lastNewSeqRecord = newSeqRecord;\n                oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n            });\n            this._truncate(lastOldSeqRecord, oldSeqRecord);\n            return this.isDirty;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // Record the state of the mapping\n                for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = this._removalsTail = null;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._truncate = function (lastRecord, record) {\n            while (record !== null) {\n                if (lastRecord === null) {\n                    this._mapHead = null;\n                }\n                else {\n                    lastRecord._next = null;\n                }\n                var nextRecord = record._next;\n                this._addToRemovals(record);\n                lastRecord = record;\n                record = nextRecord;\n            }\n            for (var rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {\n                rec.previousValue = rec.currentValue;\n                rec.currentValue = null;\n                this._records.delete(rec.key);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._isInRemovals = function (record) {\n            return record === this._removalsHead || record._nextRemoved !== null ||\n                record._prevRemoved !== null;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._addToRemovals = function (record) {\n            if (this._removalsHead === null) {\n                this._removalsHead = this._removalsTail = record;\n            }\n            else {\n                this._removalsTail._nextRemoved = record;\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._removeFromSeq = function (prev, record) {\n            var next = record._next;\n            if (prev === null) {\n                this._mapHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            record._next = null;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._removeFromRemovals = function (record) {\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            record._prevRemoved = record._nextRemoved = null;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype.toString = function () {\n            var items = [];\n            var previous = [];\n            var changes = [];\n            var additions = [];\n            var removals = [];\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                items.push(stringify(record));\n            }\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                previous.push(stringify(record));\n            }\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                changes.push(stringify(record));\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                additions.push(stringify(record));\n            }\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                removals.push(stringify(record));\n            }\n            return 'map: ' + items.join(', ') + '\\n' +\n                'previous: ' + previous.join(', ') + '\\n' +\n                'additions: ' + additions.join(', ') + '\\n' +\n                'changes: ' + changes.join(', ') + '\\n' +\n                'removals: ' + removals.join(', ') + '\\n';\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    /**\n     * @stable\n     */\n    var KeyValueChangeRecord = (function () {\n        function KeyValueChangeRecord(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        KeyValueChangeRecord.prototype.toString = function () {\n            return looseIdentical(this.previousValue, this.currentValue) ?\n                stringify(this.key) :\n                (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n                    stringify(this.currentValue) + ']');\n        };\n        return KeyValueChangeRecord;\n    }());\n\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     * @stable\n     */\n    var IterableDiffers = (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (isPresent(parent)) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n                return new IterableDiffers(factories);\n            }\n            else {\n                return new IterableDiffers(factories);\n            }\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n               * which will only be applied to the injector for this component and its children.\n               * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (isPresent(factory)) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        return IterableDiffers;\n    }());\n\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     * @stable\n     */\n    var KeyValueDiffers = (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (isPresent(parent)) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n                return new KeyValueDiffers(factories);\n            }\n            else {\n                return new KeyValueDiffers(factories);\n            }\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n               * which will only be applied to the injector for this component and its children.\n               * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (isPresent(factory)) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n            }\n        };\n        return KeyValueDiffers;\n    }());\n\n    var UNINITIALIZED = {\n        toString: function () { return 'CD_INIT_VALUE'; }\n    };\n    function devModeEqual(a, b) {\n        if (isListLikeIterable(a) && isListLikeIterable(b)) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else if (!isListLikeIterable(a) && !isPrimitive(a) && !isListLikeIterable(b) && !isPrimitive(b)) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference\n     * has not changed.\n     *\n     * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     * @stable\n     */\n    var WrappedValue = (function () {\n        function WrappedValue(wrapped) {\n            this.wrapped = wrapped;\n        }\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        return WrappedValue;\n    }());\n    /**\n     * Helper class for unwrapping WrappedValue s\n     */\n    var ValueUnwrapper = (function () {\n        function ValueUnwrapper() {\n            this.hasWrappedValue = false;\n        }\n        ValueUnwrapper.prototype.unwrap = function (value) {\n            if (value instanceof WrappedValue) {\n                this.hasWrappedValue = true;\n                return value.wrapped;\n            }\n            return value;\n        };\n        ValueUnwrapper.prototype.reset = function () { this.hasWrappedValue = false; };\n        return ValueUnwrapper;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     * @stable\n     */\n    var SimpleChange = (function () {\n        function SimpleChange(previousValue, currentValue) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.previousValue === UNINITIALIZED; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @stable\n     */\n    var ChangeDetectorRef = (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @experimental\n     */\n    // TODO (matsko): add typing for the animation function\n    var RenderComponentType = (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    var RenderDebugInfo = (function () {\n        function RenderDebugInfo() {\n        }\n        Object.defineProperty(RenderDebugInfo.prototype, \"injector\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"component\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"providerTokens\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"references\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"context\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"source\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return RenderDebugInfo;\n    }());\n    /**\n     * @experimental\n     */\n    var Renderer = (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link #setElementProperty} or {@link #setElementAttribute}\n     * respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     * @experimental\n     */\n    var RootRenderer = (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n     * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n     * handled.\n     *\n     * See DomSanitizer for more details on security in Angular applications.\n     *\n     * @stable\n     */\n    exports.SecurityContext;\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @stable\n     */\n    var Sanitizer = (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * An error thrown if application changes model breaking the top-down data flow.\n     *\n     * This exception is only thrown in dev mode.\n     *\n     * <!-- TODO: Add a link once the dev mode option is configurable -->\n     *\n     * ### Example\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'parent',\n     *   template: '<child [prop]=\"parentProp\"></child>',\n     * })\n     * class Parent {\n     *   parentProp = 'init';\n     * }\n     *\n     * @Directive({selector: 'child', inputs: ['prop']})\n     * class Child {\n     *   constructor(public parent: Parent) {}\n     *\n     *   set prop(v) {\n     *     // this updates the parent property, which is disallowed during change detection\n     *     // this will result in ExpressionChangedAfterItHasBeenCheckedError\n     *     this.parent.parentProp = 'updated';\n     *   }\n     * }\n     * ```\n     * @stable\n     */\n    var ExpressionChangedAfterItHasBeenCheckedError = (function (_super) {\n        __extends$6(ExpressionChangedAfterItHasBeenCheckedError, _super);\n        function ExpressionChangedAfterItHasBeenCheckedError(oldValue, currValue) {\n            var msg = \"Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (oldValue === UNINITIALIZED) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            _super.call(this, msg);\n        }\n        return ExpressionChangedAfterItHasBeenCheckedError;\n    }(BaseError));\n    /**\n     * Thrown when an exception was raised during view creation, change detection or destruction.\n     *\n     * This error wraps the original exception to attach additional contextual information that can\n     * be useful for debugging.\n     * @stable\n     */\n    var ViewWrappedError = (function (_super) {\n        __extends$6(ViewWrappedError, _super);\n        function ViewWrappedError(originalError, context) {\n            _super.call(this, \"Error in \" + context.source, originalError);\n            this.context = context;\n        }\n        return ViewWrappedError;\n    }(WrappedError));\n    /**\n     * Thrown when a destroyed view is used.\n     *\n     * This error indicates a bug in the framework.\n     *\n     * This is an internal Angular error.\n     * @stable\n     */\n    var ViewDestroyedError = (function (_super) {\n        __extends$6(ViewDestroyedError, _super);\n        function ViewDestroyedError(details) {\n            _super.call(this, \"Attempt to use a destroyed view: \" + details);\n        }\n        return ViewDestroyedError;\n    }(BaseError));\n\n    var ViewUtils = (function () {\n        function ViewUtils(_renderer, sanitizer) {\n            this._renderer = _renderer;\n            this._nextCompTypeId = 0;\n            this.sanitizer = sanitizer;\n        }\n        /** @internal */\n        ViewUtils.prototype.renderComponent = function (renderComponentType) {\n            return this._renderer.renderComponent(renderComponentType);\n        };\n        ViewUtils.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ViewUtils.ctorParameters = [\n            { type: RootRenderer, },\n            { type: Sanitizer, },\n        ];\n        return ViewUtils;\n    }());\n    var nextRenderComponentTypeId = 0;\n    function createRenderComponentType(templateUrl, slotCount, encapsulation, styles, animations) {\n        return new RenderComponentType(\"\" + nextRenderComponentTypeId++, templateUrl, slotCount, encapsulation, styles, animations);\n    }\n    function addToArray(e, array) {\n        array.push(e);\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    function checkBinding(throwOnChange, oldValue, newValue) {\n        if (throwOnChange) {\n            if (!devModeEqual(oldValue, newValue)) {\n                throw new ExpressionChangedAfterItHasBeenCheckedError(oldValue, newValue);\n            }\n            return false;\n        }\n        else {\n            return !looseIdentical(oldValue, newValue);\n        }\n    }\n    function castByValue(input, value) {\n        return input;\n    }\n    var EMPTY_ARRAY = [];\n    var EMPTY_MAP = {};\n    function pureProxy1(fn) {\n        var result;\n        var v0 = UNINITIALIZED;\n        return function (p0) {\n            if (!looseIdentical(v0, p0)) {\n                v0 = p0;\n                result = fn(p0);\n            }\n            return result;\n        };\n    }\n    function pureProxy2(fn) {\n        var result;\n        var v0 = UNINITIALIZED;\n        var v1 = UNINITIALIZED;\n        return function (p0, p1) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1)) {\n                v0 = p0;\n                v1 = p1;\n                result = fn(p0, p1);\n            }\n            return result;\n        };\n    }\n    function pureProxy3(fn) {\n        var result;\n        var v0 = UNINITIALIZED;\n        var v1 = UNINITIALIZED;\n        var v2 = UNINITIALIZED;\n        return function (p0, p1, p2) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                result = fn(p0, p1, p2);\n            }\n            return result;\n        };\n    }\n    function pureProxy4(fn) {\n        var result;\n        var v0, v1, v2, v3;\n        v0 = v1 = v2 = v3 = UNINITIALIZED;\n        return function (p0, p1, p2, p3) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                result = fn(p0, p1, p2, p3);\n            }\n            return result;\n        };\n    }\n    function pureProxy5(fn) {\n        var result;\n        var v0, v1, v2, v3, v4;\n        v0 = v1 = v2 = v3 = v4 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                result = fn(p0, p1, p2, p3, p4);\n            }\n            return result;\n        };\n    }\n    function pureProxy6(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5;\n        v0 = v1 = v2 = v3 = v4 = v5 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                result = fn(p0, p1, p2, p3, p4, p5);\n            }\n            return result;\n        };\n    }\n    function pureProxy7(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                result = fn(p0, p1, p2, p3, p4, p5, p6);\n            }\n            return result;\n        };\n    }\n    function pureProxy8(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6, v7;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7);\n            }\n            return result;\n        };\n    }\n    function pureProxy9(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6, v7, v8;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                v8 = p8;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8);\n            }\n            return result;\n        };\n    }\n    function pureProxy10(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6, v7, v8, v9;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = v9 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8) ||\n                !looseIdentical(v9, p9)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                v8 = p8;\n                v9 = p9;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\n            }\n            return result;\n        };\n    }\n    function setBindingDebugInfoForChanges(renderer, el, changes) {\n        Object.keys(changes).forEach(function (propName) {\n            setBindingDebugInfo(renderer, el, propName, changes[propName].currentValue);\n        });\n    }\n    function setBindingDebugInfo(renderer, el, propName, value) {\n        try {\n            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), value ? value.toString() : null);\n        }\n        catch (e) {\n            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), '[ERROR] Exception while trying to serialize the value');\n        }\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i - 0] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function createRenderElement(renderer, parentElement, name, attrs, debugInfo) {\n        var el = renderer.createElement(parentElement, name, debugInfo);\n        for (var i = 0; i < attrs.length; i += 2) {\n            renderer.setElementAttribute(el, attrs.get(i), attrs.get(i + 1));\n        }\n        return el;\n    }\n    function selectOrCreateRenderHostElement(renderer, elementName, attrs, rootSelectorOrNode, debugInfo) {\n        var hostElement;\n        if (isPresent(rootSelectorOrNode)) {\n            hostElement = renderer.selectRootElement(rootSelectorOrNode, debugInfo);\n            for (var i = 0; i < attrs.length; i += 2) {\n                renderer.setElementAttribute(hostElement, attrs.get(i), attrs.get(i + 1));\n            }\n        }\n        else {\n            hostElement = createRenderElement(renderer, null, elementName, attrs, debugInfo);\n        }\n        return hostElement;\n    }\n    function subscribeToRenderElement(view, element, eventNamesAndTargets, listener) {\n        var disposables = createEmptyInlineArray(eventNamesAndTargets.length / 2);\n        for (var i = 0; i < eventNamesAndTargets.length; i += 2) {\n            var eventName = eventNamesAndTargets.get(i);\n            var eventTarget = eventNamesAndTargets.get(i + 1);\n            var disposable = void 0;\n            if (eventTarget) {\n                disposable = view.renderer.listenGlobal(eventTarget, eventName, listener.bind(view, eventTarget + \":\" + eventName));\n            }\n            else {\n                disposable = view.renderer.listen(element, eventName, listener.bind(view, eventName));\n            }\n            disposables.set(i / 2, disposable);\n        }\n        return disposeInlineArray.bind(null, disposables);\n    }\n    function disposeInlineArray(disposables) {\n        for (var i = 0; i < disposables.length; i++) {\n            disposables.get(i)();\n        }\n    }\n    function noop() { }\n    function createEmptyInlineArray(length) {\n        var ctor;\n        if (length <= 2) {\n            ctor = InlineArray2;\n        }\n        else if (length <= 4) {\n            ctor = InlineArray4;\n        }\n        else if (length <= 8) {\n            ctor = InlineArray8;\n        }\n        else if (length <= 16) {\n            ctor = InlineArray16;\n        }\n        else {\n            ctor = InlineArrayDynamic;\n        }\n        return new ctor(length);\n    }\n    var InlineArray0 = (function () {\n        function InlineArray0() {\n            this.length = 0;\n        }\n        InlineArray0.prototype.get = function (index) { return undefined; };\n        InlineArray0.prototype.set = function (index, value) { };\n        return InlineArray0;\n    }());\n    var InlineArray2 = (function () {\n        function InlineArray2(length, _v0, _v1) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n        }\n        InlineArray2.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                default:\n                    return undefined;\n            }\n        };\n        InlineArray2.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n            }\n        };\n        return InlineArray2;\n    }());\n    var InlineArray4 = (function () {\n        function InlineArray4(length, _v0, _v1, _v2, _v3) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n            this._v2 = _v2;\n            this._v3 = _v3;\n        }\n        InlineArray4.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                case 2:\n                    return this._v2;\n                case 3:\n                    return this._v3;\n                default:\n                    return undefined;\n            }\n        };\n        InlineArray4.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n                case 2:\n                    this._v2 = value;\n                    break;\n                case 3:\n                    this._v3 = value;\n                    break;\n            }\n        };\n        return InlineArray4;\n    }());\n    var InlineArray8 = (function () {\n        function InlineArray8(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n            this._v2 = _v2;\n            this._v3 = _v3;\n            this._v4 = _v4;\n            this._v5 = _v5;\n            this._v6 = _v6;\n            this._v7 = _v7;\n        }\n        InlineArray8.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                case 2:\n                    return this._v2;\n                case 3:\n                    return this._v3;\n                case 4:\n                    return this._v4;\n                case 5:\n                    return this._v5;\n                case 6:\n                    return this._v6;\n                case 7:\n                    return this._v7;\n                default:\n                    return undefined;\n            }\n        };\n        InlineArray8.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n                case 2:\n                    this._v2 = value;\n                    break;\n                case 3:\n                    this._v3 = value;\n                    break;\n                case 4:\n                    this._v4 = value;\n                    break;\n                case 5:\n                    this._v5 = value;\n                    break;\n                case 6:\n                    this._v6 = value;\n                    break;\n                case 7:\n                    this._v7 = value;\n                    break;\n            }\n        };\n        return InlineArray8;\n    }());\n    var InlineArray16 = (function () {\n        function InlineArray16(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7, _v8, _v9, _v10, _v11, _v12, _v13, _v14, _v15) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n            this._v2 = _v2;\n            this._v3 = _v3;\n            this._v4 = _v4;\n            this._v5 = _v5;\n            this._v6 = _v6;\n            this._v7 = _v7;\n            this._v8 = _v8;\n            this._v9 = _v9;\n            this._v10 = _v10;\n            this._v11 = _v11;\n            this._v12 = _v12;\n            this._v13 = _v13;\n            this._v14 = _v14;\n            this._v15 = _v15;\n        }\n        InlineArray16.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                case 2:\n                    return this._v2;\n                case 3:\n                    return this._v3;\n                case 4:\n                    return this._v4;\n                case 5:\n                    return this._v5;\n                case 6:\n                    return this._v6;\n                case 7:\n                    return this._v7;\n                case 8:\n                    return this._v8;\n                case 9:\n                    return this._v9;\n                case 10:\n                    return this._v10;\n                case 11:\n                    return this._v11;\n                case 12:\n                    return this._v12;\n                case 13:\n                    return this._v13;\n                case 14:\n                    return this._v14;\n                case 15:\n                    return this._v15;\n                default:\n                    return undefined;\n            }\n        };\n        InlineArray16.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n                case 2:\n                    this._v2 = value;\n                    break;\n                case 3:\n                    this._v3 = value;\n                    break;\n                case 4:\n                    this._v4 = value;\n                    break;\n                case 5:\n                    this._v5 = value;\n                    break;\n                case 6:\n                    this._v6 = value;\n                    break;\n                case 7:\n                    this._v7 = value;\n                    break;\n                case 8:\n                    this._v8 = value;\n                    break;\n                case 9:\n                    this._v9 = value;\n                    break;\n                case 10:\n                    this._v10 = value;\n                    break;\n                case 11:\n                    this._v11 = value;\n                    break;\n                case 12:\n                    this._v12 = value;\n                    break;\n                case 13:\n                    this._v13 = value;\n                    break;\n                case 14:\n                    this._v14 = value;\n                    break;\n                case 15:\n                    this._v15 = value;\n                    break;\n            }\n        };\n        return InlineArray16;\n    }());\n    var InlineArrayDynamic = (function () {\n        // Note: We still take the length argument so this class can be created\n        // in the same ways as the other classes!\n        function InlineArrayDynamic(length) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            this.length = length;\n            this._values = values;\n        }\n        InlineArrayDynamic.prototype.get = function (index) { return this._values[index]; };\n        InlineArrayDynamic.prototype.set = function (index, value) { this._values[index] = value; };\n        return InlineArrayDynamic;\n    }());\n    var EMPTY_INLINE_ARRAY = new InlineArray0();\n\n\n    var view_utils = Object.freeze({\n        ViewUtils: ViewUtils,\n        createRenderComponentType: createRenderComponentType,\n        addToArray: addToArray,\n        interpolate: interpolate,\n        inlineInterpolate: inlineInterpolate,\n        checkBinding: checkBinding,\n        castByValue: castByValue,\n        EMPTY_ARRAY: EMPTY_ARRAY,\n        EMPTY_MAP: EMPTY_MAP,\n        pureProxy1: pureProxy1,\n        pureProxy2: pureProxy2,\n        pureProxy3: pureProxy3,\n        pureProxy4: pureProxy4,\n        pureProxy5: pureProxy5,\n        pureProxy6: pureProxy6,\n        pureProxy7: pureProxy7,\n        pureProxy8: pureProxy8,\n        pureProxy9: pureProxy9,\n        pureProxy10: pureProxy10,\n        setBindingDebugInfoForChanges: setBindingDebugInfoForChanges,\n        setBindingDebugInfo: setBindingDebugInfo,\n        createRenderElement: createRenderElement,\n        selectOrCreateRenderHostElement: selectOrCreateRenderHostElement,\n        subscribeToRenderElement: subscribeToRenderElement,\n        noop: noop,\n        InlineArray2: InlineArray2,\n        InlineArray4: InlineArray4,\n        InlineArray8: InlineArray8,\n        InlineArray16: InlineArray16,\n        InlineArrayDynamic: InlineArrayDynamic,\n        EMPTY_INLINE_ARRAY: EMPTY_INLINE_ARRAY\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     * @stable\n     */\n    var ComponentRef = (function () {\n        function ComponentRef() {\n        }\n        Object.defineProperty(ComponentRef.prototype, \"location\", {\n            /**\n             * Location of the Host Element of this Component Instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            /**\n             * The injector on which the component instance exists.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef.prototype, \"instance\", {\n            /**\n             * The instance of the Component.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef.prototype, \"hostView\", {\n            /**\n             * The {@link ViewRef} of the Host View of this Component instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef.prototype, \"changeDetectorRef\", {\n            /**\n             * The {@link ChangeDetectorRef} of the Component instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef.prototype, \"componentType\", {\n            /**\n             * The component type.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return ComponentRef;\n    }());\n    var ComponentRef_ = (function (_super) {\n        __extends$5(ComponentRef_, _super);\n        function ComponentRef_(_index, _parentView, _nativeElement, _component) {\n            _super.call(this);\n            this._index = _index;\n            this._parentView = _parentView;\n            this._nativeElement = _nativeElement;\n            this._component = _component;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () { return new ElementRef(this._nativeElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return this._parentView.injector(this._index); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"instance\", {\n            get: function () { return this._component; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"hostView\", {\n            get: function () { return this._parentView.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"changeDetectorRef\", {\n            get: function () { return this._parentView.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._parentView.detachAndDestroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this.hostView.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    /**\n     * @stable\n     */\n    var ComponentFactory = (function () {\n        function ComponentFactory(selector, _viewClass, _componentType) {\n            this.selector = selector;\n            this._viewClass = _viewClass;\n            this._componentType = _componentType;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"componentType\", {\n            get: function () { return this._componentType; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode) {\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            if (rootSelectorOrNode === void 0) { rootSelectorOrNode = null; }\n            var vu = injector.get(ViewUtils);\n            if (!projectableNodes) {\n                projectableNodes = [];\n            }\n            var hostView = new this._viewClass(vu, null, null, null);\n            return hostView.createHostView(rootSelectorOrNode, injector, projectableNodes);\n        };\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @stable\n     */\n    var NoComponentFactoryError = (function (_super) {\n        __extends$7(NoComponentFactoryError, _super);\n        function NoComponentFactoryError(component) {\n            _super.call(this, \"No component factory found for \" + stringify(component));\n            this.component = component;\n        }\n        return NoComponentFactoryError;\n    }(BaseError));\n    var _NullComponentFactoryResolver = (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw new NoComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @stable\n     */\n    var ComponentFactoryResolver = (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = (function () {\n        function CodegenComponentFactoryResolver(factories, _parent) {\n            this._parent = _parent;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var result = this._factories.get(component);\n            if (!result) {\n                result = this._parent.resolveComponentFactory(component);\n            }\n            return result;\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = global$1['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     * @stable\n     */\n    var EventEmitter = (function (_super) {\n        __extends$8(EventEmitter, _super);\n        /**\n         * Creates an instance of [EventEmitter], which depending on [isAsync],\n         * delivers events synchronously or asynchronously.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            _super.call(this);\n            this.__isAsync = isAsync;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        };\n        return EventEmitter;\n    }(rxjs_Subject.Subject));\n\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * ### Example\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo'.\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *       // reenter the Angular zone and display done\n     *       this._ngZone.run(() => {console.log('Outside Done!') });\n     *     }}));\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     * @experimental\n     */\n    var NgZone = (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this._hasPendingMicrotasks = false;\n            this._hasPendingMacrotasks = false;\n            this._isStable = true;\n            this._nesting = 0;\n            this._onUnstable = new EventEmitter(false);\n            this._onMicrotaskEmpty = new EventEmitter(false);\n            this._onStable = new EventEmitter(false);\n            this._onErrorEvents = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error('Angular requires Zone.js prolyfill.');\n            }\n            Zone.assertZonePatched();\n            this.outer = this.inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                this.inner = this.inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                this.inner = this.inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            this.forkInnerZoneWithAngularBehavior();\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn) { return this.inner.run(fn); };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn) { return this.inner.runGuarded(fn); };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) { return this.outer.run(fn); };\n        Object.defineProperty(NgZone.prototype, \"onUnstable\", {\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            get: function () { return this._onUnstable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onMicrotaskEmpty\", {\n            /**\n             * Notifies when there is no more microtasks enqueue in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            get: function () { return this._onMicrotaskEmpty; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onStable\", {\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            get: function () { return this._onStable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onError\", {\n            /**\n             * Notify that an error has been delivered.\n             */\n            get: function () { return this._onErrorEvents; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"isStable\", {\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            get: function () { return this._isStable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"hasPendingMicrotasks\", {\n            get: function () { return this._hasPendingMicrotasks; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"hasPendingMacrotasks\", {\n            get: function () { return this._hasPendingMacrotasks; },\n            enumerable: true,\n            configurable: true\n        });\n        NgZone.prototype.checkStable = function () {\n            var _this = this;\n            if (this._nesting == 0 && !this._hasPendingMicrotasks && !this._isStable) {\n                try {\n                    this._nesting++;\n                    this._onMicrotaskEmpty.emit(null);\n                }\n                finally {\n                    this._nesting--;\n                    if (!this._hasPendingMicrotasks) {\n                        try {\n                            this.runOutsideAngular(function () { return _this._onStable.emit(null); });\n                        }\n                        finally {\n                            this._isStable = true;\n                        }\n                    }\n                }\n            }\n        };\n        NgZone.prototype.forkInnerZoneWithAngularBehavior = function () {\n            var _this = this;\n            this.inner = this.inner.fork({\n                name: 'angular',\n                properties: { 'isAngularZone': true },\n                onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                    try {\n                        _this.onEnter();\n                        return delegate.invokeTask(target, task, applyThis, applyArgs);\n                    }\n                    finally {\n                        _this.onLeave();\n                    }\n                },\n                onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                    try {\n                        _this.onEnter();\n                        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                    }\n                    finally {\n                        _this.onLeave();\n                    }\n                },\n                onHasTask: function (delegate, current, target, hasTaskState) {\n                    delegate.hasTask(target, hasTaskState);\n                    if (current === target) {\n                        // We are only interested in hasTask events which originate from our zone\n                        // (A child hasTask event is not interesting to us)\n                        if (hasTaskState.change == 'microTask') {\n                            _this.setHasMicrotask(hasTaskState.microTask);\n                        }\n                        else if (hasTaskState.change == 'macroTask') {\n                            _this.setHasMacrotask(hasTaskState.macroTask);\n                        }\n                    }\n                },\n                onHandleError: function (delegate, current, target, error) {\n                    delegate.handleError(target, error);\n                    _this.triggerError(error);\n                    return false;\n                }\n            });\n        };\n        NgZone.prototype.onEnter = function () {\n            this._nesting++;\n            if (this._isStable) {\n                this._isStable = false;\n                this._onUnstable.emit(null);\n            }\n        };\n        NgZone.prototype.onLeave = function () {\n            this._nesting--;\n            this.checkStable();\n        };\n        NgZone.prototype.setHasMicrotask = function (hasMicrotasks) {\n            this._hasPendingMicrotasks = hasMicrotasks;\n            this.checkStable();\n        };\n        NgZone.prototype.setHasMacrotask = function (hasMacrotasks) { this._hasPendingMacrotasks = hasMacrotasks; };\n        NgZone.prototype.triggerError = function (error) { this._onErrorEvents.emit(error); };\n        return NgZone;\n    }());\n\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = (function () {\n        function Testability(_ngZone) {\n            this._ngZone = _ngZone;\n            /** @internal */\n            this._pendingCount = 0;\n            /** @internal */\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            /** @internal */\n            this._callbacks = [];\n            this._watchAngularEvents();\n        }\n        /** @internal */\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        /** @internal */\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        (_this._callbacks.pop())(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Not Ready\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.whenStable = function (callback) {\n            this._callbacks.push(callback);\n            this._runCallbacksIfReady();\n        };\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /** @deprecated use findProviders */\n        Testability.prototype.findBindings = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        Testability.ctorParameters = [\n            { type: NgZone, },\n        ];\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem); };\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        TestabilityRegistry.ctorParameters = [];\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @stable\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlaformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var marker = new OpaqueToken(\"Platform: \" + name);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            if (!getPlatform()) {\n                if (parentPlaformFactory) {\n                    parentPlaformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform\n     * which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when {@link bootstrap}() is called, or\n     * explicitly by calling {@link createPlatform}().\n     *\n     * @stable\n     */\n    var PlatformRef = (function () {\n        function PlatformRef() {\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory) {\n            throw unimplemented();\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         * @stable\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            throw unimplemented();\n        };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { throw unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { throw unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return PlatformRef;\n    }());\n    function _callAndReportToErrorHandler(errorHandler, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    errorHandler.handleError(e);\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            errorHandler.handleError(e);\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    var PlatformRef_ = (function (_super) {\n        __extends$3(PlatformRef_, _super);\n        function PlatformRef_(_injector) {\n            _super.call(this);\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        PlatformRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef_.prototype, \"injector\", {\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformRef_.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        PlatformRef_.prototype.bootstrapModuleFactory = function (moduleFactory) {\n            return this._bootstrapModuleFactoryWithZone(moduleFactory, null);\n        };\n        PlatformRef_.prototype._bootstrapModuleFactoryWithZone = function (moduleFactory, ngZone) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            if (!ngZone)\n                ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = ReflectiveInjector.resolveAndCreate([{ provide: NgZone, useValue: ngZone }], _this.injector);\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return ListWrapper.remove(_this._modules, moduleRef); });\n                ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } });\n                return _callAndReportToErrorHandler(exceptionHandler, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        PlatformRef_.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            return this._bootstrapModuleWithZone(moduleType, compilerOptions, null);\n        };\n        PlatformRef_.prototype._bootstrapModuleWithZone = function (moduleType, compilerOptions, ngZone, componentFactoryCallback) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var compiler = compilerFactory.createCompiler(Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n            // ugly internal api hack: generate host component factories for all declared components and\n            // pass the factories into the callback - this is used by UpdateAdapter to get hold of all\n            // factories.\n            if (componentFactoryCallback) {\n                return compiler.compileModuleAndAllComponentsAsync(moduleType)\n                    .then(function (_a) {\n                    var ngModuleFactory = _a.ngModuleFactory, componentFactories = _a.componentFactories;\n                    componentFactoryCallback(componentFactories);\n                    return _this._bootstrapModuleFactoryWithZone(ngModuleFactory, ngZone);\n                });\n            }\n            return compiler.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone); });\n        };\n        PlatformRef_.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef.bootstrapFactories.length > 0) {\n                moduleRef.bootstrapFactories.forEach(function (compFactory) { return appRef.bootstrap(compFactory); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error((\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \") +\n                    \"Please define one of these.\");\n            }\n        };\n        PlatformRef_.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        PlatformRef_.ctorParameters = [\n            { type: Injector, },\n        ];\n        return PlatformRef_;\n    }(PlatformRef));\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * For more about Angular applications, see the documentation for {@link bootstrap}.\n     *\n     * @stable\n     */\n    var ApplicationRef = (function () {\n        function ApplicationRef() {\n        }\n        Object.defineProperty(ApplicationRef.prototype, \"componentTypes\", {\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ApplicationRef.prototype, \"components\", {\n            /**\n             * Get a list of components registered to this application.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        return ApplicationRef;\n    }());\n    var ApplicationRef_ = (function (_super) {\n        __extends$3(ApplicationRef_, _super);\n        function ApplicationRef_(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus, _testabilityRegistry, _testability) {\n            var _this = this;\n            _super.call(this);\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._testabilityRegistry = _testabilityRegistry;\n            this._testability = _testability;\n            this._bootstrapListeners = [];\n            this._rootComponents = [];\n            this._rootComponentTypes = [];\n            this._changeDetectorRefs = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        }\n        ApplicationRef_.prototype.registerChangeDetector = function (changeDetector) {\n            this._changeDetectorRefs.push(changeDetector);\n        };\n        ApplicationRef_.prototype.unregisterChangeDetector = function (changeDetector) {\n            ListWrapper.remove(this._changeDetectorRefs, changeDetector);\n        };\n        ApplicationRef_.prototype.bootstrap = function (componentOrFactory) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this._rootComponentTypes.push(componentFactory.componentType);\n            var compRef = componentFactory.create(this._injector, [], componentFactory.selector);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular 2 is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /** @internal */\n        ApplicationRef_.prototype._loadComponent = function (componentRef) {\n            this._changeDetectorRefs.push(componentRef.changeDetectorRef);\n            this.tick();\n            this._rootComponents.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, [])\n                .concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        /** @internal */\n        ApplicationRef_.prototype._unloadComponent = function (componentRef) {\n            if (this._rootComponents.indexOf(componentRef) == -1) {\n                return;\n            }\n            this.unregisterChangeDetector(componentRef.changeDetectorRef);\n            ListWrapper.remove(this._rootComponents, componentRef);\n        };\n        ApplicationRef_.prototype.tick = function () {\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_._tickScope();\n            try {\n                this._runningTick = true;\n                this._changeDetectorRefs.forEach(function (detector) { return detector.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._changeDetectorRefs.forEach(function (detector) { return detector.checkNoChanges(); });\n                }\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        ApplicationRef_.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._rootComponents.slice().forEach(function (component) { return component.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef_.prototype, \"componentTypes\", {\n            get: function () { return this._rootComponentTypes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ApplicationRef_.prototype, \"components\", {\n            get: function () { return this._rootComponents; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef_.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ApplicationRef_.ctorParameters = [\n            { type: NgZone, },\n            { type: Console, },\n            { type: Injector, },\n            { type: ErrorHandler, },\n            { type: ComponentFactoryResolver, },\n            { type: ApplicationInitStatus, },\n            { type: TestabilityRegistry, decorators: [{ type: Optional },] },\n            { type: Testability, decorators: [{ type: Optional },] },\n        ];\n        return ApplicationRef_;\n    }(ApplicationRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$9 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @stable\n     */\n    var NgModuleRef = (function () {\n        function NgModuleRef() {\n        }\n        Object.defineProperty(NgModuleRef.prototype, \"injector\", {\n            /**\n             * The injector that contains all of the providers of the NgModule.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef.prototype, \"componentFactoryResolver\", {\n            /**\n             * The ComponentFactoryResolver to get hold of the ComponentFactories\n             * declared in the `entryComponents` property of the module.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef.prototype, \"instance\", {\n            /**\n             * The NgModule instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = (function () {\n        function NgModuleFactory(_injectorClass, _moduleType) {\n            this._injectorClass = _injectorClass;\n            this._moduleType = _moduleType;\n        }\n        Object.defineProperty(NgModuleFactory.prototype, \"moduleType\", {\n            get: function () { return this._moduleType; },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            if (!parentInjector) {\n                parentInjector = Injector.NULL;\n            }\n            var instance = new this._injectorClass(parentInjector);\n            instance.create();\n            return instance;\n        };\n        return NgModuleFactory;\n    }());\n    var _UNDEFINED = new Object();\n    var NgModuleInjector = (function (_super) {\n        __extends$9(NgModuleInjector, _super);\n        function NgModuleInjector(parent, factories, bootstrapFactories) {\n            _super.call(this, factories, parent.get(ComponentFactoryResolver, ComponentFactoryResolver.NULL));\n            this.parent = parent;\n            this.bootstrapFactories = bootstrapFactories;\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        NgModuleInjector.prototype.create = function () { this.instance = this.createInternal(); };\n        NgModuleInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (token === Injector || token === ComponentFactoryResolver) {\n                return this;\n            }\n            var result = this.getInternal(token, _UNDEFINED);\n            return result === _UNDEFINED ? this.parent.get(token, notFoundValue) : result;\n        };\n        Object.defineProperty(NgModuleInjector.prototype, \"injector\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleInjector.prototype, \"componentFactoryResolver\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleInjector.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            this.destroyInternal();\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleInjector.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleInjector;\n    }(CodegenComponentFactoryResolver));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     * @stable\n     */\n    var NgModuleFactoryLoader = (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link Query} and {@link ViewQueryMetadata} provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     * @stable\n     */\n    var QueryList = (function () {\n        function QueryList() {\n            this._dirty = true;\n            this._results = [];\n            this._emitter = new EventEmitter();\n        }\n        Object.defineProperty(QueryList.prototype, \"changes\", {\n            get: function () { return this._emitter; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"length\", {\n            get: function () { return this._results.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"first\", {\n            get: function () { return this._results[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"last\", {\n            get: function () { return this._results[this.length - 1]; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) { return this._results.find(fn); };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = ListWrapper.flatten(res);\n            this._dirty = false;\n        };\n        QueryList.prototype.notifyOnChanges = function () { this._emitter.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this._dirty = true; };\n        Object.defineProperty(QueryList.prototype, \"dirty\", {\n            /** internal */\n            get: function () { return this._dirty; },\n            enumerable: true,\n            configurable: true\n        });\n        return QueryList;\n    }());\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        SystemJsNgModuleLoader.ctorParameters = [\n            { type: Compiler, },\n            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n        ];\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$10 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<template>` element (or\n     * directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into the\n     * constructor of the directive using the `TemplateRef` Token. Alternatively you can query for the\n     * `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use\n     * {@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n     * View Container.\n     * @stable\n     */\n    var TemplateRef = (function () {\n        function TemplateRef() {\n        }\n        Object.defineProperty(TemplateRef.prototype, \"elementRef\", {\n            /**\n             * The location in the View where the Embedded View logically belongs to.\n             *\n             * The data-binding and injection contexts of Embedded Views created from this `TemplateRef`\n             * inherit from the contexts of this location.\n             *\n             * Typically new Embedded Views are attached to the View Container of this location, but in\n             * advanced use-cases, the View can be attached to a different container while keeping the\n             * data-binding and injection context from the original location.\n             *\n             */\n            // TODO(i): rename to anchor or location\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef;\n    }());\n    var TemplateRef_ = (function (_super) {\n        __extends$10(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _nodeIndex, _nativeElement) {\n            _super.call(this);\n            this._parentView = _parentView;\n            this._nodeIndex = _nodeIndex;\n            this._nativeElement = _nativeElement;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            var view = this._parentView.createEmbeddedViewInternal(this._nodeIndex);\n            view.create(context || {});\n            return view.ref;\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () { return new ElementRef(this._nativeElement); },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     * @stable\n     */\n    var ViewContainerRef = (function () {\n        function ViewContainerRef() {\n        }\n        Object.defineProperty(ViewContainerRef.prototype, \"element\", {\n            /**\n             * Anchor element that specifies the location of this container in the containing View.\n             * <!-- TODO: rename to anchorElement -->\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef.prototype, \"injector\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef.prototype, \"parentInjector\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n            /**\n             * Returns the number of Views currently attached to this container.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        return ViewContainerRef;\n    }());\n    var ViewContainerRef_ = (function () {\n        function ViewContainerRef_(_element) {\n            this._element = _element;\n            /** @internal */\n            this._createComponentInContainerScope = wtfCreateScope('ViewContainerRef#createComponent()');\n            /** @internal */\n            this._insertScope = wtfCreateScope('ViewContainerRef#insert()');\n            /** @internal */\n            this._removeScope = wtfCreateScope('ViewContainerRef#remove()');\n            /** @internal */\n            this._detachScope = wtfCreateScope('ViewContainerRef#detach()');\n        }\n        ViewContainerRef_.prototype.get = function (index) { return this._element.nestedViews[index].ref; };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () {\n                var views = this._element.nestedViews;\n                return isPresent(views) ? views.length : 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return this._element.elementRef; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return this._element.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            get: function () { return this._element.parentInjector; },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(rado): profile and decide whether bounds checks should be added\n        // to the methods below.\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            if (context === void 0) { context = null; }\n            if (index === void 0) { index = -1; }\n            var viewRef = templateRef.createEmbeddedView(context);\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) {\n            if (index === void 0) { index = -1; }\n            if (injector === void 0) { injector = null; }\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            var s = this._createComponentInContainerScope();\n            var contextInjector = injector || this._element.parentInjector;\n            var componentRef = componentFactory.create(contextInjector, projectableNodes);\n            this.insert(componentRef.hostView, index);\n            return wtfLeave(s, componentRef);\n        };\n        // TODO(i): refactor insert+remove into move\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (index === void 0) { index = -1; }\n            var s = this._insertScope();\n            if (index == -1)\n                index = this.length;\n            var viewRef_ = viewRef;\n            this._element.attachView(viewRef_.internalView, index);\n            return wtfLeave(s, viewRef_);\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            var s = this._insertScope();\n            if (currentIndex == -1)\n                return;\n            var viewRef_ = viewRef;\n            this._element.moveView(viewRef_.internalView, currentIndex);\n            return wtfLeave(s, viewRef_);\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._element.nestedViews.indexOf(viewRef.internalView);\n        };\n        // TODO(i): rename to destroy\n        ViewContainerRef_.prototype.remove = function (index) {\n            if (index === void 0) { index = -1; }\n            var s = this._removeScope();\n            if (index == -1)\n                index = this.length - 1;\n            var view = this._element.detachView(index);\n            view.destroy();\n            // view is intentionally not returned to the client.\n            wtfLeave(s);\n        };\n        // TODO(i): refactor insert+remove into move\n        ViewContainerRef_.prototype.detach = function (index) {\n            if (index === void 0) { index = -1; }\n            var s = this._detachScope();\n            if (index == -1)\n                index = this.length - 1;\n            var view = this._element.detachView(index);\n            return wtfLeave(s, view.ref);\n        };\n        ViewContainerRef_.prototype.clear = function () {\n            for (var i = this.length - 1; i >= 0; i--) {\n                this.remove(i);\n            }\n        };\n        return ViewContainerRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _queuedAnimations = [];\n    /** @internal */\n    function queueAnimationGlobally(player) {\n        _queuedAnimations.push(player);\n    }\n    /** @internal */\n    function triggerQueuedAnimations() {\n        // this code is wrapped into a single promise such that the\n        // onStart and onDone player callbacks are triggered outside\n        // of the digest cycle of animations\n        if (_queuedAnimations.length) {\n            Promise.resolve(null).then(_triggerAnimations);\n        }\n    }\n    function _triggerAnimations() {\n        for (var i = 0; i < _queuedAnimations.length; i++) {\n            var player = _queuedAnimations[i];\n            player.play();\n        }\n        _queuedAnimations = [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$11 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @stable\n     */\n    var ViewRef = (function () {\n        function ViewRef() {\n        }\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return ViewRef;\n    }());\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a {@link ViewContainerRef}. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two {@link TemplateRef}s:\n     *\n     * Outer {@link TemplateRef}:\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <template ngFor let-item [ngForOf]=\"items\"></template>\n     * </ul>\n     * ```\n     *\n     * Inner {@link TemplateRef}:\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate {@link TemplateRef}s.\n     *\n     * The outer/inner {@link TemplateRef}s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <template view-container-ref></template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = (function (_super) {\n        __extends$11(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            _super.apply(this, arguments);\n        }\n        Object.defineProperty(EmbeddedViewRef.prototype, \"context\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(EmbeddedViewRef.prototype, \"rootNodes\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        return EmbeddedViewRef;\n    }(ViewRef));\n    var ViewRef_ = (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._view = _view;\n            this._originalMode = this._view.cdMode;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"internalView\", {\n            get: function () { return this._view; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return this._view.flatRootNodes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return this._view.destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { this._view.markPathToRootAsCheckOnce(); };\n        ViewRef_.prototype.detach = function () { this._view.cdMode = ChangeDetectorStatus.Detached; };\n        ViewRef_.prototype.detectChanges = function () {\n            this._view.detectChanges(false);\n            triggerQueuedAnimations();\n        };\n        ViewRef_.prototype.checkNoChanges = function () { this._view.detectChanges(true); };\n        ViewRef_.prototype.reattach = function () {\n            this._view.cdMode = this._originalMode;\n            this.markForCheck();\n        };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () { this._view.detachAndDestroy(); };\n        return ViewRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$12 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var EventListener = (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        ;\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = (function () {\n        function DebugNode(nativeNode, parent, _debugInfo) {\n            this._debugInfo = _debugInfo;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugInfo ? this._debugInfo.injector : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugInfo ? this._debugInfo.component : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugInfo ? this._debugInfo.context : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () {\n                return this._debugInfo ? this._debugInfo.references : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugInfo ? this._debugInfo.providerTokens : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"source\", {\n            get: function () { return this._debugInfo ? this._debugInfo.source : null; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = (function (_super) {\n        __extends$12(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugInfo) {\n            _super.call(this, nativeNode, parent, _debugInfo);\n            this.properties = {};\n            this.attributes = {};\n            this.classes = {};\n            this.styles = {};\n            this.childNodes = [];\n            this.nativeElement = nativeNode;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                var previousChildren = this.childNodes.slice(0, siblingIndex + 1);\n                var nextChildren = this.childNodes.slice(siblingIndex + 1);\n                this.childNodes = previousChildren.concat(newChildren, nextChildren);\n                for (var i = 0; i < newChildren.length; ++i) {\n                    var newChild = newChildren[i];\n                    if (newChild.parent) {\n                        newChild.parent.removeChild(newChild);\n                    }\n                    newChild.parent = this;\n                }\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode);\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    function _reflector() {\n        return reflector;\n    }\n    var _CORE_PLATFORM_PROVIDERS = [\n        PlatformRef_,\n        { provide: PlatformRef, useExisting: PlatformRef_ },\n        { provide: Reflector, useFactory: _reflector, deps: [] },\n        { provide: ReflectorReader, useExisting: Reflector },\n        TestabilityRegistry,\n        Console,\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new OpaqueToken('LocaleId');\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new OpaqueToken('Translations');\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new OpaqueToken('TranslationsFormat');\n\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = (function () {\n        function ApplicationModule() {\n        }\n        ApplicationModule.decorators = [\n            { type: NgModule, args: [{\n                        providers: [\n                            ApplicationRef_,\n                            { provide: ApplicationRef, useExisting: ApplicationRef_ },\n                            ApplicationInitStatus,\n                            Compiler,\n                            APP_ID_RANDOM_PROVIDER,\n                            ViewUtils,\n                            { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                            { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                            { provide: LOCALE_ID, useValue: 'en-US' },\n                        ]\n                    },] },\n        ];\n        /** @nocollapse */\n        ApplicationModule.ctorParameters = [];\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var FILL_STYLE_FLAG = 'true'; // TODO (matsko): change to boolean\n    var ANY_STATE = '*';\n    var DEFAULT_STATE = '*';\n    var EMPTY_STATE = 'void';\n\n    var AnimationGroupPlayer = (function () {\n        function AnimationGroupPlayer(_players) {\n            var _this = this;\n            this._players = _players;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._finished = false;\n            this._started = false;\n            this._destroyed = false;\n            this.parentPlayer = null;\n            var count = 0;\n            var total = this._players.length;\n            if (total == 0) {\n                scheduleMicroTask(function () { return _this._onFinish(); });\n            }\n            else {\n                this._players.forEach(function (player) {\n                    player.parentPlayer = _this;\n                    player.onDone(function () {\n                        if (++count >= total) {\n                            _this._onFinish();\n                        }\n                    });\n                });\n            }\n        }\n        AnimationGroupPlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        AnimationGroupPlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n        AnimationGroupPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        AnimationGroupPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        AnimationGroupPlayer.prototype.hasStarted = function () { return this._started; };\n        AnimationGroupPlayer.prototype.play = function () {\n            if (!isPresent(this.parentPlayer)) {\n                this.init();\n            }\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._players.forEach(function (player) { return player.play(); });\n        };\n        AnimationGroupPlayer.prototype.pause = function () { this._players.forEach(function (player) { return player.pause(); }); };\n        AnimationGroupPlayer.prototype.restart = function () { this._players.forEach(function (player) { return player.restart(); }); };\n        AnimationGroupPlayer.prototype.finish = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.finish(); });\n        };\n        AnimationGroupPlayer.prototype.destroy = function () {\n            if (!this._destroyed) {\n                this._onFinish();\n                this._players.forEach(function (player) { return player.destroy(); });\n                this._destroyed = true;\n            }\n        };\n        AnimationGroupPlayer.prototype.reset = function () {\n            this._players.forEach(function (player) { return player.reset(); });\n            this._destroyed = false;\n            this._finished = false;\n            this._started = false;\n        };\n        AnimationGroupPlayer.prototype.setPosition = function (p) {\n            this._players.forEach(function (player) { player.setPosition(p); });\n        };\n        AnimationGroupPlayer.prototype.getPosition = function () {\n            var min = 0;\n            this._players.forEach(function (player) {\n                var p = player.getPosition();\n                min = Math.min(p, min);\n            });\n            return min;\n        };\n        Object.defineProperty(AnimationGroupPlayer.prototype, \"players\", {\n            get: function () { return this._players; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationGroupPlayer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var AnimationKeyframe = (function () {\n        function AnimationKeyframe(offset, styles) {\n            this.offset = offset;\n            this.styles = styles;\n        }\n        return AnimationKeyframe;\n    }());\n\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationPlayer = (function () {\n        function AnimationPlayer() {\n        }\n        Object.defineProperty(AnimationPlayer.prototype, \"parentPlayer\", {\n            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            set: function (player) { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationPlayer;\n    }());\n    var NoOpAnimationPlayer = (function () {\n        function NoOpAnimationPlayer() {\n            var _this = this;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._started = false;\n            this.parentPlayer = null;\n            scheduleMicroTask(function () { return _this._onFinish(); });\n        }\n        /** @internal */\n        NoOpAnimationPlayer.prototype._onFinish = function () {\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        };\n        NoOpAnimationPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        NoOpAnimationPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        NoOpAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n        NoOpAnimationPlayer.prototype.init = function () { };\n        NoOpAnimationPlayer.prototype.play = function () {\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n            }\n            this._started = true;\n        };\n        NoOpAnimationPlayer.prototype.pause = function () { };\n        NoOpAnimationPlayer.prototype.restart = function () { };\n        NoOpAnimationPlayer.prototype.finish = function () { this._onFinish(); };\n        NoOpAnimationPlayer.prototype.destroy = function () { };\n        NoOpAnimationPlayer.prototype.reset = function () { };\n        NoOpAnimationPlayer.prototype.setPosition = function (p) { };\n        NoOpAnimationPlayer.prototype.getPosition = function () { return 0; };\n        return NoOpAnimationPlayer;\n    }());\n\n    var AnimationSequencePlayer = (function () {\n        function AnimationSequencePlayer(_players) {\n            var _this = this;\n            this._players = _players;\n            this._currentIndex = 0;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._finished = false;\n            this._started = false;\n            this._destroyed = false;\n            this.parentPlayer = null;\n            this._players.forEach(function (player) { player.parentPlayer = _this; });\n            this._onNext(false);\n        }\n        AnimationSequencePlayer.prototype._onNext = function (start) {\n            var _this = this;\n            if (this._finished)\n                return;\n            if (this._players.length == 0) {\n                this._activePlayer = new NoOpAnimationPlayer();\n                scheduleMicroTask(function () { return _this._onFinish(); });\n            }\n            else if (this._currentIndex >= this._players.length) {\n                this._activePlayer = new NoOpAnimationPlayer();\n                this._onFinish();\n            }\n            else {\n                var player = this._players[this._currentIndex++];\n                player.onDone(function () { return _this._onNext(true); });\n                this._activePlayer = player;\n                if (start) {\n                    player.play();\n                }\n            }\n        };\n        AnimationSequencePlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        AnimationSequencePlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n        AnimationSequencePlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        AnimationSequencePlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        AnimationSequencePlayer.prototype.hasStarted = function () { return this._started; };\n        AnimationSequencePlayer.prototype.play = function () {\n            if (!isPresent(this.parentPlayer)) {\n                this.init();\n            }\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._activePlayer.play();\n        };\n        AnimationSequencePlayer.prototype.pause = function () { this._activePlayer.pause(); };\n        AnimationSequencePlayer.prototype.restart = function () {\n            this.reset();\n            if (this._players.length > 0) {\n                this._players[0].restart();\n            }\n        };\n        AnimationSequencePlayer.prototype.reset = function () {\n            this._players.forEach(function (player) { return player.reset(); });\n            this._destroyed = false;\n            this._finished = false;\n            this._started = false;\n        };\n        AnimationSequencePlayer.prototype.finish = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.finish(); });\n        };\n        AnimationSequencePlayer.prototype.destroy = function () {\n            if (!this._destroyed) {\n                this._onFinish();\n                this._players.forEach(function (player) { return player.destroy(); });\n                this._destroyed = true;\n                this._activePlayer = new NoOpAnimationPlayer();\n            }\n        };\n        AnimationSequencePlayer.prototype.setPosition = function (p) { this._players[0].setPosition(p); };\n        AnimationSequencePlayer.prototype.getPosition = function () { return this._players[0].getPosition(); };\n        Object.defineProperty(AnimationSequencePlayer.prototype, \"players\", {\n            get: function () { return this._players; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationSequencePlayer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$13 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AUTO_STYLE = '*';\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link trigger trigger\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationEntryMetadata = (function () {\n        function AnimationEntryMetadata(name, definitions) {\n            this.name = name;\n            this.definitions = definitions;\n        }\n        return AnimationEntryMetadata;\n    }());\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStateMetadata = (function () {\n        function AnimationStateMetadata() {\n        }\n        return AnimationStateMetadata;\n    }());\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link state state animation\n     * function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStateDeclarationMetadata = (function (_super) {\n        __extends$13(AnimationStateDeclarationMetadata, _super);\n        function AnimationStateDeclarationMetadata(stateNameExpr, styles) {\n            _super.call(this);\n            this.stateNameExpr = stateNameExpr;\n            this.styles = styles;\n        }\n        return AnimationStateDeclarationMetadata;\n    }(AnimationStateMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the\n     * {@link transition transition animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStateTransitionMetadata = (function (_super) {\n        __extends$13(AnimationStateTransitionMetadata, _super);\n        function AnimationStateTransitionMetadata(stateChangeExpr, steps) {\n            _super.call(this);\n            this.stateChangeExpr = stateChangeExpr;\n            this.steps = steps;\n        }\n        return AnimationStateTransitionMetadata;\n    }(AnimationStateMetadata));\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationMetadata = (function () {\n        function AnimationMetadata() {\n        }\n        return AnimationMetadata;\n    }());\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link keyframes keyframes\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationKeyframesSequenceMetadata = (function (_super) {\n        __extends$13(AnimationKeyframesSequenceMetadata, _super);\n        function AnimationKeyframesSequenceMetadata(steps) {\n            _super.call(this);\n            this.steps = steps;\n        }\n        return AnimationKeyframesSequenceMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link style style animation\n     * function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStyleMetadata = (function (_super) {\n        __extends$13(AnimationStyleMetadata, _super);\n        function AnimationStyleMetadata(styles, offset) {\n            if (offset === void 0) { offset = null; }\n            _super.call(this);\n            this.styles = styles;\n            this.offset = offset;\n        }\n        return AnimationStyleMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link animate animate\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationAnimateMetadata = (function (_super) {\n        __extends$13(AnimationAnimateMetadata, _super);\n        function AnimationAnimateMetadata(timings, styles) {\n            _super.call(this);\n            this.timings = timings;\n            this.styles = styles;\n        }\n        return AnimationAnimateMetadata;\n    }(AnimationMetadata));\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationWithStepsMetadata = (function (_super) {\n        __extends$13(AnimationWithStepsMetadata, _super);\n        function AnimationWithStepsMetadata() {\n            _super.call(this);\n        }\n        Object.defineProperty(AnimationWithStepsMetadata.prototype, \"steps\", {\n            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationWithStepsMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link sequence sequence\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationSequenceMetadata = (function (_super) {\n        __extends$13(AnimationSequenceMetadata, _super);\n        function AnimationSequenceMetadata(_steps) {\n            _super.call(this);\n            this._steps = _steps;\n        }\n        Object.defineProperty(AnimationSequenceMetadata.prototype, \"steps\", {\n            get: function () { return this._steps; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationSequenceMetadata;\n    }(AnimationWithStepsMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link group group animation\n     * function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationGroupMetadata = (function (_super) {\n        __extends$13(AnimationGroupMetadata, _super);\n        function AnimationGroupMetadata(_steps) {\n            _super.call(this);\n            this._steps = _steps;\n        }\n        Object.defineProperty(AnimationGroupMetadata.prototype, \"steps\", {\n            get: function () { return this._steps; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationGroupMetadata;\n    }(AnimationWithStepsMetadata));\n    /**\n     * `animate` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `animate` specifies an animation step that will apply the provided `styles` data for a given\n     * amount of\n     * time based on the provided `timing` expression value. Calls to `animate` are expected to be\n     * used within {@link sequence an animation sequence}, {@link group group}, or {@link transition\n     * transition}.\n     *\n     * ### Usage\n     *\n     * The `animate` function accepts two input parameters: `timing` and `styles`:\n     *\n     * - `timing` is a string based value that can be a combination of a duration with optional\n     * delay and easing values. The format for the expression breaks down to `duration delay easing`\n     * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n     * delay=100, easing=ease-out`.\n     * If a numeric value is provided then that will be used as the `duration` value in millisecond\n     * form.\n     * - `styles` is the style input data which can either be a call to {@link style style} or {@link\n     * keyframes keyframes}.\n     * If left empty then the styles from the destination state will be collected and used (this is\n     * useful when\n     * describing an animation step that will complete an animation by {@link\n     * transition#the-final-animate-call animating to the final state}).\n     *\n     * ```typescript\n     * // various functions for specifying timing data\n     * animate(500, style(...))\n     * animate(\"1s\", style(...))\n     * animate(\"100ms 0.5s\", style(...))\n     * animate(\"5s ease\", style(...))\n     * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n     *\n     * // either style() of keyframes() can be used\n     * animate(500, style({ background: \"red\" }))\n     * animate(500, keyframes([\n     *   style({ background: \"blue\" })),\n     *   style({ background: \"red\" }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function animate(timing, styles) {\n        if (styles === void 0) { styles = null; }\n        var stylesEntry = styles;\n        if (!isPresent(stylesEntry)) {\n            var EMPTY_STYLE = {};\n            stylesEntry = new AnimationStyleMetadata([EMPTY_STYLE], 1);\n        }\n        return new AnimationAnimateMetadata(timing, stylesEntry);\n    }\n    /**\n     * `group` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `group` specifies a list of animation steps that are all run in parallel. Grouped animations\n     * are useful when a series of styles must be animated/closed off\n     * at different statrting/ending times.\n     *\n     * The `group` function can either be used within a {@link sequence sequence} or a {@link transition\n     * transition}\n     * and it will only continue to the next instruction once all of the inner animation steps\n     * have completed.\n     *\n     * ### Usage\n     *\n     * The `steps` data that is passed into the `group` animation function can either consist\n     * of {@link style style} or {@link animate animate} function calls. Each call to `style()` or\n     * `animate()`\n     * within a group will be executed instantly (use {@link keyframes keyframes} or a\n     * {@link animate#usage animate() with a delay value} to offset styles to be applied at a later\n     * time).\n     *\n     * ```typescript\n     * group([\n     *   animate(\"1s\", { background: \"black\" }))\n     *   animate(\"2s\", { color: \"white\" }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function group(steps) {\n        return new AnimationGroupMetadata(steps);\n    }\n    /**\n     * `sequence` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used\n     * by default when an array is passed as animation data into {@link transition transition}.)\n     *\n     * The `sequence` function can either be used within a {@link group group} or a {@link transition\n     * transition}\n     * and it will only continue to the next instruction once each of the inner animation steps\n     * have completed.\n     *\n     * To perform animation styling in parallel with other animation steps then\n     * have a look at the {@link group group} animation function.\n     *\n     * ### Usage\n     *\n     * The `steps` data that is passed into the `sequence` animation function can either consist\n     * of {@link style style} or {@link animate animate} function calls. A call to `style()` will apply\n     * the\n     * provided styling data immediately while a call to `animate()` will apply its styling\n     * data over a given time depending on its timing data.\n     *\n     * ```typescript\n     * sequence([\n     *   style({ opacity: 0 })),\n     *   animate(\"1s\", { opacity: 1 }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function sequence(steps) {\n        return new AnimationSequenceMetadata(steps);\n    }\n    /**\n     * `style` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `style` declares a key/value object containing CSS properties/styles that can then\n     * be used for {@link state animation states}, within an {@link sequence animation sequence}, or as\n     * styling data for both {@link animate animate} and {@link keyframes keyframes}.\n     *\n     * ### Usage\n     *\n     * `style` takes in a key/value string map as data and expects one or more CSS property/value\n     * pairs to be defined.\n     *\n     * ```typescript\n     * // string values are used for css properties\n     * style({ background: \"red\", color: \"blue\" })\n     *\n     * // numerical (pixel) values are also supported\n     * style({ width: 100, height: 0 })\n     * ```\n     *\n     * #### Auto-styles (using `*`)\n     *\n     * When an asterix (`*`) character is used as a value then it will be detected from the element\n     * being animated\n     * and applied as animation data when the animation starts.\n     *\n     * This feature proves useful for a state depending on layout and/or environment factors; in such\n     * cases\n     * the styles are calculated just before the animation starts.\n     *\n     * ```typescript\n     * // the steps below will animate from 0 to the\n     * // actual height of the element\n     * style({ height: 0 }),\n     * animate(\"1s\", style({ height: \"*\" }))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function style(tokens) {\n        var input;\n        var offset = null;\n        if (typeof tokens === 'string') {\n            input = [tokens];\n        }\n        else {\n            if (Array.isArray(tokens)) {\n                input = tokens;\n            }\n            else {\n                input = [tokens];\n            }\n            input.forEach(function (entry) {\n                var entryOffset = entry['offset'];\n                if (isPresent(entryOffset)) {\n                    offset = offset == null ? parseFloat(entryOffset) : offset;\n                }\n            });\n        }\n        return new AnimationStyleMetadata(input, offset);\n    }\n    /**\n     * `state` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `state` declares an animation state within the given trigger. When a state is\n     * active within a component then its associated styles will persist on\n     * the element that the trigger is attached to (even when the animation ends).\n     *\n     * To animate between states, have a look at the animation {@link transition transition}\n     * DSL function. To register states to an animation trigger please have a look\n     * at the {@link trigger trigger} function.\n     *\n     * #### The `void` state\n     *\n     * The `void` state value is a reserved word that angular uses to determine when the element is not\n     * apart\n     * of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n     * associated element\n     * is void).\n     *\n     * #### The `*` (default) state\n     *\n     * The `*` state (when styled) is a fallback state that will be used if\n     * the state that is being animated is not declared within the trigger.\n     *\n     * ### Usage\n     *\n     * `state` will declare an animation state with its associated styles\n     * within the given trigger.\n     *\n     * - `stateNameExpr` can be one or more state names separated by commas.\n     * - `styles` refers to the {@link style styling data} that will be persisted on the element once\n     * the state\n     * has been reached.\n     *\n     * ```typescript\n     * // \"void\" is a reserved name for a state and is used to represent\n     * // the state in which an element is detached from from the application.\n     * state(\"void\", style({ height: 0 }))\n     *\n     * // user-defined states\n     * state(\"closed\", style({ height: 0 }))\n     * state(\"open, visible\", style({ height: \"*\" }))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function state(stateNameExpr, styles) {\n        return new AnimationStateDeclarationMetadata(stateNameExpr, styles);\n    }\n    /**\n     * `keyframes` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `keyframes` specifies a collection of {@link style style} entries each optionally characterized\n     * by an `offset` value.\n     *\n     * ### Usage\n     *\n     * The `keyframes` animation function is designed to be used alongside the {@link animate animate}\n     * animation function. Instead of applying animations from where they are\n     * currently to their destination, keyframes can describe how each style entry is applied\n     * and at what point within the animation arc (much like CSS Keyframe Animations do).\n     *\n     * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at\n     * what percentage of the animate time the styles will be applied.\n     *\n     * ```typescript\n     * // the provided offset values describe when each backgroundColor value is applied.\n     * animate(\"5s\", keyframes([\n     *   style({ backgroundColor: \"red\", offset: 0 }),\n     *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n     *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n     *   style({ backgroundColor: \"black\", offset: 1 })\n     * ]))\n     * ```\n     *\n     * Alternatively, if there are no `offset` values used within the style entries then the offsets\n     * will\n     * be calculated automatically.\n     *\n     * ```typescript\n     * animate(\"5s\", keyframes([\n     *   style({ backgroundColor: \"red\" }) // offset = 0\n     *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n     *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n     *   style({ backgroundColor: \"black\" }) // offset = 1\n     * ]))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function keyframes(steps) {\n        return new AnimationKeyframesSequenceMetadata(steps);\n    }\n    /**\n     * `transition` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `transition` declares the {@link sequence sequence of animation steps} that will be run when the\n     * provided\n     * `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 => state2`\n     * which consists\n     * of two known states (use an asterix (`*`) to refer to a dynamic starting and/or ending state).\n     *\n     * Animation transitions are placed within an {@link trigger animation trigger}. For an transition\n     * to animate to\n     * a state value and persist its styles then one or more {@link state animation states} is expected\n     * to be defined.\n     *\n     * ### Usage\n     *\n     * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n     * what the\n     * previous state is and what the current state has become. In other words, if a transition is\n     * defined that\n     * matches the old/current state criteria then the associated animation will be triggered.\n     *\n     * ```typescript\n     * // all transition/state changes are defined within an animation trigger\n     * trigger(\"myAnimationTrigger\", [\n     *   // if a state is defined then its styles will be persisted when the\n     *   // animation has fully completed itself\n     *   state(\"on\", style({ background: \"green\" })),\n     *   state(\"off\", style({ background: \"grey\" })),\n     *\n     *   // a transition animation that will be kicked off when the state value\n     *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n     *   transition(\"on => off\", animate(500)),\n     *\n     *   // it is also possible to do run the same animation for both directions\n     *   transition(\"on <=> off\", animate(500)),\n     *\n     *   // or to define multiple states pairs separated by commas\n     *   transition(\"on => off, off => void\", animate(500)),\n     *\n     *   // this is a catch-all state change for when an element is inserted into\n     *   // the page and the destination state is unknown\n     *   transition(\"void => *\", [\n     *     style({ opacity: 0 }),\n     *     animate(500)\n     *   ]),\n     *\n     *   // this will capture a state change between any states\n     *   transition(\"* => *\", animate(\"1s 0s\")),\n     * ])\n     * ```\n     *\n     * The template associated with this component will make use of the `myAnimationTrigger`\n     * animation trigger by binding to an element within its template code.\n     *\n     * ```html\n     * <!-- somewhere inside of my-component-tpl.html -->\n     * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n     * ```\n     *\n     * #### The final `animate` call\n     *\n     * If the final step within the transition steps is a call to `animate()` that **only**\n     * uses a timing value with **no style data** then it will be automatically used as the final\n     * animation\n     * arc for the element to animate itself to the final state. This involves an automatic mix of\n     * adding/removing CSS styles so that the element will be in the exact state it should be for the\n     * applied state to be presented correctly.\n     *\n     * ```\n     * // start off by hiding the element, but make sure that it animates properly to whatever state\n     * // is currently active for \"myAnimationTrigger\"\n     * transition(\"void => *\", [\n     *   style({ opacity: 0 }),\n     *   animate(500)\n     * ])\n     * ```\n     *\n     * ### Transition Aliases (`:enter` and `:leave`)\n     *\n     * Given that enter (insertion) and leave (removal) animations are so common,\n     * the `transition` function accepts both `:enter` and `:leave` values which\n     * are aliases for the `void => *` and `* => void` state changes.\n     *\n     * ```\n     * transition(\":enter\", [\n     *   style({ opacity: 0 }),\n     *   animate(500, style({ opacity: 1 }))\n     * ])\n     * transition(\":leave\", [\n     *   animate(500, style({ opacity: 0 }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function transition(stateChangeExpr, steps) {\n        var animationData = Array.isArray(steps) ? new AnimationSequenceMetadata(steps) : steps;\n        return new AnimationStateTransitionMetadata(stateChangeExpr, animationData);\n    }\n    /**\n     * `trigger` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `trigger` Creates an animation trigger which will a list of {@link state state} and {@link\n     * transition transition}\n     * entries that will be evaluated when the expression bound to the trigger changes.\n     *\n     * Triggers are registered within the component annotation data under the\n     * {@link Component#animations-anchor animations section}. An animation trigger can\n     * be placed on an element within a template by referencing the name of the\n     * trigger followed by the expression value that the trigger is bound to\n     * (in the form of `[@triggerName]=\"expression\"`.\n     *\n     * ### Usage\n     *\n     * `trigger` will create an animation trigger reference based on the provided `name` value.\n     * The provided `animation` value is expected to be an array consisting of {@link state state} and\n     * {@link transition transition}\n     * declarations.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-component',\n     *   templateUrl: 'my-component-tpl.html',\n     *   animations: [\n     *     trigger(\"myAnimationTrigger\", [\n     *       state(...),\n     *       state(...),\n     *       transition(...),\n     *       transition(...)\n     *     ])\n     *   ]\n     * })\n     * class MyComponent {\n     *   myStatusExp = \"something\";\n     * }\n     * ```\n     *\n     * The template associated with this component will make use of the `myAnimationTrigger`\n     * animation trigger by binding to an element within its template code.\n     *\n     * ```html\n     * <!-- somewhere inside of my-component-tpl.html -->\n     * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function trigger(name, animation) {\n        return new AnimationEntryMetadata(name, animation);\n    }\n\n    function prepareFinalAnimationStyles(previousStyles, newStyles, nullValue) {\n        if (nullValue === void 0) { nullValue = null; }\n        var finalStyles = {};\n        Object.keys(newStyles).forEach(function (prop) {\n            var value = newStyles[prop];\n            finalStyles[prop] = value == AUTO_STYLE ? nullValue : value.toString();\n        });\n        Object.keys(previousStyles).forEach(function (prop) {\n            if (!isPresent(finalStyles[prop])) {\n                finalStyles[prop] = nullValue;\n            }\n        });\n        return finalStyles;\n    }\n    function balanceAnimationKeyframes(collectedStyles, finalStateStyles, keyframes) {\n        var limit = keyframes.length - 1;\n        var firstKeyframe = keyframes[0];\n        // phase 1: copy all the styles from the first keyframe into the lookup map\n        var flatenedFirstKeyframeStyles = flattenStyles(firstKeyframe.styles.styles);\n        var extraFirstKeyframeStyles = {};\n        var hasExtraFirstStyles = false;\n        Object.keys(collectedStyles).forEach(function (prop) {\n            var value = collectedStyles[prop];\n            // if the style is already defined in the first keyframe then\n            // we do not replace it.\n            if (!flatenedFirstKeyframeStyles[prop]) {\n                flatenedFirstKeyframeStyles[prop] = value;\n                extraFirstKeyframeStyles[prop] = value;\n                hasExtraFirstStyles = true;\n            }\n        });\n        var keyframeCollectedStyles = StringMapWrapper.merge({}, flatenedFirstKeyframeStyles);\n        // phase 2: normalize the final keyframe\n        var finalKeyframe = keyframes[limit];\n        finalKeyframe.styles.styles.unshift(finalStateStyles);\n        var flatenedFinalKeyframeStyles = flattenStyles(finalKeyframe.styles.styles);\n        var extraFinalKeyframeStyles = {};\n        var hasExtraFinalStyles = false;\n        Object.keys(keyframeCollectedStyles).forEach(function (prop) {\n            if (!isPresent(flatenedFinalKeyframeStyles[prop])) {\n                extraFinalKeyframeStyles[prop] = AUTO_STYLE;\n                hasExtraFinalStyles = true;\n            }\n        });\n        if (hasExtraFinalStyles) {\n            finalKeyframe.styles.styles.push(extraFinalKeyframeStyles);\n        }\n        Object.keys(flatenedFinalKeyframeStyles).forEach(function (prop) {\n            if (!isPresent(flatenedFirstKeyframeStyles[prop])) {\n                extraFirstKeyframeStyles[prop] = AUTO_STYLE;\n                hasExtraFirstStyles = true;\n            }\n        });\n        if (hasExtraFirstStyles) {\n            firstKeyframe.styles.styles.push(extraFirstKeyframeStyles);\n        }\n        collectAndResolveStyles(collectedStyles, [finalStateStyles]);\n        return keyframes;\n    }\n    function clearStyles(styles) {\n        var finalStyles = {};\n        Object.keys(styles).forEach(function (key) { finalStyles[key] = null; });\n        return finalStyles;\n    }\n    function collectAndResolveStyles(collection, styles) {\n        return styles.map(function (entry) {\n            var stylesObj = {};\n            Object.keys(entry).forEach(function (prop) {\n                var value = entry[prop];\n                if (value == FILL_STYLE_FLAG) {\n                    value = collection[prop];\n                    if (!isPresent(value)) {\n                        value = AUTO_STYLE;\n                    }\n                }\n                collection[prop] = value;\n                stylesObj[prop] = value;\n            });\n            return stylesObj;\n        });\n    }\n    function renderStyles(element, renderer, styles) {\n        Object.keys(styles).forEach(function (prop) { renderer.setElementStyle(element, prop, styles[prop]); });\n    }\n    function flattenStyles(styles) {\n        var finalStyles = {};\n        styles.forEach(function (entry) {\n            Object.keys(entry).forEach(function (prop) { finalStyles[prop] = entry[prop]; });\n        });\n        return finalStyles;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var AnimationStyles = (function () {\n        function AnimationStyles(styles) {\n            this.styles = styles;\n        }\n        return AnimationStyles;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An instance of this class is returned as an event parameter when an animation\n     * callback is captured for an animation either during the start or done phase.\n     *\n     * ```typescript\n     * @Component({\n     *   host: {\n     *     '[@myAnimationTrigger]': 'someExpression',\n     *     '(@myAnimationTrigger.start)': 'captureStartEvent($event)',\n     *     '(@myAnimationTrigger.done)': 'captureDoneEvent($event)',\n     *   },\n     *   animations: [\n     *     trigger(\"myAnimationTrigger\", [\n     *        // ...\n     *     ])\n     *   ]\n     * })\n     * class MyComponent {\n     *   someExpression: any = false;\n     *   captureStartEvent(event: AnimationTransitionEvent) {\n     *     // the toState, fromState and totalTime data is accessible from the event variable\n     *   }\n     *\n     *   captureDoneEvent(event: AnimationTransitionEvent) {\n     *     // the toState, fromState and totalTime data is accessible from the event variable\n     *   }\n     * }\n     * ```\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationTransitionEvent = (function () {\n        function AnimationTransitionEvent(_a) {\n            var fromState = _a.fromState, toState = _a.toState, totalTime = _a.totalTime, phaseName = _a.phaseName;\n            this.fromState = fromState;\n            this.toState = toState;\n            this.totalTime = totalTime;\n            this.phaseName = phaseName;\n        }\n        return AnimationTransitionEvent;\n    }());\n\n    var AnimationTransition = (function () {\n        function AnimationTransition(_player, _fromState, _toState, _totalTime) {\n            this._player = _player;\n            this._fromState = _fromState;\n            this._toState = _toState;\n            this._totalTime = _totalTime;\n        }\n        AnimationTransition.prototype._createEvent = function (phaseName) {\n            return new AnimationTransitionEvent({\n                fromState: this._fromState,\n                toState: this._toState,\n                totalTime: this._totalTime,\n                phaseName: phaseName\n            });\n        };\n        AnimationTransition.prototype.onStart = function (callback) {\n            var event = this._createEvent('start');\n            this._player.onStart(function () { return callback(event); });\n        };\n        AnimationTransition.prototype.onDone = function (callback) {\n            var event = this._createEvent('done');\n            this._player.onDone(function () { return callback(event); });\n        };\n        return AnimationTransition;\n    }());\n\n    var DebugDomRootRenderer = (function () {\n        function DebugDomRootRenderer(_delegate) {\n            this._delegate = _delegate;\n        }\n        DebugDomRootRenderer.prototype.renderComponent = function (componentProto) {\n            return new DebugDomRenderer(this._delegate.renderComponent(componentProto));\n        };\n        return DebugDomRootRenderer;\n    }());\n    var DebugDomRenderer = (function () {\n        function DebugDomRenderer(_delegate) {\n            this._delegate = _delegate;\n        }\n        DebugDomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n            var nativeEl = this._delegate.selectRootElement(selectorOrNode, debugInfo);\n            var debugEl = new DebugElement(nativeEl, null, debugInfo);\n            indexDebugNode(debugEl);\n            return nativeEl;\n        };\n        DebugDomRenderer.prototype.createElement = function (parentElement, name, debugInfo) {\n            var nativeEl = this._delegate.createElement(parentElement, name, debugInfo);\n            var debugEl = new DebugElement(nativeEl, getDebugNode(parentElement), debugInfo);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n            return nativeEl;\n        };\n        DebugDomRenderer.prototype.createViewRoot = function (hostElement) { return this._delegate.createViewRoot(hostElement); };\n        DebugDomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n            var comment = this._delegate.createTemplateAnchor(parentElement, debugInfo);\n            var debugEl = new DebugNode(comment, getDebugNode(parentElement), debugInfo);\n            indexDebugNode(debugEl);\n            return comment;\n        };\n        DebugDomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n            var text = this._delegate.createText(parentElement, value, debugInfo);\n            var debugEl = new DebugNode(text, getDebugNode(parentElement), debugInfo);\n            indexDebugNode(debugEl);\n            return text;\n        };\n        DebugDomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n            var debugParent = getDebugNode(parentElement);\n            if (isPresent(debugParent) && debugParent instanceof DebugElement) {\n                var debugElement_1 = debugParent;\n                nodes.forEach(function (node) { debugElement_1.addChild(getDebugNode(node)); });\n            }\n            this._delegate.projectNodes(parentElement, nodes);\n        };\n        DebugDomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var debugNode = getDebugNode(node);\n            if (isPresent(debugNode)) {\n                var debugParent = debugNode.parent;\n                if (viewRootNodes.length > 0 && isPresent(debugParent)) {\n                    var debugViewRootNodes_1 = [];\n                    viewRootNodes.forEach(function (rootNode) { return debugViewRootNodes_1.push(getDebugNode(rootNode)); });\n                    debugParent.insertChildrenAfter(debugNode, debugViewRootNodes_1);\n                }\n            }\n            this._delegate.attachViewAfter(node, viewRootNodes);\n        };\n        DebugDomRenderer.prototype.detachView = function (viewRootNodes) {\n            viewRootNodes.forEach(function (node) {\n                var debugNode = getDebugNode(node);\n                if (isPresent(debugNode) && isPresent(debugNode.parent)) {\n                    debugNode.parent.removeChild(debugNode);\n                }\n            });\n            this._delegate.detachView(viewRootNodes);\n        };\n        DebugDomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n            viewAllNodes = viewAllNodes || [];\n            viewAllNodes.forEach(function (node) { removeDebugNodeFromIndex(getDebugNode(node)); });\n            this._delegate.destroyView(hostElement, viewAllNodes);\n        };\n        DebugDomRenderer.prototype.listen = function (renderElement, name, callback) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl)) {\n                debugEl.listeners.push(new EventListener(name, callback));\n            }\n            return this._delegate.listen(renderElement, name, callback);\n        };\n        DebugDomRenderer.prototype.listenGlobal = function (target, name, callback) {\n            return this._delegate.listenGlobal(target, name, callback);\n        };\n        DebugDomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.properties[propertyName] = propertyValue;\n            }\n            this._delegate.setElementProperty(renderElement, propertyName, propertyValue);\n        };\n        DebugDomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.attributes[attributeName] = attributeValue;\n            }\n            this._delegate.setElementAttribute(renderElement, attributeName, attributeValue);\n        };\n        DebugDomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n            this._delegate.setBindingDebugInfo(renderElement, propertyName, propertyValue);\n        };\n        DebugDomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.classes[className] = isAdd;\n            }\n            this._delegate.setElementClass(renderElement, className, isAdd);\n        };\n        DebugDomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.styles[styleName] = styleValue;\n            }\n            this._delegate.setElementStyle(renderElement, styleName, styleValue);\n        };\n        DebugDomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            this._delegate.invokeElementMethod(renderElement, methodName, args);\n        };\n        DebugDomRenderer.prototype.setText = function (renderNode, text) { this._delegate.setText(renderNode, text); };\n        DebugDomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            return this._delegate.animate(element, startingStyles, keyframes, duration, delay, easing, previousPlayers);\n        };\n        return DebugDomRenderer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewType;\n    (function (ViewType) {\n        // A view that contains the host element with bound component directive.\n        // Contains a COMPONENT view\n        ViewType[ViewType[\"HOST\"] = 0] = \"HOST\";\n        // The view of the component\n        // Can contain 0 to n EMBEDDED views\n        ViewType[ViewType[\"COMPONENT\"] = 1] = \"COMPONENT\";\n        // A view that is embedded into another View via a <template> element\n        // inside of a COMPONENT view\n        ViewType[ViewType[\"EMBEDDED\"] = 2] = \"EMBEDDED\";\n    })(ViewType || (ViewType = {}));\n\n    var StaticNodeDebugInfo = (function () {\n        function StaticNodeDebugInfo(providerTokens, componentToken, refTokens) {\n            this.providerTokens = providerTokens;\n            this.componentToken = componentToken;\n            this.refTokens = refTokens;\n        }\n        return StaticNodeDebugInfo;\n    }());\n    var DebugContext = (function () {\n        function DebugContext(_view, _nodeIndex, _tplRow, _tplCol) {\n            this._view = _view;\n            this._nodeIndex = _nodeIndex;\n            this._tplRow = _tplRow;\n            this._tplCol = _tplCol;\n        }\n        Object.defineProperty(DebugContext.prototype, \"_staticNodeInfo\", {\n            get: function () {\n                return isPresent(this._nodeIndex) ? this._view.staticNodeDebugInfos[this._nodeIndex] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"component\", {\n            get: function () {\n                var staticNodeInfo = this._staticNodeInfo;\n                if (isPresent(staticNodeInfo) && isPresent(staticNodeInfo.componentToken)) {\n                    return this.injector.get(staticNodeInfo.componentToken);\n                }\n                return null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"componentRenderElement\", {\n            get: function () {\n                var componentView = this._view;\n                while (isPresent(componentView.parentView) && componentView.type !== ViewType.COMPONENT) {\n                    componentView = componentView.parentView;\n                }\n                return componentView.parentElement;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"injector\", {\n            get: function () { return this._view.injector(this._nodeIndex); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"renderNode\", {\n            get: function () {\n                if (isPresent(this._nodeIndex) && this._view.allNodes) {\n                    return this._view.allNodes[this._nodeIndex];\n                }\n                else {\n                    return null;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var staticNodeInfo = this._staticNodeInfo;\n                return isPresent(staticNodeInfo) ? staticNodeInfo.providerTokens : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"source\", {\n            get: function () {\n                return this._view.componentType.templateUrl + \":\" + this._tplRow + \":\" + this._tplCol;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"references\", {\n            get: function () {\n                var _this = this;\n                var varValues = {};\n                var staticNodeInfo = this._staticNodeInfo;\n                if (isPresent(staticNodeInfo)) {\n                    var refs_1 = staticNodeInfo.refTokens;\n                    Object.keys(refs_1).forEach(function (refName) {\n                        var refToken = refs_1[refName];\n                        var varValue;\n                        if (isBlank(refToken)) {\n                            varValue = _this._view.allNodes ? _this._view.allNodes[_this._nodeIndex] : null;\n                        }\n                        else {\n                            varValue = _this._view.injectorGet(refToken, _this._nodeIndex, null);\n                        }\n                        varValues[refName] = varValue;\n                    });\n                }\n                return varValues;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugContext;\n    }());\n\n    var ViewAnimationMap = (function () {\n        function ViewAnimationMap() {\n            this._map = new Map();\n            this._allPlayers = [];\n        }\n        ViewAnimationMap.prototype.find = function (element, animationName) {\n            var playersByAnimation = this._map.get(element);\n            if (isPresent(playersByAnimation)) {\n                return playersByAnimation[animationName];\n            }\n        };\n        ViewAnimationMap.prototype.findAllPlayersByElement = function (element) {\n            var el = this._map.get(element);\n            return el ? Object.keys(el).map(function (k) { return el[k]; }) : [];\n        };\n        ViewAnimationMap.prototype.set = function (element, animationName, player) {\n            var playersByAnimation = this._map.get(element);\n            if (!isPresent(playersByAnimation)) {\n                playersByAnimation = {};\n            }\n            var existingEntry = playersByAnimation[animationName];\n            if (isPresent(existingEntry)) {\n                this.remove(element, animationName);\n            }\n            playersByAnimation[animationName] = player;\n            this._allPlayers.push(player);\n            this._map.set(element, playersByAnimation);\n        };\n        ViewAnimationMap.prototype.getAllPlayers = function () { return this._allPlayers; };\n        ViewAnimationMap.prototype.remove = function (element, animationName) {\n            var playersByAnimation = this._map.get(element);\n            if (playersByAnimation) {\n                var player = playersByAnimation[animationName];\n                delete playersByAnimation[animationName];\n                var index = this._allPlayers.indexOf(player);\n                this._allPlayers.splice(index, 1);\n                if (Object.keys(playersByAnimation).length === 0) {\n                    this._map.delete(element);\n                }\n            }\n        };\n        return ViewAnimationMap;\n    }());\n\n    var AnimationViewContext = (function () {\n        function AnimationViewContext() {\n            this._players = new ViewAnimationMap();\n        }\n        AnimationViewContext.prototype.onAllActiveAnimationsDone = function (callback) {\n            var activeAnimationPlayers = this._players.getAllPlayers();\n            // we check for the length to avoid having GroupAnimationPlayer\n            // issue an unnecessary microtask when zero players are passed in\n            if (activeAnimationPlayers.length) {\n                new AnimationGroupPlayer(activeAnimationPlayers).onDone(function () { return callback(); });\n            }\n            else {\n                callback();\n            }\n        };\n        AnimationViewContext.prototype.queueAnimation = function (element, animationName, player) {\n            queueAnimationGlobally(player);\n            this._players.set(element, animationName, player);\n        };\n        AnimationViewContext.prototype.getAnimationPlayers = function (element, animationName, removeAllAnimations) {\n            if (removeAllAnimations === void 0) { removeAllAnimations = false; }\n            var players = [];\n            if (removeAllAnimations) {\n                this._players.findAllPlayersByElement(element).forEach(function (player) { _recursePlayers(player, players); });\n            }\n            else {\n                var currentPlayer = this._players.find(element, animationName);\n                if (currentPlayer) {\n                    _recursePlayers(currentPlayer, players);\n                }\n            }\n            return players;\n        };\n        return AnimationViewContext;\n    }());\n    function _recursePlayers(player, collectedPlayers) {\n        if ((player instanceof AnimationGroupPlayer) || (player instanceof AnimationSequencePlayer)) {\n            player.players.forEach(function (player) { return _recursePlayers(player, collectedPlayers); });\n        }\n        else {\n            collectedPlayers.push(player);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$15 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var ElementInjector = (function (_super) {\n        __extends$15(ElementInjector, _super);\n        function ElementInjector(_view, _nodeIndex) {\n            _super.call(this);\n            this._view = _view;\n            this._nodeIndex = _nodeIndex;\n        }\n        ElementInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._view.injectorGet(token, this._nodeIndex, notFoundValue);\n        };\n        return ElementInjector;\n    }(Injector));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$14 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var _scope_check = wtfCreateScope(\"AppView#check(ascii id)\");\n    /**\n     * @experimental\n     */\n    var EMPTY_CONTEXT$1 = new Object();\n    var UNDEFINED$1 = new Object();\n    /**\n     * Cost of making objects: http://jsperf.com/instantiate-size-of-object\n     *\n     */\n    var AppView = (function () {\n        function AppView(clazz, componentType, type, viewUtils, parentView, parentIndex, parentElement, cdMode, declaredViewContainer) {\n            if (declaredViewContainer === void 0) { declaredViewContainer = null; }\n            this.clazz = clazz;\n            this.componentType = componentType;\n            this.type = type;\n            this.viewUtils = viewUtils;\n            this.parentView = parentView;\n            this.parentIndex = parentIndex;\n            this.parentElement = parentElement;\n            this.cdMode = cdMode;\n            this.declaredViewContainer = declaredViewContainer;\n            this.viewContainer = null;\n            this.numberOfChecks = 0;\n            this.ref = new ViewRef_(this);\n            if (type === ViewType.COMPONENT || type === ViewType.HOST) {\n                this.renderer = viewUtils.renderComponent(componentType);\n            }\n            else {\n                this.renderer = parentView.renderer;\n            }\n            this._directRenderer = this.renderer.directRenderer;\n        }\n        Object.defineProperty(AppView.prototype, \"animationContext\", {\n            get: function () {\n                if (!this._animationContext) {\n                    this._animationContext = new AnimationViewContext();\n                }\n                return this._animationContext;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppView.prototype, \"destroyed\", {\n            get: function () { return this.cdMode === ChangeDetectorStatus.Destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        AppView.prototype.create = function (context) {\n            this.context = context;\n            return this.createInternal(null);\n        };\n        AppView.prototype.createHostView = function (rootSelectorOrNode, hostInjector, projectableNodes) {\n            this.context = EMPTY_CONTEXT$1;\n            this._hasExternalHostElement = isPresent(rootSelectorOrNode);\n            this._hostInjector = hostInjector;\n            this._hostProjectableNodes = projectableNodes;\n            return this.createInternal(rootSelectorOrNode);\n        };\n        /**\n         * Overwritten by implementations.\n         * Returns the ComponentRef for the host element for ViewType.HOST.\n         */\n        AppView.prototype.createInternal = function (rootSelectorOrNode) { return null; };\n        /**\n         * Overwritten by implementations.\n         */\n        AppView.prototype.createEmbeddedViewInternal = function (templateNodeIndex) { return null; };\n        AppView.prototype.init = function (lastRootNode, allNodes, disposables) {\n            this.lastRootNode = lastRootNode;\n            this.allNodes = allNodes;\n            this.disposables = disposables;\n            if (this.type === ViewType.COMPONENT) {\n                this.dirtyParentQueriesInternal();\n            }\n        };\n        AppView.prototype.injectorGet = function (token, nodeIndex, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            var result = UNDEFINED$1;\n            var view = this;\n            while (result === UNDEFINED$1) {\n                if (isPresent(nodeIndex)) {\n                    result = view.injectorGetInternal(token, nodeIndex, UNDEFINED$1);\n                }\n                if (result === UNDEFINED$1 && view.type === ViewType.HOST) {\n                    result = view._hostInjector.get(token, notFoundValue);\n                }\n                nodeIndex = view.parentIndex;\n                view = view.parentView;\n            }\n            return result;\n        };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.injectorGetInternal = function (token, nodeIndex, notFoundResult) {\n            return notFoundResult;\n        };\n        AppView.prototype.injector = function (nodeIndex) { return new ElementInjector(this, nodeIndex); };\n        AppView.prototype.detachAndDestroy = function () {\n            if (this._hasExternalHostElement) {\n                this.detach();\n            }\n            else if (isPresent(this.viewContainer)) {\n                this.viewContainer.detachView(this.viewContainer.nestedViews.indexOf(this));\n            }\n            this.destroy();\n        };\n        AppView.prototype.destroy = function () {\n            var _this = this;\n            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n                return;\n            }\n            var hostElement = this.type === ViewType.COMPONENT ? this.parentElement : null;\n            if (this.disposables) {\n                for (var i = 0; i < this.disposables.length; i++) {\n                    this.disposables[i]();\n                }\n            }\n            this.destroyInternal();\n            this.dirtyParentQueriesInternal();\n            if (this._animationContext) {\n                this._animationContext.onAllActiveAnimationsDone(function () { return _this.renderer.destroyView(hostElement, _this.allNodes); });\n            }\n            else {\n                this.renderer.destroyView(hostElement, this.allNodes);\n            }\n            this.cdMode = ChangeDetectorStatus.Destroyed;\n        };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.destroyInternal = function () { };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.detachInternal = function () { };\n        AppView.prototype.detach = function () {\n            var _this = this;\n            this.detachInternal();\n            if (this._animationContext) {\n                this._animationContext.onAllActiveAnimationsDone(function () { return _this._renderDetach(); });\n            }\n            else {\n                this._renderDetach();\n            }\n            if (this.declaredViewContainer && this.declaredViewContainer !== this.viewContainer) {\n                var projectedViews = this.declaredViewContainer.projectedViews;\n                var index = projectedViews.indexOf(this);\n                // perf: pop is faster than splice!\n                if (index >= projectedViews.length - 1) {\n                    projectedViews.pop();\n                }\n                else {\n                    projectedViews.splice(index, 1);\n                }\n            }\n            this.viewContainer = null;\n            this.dirtyParentQueriesInternal();\n        };\n        AppView.prototype._renderDetach = function () {\n            if (this._directRenderer) {\n                this.visitRootNodesInternal(this._directRenderer.remove, null);\n            }\n            else {\n                this.renderer.detachView(this.flatRootNodes);\n            }\n        };\n        AppView.prototype.attachAfter = function (viewContainer, prevView) {\n            this._renderAttach(viewContainer, prevView);\n            this.viewContainer = viewContainer;\n            if (this.declaredViewContainer && this.declaredViewContainer !== viewContainer) {\n                if (!this.declaredViewContainer.projectedViews) {\n                    this.declaredViewContainer.projectedViews = [];\n                }\n                this.declaredViewContainer.projectedViews.push(this);\n            }\n            this.dirtyParentQueriesInternal();\n        };\n        AppView.prototype.moveAfter = function (viewContainer, prevView) {\n            this._renderAttach(viewContainer, prevView);\n            this.dirtyParentQueriesInternal();\n        };\n        AppView.prototype._renderAttach = function (viewContainer, prevView) {\n            var prevNode = prevView ? prevView.lastRootNode : viewContainer.nativeElement;\n            if (this._directRenderer) {\n                var nextSibling = this._directRenderer.nextSibling(prevNode);\n                if (nextSibling) {\n                    this.visitRootNodesInternal(this._directRenderer.insertBefore, nextSibling);\n                }\n                else {\n                    var parentElement = this._directRenderer.parentElement(prevNode);\n                    if (parentElement) {\n                        this.visitRootNodesInternal(this._directRenderer.appendChild, parentElement);\n                    }\n                }\n            }\n            else {\n                this.renderer.attachViewAfter(prevNode, this.flatRootNodes);\n            }\n        };\n        Object.defineProperty(AppView.prototype, \"changeDetectorRef\", {\n            get: function () { return this.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppView.prototype, \"flatRootNodes\", {\n            get: function () {\n                var nodes = [];\n                this.visitRootNodesInternal(addToArray, nodes);\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AppView.prototype.projectNodes = function (parentElement, ngContentIndex) {\n            if (this._directRenderer) {\n                this.visitProjectedNodes(ngContentIndex, this._directRenderer.appendChild, parentElement);\n            }\n            else {\n                var nodes = [];\n                this.visitProjectedNodes(ngContentIndex, addToArray, nodes);\n                this.renderer.projectNodes(parentElement, nodes);\n            }\n        };\n        AppView.prototype.visitProjectedNodes = function (ngContentIndex, cb, c) {\n            switch (this.type) {\n                case ViewType.EMBEDDED:\n                    this.parentView.visitProjectedNodes(ngContentIndex, cb, c);\n                    break;\n                case ViewType.COMPONENT:\n                    if (this.parentView.type === ViewType.HOST) {\n                        var nodes = this.parentView._hostProjectableNodes[ngContentIndex] || [];\n                        for (var i = 0; i < nodes.length; i++) {\n                            cb(nodes[i], c);\n                        }\n                    }\n                    else {\n                        this.parentView.visitProjectableNodesInternal(this.parentIndex, ngContentIndex, cb, c);\n                    }\n                    break;\n            }\n        };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.visitRootNodesInternal = function (cb, c) { };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, c) { };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.dirtyParentQueriesInternal = function () { };\n        AppView.prototype.detectChanges = function (throwOnChange) {\n            var s = _scope_check(this.clazz);\n            if (this.cdMode === ChangeDetectorStatus.Checked ||\n                this.cdMode === ChangeDetectorStatus.Errored ||\n                this.cdMode === ChangeDetectorStatus.Detached)\n                return;\n            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n                this.throwDestroyedError('detectChanges');\n            }\n            this.detectChangesInternal(throwOnChange);\n            if (this.cdMode === ChangeDetectorStatus.CheckOnce)\n                this.cdMode = ChangeDetectorStatus.Checked;\n            this.numberOfChecks++;\n            wtfLeave(s);\n        };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.detectChangesInternal = function (throwOnChange) { };\n        AppView.prototype.markAsCheckOnce = function () { this.cdMode = ChangeDetectorStatus.CheckOnce; };\n        AppView.prototype.markPathToRootAsCheckOnce = function () {\n            var c = this;\n            while (isPresent(c) && c.cdMode !== ChangeDetectorStatus.Detached) {\n                if (c.cdMode === ChangeDetectorStatus.Checked) {\n                    c.cdMode = ChangeDetectorStatus.CheckOnce;\n                }\n                if (c.type === ViewType.COMPONENT) {\n                    c = c.parentView;\n                }\n                else {\n                    c = c.viewContainer ? c.viewContainer.parentView : null;\n                }\n            }\n        };\n        AppView.prototype.eventHandler = function (cb) {\n            return cb;\n        };\n        AppView.prototype.throwDestroyedError = function (details) { throw new ViewDestroyedError(details); };\n        return AppView;\n    }());\n    var DebugAppView = (function (_super) {\n        __extends$14(DebugAppView, _super);\n        function DebugAppView(clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode, staticNodeDebugInfos, declaredViewContainer) {\n            if (declaredViewContainer === void 0) { declaredViewContainer = null; }\n            _super.call(this, clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode, declaredViewContainer);\n            this.staticNodeDebugInfos = staticNodeDebugInfos;\n            this._currentDebugContext = null;\n        }\n        DebugAppView.prototype.create = function (context) {\n            this._resetDebug();\n            try {\n                return _super.prototype.create.call(this, context);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.createHostView = function (rootSelectorOrNode, injector, projectableNodes) {\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            this._resetDebug();\n            try {\n                return _super.prototype.createHostView.call(this, rootSelectorOrNode, injector, projectableNodes);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {\n            this._resetDebug();\n            try {\n                return _super.prototype.injectorGet.call(this, token, nodeIndex, notFoundResult);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.detach = function () {\n            this._resetDebug();\n            try {\n                _super.prototype.detach.call(this);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.destroy = function () {\n            this._resetDebug();\n            try {\n                _super.prototype.destroy.call(this);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.detectChanges = function (throwOnChange) {\n            this._resetDebug();\n            try {\n                _super.prototype.detectChanges.call(this, throwOnChange);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype._resetDebug = function () { this._currentDebugContext = null; };\n        DebugAppView.prototype.debug = function (nodeIndex, rowNum, colNum) {\n            return this._currentDebugContext = new DebugContext(this, nodeIndex, rowNum, colNum);\n        };\n        DebugAppView.prototype._rethrowWithContext = function (e) {\n            if (!(e instanceof ViewWrappedError)) {\n                if (!(e instanceof ExpressionChangedAfterItHasBeenCheckedError)) {\n                    this.cdMode = ChangeDetectorStatus.Errored;\n                }\n                if (isPresent(this._currentDebugContext)) {\n                    throw new ViewWrappedError(e, this._currentDebugContext);\n                }\n            }\n        };\n        DebugAppView.prototype.eventHandler = function (cb) {\n            var _this = this;\n            var superHandler = _super.prototype.eventHandler.call(this, cb);\n            return function (eventName, event) {\n                _this._resetDebug();\n                try {\n                    return superHandler.call(_this, eventName, event);\n                }\n                catch (e) {\n                    _this._rethrowWithContext(e);\n                    throw e;\n                }\n            };\n        };\n        return DebugAppView;\n    }(AppView));\n\n    /**\n     * A ViewContainer is created for elements that have a ViewContainerRef\n     * to keep track of the nested views.\n     */\n    var ViewContainer = (function () {\n        function ViewContainer(index, parentIndex, parentView, nativeElement) {\n            this.index = index;\n            this.parentIndex = parentIndex;\n            this.parentView = parentView;\n            this.nativeElement = nativeElement;\n        }\n        Object.defineProperty(ViewContainer.prototype, \"elementRef\", {\n            get: function () { return new ElementRef(this.nativeElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainer.prototype, \"vcRef\", {\n            get: function () { return new ViewContainerRef_(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainer.prototype, \"parentInjector\", {\n            get: function () { return this.parentView.injector(this.parentIndex); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainer.prototype, \"injector\", {\n            get: function () { return this.parentView.injector(this.index); },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainer.prototype.detectChangesInNestedViews = function (throwOnChange) {\n            if (this.nestedViews) {\n                for (var i = 0; i < this.nestedViews.length; i++) {\n                    this.nestedViews[i].detectChanges(throwOnChange);\n                }\n            }\n        };\n        ViewContainer.prototype.destroyNestedViews = function () {\n            if (this.nestedViews) {\n                for (var i = 0; i < this.nestedViews.length; i++) {\n                    this.nestedViews[i].destroy();\n                }\n            }\n        };\n        ViewContainer.prototype.visitNestedViewRootNodes = function (cb, c) {\n            if (this.nestedViews) {\n                for (var i = 0; i < this.nestedViews.length; i++) {\n                    this.nestedViews[i].visitRootNodesInternal(cb, c);\n                }\n            }\n        };\n        ViewContainer.prototype.mapNestedViews = function (nestedViewClass, callback) {\n            var result = [];\n            if (this.nestedViews) {\n                for (var i = 0; i < this.nestedViews.length; i++) {\n                    var nestedView = this.nestedViews[i];\n                    if (nestedView.clazz === nestedViewClass) {\n                        result.push(callback(nestedView));\n                    }\n                }\n            }\n            if (this.projectedViews) {\n                for (var i = 0; i < this.projectedViews.length; i++) {\n                    var projectedView = this.projectedViews[i];\n                    if (projectedView.clazz === nestedViewClass) {\n                        result.push(callback(projectedView));\n                    }\n                }\n            }\n            return result;\n        };\n        ViewContainer.prototype.moveView = function (view, currentIndex) {\n            var previousIndex = this.nestedViews.indexOf(view);\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            var nestedViews = this.nestedViews;\n            if (nestedViews == null) {\n                nestedViews = [];\n                this.nestedViews = nestedViews;\n            }\n            nestedViews.splice(previousIndex, 1);\n            nestedViews.splice(currentIndex, 0, view);\n            var prevView = currentIndex > 0 ? nestedViews[currentIndex - 1] : null;\n            view.moveAfter(this, prevView);\n        };\n        ViewContainer.prototype.attachView = function (view, viewIndex) {\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            var nestedViews = this.nestedViews;\n            if (nestedViews == null) {\n                nestedViews = [];\n                this.nestedViews = nestedViews;\n            }\n            // perf: array.push is faster than array.splice!\n            if (viewIndex >= nestedViews.length) {\n                nestedViews.push(view);\n            }\n            else {\n                nestedViews.splice(viewIndex, 0, view);\n            }\n            var prevView = viewIndex > 0 ? nestedViews[viewIndex - 1] : null;\n            view.attachAfter(this, prevView);\n        };\n        ViewContainer.prototype.detachView = function (viewIndex) {\n            var view = this.nestedViews[viewIndex];\n            // perf: array.pop is faster than array.splice!\n            if (viewIndex >= this.nestedViews.length - 1) {\n                this.nestedViews.pop();\n            }\n            else {\n                this.nestedViews.splice(viewIndex, 1);\n            }\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            view.detach();\n            return view;\n        };\n        return ViewContainer;\n    }());\n\n    var __core_private__ = {\n        isDefaultChangeDetectionStrategy: isDefaultChangeDetectionStrategy,\n        ChangeDetectorStatus: ChangeDetectorStatus,\n        constructDependencies: constructDependencies,\n        LifecycleHooks: LifecycleHooks,\n        LIFECYCLE_HOOKS_VALUES: LIFECYCLE_HOOKS_VALUES,\n        ReflectorReader: ReflectorReader,\n        CodegenComponentFactoryResolver: CodegenComponentFactoryResolver,\n        ComponentRef_: ComponentRef_,\n        ViewContainer: ViewContainer,\n        AppView: AppView,\n        DebugAppView: DebugAppView,\n        NgModuleInjector: NgModuleInjector,\n        registerModuleFactory: registerModuleFactory,\n        ViewType: ViewType,\n        view_utils: view_utils,\n        ViewMetadata: ViewMetadata,\n        DebugContext: DebugContext,\n        StaticNodeDebugInfo: StaticNodeDebugInfo,\n        devModeEqual: devModeEqual,\n        UNINITIALIZED: UNINITIALIZED,\n        ValueUnwrapper: ValueUnwrapper,\n        RenderDebugInfo: RenderDebugInfo,\n        TemplateRef_: TemplateRef_,\n        ReflectionCapabilities: ReflectionCapabilities,\n        makeDecorator: makeDecorator,\n        DebugDomRootRenderer: DebugDomRootRenderer,\n        Console: Console,\n        reflector: reflector,\n        Reflector: Reflector,\n        NoOpAnimationPlayer: NoOpAnimationPlayer,\n        AnimationPlayer: AnimationPlayer,\n        AnimationSequencePlayer: AnimationSequencePlayer,\n        AnimationGroupPlayer: AnimationGroupPlayer,\n        AnimationKeyframe: AnimationKeyframe,\n        prepareFinalAnimationStyles: prepareFinalAnimationStyles,\n        balanceAnimationKeyframes: balanceAnimationKeyframes,\n        flattenStyles: flattenStyles,\n        clearStyles: clearStyles,\n        renderStyles: renderStyles,\n        collectAndResolveStyles: collectAndResolveStyles,\n        APP_ID_RANDOM_PROVIDER: APP_ID_RANDOM_PROVIDER,\n        AnimationStyles: AnimationStyles,\n        ANY_STATE: ANY_STATE,\n        DEFAULT_STATE: DEFAULT_STATE,\n        EMPTY_STATE: EMPTY_STATE,\n        FILL_STYLE_FLAG: FILL_STYLE_FLAG,\n        ComponentStillLoadingError: ComponentStillLoadingError,\n        isPromise: isPromise,\n        AnimationTransition: AnimationTransition\n    };\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.AnimationTransitionEvent = AnimationTransitionEvent;\n    exports.AnimationPlayer = AnimationPlayer;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.AfterContentChecked = AfterContentChecked;\n    exports.AfterContentInit = AfterContentInit;\n    exports.AfterViewChecked = AfterViewChecked;\n    exports.AfterViewInit = AfterViewInit;\n    exports.DoCheck = DoCheck;\n    exports.OnChanges = OnChanges;\n    exports.OnDestroy = OnDestroy;\n    exports.OnInit = OnInit;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Class = Class;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.OpaqueToken = OpaqueToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Injectable = Injectable;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.CollectionChangeRecord = CollectionChangeRecord;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueChangeRecord = KeyValueChangeRecord;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.__core_private__ = __core_private__;\n    exports.AUTO_STYLE = AUTO_STYLE;\n    exports.AnimationEntryMetadata = AnimationEntryMetadata;\n    exports.AnimationStateMetadata = AnimationStateMetadata;\n    exports.AnimationStateDeclarationMetadata = AnimationStateDeclarationMetadata;\n    exports.AnimationStateTransitionMetadata = AnimationStateTransitionMetadata;\n    exports.AnimationMetadata = AnimationMetadata;\n    exports.AnimationKeyframesSequenceMetadata = AnimationKeyframesSequenceMetadata;\n    exports.AnimationStyleMetadata = AnimationStyleMetadata;\n    exports.AnimationAnimateMetadata = AnimationAnimateMetadata;\n    exports.AnimationWithStepsMetadata = AnimationWithStepsMetadata;\n    exports.AnimationSequenceMetadata = AnimationSequenceMetadata;\n    exports.AnimationGroupMetadata = AnimationGroupMetadata;\n    exports.animate = animate;\n    exports.group = group;\n    exports.sequence = sequence;\n    exports.style = style;\n    exports.state = state;\n    exports.keyframes = keyframes;\n    exports.transition = transition;\n    exports.trigger = trigger;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/core/bundles/core.umd.js\n ** module id = 8\n ** module chunks = 2\n **/","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Registers handlers for handling emitted values, error and completions from the observable, and\n     *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n     * @method subscribe\n     * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n     * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled\n     * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this);\n        }\n        else {\n            sink.add(this._subscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.$$observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/Observable.js\n ** module id = 11\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parent, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parent = _parent;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            context = observerOrNext;\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (isFunction_1.isFunction(context.unsubscribe)) {\n                this.add(context.unsubscribe.bind(context));\n            }\n            context.unsubscribe = this.unsubscribe.bind(this);\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parent = this._parent;\n            if (!_parent.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parent, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._error) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parent.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parent.syncErrorValue = err;\n                _parent.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._complete) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._complete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._complete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parent = this._parent;\n        this._context = null;\n        this._parent = null;\n        _parent.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/Subscriber.js\n ** module id = 16\n ** module chunks = 2\n **/","\"use strict\";\nvar objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n};\nexports.root = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);\nvar freeGlobal = objectTypes[typeof global] && global;\nif (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    exports.root = freeGlobal;\n}\n//# sourceMappingURL=root.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/root.js\n ** module id = 26\n ** module chunks = 2\n **/","/**\n * @license Angular v2.2.4\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.common = global.ng.common || {}),global.ng.core));\n}(this, function (exports,_angular_core) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This class should not be used directly by an application developer. Instead, use\n     * {@link Location}.\n     *\n     * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n     * agnostic.\n     * This means that we can have different implementation of `PlatformLocation` for the different\n     * platforms\n     * that angular supports. For example, the default `PlatformLocation` is {@link\n     * BrowserPlatformLocation},\n     * however when you run your app in a WebWorker you use {@link WebWorkerPlatformLocation}.\n     *\n     * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\n     * when\n     * they need to interact with the DOM apis like pushState, popState, etc...\n     *\n     * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\n     * by\n     * the {@link Router} in order to navigate between routes. Since all interactions between {@link\n     * Router} /\n     * {@link Location} / {@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n     * class\n     * they are all platform independent.\n     *\n     * @stable\n     */\n    var PlatformLocation = (function () {\n        function PlatformLocation() {\n        }\n        Object.defineProperty(PlatformLocation.prototype, \"pathname\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformLocation.prototype, \"search\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformLocation.prototype, \"hash\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return PlatformLocation;\n    }());\n\n    /**\n     * `LocationStrategy` is responsible for representing and reading route state\n     * from the browser's URL. Angular provides two strategies:\n     * {@link HashLocationStrategy} and {@link PathLocationStrategy} (default).\n     *\n     * This is used under the hood of the {@link Location} service.\n     *\n     * Applications should use the {@link Router} or {@link Location} services to\n     * interact with application route state.\n     *\n     * For instance, {@link HashLocationStrategy} produces URLs like\n     * `http://example.com#/foo`, and {@link PathLocationStrategy} produces\n     * `http://example.com/foo` as an equivalent URL.\n     *\n     * See these two classes for more.\n     *\n     * @stable\n     */\n    var LocationStrategy = (function () {\n        function LocationStrategy() {\n        }\n        return LocationStrategy;\n    }());\n    /**\n     * The `APP_BASE_HREF` token represents the base href to be used with the\n     * {@link PathLocationStrategy}.\n     *\n     * If you're using {@link PathLocationStrategy}, you must provide a provider to a string\n     * representing the URL prefix that should be preserved when generating and recognizing\n     * URLs.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * import {Component, NgModule} from '@angular/core';\n     * import {APP_BASE_HREF} from '@angular/common';\n     *\n     * @NgModule({\n     *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n     * })\n     * class AppModule {}\n     * ```\n     *\n     * @stable\n     */\n    var APP_BASE_HREF = new _angular_core.OpaqueToken('appBaseHref');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = self;\n        }\n        else {\n            globalScope = global;\n        }\n    }\n    else {\n        globalScope = window;\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var _global = globalScope;\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    _global.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    function isPresent(obj) {\n        return obj != null;\n    }\n    function isBlank(obj) {\n        return obj == null;\n    }\n    function isDate(obj) {\n        return obj instanceof Date && !isNaN(obj.valueOf());\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return token.overriddenName;\n        }\n        if (token.name) {\n            return token.name;\n        }\n        var res = token.toString();\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    var NumberWrapper = (function () {\n        function NumberWrapper() {\n        }\n        NumberWrapper.parseIntAutoRadix = function (text) {\n            var result = parseInt(text);\n            if (isNaN(result)) {\n                throw new Error('Invalid integer literal when parsing ' + text);\n            }\n            return result;\n        };\n        NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n        return NumberWrapper;\n    }());\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            if (globalScope.Symbol && Symbol.iterator) {\n                _symbolIterator = Symbol.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * `Location` is a service that applications can use to interact with a browser's URL.\n     * Depending on which {@link LocationStrategy} is used, `Location` will either persist\n     * to the URL's path or the URL's hash segment.\n     *\n     * Note: it's better to use {@link Router#navigate} service to trigger route changes. Use\n     * `Location` only if you need to interact with or create normalized URLs outside of\n     * routing.\n     *\n     * `Location` is responsible for normalizing the URL against the application's base href.\n     * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n     * trailing slash:\n     * - `/my/app/user/123` is normalized\n     * - `my/app/user/123` **is not** normalized\n     * - `/my/app/user/123/` **is not** normalized\n     *\n     * ### Example\n     *\n     * ```\n     * import {Component} from '@angular/core';\n     * import {Location} from '@angular/common';\n     *\n     * @Component({selector: 'app-component'})\n     * class AppCmp {\n     *   constructor(location: Location) {\n     *     location.go('/foo');\n     *   }\n     * }\n     * ```\n     *\n     * @stable\n     */\n    var Location = (function () {\n        function Location(platformStrategy) {\n            var _this = this;\n            /** @internal */\n            this._subject = new _angular_core.EventEmitter();\n            this._platformStrategy = platformStrategy;\n            var browserBaseHref = this._platformStrategy.getBaseHref();\n            this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n            this._platformStrategy.onPopState(function (ev) {\n                _this._subject.emit({\n                    'url': _this.path(true),\n                    'pop': true,\n                    'type': ev.type,\n                });\n            });\n        }\n        /**\n         * Returns the normalized URL path.\n         */\n        // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n        // removed.\n        Location.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            return this.normalize(this._platformStrategy.path(includeHash));\n        };\n        /**\n         * Normalizes the given path and compares to the current normalized path.\n         */\n        Location.prototype.isCurrentPathEqualTo = function (path, query) {\n            if (query === void 0) { query = ''; }\n            return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n        };\n        /**\n         * Given a string representing a URL, returns the normalized URL path without leading or\n         * trailing slashes.\n         */\n        Location.prototype.normalize = function (url) {\n            return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n        };\n        /**\n         * Given a string representing a URL, returns the platform-specific external URL path.\n         * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n         * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n         * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n         */\n        Location.prototype.prepareExternalUrl = function (url) {\n            if (url.length > 0 && !url.startsWith('/')) {\n                url = '/' + url;\n            }\n            return this._platformStrategy.prepareExternalUrl(url);\n        };\n        // TODO: rename this method to pushState\n        /**\n         * Changes the browsers URL to the normalized version of the given URL, and pushes a\n         * new item onto the platform's history.\n         */\n        Location.prototype.go = function (path, query) {\n            if (query === void 0) { query = ''; }\n            this._platformStrategy.pushState(null, '', path, query);\n        };\n        /**\n         * Changes the browsers URL to the normalized version of the given URL, and replaces\n         * the top item on the platform's history stack.\n         */\n        Location.prototype.replaceState = function (path, query) {\n            if (query === void 0) { query = ''; }\n            this._platformStrategy.replaceState(null, '', path, query);\n        };\n        /**\n         * Navigates forward in the platform's history.\n         */\n        Location.prototype.forward = function () { this._platformStrategy.forward(); };\n        /**\n         * Navigates back in the platform's history.\n         */\n        Location.prototype.back = function () { this._platformStrategy.back(); };\n        /**\n         * Subscribe to the platform's `popState` events.\n         */\n        Location.prototype.subscribe = function (onNext, onThrow, onReturn) {\n            if (onThrow === void 0) { onThrow = null; }\n            if (onReturn === void 0) { onReturn = null; }\n            return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n        };\n        /**\n         * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n         * is.\n         */\n        Location.normalizeQueryParams = function (params) {\n            return (params.length > 0 && params.substring(0, 1) != '?') ? ('?' + params) : params;\n        };\n        /**\n         * Given 2 parts of a url, join them with a slash if needed.\n         */\n        Location.joinWithSlash = function (start, end) {\n            if (start.length == 0) {\n                return end;\n            }\n            if (end.length == 0) {\n                return start;\n            }\n            var slashes = 0;\n            if (start.endsWith('/')) {\n                slashes++;\n            }\n            if (end.startsWith('/')) {\n                slashes++;\n            }\n            if (slashes == 2) {\n                return start + end.substring(1);\n            }\n            if (slashes == 1) {\n                return start + end;\n            }\n            return start + '/' + end;\n        };\n        /**\n         * If url has a trailing slash, remove it, otherwise return url as is.\n         */\n        Location.stripTrailingSlash = function (url) {\n            if (/\\/$/g.test(url)) {\n                url = url.substring(0, url.length - 1);\n            }\n            return url;\n        };\n        Location.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        Location.ctorParameters = [\n            { type: LocationStrategy, },\n        ];\n        return Location;\n    }());\n    function _stripBaseHref(baseHref, url) {\n        if (baseHref.length > 0 && url.startsWith(baseHref)) {\n            return url.substring(baseHref.length);\n        }\n        return url;\n    }\n    function _stripIndexHtml(url) {\n        if (/\\/index.html$/g.test(url)) {\n            // '/index.html'.length == 11\n            return url.substring(0, url.length - 11);\n        }\n        return url;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * `HashLocationStrategy` is a {@link LocationStrategy} used to configure the\n     * {@link Location} service to represent its state in the\n     * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n     * of the browser's URL.\n     *\n     * For instance, if you call `location.go('/foo')`, the browser's URL will become\n     * `example.com#/foo`.\n     *\n     * ### Example\n     *\n     * ```\n     * import {Component, NgModule} from '@angular/core';\n     * import {\n     *   LocationStrategy,\n     *   HashLocationStrategy\n     * } from '@angular/common';\n     *\n     * @NgModule({\n     *   providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}]\n     * })\n     * class AppModule {}\n     * ```\n     *\n     * @stable\n     */\n    var HashLocationStrategy = (function (_super) {\n        __extends(HashLocationStrategy, _super);\n        function HashLocationStrategy(_platformLocation, _baseHref) {\n            _super.call(this);\n            this._platformLocation = _platformLocation;\n            this._baseHref = '';\n            if (isPresent(_baseHref)) {\n                this._baseHref = _baseHref;\n            }\n        }\n        HashLocationStrategy.prototype.onPopState = function (fn) {\n            this._platformLocation.onPopState(fn);\n            this._platformLocation.onHashChange(fn);\n        };\n        HashLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n        HashLocationStrategy.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            // the hash value is always prefixed with a `#`\n            // and if it is empty then it will stay empty\n            var path = this._platformLocation.hash;\n            if (!isPresent(path))\n                path = '#';\n            return path.length > 0 ? path.substring(1) : path;\n        };\n        HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n            var url = Location.joinWithSlash(this._baseHref, internal);\n            return url.length > 0 ? ('#' + url) : url;\n        };\n        HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {\n            var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n            if (url.length == 0) {\n                url = this._platformLocation.pathname;\n            }\n            this._platformLocation.pushState(state, title, url);\n        };\n        HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {\n            var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n            if (url.length == 0) {\n                url = this._platformLocation.pathname;\n            }\n            this._platformLocation.replaceState(state, title, url);\n        };\n        HashLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n        HashLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n        HashLocationStrategy.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        HashLocationStrategy.ctorParameters = [\n            { type: PlatformLocation, },\n            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n        ];\n        return HashLocationStrategy;\n    }(LocationStrategy));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * `PathLocationStrategy` is a {@link LocationStrategy} used to configure the\n     * {@link Location} service to represent its state in the\n     * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n     * browser's URL.\n     *\n     * `PathLocationStrategy` is the default binding for {@link LocationStrategy}\n     * provided in {@link ROUTER_PROVIDERS}.\n     *\n     * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}\n     * or add a base element to the document. This URL prefix that will be preserved\n     * when generating and recognizing URLs.\n     *\n     * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n     * `location.go('/foo')`, the browser's URL will become\n     * `example.com/my/app/foo`.\n     *\n     * Similarly, if you add `<base href='/my/app'/>` to the document and call\n     * `location.go('/foo')`, the browser's URL will become\n     * `example.com/my/app/foo`.\n     *\n     * @stable\n     */\n    var PathLocationStrategy = (function (_super) {\n        __extends$1(PathLocationStrategy, _super);\n        function PathLocationStrategy(_platformLocation, href) {\n            _super.call(this);\n            this._platformLocation = _platformLocation;\n            if (isBlank(href)) {\n                href = this._platformLocation.getBaseHrefFromDOM();\n            }\n            if (isBlank(href)) {\n                throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n            }\n            this._baseHref = href;\n        }\n        PathLocationStrategy.prototype.onPopState = function (fn) {\n            this._platformLocation.onPopState(fn);\n            this._platformLocation.onHashChange(fn);\n        };\n        PathLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n        PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n            return Location.joinWithSlash(this._baseHref, internal);\n        };\n        PathLocationStrategy.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            var pathname = this._platformLocation.pathname +\n                Location.normalizeQueryParams(this._platformLocation.search);\n            var hash = this._platformLocation.hash;\n            return hash && includeHash ? \"\" + pathname + hash : pathname;\n        };\n        PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n            var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n            this._platformLocation.pushState(state, title, externalUrl);\n        };\n        PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n            var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n            this._platformLocation.replaceState(state, title, externalUrl);\n        };\n        PathLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n        PathLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n        PathLocationStrategy.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        PathLocationStrategy.ctorParameters = [\n            { type: PlatformLocation, },\n            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n        ];\n        return PathLocationStrategy;\n    }(LocationStrategy));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @experimental\n     */\n    var NgLocalization = (function () {\n        function NgLocalization() {\n        }\n        return NgLocalization;\n    }());\n    /**\n     * Returns the plural category for a given value.\n     * - \"=value\" when the case exists,\n     * - the plural category otherwise\n     *\n     * @internal\n     */\n    function getPluralCategory(value, cases, ngLocalization) {\n        var nbCase = \"=\" + value;\n        return cases.indexOf(nbCase) > -1 ? nbCase : ngLocalization.getPluralCategory(value);\n    }\n    /**\n     * Returns the plural case based on the locale\n     *\n     * @experimental\n     */\n    var NgLocaleLocalization = (function (_super) {\n        __extends$2(NgLocaleLocalization, _super);\n        function NgLocaleLocalization(_locale) {\n            _super.call(this);\n            this._locale = _locale;\n        }\n        NgLocaleLocalization.prototype.getPluralCategory = function (value) {\n            var plural = getPluralCase(this._locale, value);\n            switch (plural) {\n                case Plural.Zero:\n                    return 'zero';\n                case Plural.One:\n                    return 'one';\n                case Plural.Two:\n                    return 'two';\n                case Plural.Few:\n                    return 'few';\n                case Plural.Many:\n                    return 'many';\n                default:\n                    return 'other';\n            }\n        };\n        NgLocaleLocalization.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        NgLocaleLocalization.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ];\n        return NgLocaleLocalization;\n    }(NgLocalization));\n    // This is generated code DO NOT MODIFY\n    // see angular2/script/cldr/gen_plural_rules.js\n    /** @experimental */\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale\n     *\n     * @experimental\n     */\n    function getPluralCase(locale, nLike) {\n        // TODO(vicb): lazy compute\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'agq':\n            case 'bas':\n            case 'cu':\n            case 'dav':\n            case 'dje':\n            case 'dua':\n            case 'dyo':\n            case 'ebu':\n            case 'ewo':\n            case 'guz':\n            case 'kam':\n            case 'khq':\n            case 'ki':\n            case 'kln':\n            case 'kok':\n            case 'ksf':\n            case 'lrc':\n            case 'lu':\n            case 'luo':\n            case 'luy':\n            case 'mer':\n            case 'mfe':\n            case 'mgh':\n            case 'mua':\n            case 'mzn':\n            case 'nmg':\n            case 'nus':\n            case 'qu':\n            case 'rn':\n            case 'rw':\n            case 'sbp':\n            case 'twq':\n            case 'vai':\n            case 'yav':\n            case 'yue':\n            case 'zgh':\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            default:\n                return Plural.Other;\n        }\n    }\n\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) &&\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Adds and removes CSS classes on an HTML element.\n     *\n     * @howToUse\n     * ```\n     *     <some-element [ngClass]=\"'first second'\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n     * ```\n     *\n     * @description\n     *\n     * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n     * - `string` - the CSS classes listed in the string (space delimited) are added,\n     * - `Array` - the CSS classes declared as Array elements are added,\n     * - `Object` - keys are CSS classes that get added when the expression given in the value\n     *              evaluates to a truthy value, otherwise they are removed.\n     *\n     * @stable\n     */\n    var NgClass = (function () {\n        function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n            this._iterableDiffers = _iterableDiffers;\n            this._keyValueDiffers = _keyValueDiffers;\n            this._ngEl = _ngEl;\n            this._renderer = _renderer;\n            this._initialClasses = [];\n        }\n        Object.defineProperty(NgClass.prototype, \"klass\", {\n            set: function (v) {\n                this._applyInitialClasses(true);\n                this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n                this._applyInitialClasses(false);\n                this._applyClasses(this._rawClass, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgClass.prototype, \"ngClass\", {\n            set: function (v) {\n                this._cleanupClasses(this._rawClass);\n                this._iterableDiffer = null;\n                this._keyValueDiffer = null;\n                this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n                if (this._rawClass) {\n                    if (isListLikeIterable(this._rawClass)) {\n                        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create(null);\n                    }\n                    else {\n                        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create(null);\n                    }\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgClass.prototype.ngDoCheck = function () {\n            if (this._iterableDiffer) {\n                var changes = this._iterableDiffer.diff(this._rawClass);\n                if (changes) {\n                    this._applyIterableChanges(changes);\n                }\n            }\n            else if (this._keyValueDiffer) {\n                var changes = this._keyValueDiffer.diff(this._rawClass);\n                if (changes) {\n                    this._applyKeyValueChanges(changes);\n                }\n            }\n        };\n        NgClass.prototype._cleanupClasses = function (rawClassVal) {\n            this._applyClasses(rawClassVal, true);\n            this._applyInitialClasses(false);\n        };\n        NgClass.prototype._applyKeyValueChanges = function (changes) {\n            var _this = this;\n            changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n            changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n            changes.forEachRemovedItem(function (record) {\n                if (record.previousValue) {\n                    _this._toggleClass(record.key, false);\n                }\n            });\n        };\n        NgClass.prototype._applyIterableChanges = function (changes) {\n            var _this = this;\n            changes.forEachAddedItem(function (record) {\n                if (typeof record.item === 'string') {\n                    _this._toggleClass(record.item, true);\n                }\n                else {\n                    throw new Error(\"NgClass can only toggle CSS classes expressed as strings, got \" + stringify(record.item));\n                }\n            });\n            changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n        };\n        NgClass.prototype._applyInitialClasses = function (isCleanup) {\n            var _this = this;\n            this._initialClasses.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n        };\n        NgClass.prototype._applyClasses = function (rawClassVal, isCleanup) {\n            var _this = this;\n            if (rawClassVal) {\n                if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                    rawClassVal.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n                }\n                else {\n                    Object.keys(rawClassVal).forEach(function (klass) {\n                        if (isPresent(rawClassVal[klass]))\n                            _this._toggleClass(klass, !isCleanup);\n                    });\n                }\n            }\n        };\n        NgClass.prototype._toggleClass = function (klass, enabled) {\n            var _this = this;\n            klass = klass.trim();\n            if (klass) {\n                klass.split(/\\s+/g).forEach(function (klass) { _this._renderer.setElementClass(_this._ngEl.nativeElement, klass, enabled); });\n            }\n        };\n        NgClass.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngClass]' },] },\n        ];\n        /** @nocollapse */\n        NgClass.ctorParameters = [\n            { type: _angular_core.IterableDiffers, },\n            { type: _angular_core.KeyValueDiffers, },\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n        ];\n        NgClass.propDecorators = {\n            'klass': [{ type: _angular_core.Input, args: ['class',] },],\n            'ngClass': [{ type: _angular_core.Input },],\n        };\n        return NgClass;\n    }());\n\n    var NgForRow = (function () {\n        function NgForRow($implicit, index, count) {\n            this.$implicit = $implicit;\n            this.index = index;\n            this.count = count;\n        }\n        Object.defineProperty(NgForRow.prototype, \"first\", {\n            get: function () { return this.index === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"last\", {\n            get: function () { return this.index === this.count - 1; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"even\", {\n            get: function () { return this.index % 2 === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"odd\", {\n            get: function () { return !this.even; },\n            enumerable: true,\n            configurable: true\n        });\n        return NgForRow;\n    }());\n    /**\n     * The `NgFor` directive instantiates a template once per item from an iterable. The context for\n     * each instantiated template inherits from the outer context with the given loop variable set\n     * to the current item from the iterable.\n     *\n     * ### Local Variables\n     *\n     * `NgFor` provides several exported values that can be aliased to local variables:\n     *\n     * * `index` will be set to the current loop iteration for each template context.\n     * * `first` will be set to a boolean value indicating whether the item is the first one in the\n     *   iteration.\n     * * `last` will be set to a boolean value indicating whether the item is the last one in the\n     *   iteration.\n     * * `even` will be set to a boolean value indicating whether this item has an even index.\n     * * `odd` will be set to a boolean value indicating whether this item has an odd index.\n     *\n     * ### Change Propagation\n     *\n     * When the contents of the iterator changes, `NgFor` makes the corresponding changes to the DOM:\n     *\n     * * When an item is added, a new instance of the template is added to the DOM.\n     * * When an item is removed, its template instance is removed from the DOM.\n     * * When items are reordered, their respective templates are reordered in the DOM.\n     * * Otherwise, the DOM element for that item will remain the same.\n     *\n     * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n     * those changes in the DOM. This has important implications for animations and any stateful\n     * controls\n     * (such as `<input>` elements which accept user input) that are present. Inserted rows can be\n     * animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state such\n     * as user input.\n     *\n     * It is possible for the identities of elements in the iterator to change while the data does not.\n     * This can happen, for example, if the iterator produced from an RPC to the server, and that\n     * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n     * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n     * elements were deleted and all new elements inserted). This is an expensive operation and should\n     * be avoided if possible.\n     *\n     * To customize the default tracking algorithm, `NgFor` supports `trackBy` option.\n     * `trackBy` takes a function which has two arguments: `index` and `item`.\n     * If `trackBy` is given, Angular tracks changes by the return value of the function.\n     *\n     * ### Syntax\n     *\n     * - `<li *ngFor=\"let item of items; let i = index; trackBy: trackByFn\">...</li>`\n     * - `<li template=\"ngFor let item of items; let i = index; trackBy: trackByFn\">...</li>`\n     *\n     * With `<template>` element:\n     *\n     * ```\n     * <template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n     *   <li>...</li>\n     * </template>\n     * ```\n     *\n     * ### Example\n     *\n     * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n     * example.\n     *\n     * @stable\n     */\n    var NgFor = (function () {\n        function NgFor(_viewContainer, _template, _differs, _cdr) {\n            this._viewContainer = _viewContainer;\n            this._template = _template;\n            this._differs = _differs;\n            this._cdr = _cdr;\n            this._differ = null;\n        }\n        Object.defineProperty(NgFor.prototype, \"ngForTemplate\", {\n            set: function (value) {\n                if (value) {\n                    this._template = value;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgFor.prototype.ngOnChanges = function (changes) {\n            if ('ngForOf' in changes) {\n                // React on ngForOf changes only once all inputs have been initialized\n                var value = changes['ngForOf'].currentValue;\n                if (!this._differ && value) {\n                    try {\n                        this._differ = this._differs.find(value).create(this._cdr, this.ngForTrackBy);\n                    }\n                    catch (e) {\n                        throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeNameForDebugging(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n                    }\n                }\n            }\n        };\n        NgFor.prototype.ngDoCheck = function () {\n            if (this._differ) {\n                var changes = this._differ.diff(this.ngForOf);\n                if (changes)\n                    this._applyChanges(changes);\n            }\n        };\n        NgFor.prototype._applyChanges = function (changes) {\n            var _this = this;\n            var insertTuples = [];\n            changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n                if (item.previousIndex == null) {\n                    var view = _this._viewContainer.createEmbeddedView(_this._template, new NgForRow(null, null, null), currentIndex);\n                    var tuple = new RecordViewTuple(item, view);\n                    insertTuples.push(tuple);\n                }\n                else if (currentIndex == null) {\n                    _this._viewContainer.remove(adjustedPreviousIndex);\n                }\n                else {\n                    var view = _this._viewContainer.get(adjustedPreviousIndex);\n                    _this._viewContainer.move(view, currentIndex);\n                    var tuple = new RecordViewTuple(item, view);\n                    insertTuples.push(tuple);\n                }\n            });\n            for (var i = 0; i < insertTuples.length; i++) {\n                this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n            }\n            for (var i = 0, ilen = this._viewContainer.length; i < ilen; i++) {\n                var viewRef = this._viewContainer.get(i);\n                viewRef.context.index = i;\n                viewRef.context.count = ilen;\n            }\n            changes.forEachIdentityChange(function (record) {\n                var viewRef = _this._viewContainer.get(record.currentIndex);\n                viewRef.context.$implicit = record.item;\n            });\n        };\n        NgFor.prototype._perViewChange = function (view, record) {\n            view.context.$implicit = record.item;\n        };\n        NgFor.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngFor][ngForOf]' },] },\n        ];\n        /** @nocollapse */\n        NgFor.ctorParameters = [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: _angular_core.IterableDiffers, },\n            { type: _angular_core.ChangeDetectorRef, },\n        ];\n        NgFor.propDecorators = {\n            'ngForOf': [{ type: _angular_core.Input },],\n            'ngForTrackBy': [{ type: _angular_core.Input },],\n            'ngForTemplate': [{ type: _angular_core.Input },],\n        };\n        return NgFor;\n    }());\n    var RecordViewTuple = (function () {\n        function RecordViewTuple(record, view) {\n            this.record = record;\n            this.view = view;\n        }\n        return RecordViewTuple;\n    }());\n\n    /**\n     * Removes or recreates a portion of the DOM tree based on an {expression}.\n     *\n     * If the expression assigned to `ngIf` evaluates to a falsy value then the element\n     * is removed from the DOM, otherwise a clone of the element is reinserted into the DOM.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/fe0kgemFBtmQOY31b4tw?p=preview)):\n     *\n     * ```\n     * <div *ngIf=\"errorCount > 0\" class=\"error\">\n     *   <!-- Error message displayed when the errorCount property in the current context is greater\n     * than 0. -->\n     *   {{errorCount}} errors detected\n     * </div>\n     * ```\n     *\n     * ### Syntax\n     *\n     * - `<div *ngIf=\"condition\">...</div>`\n     * - `<div template=\"ngIf condition\">...</div>`\n     * - `<template [ngIf]=\"condition\"><div>...</div></template>`\n     *\n     * @stable\n     */\n    var NgIf = (function () {\n        function NgIf(_viewContainer, _template) {\n            this._viewContainer = _viewContainer;\n            this._template = _template;\n            this._hasView = false;\n        }\n        Object.defineProperty(NgIf.prototype, \"ngIf\", {\n            set: function (condition) {\n                if (condition && !this._hasView) {\n                    this._hasView = true;\n                    this._viewContainer.createEmbeddedView(this._template);\n                }\n                else if (!condition && this._hasView) {\n                    this._hasView = false;\n                    this._viewContainer.clear();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgIf.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngIf]' },] },\n        ];\n        /** @nocollapse */\n        NgIf.ctorParameters = [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n        ];\n        NgIf.propDecorators = {\n            'ngIf': [{ type: _angular_core.Input },],\n        };\n        return NgIf;\n    }());\n\n    var SwitchView = (function () {\n        function SwitchView(_viewContainerRef, _templateRef) {\n            this._viewContainerRef = _viewContainerRef;\n            this._templateRef = _templateRef;\n            this._created = false;\n        }\n        SwitchView.prototype.create = function () {\n            this._created = true;\n            this._viewContainerRef.createEmbeddedView(this._templateRef);\n        };\n        SwitchView.prototype.destroy = function () {\n            this._created = false;\n            this._viewContainerRef.clear();\n        };\n        SwitchView.prototype.enforceState = function (created) {\n            if (created && !this._created) {\n                this.create();\n            }\n            else if (!created && this._created) {\n                this.destroy();\n            }\n        };\n        return SwitchView;\n    }());\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch\n     *             expression.\n     *\n     * @howToUse\n     * ```\n     *     <container-element [ngSwitch]=\"switch_expression\">\n     *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n     *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n     *       <ng-container *ngSwitchCase=\"match_expression_3\">\n     *         <!-- use a ng-container to group multiple root nodes -->\n     *         <inner-element></inner-element>\n     *         <inner-other-element></inner-other-element>\n     *       </ng-container>\n     *       <some-element *ngSwitchDefault>...</some-element>\n     *     </container-element>\n     * ```\n     * @description\n     *\n     * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n     * switch expression.\n     *\n     * In other words:\n     * - you define a container element (where you place the directive with a switch expression on the\n     * `[ngSwitch]=\"...\"` attribute)\n     * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n     * root elements.\n     *\n     * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n     * be preserved at the location.\n     *\n     * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n     * expression is evaluated.\n     * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n     * stamped out.\n     *\n     * @stable\n     */\n    var NgSwitch = (function () {\n        function NgSwitch() {\n            this._defaultUsed = false;\n            this._caseCount = 0;\n            this._lastCaseCheckIndex = 0;\n            this._lastCasesMatched = false;\n        }\n        Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n            set: function (newValue) {\n                this._ngSwitch = newValue;\n                if (this._caseCount === 0) {\n                    this._updateDefaultCases(true);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        NgSwitch.prototype._addCase = function () { return this._caseCount++; };\n        /** @internal */\n        NgSwitch.prototype._addDefault = function (view) {\n            if (!this._defaultViews) {\n                this._defaultViews = [];\n            }\n            this._defaultViews.push(view);\n        };\n        /** @internal */\n        NgSwitch.prototype._matchCase = function (value) {\n            var matched = value == this._ngSwitch;\n            this._lastCasesMatched = this._lastCasesMatched || matched;\n            this._lastCaseCheckIndex++;\n            if (this._lastCaseCheckIndex === this._caseCount) {\n                this._updateDefaultCases(!this._lastCasesMatched);\n                this._lastCaseCheckIndex = 0;\n                this._lastCasesMatched = false;\n            }\n            return matched;\n        };\n        NgSwitch.prototype._updateDefaultCases = function (useDefault) {\n            if (this._defaultViews && useDefault !== this._defaultUsed) {\n                this._defaultUsed = useDefault;\n                for (var i = 0; i < this._defaultViews.length; i++) {\n                    var defaultView = this._defaultViews[i];\n                    defaultView.enforceState(useDefault);\n                }\n            }\n        };\n        NgSwitch.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitch]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitch.ctorParameters = [];\n        NgSwitch.propDecorators = {\n            'ngSwitch': [{ type: _angular_core.Input },],\n        };\n        return NgSwitch;\n    }());\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Creates a view that will be added/removed from the parent {@link NgSwitch} when the\n     *             given expression evaluate to respectively the same/different value as the switch\n     *             expression.\n     *\n     * @howToUse\n     * ```\n     * <container-element [ngSwitch]=\"switch_expression\">\n     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     * </container-element>\n     *```\n     * @description\n     *\n     * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n     * expression.\n     *\n     * If multiple match expressions match the switch expression value, all of them are displayed.\n     *\n     * See {@link NgSwitch} for more details and example.\n     *\n     * @stable\n     */\n    var NgSwitchCase = (function () {\n        function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n            this.ngSwitch = ngSwitch;\n            ngSwitch._addCase();\n            this._view = new SwitchView(viewContainer, templateRef);\n        }\n        NgSwitchCase.prototype.ngDoCheck = function () { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); };\n        NgSwitchCase.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchCase]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitchCase.ctorParameters = [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n        ];\n        NgSwitchCase.propDecorators = {\n            'ngSwitchCase': [{ type: _angular_core.Input },],\n        };\n        return NgSwitchCase;\n    }());\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Creates a view that is added to the parent {@link NgSwitch} when no case expressions\n     * match the\n     *             switch expression.\n     *\n     * @howToUse\n     * ```\n     * <container-element [ngSwitch]=\"switch_expression\">\n     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     *   <some-other-element *ngSwitchDefault>...</some-other-element>\n     * </container-element>\n     * ```\n     *\n     * @description\n     *\n     * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n     * expression.\n     *\n     * See {@link NgSwitch} for more details and example.\n     *\n     * @stable\n     */\n    var NgSwitchDefault = (function () {\n        function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {\n            ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n        }\n        NgSwitchDefault.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchDefault]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitchDefault.ctorParameters = [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n        ];\n        return NgSwitchDefault;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n     *\n     * @howToUse\n     * ```\n     * <some-element [ngPlural]=\"value\">\n     *   <ng-container *ngPluralCase=\"'=0'\">there is nothing</ng-container>\n     *   <ng-container *ngPluralCase=\"'=1'\">there is one</ng-container>\n     *   <ng-container *ngPluralCase=\"'few'\">there are a few</ng-container>\n     *   <ng-container *ngPluralCase=\"'other'\">there are exactly #</ng-container>\n     * </some-element>\n     * ```\n     *\n     * @description\n     *\n     * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n     * that match the switch expression's pluralization category.\n     *\n     * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n     * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n     * expression:\n     * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n     *   matches the switch expression exactly,\n     * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n     *   value matches aren't found and the value maps to its category for the defined locale.\n     *\n     * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n     *\n     * @experimental\n     */\n    var NgPlural = (function () {\n        function NgPlural(_localization) {\n            this._localization = _localization;\n            this._caseViews = {};\n        }\n        Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n            set: function (value) {\n                this._switchValue = value;\n                this._updateView();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgPlural.prototype.addCase = function (value, switchView) { this._caseViews[value] = switchView; };\n        NgPlural.prototype._updateView = function () {\n            this._clearViews();\n            var cases = Object.keys(this._caseViews);\n            var key = getPluralCategory(this._switchValue, cases, this._localization);\n            this._activateView(this._caseViews[key]);\n        };\n        NgPlural.prototype._clearViews = function () {\n            if (this._activeView)\n                this._activeView.destroy();\n        };\n        NgPlural.prototype._activateView = function (view) {\n            if (view) {\n                this._activeView = view;\n                this._activeView.create();\n            }\n        };\n        NgPlural.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngPlural]' },] },\n        ];\n        /** @nocollapse */\n        NgPlural.ctorParameters = [\n            { type: NgLocalization, },\n        ];\n        NgPlural.propDecorators = {\n            'ngPlural': [{ type: _angular_core.Input },],\n        };\n        return NgPlural;\n    }());\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Creates a view that will be added/removed from the parent {@link NgPlural} when the\n     *             given expression matches the plural expression according to CLDR rules.\n     *\n     * @howToUse\n     * ```\n     * <some-element [ngPlural]=\"value\">\n     *   <ng-container *ngPluralCase=\"'=0'\">...</ng-container>\n     *   <ng-container *ngPluralCase=\"'other'\">...</ng-container>\n     * </some-element>\n     *```\n     *\n     * See {@link NgPlural} for more details and example.\n     *\n     * @experimental\n     */\n    var NgPluralCase = (function () {\n        function NgPluralCase(value, template, viewContainer, ngPlural) {\n            this.value = value;\n            ngPlural.addCase(value, new SwitchView(viewContainer, template));\n        }\n        NgPluralCase.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngPluralCase]' },] },\n        ];\n        /** @nocollapse */\n        NgPluralCase.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['ngPluralCase',] },] },\n            { type: _angular_core.TemplateRef, },\n            { type: _angular_core.ViewContainerRef, },\n            { type: NgPlural, decorators: [{ type: _angular_core.Host },] },\n        ];\n        return NgPluralCase;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Update an HTML element styles.\n     *\n     * @howToUse\n     * ```\n     * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n     *\n     * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n     *\n     * <some-element [ngStyle]=\"objExp\">...</some-element>\n     * ```\n     *\n     * @description\n     *\n     * The styles are updated according to the value of the expression evaluation:\n     * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n     * - values are the values assigned to those properties (expressed in the given unit).\n     *\n     * @stable\n     */\n    var NgStyle = (function () {\n        function NgStyle(_differs, _ngEl, _renderer) {\n            this._differs = _differs;\n            this._ngEl = _ngEl;\n            this._renderer = _renderer;\n        }\n        Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n            set: function (v) {\n                this._ngStyle = v;\n                if (!this._differ && v) {\n                    this._differ = this._differs.find(v).create(null);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgStyle.prototype.ngDoCheck = function () {\n            if (this._differ) {\n                var changes = this._differ.diff(this._ngStyle);\n                if (changes) {\n                    this._applyChanges(changes);\n                }\n            }\n        };\n        NgStyle.prototype._applyChanges = function (changes) {\n            var _this = this;\n            changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n            changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n            changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n        };\n        NgStyle.prototype._setStyle = function (nameAndUnit, value) {\n            var _a = nameAndUnit.split('.'), name = _a[0], unit = _a[1];\n            value = value && unit ? \"\" + value + unit : value;\n            this._renderer.setElementStyle(this._ngEl.nativeElement, name, value);\n        };\n        NgStyle.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngStyle]' },] },\n        ];\n        /** @nocollapse */\n        NgStyle.ctorParameters = [\n            { type: _angular_core.KeyValueDiffers, },\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n        ];\n        NgStyle.propDecorators = {\n            'ngStyle': [{ type: _angular_core.Input },],\n        };\n        return NgStyle;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Inserts an embedded view from a prepared `TemplateRef`\n     *\n     * @howToUse\n     * ```\n     * <template [ngTemplateOutlet]=\"templateRefExpression\"\n     *           [ngOutletContext]=\"objectExpression\">\n     * </template>\n     * ```\n     *\n     * @description\n     *\n     * You can attach a context object to the `EmbeddedViewRef` by setting `[ngOutletContext]`.\n     * `[ngOutletContext]` should be an object, the object's keys will be the local template variables\n     * available within the `TemplateRef`.\n     *\n     * Note: using the key `$implicit` in the context object will set it's value as default.\n     *\n     * @experimental\n     */\n    var NgTemplateOutlet = (function () {\n        function NgTemplateOutlet(_viewContainerRef) {\n            this._viewContainerRef = _viewContainerRef;\n        }\n        Object.defineProperty(NgTemplateOutlet.prototype, \"ngOutletContext\", {\n            set: function (context) { this._context = context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgTemplateOutlet.prototype, \"ngTemplateOutlet\", {\n            set: function (templateRef) { this._templateRef = templateRef; },\n            enumerable: true,\n            configurable: true\n        });\n        NgTemplateOutlet.prototype.ngOnChanges = function (changes) {\n            if (this._viewRef) {\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n            }\n            if (this._templateRef) {\n                this._viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, this._context);\n            }\n        };\n        NgTemplateOutlet.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngTemplateOutlet]' },] },\n        ];\n        /** @nocollapse */\n        NgTemplateOutlet.ctorParameters = [\n            { type: _angular_core.ViewContainerRef, },\n        ];\n        NgTemplateOutlet.propDecorators = {\n            'ngOutletContext': [{ type: _angular_core.Input },],\n            'ngTemplateOutlet': [{ type: _angular_core.Input },],\n        };\n        return NgTemplateOutlet;\n    }());\n\n    /**\n     * A collection of Angular directives that are likely to be used in each and every Angular\n     * application.\n     */\n    var COMMON_DIRECTIVES = [\n        NgClass,\n        NgFor,\n        NgIf,\n        NgTemplateOutlet,\n        NgStyle,\n        NgSwitch,\n        NgSwitchCase,\n        NgSwitchDefault,\n        NgPlural,\n        NgPluralCase,\n    ];\n\n    var isPromise = _angular_core.__core_private__.isPromise;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @stable\n     */\n    var BaseError = (function (_super) {\n        __extends$4(BaseError, _super);\n        function BaseError(message) {\n            // Errors don't use current this, instead they create a new instance.\n            // We have to do forward all of our api to the nativeInstance.\n            var nativeError = _super.call(this, message);\n            this._nativeError = nativeError;\n        }\n        Object.defineProperty(BaseError.prototype, \"message\", {\n            get: function () { return this._nativeError.message; },\n            set: function (message) { this._nativeError.message = message; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"name\", {\n            get: function () { return this._nativeError.name; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"stack\", {\n            get: function () { return this._nativeError.stack; },\n            set: function (value) { this._nativeError.stack = value; },\n            enumerable: true,\n            configurable: true\n        });\n        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n        return BaseError;\n    }(Error));\n    /**\n     * @stable\n     */\n    var WrappedError = (function (_super) {\n        __extends$4(WrappedError, _super);\n        function WrappedError(message, error) {\n            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n            this.originalError = error;\n        }\n        Object.defineProperty(WrappedError.prototype, \"stack\", {\n            get: function () {\n                return (this.originalError instanceof Error ? this.originalError : this._nativeError)\n                    .stack;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return WrappedError;\n    }(BaseError));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var InvalidPipeArgumentError = (function (_super) {\n        __extends$3(InvalidPipeArgumentError, _super);\n        function InvalidPipeArgumentError(type, value) {\n            _super.call(this, \"Invalid argument '\" + value + \"' for pipe '\" + stringify(type) + \"'\");\n        }\n        return InvalidPipeArgumentError;\n    }(BaseError));\n\n    var ObservableStrategy = (function () {\n        function ObservableStrategy() {\n        }\n        ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n            return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n        };\n        ObservableStrategy.prototype.dispose = function (subscription) { subscription.unsubscribe(); };\n        ObservableStrategy.prototype.onDestroy = function (subscription) { subscription.unsubscribe(); };\n        return ObservableStrategy;\n    }());\n    var PromiseStrategy = (function () {\n        function PromiseStrategy() {\n        }\n        PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n            return async.then(updateLatestValue, function (e) { throw e; });\n        };\n        PromiseStrategy.prototype.dispose = function (subscription) { };\n        PromiseStrategy.prototype.onDestroy = function (subscription) { };\n        return PromiseStrategy;\n    }());\n    var _promiseStrategy = new PromiseStrategy();\n    var _observableStrategy = new ObservableStrategy();\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Unwraps a value from an asynchronous primitive.\n     * @howToUse `observable_or_promise_expression | async`\n     * @description\n     * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n     * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n     * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n     * potential memory leaks.\n     *\n     *\n     * ## Examples\n     *\n     * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n     * promise.\n     *\n     * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n     *\n     * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n     * to the view. The Observable continuously updates the view with the current time.\n     *\n     * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n     *\n     * @stable\n     */\n    var AsyncPipe = (function () {\n        function AsyncPipe(_ref) {\n            this._ref = _ref;\n            this._latestValue = null;\n            this._latestReturnedValue = null;\n            this._subscription = null;\n            this._obj = null;\n            this._strategy = null;\n        }\n        AsyncPipe.prototype.ngOnDestroy = function () {\n            if (this._subscription) {\n                this._dispose();\n            }\n        };\n        AsyncPipe.prototype.transform = function (obj) {\n            if (!this._obj) {\n                if (obj) {\n                    this._subscribe(obj);\n                }\n                this._latestReturnedValue = this._latestValue;\n                return this._latestValue;\n            }\n            if (obj !== this._obj) {\n                this._dispose();\n                return this.transform(obj);\n            }\n            if (this._latestValue === this._latestReturnedValue) {\n                return this._latestReturnedValue;\n            }\n            this._latestReturnedValue = this._latestValue;\n            return _angular_core.WrappedValue.wrap(this._latestValue);\n        };\n        AsyncPipe.prototype._subscribe = function (obj) {\n            var _this = this;\n            this._obj = obj;\n            this._strategy = this._selectStrategy(obj);\n            this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n        };\n        AsyncPipe.prototype._selectStrategy = function (obj) {\n            if (isPromise(obj)) {\n                return _promiseStrategy;\n            }\n            if (obj.subscribe) {\n                return _observableStrategy;\n            }\n            throw new InvalidPipeArgumentError(AsyncPipe, obj);\n        };\n        AsyncPipe.prototype._dispose = function () {\n            this._strategy.dispose(this._subscription);\n            this._latestValue = null;\n            this._latestReturnedValue = null;\n            this._subscription = null;\n            this._obj = null;\n        };\n        AsyncPipe.prototype._updateLatestValue = function (async, value) {\n            if (async === this._obj) {\n                this._latestValue = value;\n                this._ref.markForCheck();\n            }\n        };\n        AsyncPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'async', pure: false },] },\n        ];\n        /** @nocollapse */\n        AsyncPipe.ctorParameters = [\n            { type: _angular_core.ChangeDetectorRef, },\n        ];\n        return AsyncPipe;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NumberFormatStyle;\n    (function (NumberFormatStyle) {\n        NumberFormatStyle[NumberFormatStyle[\"Decimal\"] = 0] = \"Decimal\";\n        NumberFormatStyle[NumberFormatStyle[\"Percent\"] = 1] = \"Percent\";\n        NumberFormatStyle[NumberFormatStyle[\"Currency\"] = 2] = \"Currency\";\n    })(NumberFormatStyle || (NumberFormatStyle = {}));\n    var NumberFormatter = (function () {\n        function NumberFormatter() {\n        }\n        NumberFormatter.format = function (num, locale, style, _a) {\n            var _b = _a === void 0 ? {} : _a, minimumIntegerDigits = _b.minimumIntegerDigits, minimumFractionDigits = _b.minimumFractionDigits, maximumFractionDigits = _b.maximumFractionDigits, currency = _b.currency, _c = _b.currencyAsSymbol, currencyAsSymbol = _c === void 0 ? false : _c;\n            var options = {\n                minimumIntegerDigits: minimumIntegerDigits,\n                minimumFractionDigits: minimumFractionDigits,\n                maximumFractionDigits: maximumFractionDigits,\n                style: NumberFormatStyle[style].toLowerCase()\n            };\n            if (style == NumberFormatStyle.Currency) {\n                options.currency = currency;\n                options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n            }\n            return new Intl.NumberFormat(locale, options).format(num);\n        };\n        return NumberFormatter;\n    }());\n    var DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n    var PATTERN_ALIASES = {\n        // Keys are quoted so they do not get renamed during closure compilation.\n        'yMMMdjms': datePartGetterFactory(combine([\n            digitCondition('year', 1),\n            nameCondition('month', 3),\n            digitCondition('day', 1),\n            digitCondition('hour', 1),\n            digitCondition('minute', 1),\n            digitCondition('second', 1),\n        ])),\n        'yMdjm': datePartGetterFactory(combine([\n            digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n            digitCondition('hour', 1), digitCondition('minute', 1)\n        ])),\n        'yMMMMEEEEd': datePartGetterFactory(combine([\n            digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n            digitCondition('day', 1)\n        ])),\n        'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n        'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n        'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n        'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n        'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n    };\n    var DATE_FORMATS = {\n        // Keys are quoted so they do not get renamed.\n        'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n        'yy': datePartGetterFactory(digitCondition('year', 2)),\n        'y': datePartGetterFactory(digitCondition('year', 1)),\n        'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n        'MMM': datePartGetterFactory(nameCondition('month', 3)),\n        'MM': datePartGetterFactory(digitCondition('month', 2)),\n        'M': datePartGetterFactory(digitCondition('month', 1)),\n        'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n        'L': datePartGetterFactory(nameCondition('month', 1)),\n        'dd': datePartGetterFactory(digitCondition('day', 2)),\n        'd': datePartGetterFactory(digitCondition('day', 1)),\n        'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n        'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n        'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n        'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n        'jj': datePartGetterFactory(digitCondition('hour', 2)),\n        'j': datePartGetterFactory(digitCondition('hour', 1)),\n        'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n        'm': datePartGetterFactory(digitCondition('minute', 1)),\n        'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n        's': datePartGetterFactory(digitCondition('second', 1)),\n        // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n        // we can be just safely rely on using `sss` since we currently don't support single or two digit\n        // fractions\n        'sss': datePartGetterFactory(digitCondition('second', 3)),\n        'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n        'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n        'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n        'E': datePartGetterFactory(nameCondition('weekday', 1)),\n        'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n        'Z': timeZoneGetter('short'),\n        'z': timeZoneGetter('long'),\n        'ww': datePartGetterFactory({}),\n        // first Thursday of the year. not support ?\n        'w': datePartGetterFactory({}),\n        // of the year not support ?\n        'G': datePartGetterFactory(nameCondition('era', 1)),\n        'GG': datePartGetterFactory(nameCondition('era', 2)),\n        'GGG': datePartGetterFactory(nameCondition('era', 3)),\n        'GGGG': datePartGetterFactory(nameCondition('era', 4))\n    };\n    function digitModifier(inner) {\n        return function (date, locale) {\n            var result = inner(date, locale);\n            return result.length == 1 ? '0' + result : result;\n        };\n    }\n    function hourClockExtractor(inner) {\n        return function (date, locale) { return inner(date, locale).split(' ')[1]; };\n    }\n    function hourExtractor(inner) {\n        return function (date, locale) { return inner(date, locale).split(' ')[0]; };\n    }\n    function intlDateFormat(date, locale, options) {\n        return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n    }\n    function timeZoneGetter(timezone) {\n        // To workaround `Intl` API restriction for single timezone let format with 24 hours\n        var options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n        return function (date, locale) {\n            var result = intlDateFormat(date, locale, options);\n            // Then extract first 3 letters that related to hours\n            return result ? result.substring(3) : '';\n        };\n    }\n    function hour12Modify(options, value) {\n        options.hour12 = value;\n        return options;\n    }\n    function digitCondition(prop, len) {\n        var result = {};\n        result[prop] = len === 2 ? '2-digit' : 'numeric';\n        return result;\n    }\n    function nameCondition(prop, len) {\n        var result = {};\n        if (len < 4) {\n            result[prop] = len > 1 ? 'short' : 'narrow';\n        }\n        else {\n            result[prop] = 'long';\n        }\n        return result;\n    }\n    function combine(options) {\n        return (_a = Object).assign.apply(_a, [{}].concat(options));\n        var _a;\n    }\n    function datePartGetterFactory(ret) {\n        return function (date, locale) { return intlDateFormat(date, locale, ret); };\n    }\n    var DATE_FORMATTER_CACHE = new Map();\n    function dateFormatter(format, date, locale) {\n        var fn = PATTERN_ALIASES[format];\n        if (fn)\n            return fn(date, locale);\n        var parts = DATE_FORMATTER_CACHE.get(format);\n        if (!parts) {\n            parts = [];\n            var match = void 0;\n            DATE_FORMATS_SPLIT.exec(format);\n            while (format) {\n                match = DATE_FORMATS_SPLIT.exec(format);\n                if (match) {\n                    parts = parts.concat(match.slice(1));\n                    format = parts.pop();\n                }\n                else {\n                    parts.push(format);\n                    format = null;\n                }\n            }\n            DATE_FORMATTER_CACHE.set(format, parts);\n        }\n        return parts.reduce(function (text, part) {\n            var fn = DATE_FORMATS[part];\n            return text + (fn ? fn(date, locale) : partToTime(part));\n        }, '');\n    }\n    function partToTime(part) {\n        return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n    }\n    var DateFormatter = (function () {\n        function DateFormatter() {\n        }\n        DateFormatter.format = function (date, locale, pattern) {\n            return dateFormatter(pattern, date, locale);\n        };\n        return DateFormatter;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Formats a date according to locale rules.\n     * @howToUse `date_expression | date[:format]`\n     * @description\n     *\n     * Where:\n     * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n     * (https://www.w3.org/TR/NOTE-datetime).\n     * - `format` indicates which date/time components to include. The format can be predifined as\n     *   shown below or custom as shown in the table.\n     *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n     *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n     *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n     *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n     *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n     *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n     *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n     *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n     *\n     *\n     *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n     *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n     *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n     *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n     *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n     *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n     *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n     *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n     *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n     *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n     *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n     *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n     *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n     *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n     *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n     *\n     * In javascript, only the components specified will be respected (not the ordering,\n     * punctuations, ...) and details of the formatting will be dependent on the locale.\n     *\n     * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n     *\n     * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n     * applied and the formatted text will have the same day, month and year of the expression.\n     *\n     * WARNINGS:\n     * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n     *   Instead users should treat the date as an immutable object and change the reference when the\n     *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n     *   which would be an expensive operation).\n     * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n     *   browsers.\n     *\n     * ### Examples\n     *\n     * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n     * in the _local_ time and locale is 'en-US':\n     *\n     * ```\n     *     {{ dateObj | date }}               // output is 'Jun 15, 2015'\n     *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n     *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n     *     {{ dateObj | date:'mmss' }}        // output is '43:11'\n     * ```\n     *\n     * {@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n     *\n     * @stable\n     */\n    var DatePipe = (function () {\n        function DatePipe(_locale) {\n            this._locale = _locale;\n        }\n        DatePipe.prototype.transform = function (value, pattern) {\n            if (pattern === void 0) { pattern = 'mediumDate'; }\n            var date;\n            if (isBlank$1(value))\n                return null;\n            if (typeof value === 'string') {\n                value = value.trim();\n            }\n            if (isDate(value)) {\n                date = value;\n            }\n            else if (NumberWrapper.isNumeric(value)) {\n                date = new Date(parseFloat(value));\n            }\n            else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n                /**\n                * For ISO Strings without time the day, month and year must be extracted from the ISO String\n                * before Date creation to avoid time offset and errors in the new Date.\n                * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n                * date, some browsers (e.g. IE 9) will throw an invalid Date error\n                * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n                * is applied\n                * Note: ISO months are 0 for January, 1 for February, ...\n                */\n                var _a = value.split('-').map(function (val) { return parseInt(val, 10); }), y = _a[0], m = _a[1], d = _a[2];\n                date = new Date(y, m - 1, d);\n            }\n            else {\n                date = new Date(value);\n            }\n            if (!isDate(date)) {\n                throw new InvalidPipeArgumentError(DatePipe, value);\n            }\n            return DateFormatter.format(date, this._locale, DatePipe._ALIASES[pattern] || pattern);\n        };\n        /** @internal */\n        DatePipe._ALIASES = {\n            'medium': 'yMMMdjms',\n            'short': 'yMdjm',\n            'fullDate': 'yMMMMEEEEd',\n            'longDate': 'yMMMMd',\n            'mediumDate': 'yMMMd',\n            'shortDate': 'yMd',\n            'mediumTime': 'jms',\n            'shortTime': 'jm'\n        };\n        DatePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'date', pure: true },] },\n        ];\n        /** @nocollapse */\n        DatePipe.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ];\n        return DatePipe;\n    }());\n    function isBlank$1(obj) {\n        return obj == null || obj === '';\n    }\n\n    var _INTERPOLATION_REGEXP = /#/g;\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Maps a value to a string that pluralizes the value according to locale rules.\n     * @howToUse `expression | i18nPlural:mapping`\n     * @description\n     *\n     *  Where:\n     *  - `expression` is a number.\n     *  - `mapping` is an object that mimics the ICU format, see\n     *    http://userguide.icu-project.org/formatparse/messages\n     *\n     *  ## Example\n     *\n     * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n     *\n     * @experimental\n     */\n    var I18nPluralPipe = (function () {\n        function I18nPluralPipe(_localization) {\n            this._localization = _localization;\n        }\n        I18nPluralPipe.prototype.transform = function (value, pluralMap) {\n            if (isBlank(value))\n                return '';\n            if (typeof pluralMap !== 'object' || pluralMap === null) {\n                throw new InvalidPipeArgumentError(I18nPluralPipe, pluralMap);\n            }\n            var key = getPluralCategory(value, Object.keys(pluralMap), this._localization);\n            return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n        };\n        I18nPluralPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'i18nPlural', pure: true },] },\n        ];\n        /** @nocollapse */\n        I18nPluralPipe.ctorParameters = [\n            { type: NgLocalization, },\n        ];\n        return I18nPluralPipe;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Generic selector that displays the string that matches the current value.\n     * @howToUse `expression | i18nSelect:mapping`\n     * @description\n     *\n     *  Where `mapping` is an object that indicates the text that should be displayed\n     *  for different values of the provided `expression`.\n     *  If none of the keys of the mapping match the value of the `expression`, then the content\n     *  of the `other` key is returned when present, otherwise an empty string is returned.\n     *\n     *  ## Example\n     *\n     * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n     *\n     *  @experimental\n     */\n    var I18nSelectPipe = (function () {\n        function I18nSelectPipe() {\n        }\n        I18nSelectPipe.prototype.transform = function (value, mapping) {\n            if (value == null)\n                return '';\n            if (typeof mapping !== 'object' || typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(I18nSelectPipe, mapping);\n            }\n            if (mapping.hasOwnProperty(value)) {\n                return mapping[value];\n            }\n            if (mapping.hasOwnProperty('other')) {\n                return mapping['other'];\n            }\n            return '';\n        };\n        I18nSelectPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'i18nSelect', pure: true },] },\n        ];\n        /** @nocollapse */\n        I18nSelectPipe.ctorParameters = [];\n        return I18nSelectPipe;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Converts value into JSON string.\n     * @howToUse `expression | json`\n     * @description\n     *\n     * Converts value into string using `JSON.stringify`. Useful for debugging.\n     *\n     * ### Example\n     * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n     *\n     * @stable\n     */\n    var JsonPipe = (function () {\n        function JsonPipe() {\n        }\n        JsonPipe.prototype.transform = function (value) { return JSON.stringify(value, null, 2); };\n        JsonPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'json', pure: false },] },\n        ];\n        /** @nocollapse */\n        JsonPipe.ctorParameters = [];\n        return JsonPipe;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Transforms string to lowercase.\n     * @howToUse `expression | lowercase`\n     * @description\n     *\n     * Converts value into a lowercase string using `String.prototype.toLowerCase()`.\n     *\n     * ### Example\n     *\n     * {@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n     *\n     * @stable\n     */\n    var LowerCasePipe = (function () {\n        function LowerCasePipe() {\n        }\n        LowerCasePipe.prototype.transform = function (value) {\n            if (isBlank(value))\n                return value;\n            if (typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(LowerCasePipe, value);\n            }\n            return value.toLowerCase();\n        };\n        LowerCasePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'lowercase' },] },\n        ];\n        /** @nocollapse */\n        LowerCasePipe.ctorParameters = [];\n        return LowerCasePipe;\n    }());\n\n    var _NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n    function formatNumber(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n        if (currency === void 0) { currency = null; }\n        if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n        if (isBlank(value))\n            return null;\n        // Convert strings to numbers\n        value = typeof value === 'string' && NumberWrapper.isNumeric(value) ? +value : value;\n        if (typeof value !== 'number') {\n            throw new InvalidPipeArgumentError(pipe, value);\n        }\n        var minInt;\n        var minFraction;\n        var maxFraction;\n        if (style !== NumberFormatStyle.Currency) {\n            // rely on Intl default for currency\n            minInt = 1;\n            minFraction = 0;\n            maxFraction = 3;\n        }\n        if (digits) {\n            var parts = digits.match(_NUMBER_FORMAT_REGEXP);\n            if (parts === null) {\n                throw new Error(digits + \" is not a valid digit info for number pipes\");\n            }\n            if (isPresent(parts[1])) {\n                minInt = NumberWrapper.parseIntAutoRadix(parts[1]);\n            }\n            if (isPresent(parts[3])) {\n                minFraction = NumberWrapper.parseIntAutoRadix(parts[3]);\n            }\n            if (isPresent(parts[5])) {\n                maxFraction = NumberWrapper.parseIntAutoRadix(parts[5]);\n            }\n        }\n        return NumberFormatter.format(value, locale, style, {\n            minimumIntegerDigits: minInt,\n            minimumFractionDigits: minFraction,\n            maximumFractionDigits: maxFraction,\n            currency: currency,\n            currencyAsSymbol: currencyAsSymbol,\n        });\n    }\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Formats a number according to locale rules.\n     * @howToUse `number_expression | number[:digitInfo]`\n     *\n     * Formats a number as text. Group sizing and separator and other locale-specific\n     * configurations are based on the active locale.\n     *\n     * where `expression` is a number:\n     *  - `digitInfo` is a `string` which has a following format: <br>\n     *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n     *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n     *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n     *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n     *\n     * For more information on the acceptable range for each of these numbers and other\n     * details see your native internationalization library.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n     *\n     * @stable\n     */\n    var DecimalPipe = (function () {\n        function DecimalPipe(_locale) {\n            this._locale = _locale;\n        }\n        DecimalPipe.prototype.transform = function (value, digits) {\n            if (digits === void 0) { digits = null; }\n            return formatNumber(DecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n        };\n        DecimalPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'number' },] },\n        ];\n        /** @nocollapse */\n        DecimalPipe.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ];\n        return DecimalPipe;\n    }());\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Formats a number as a percentage according to locale rules.\n     * @howToUse `number_expression | percent[:digitInfo]`\n     *\n     * @description\n     *\n     * Formats a number as percentage.\n     *\n     * - `digitInfo` See {@link DecimalPipe} for detailed description.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n     *\n     * @stable\n     */\n    var PercentPipe = (function () {\n        function PercentPipe(_locale) {\n            this._locale = _locale;\n        }\n        PercentPipe.prototype.transform = function (value, digits) {\n            if (digits === void 0) { digits = null; }\n            return formatNumber(PercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n        };\n        PercentPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'percent' },] },\n        ];\n        /** @nocollapse */\n        PercentPipe.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ];\n        return PercentPipe;\n    }());\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Formats a number as currency using locale rules.\n     * @howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`\n     * @description\n     *\n     * Use `currency` to format a number as currency.\n     *\n     * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n     *    as `USD` for the US dollar and `EUR` for the euro.\n     * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n     *   - `true`: use symbol (e.g. `$`).\n     *   - `false`(default): use code (e.g. `USD`).\n     * - `digitInfo` See {@link DecimalPipe} for detailed description.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n     *\n     * @stable\n     */\n    var CurrencyPipe = (function () {\n        function CurrencyPipe(_locale) {\n            this._locale = _locale;\n        }\n        CurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {\n            if (currencyCode === void 0) { currencyCode = 'USD'; }\n            if (symbolDisplay === void 0) { symbolDisplay = false; }\n            if (digits === void 0) { digits = null; }\n            return formatNumber(CurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n        };\n        CurrencyPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'currency' },] },\n        ];\n        /** @nocollapse */\n        CurrencyPipe.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ];\n        return CurrencyPipe;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Creates a new List or String containing a subset (slice) of the elements.\n     * @howToUse `array_or_string_expression | slice:start[:end]`\n     * @description\n     *\n     * Where the input expression is a `List` or `String`, and:\n     * - `start`: The starting index of the subset to return.\n     *   - **a positive integer**: return the item at `start` index and all items after\n     *     in the list or string expression.\n     *   - **a negative integer**: return the item at `start` index from the end and all items after\n     *     in the list or string expression.\n     *   - **if positive and greater than the size of the expression**: return an empty list or string.\n     *   - **if negative and greater than the size of the expression**: return entire list or string.\n     * - `end`: The ending index of the subset to return.\n     *   - **omitted**: return all items until the end.\n     *   - **if positive**: return all items before `end` index of the list or string.\n     *   - **if negative**: return all items before `end` index from the end of the list or string.\n     *\n     * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n     * and `String.prototype.slice()`.\n     *\n     * When operating on a [List], the returned list is always a copy even when all\n     * the elements are being returned.\n     *\n     * When operating on a blank value, the pipe returns the blank value.\n     *\n     * ## List Example\n     *\n     * This `ngFor` example:\n     *\n     * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n     *\n     * produces the following:\n     *\n     *     <li>b</li>\n     *     <li>c</li>\n     *\n     * ## String Examples\n     *\n     * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n     *\n     * @stable\n     */\n    var SlicePipe = (function () {\n        function SlicePipe() {\n        }\n        SlicePipe.prototype.transform = function (value, start, end) {\n            if (isBlank(value))\n                return value;\n            if (!this.supports(value)) {\n                throw new InvalidPipeArgumentError(SlicePipe, value);\n            }\n            return value.slice(start, end);\n        };\n        SlicePipe.prototype.supports = function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n        SlicePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'slice', pure: false },] },\n        ];\n        /** @nocollapse */\n        SlicePipe.ctorParameters = [];\n        return SlicePipe;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Transforms string to uppercase.\n     * @howToUse `expression | uppercase`\n     * @description\n     *\n     * Converts value into an uppercase string using `String.prototype.toUpperCase()`.\n     *\n     * ### Example\n     *\n     * {@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n     *\n     * @stable\n     */\n    var UpperCasePipe = (function () {\n        function UpperCasePipe() {\n        }\n        UpperCasePipe.prototype.transform = function (value) {\n            if (isBlank(value))\n                return value;\n            if (typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(UpperCasePipe, value);\n            }\n            return value.toUpperCase();\n        };\n        UpperCasePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'uppercase' },] },\n        ];\n        /** @nocollapse */\n        UpperCasePipe.ctorParameters = [];\n        return UpperCasePipe;\n    }());\n\n    /**\n     * A collection of Angular pipes that are likely to be used in each and every application.\n     */\n    var COMMON_PIPES = [\n        AsyncPipe,\n        UpperCasePipe,\n        LowerCasePipe,\n        JsonPipe,\n        SlicePipe,\n        DecimalPipe,\n        PercentPipe,\n        CurrencyPipe,\n        DatePipe,\n        I18nPluralPipe,\n        I18nSelectPipe,\n    ];\n\n    // Note: This does not contain the location providers,\n    // as they need some platform specific implementations to work.\n    /**\n     * The module that includes all the basic Angular directives like {@link NgIf}, {@link NgFor}, ...\n     *\n     * @stable\n     */\n    var CommonModule = (function () {\n        function CommonModule() {\n        }\n        CommonModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n                        exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n                        providers: [\n                            { provide: NgLocalization, useClass: NgLocaleLocalization },\n                        ],\n                    },] },\n        ];\n        /** @nocollapse */\n        CommonModule.ctorParameters = [];\n        return CommonModule;\n    }());\n\n    exports.NgLocalization = NgLocalization;\n    exports.CommonModule = CommonModule;\n    exports.NgClass = NgClass;\n    exports.NgFor = NgFor;\n    exports.NgIf = NgIf;\n    exports.NgPlural = NgPlural;\n    exports.NgPluralCase = NgPluralCase;\n    exports.NgStyle = NgStyle;\n    exports.NgSwitch = NgSwitch;\n    exports.NgSwitchCase = NgSwitchCase;\n    exports.NgSwitchDefault = NgSwitchDefault;\n    exports.NgTemplateOutlet = NgTemplateOutlet;\n    exports.AsyncPipe = AsyncPipe;\n    exports.DatePipe = DatePipe;\n    exports.I18nPluralPipe = I18nPluralPipe;\n    exports.I18nSelectPipe = I18nSelectPipe;\n    exports.JsonPipe = JsonPipe;\n    exports.LowerCasePipe = LowerCasePipe;\n    exports.CurrencyPipe = CurrencyPipe;\n    exports.DecimalPipe = DecimalPipe;\n    exports.PercentPipe = PercentPipe;\n    exports.SlicePipe = SlicePipe;\n    exports.UpperCasePipe = UpperCasePipe;\n    exports.PlatformLocation = PlatformLocation;\n    exports.LocationStrategy = LocationStrategy;\n    exports.APP_BASE_HREF = APP_BASE_HREF;\n    exports.HashLocationStrategy = HashLocationStrategy;\n    exports.PathLocationStrategy = PathLocationStrategy;\n    exports.Location = Location;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/common/bundles/common.umd.js\n ** module id = 44\n ** module chunks = 2\n **/","/**\n * @license Angular v2.2.4\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/common', '@angular/core'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.platformBrowser = global.ng.platformBrowser || {}),global.ng.common,global.ng.core));\n}(this, function (exports,_angular_common,_angular_core) { 'use strict';\n\n    var DebugDomRootRenderer = _angular_core.__core_private__.DebugDomRootRenderer;\n    var NoOpAnimationPlayer = _angular_core.__core_private__.NoOpAnimationPlayer;\n\n    var _NoOpAnimationDriver = (function () {\n        function _NoOpAnimationDriver() {\n        }\n        _NoOpAnimationDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            return new NoOpAnimationPlayer();\n        };\n        return _NoOpAnimationDriver;\n    }());\n    /**\n     * @experimental\n     */\n    var AnimationDriver = (function () {\n        function AnimationDriver() {\n        }\n        AnimationDriver.NOOP = new _NoOpAnimationDriver();\n        return AnimationDriver;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = self;\n        }\n        else {\n            globalScope = global;\n        }\n    }\n    else {\n        globalScope = window;\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var global$1 = globalScope;\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    global$1.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    function isPresent(obj) {\n        return obj != null;\n    }\n    function isBlank(obj) {\n        return obj == null;\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return token.overriddenName;\n        }\n        if (token.name) {\n            return token.name;\n        }\n        var res = token.toString();\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    function setValueOnPath(global, path, value) {\n        var parts = path.split('.');\n        var obj = global;\n        while (parts.length > 1) {\n            var name_1 = parts.shift();\n            if (obj.hasOwnProperty(name_1) && obj[name_1] != null) {\n                obj = obj[name_1];\n            }\n            else {\n                obj = obj[name_1] = {};\n            }\n        }\n        if (obj === undefined || obj === null) {\n            obj = {};\n        }\n        obj[parts.shift()] = value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _DOM = null;\n    function getDOM() {\n        return _DOM;\n    }\n    function setRootDomAdapter(adapter) {\n        if (!_DOM) {\n            _DOM = adapter;\n        }\n    }\n    /* tslint:disable:requireParameterType */\n    /**\n     * Provides DOM operations in an environment-agnostic way.\n     *\n     * @security Tread carefully! Interacting with the DOM directly is dangerous and\n     * can introduce XSS risks.\n     */\n    var DomAdapter = (function () {\n        function DomAdapter() {\n            this.resourceLoaderType = null;\n        }\n        Object.defineProperty(DomAdapter.prototype, \"attrToPropMap\", {\n            /**\n             * Maps attribute names to their corresponding property names for cases\n             * where attribute name doesn't match property name.\n             */\n            get: function () { return this._attrToPropMap; },\n            set: function (value) { this._attrToPropMap = value; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        ;\n        return DomAdapter;\n    }());\n\n    var WebAnimationsPlayer = (function () {\n        function WebAnimationsPlayer(element, keyframes, options, previousPlayers) {\n            var _this = this;\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            this.element = element;\n            this.keyframes = keyframes;\n            this.options = options;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._initialized = false;\n            this._finished = false;\n            this._started = false;\n            this._destroyed = false;\n            this.parentPlayer = null;\n            this._duration = options['duration'];\n            this.previousStyles = {};\n            previousPlayers.forEach(function (player) {\n                var styles = player._captureStyles();\n                Object.keys(styles).forEach(function (prop) { return _this.previousStyles[prop] = styles[prop]; });\n            });\n        }\n        WebAnimationsPlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        WebAnimationsPlayer.prototype.init = function () {\n            var _this = this;\n            if (this._initialized)\n                return;\n            this._initialized = true;\n            var keyframes = this.keyframes.map(function (styles) {\n                var formattedKeyframe = {};\n                Object.keys(styles).forEach(function (prop, index) {\n                    var value = styles[prop];\n                    if (value == _angular_core.AUTO_STYLE) {\n                        value = _computeStyle(_this.element, prop);\n                    }\n                    if (value != undefined) {\n                        formattedKeyframe[prop] = value;\n                    }\n                });\n                return formattedKeyframe;\n            });\n            var previousStyleProps = Object.keys(this.previousStyles);\n            if (previousStyleProps.length) {\n                var startingKeyframe_1 = findStartingKeyframe(keyframes);\n                previousStyleProps.forEach(function (prop) {\n                    if (isPresent(startingKeyframe_1[prop])) {\n                        startingKeyframe_1[prop] = _this.previousStyles[prop];\n                    }\n                });\n            }\n            this._player = this._triggerWebAnimation(this.element, keyframes, this.options);\n            this._finalKeyframe = _copyKeyframeStyles(keyframes[keyframes.length - 1]);\n            // this is required so that the player doesn't start to animate right away\n            this._resetDomPlayerState();\n            this._player.addEventListener('finish', function () { return _this._onFinish(); });\n        };\n        /** @internal */\n        WebAnimationsPlayer.prototype._triggerWebAnimation = function (element, keyframes, options) {\n            return element.animate(keyframes, options);\n        };\n        Object.defineProperty(WebAnimationsPlayer.prototype, \"domPlayer\", {\n            get: function () { return this._player; },\n            enumerable: true,\n            configurable: true\n        });\n        WebAnimationsPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        WebAnimationsPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        WebAnimationsPlayer.prototype.play = function () {\n            this.init();\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._player.play();\n        };\n        WebAnimationsPlayer.prototype.pause = function () {\n            this.init();\n            this._player.pause();\n        };\n        WebAnimationsPlayer.prototype.finish = function () {\n            this.init();\n            this._onFinish();\n            this._player.finish();\n        };\n        WebAnimationsPlayer.prototype.reset = function () {\n            this._resetDomPlayerState();\n            this._destroyed = false;\n            this._finished = false;\n            this._started = false;\n        };\n        WebAnimationsPlayer.prototype._resetDomPlayerState = function () { this._player.cancel(); };\n        WebAnimationsPlayer.prototype.restart = function () {\n            this.reset();\n            this.play();\n        };\n        WebAnimationsPlayer.prototype.hasStarted = function () { return this._started; };\n        WebAnimationsPlayer.prototype.destroy = function () {\n            if (!this._destroyed) {\n                this._resetDomPlayerState();\n                this._onFinish();\n                this._destroyed = true;\n            }\n        };\n        Object.defineProperty(WebAnimationsPlayer.prototype, \"totalTime\", {\n            get: function () { return this._duration; },\n            enumerable: true,\n            configurable: true\n        });\n        WebAnimationsPlayer.prototype.setPosition = function (p) { this._player.currentTime = p * this.totalTime; };\n        WebAnimationsPlayer.prototype.getPosition = function () { return this._player.currentTime / this.totalTime; };\n        WebAnimationsPlayer.prototype._captureStyles = function () {\n            var _this = this;\n            var styles = {};\n            if (this.hasStarted()) {\n                Object.keys(this._finalKeyframe).forEach(function (prop) {\n                    if (prop != 'offset') {\n                        styles[prop] =\n                            _this._finished ? _this._finalKeyframe[prop] : _computeStyle(_this.element, prop);\n                    }\n                });\n            }\n            return styles;\n        };\n        return WebAnimationsPlayer;\n    }());\n    function _computeStyle(element, prop) {\n        return getDOM().getComputedStyle(element)[prop];\n    }\n    function _copyKeyframeStyles(styles) {\n        var newStyles = {};\n        Object.keys(styles).forEach(function (prop) {\n            if (prop != 'offset') {\n                newStyles[prop] = styles[prop];\n            }\n        });\n        return newStyles;\n    }\n    function findStartingKeyframe(keyframes) {\n        var startingKeyframe = keyframes[0];\n        // it's important that we find the LAST keyframe\n        // to ensure that style overidding is final.\n        for (var i = 1; i < keyframes.length; i++) {\n            var kf = keyframes[i];\n            var offset = kf['offset'];\n            if (offset !== 0)\n                break;\n            startingKeyframe = kf;\n        }\n        return startingKeyframe;\n    }\n\n    var WebAnimationsDriver = (function () {\n        function WebAnimationsDriver() {\n        }\n        WebAnimationsDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            var formattedSteps = [];\n            var startingStyleLookup = {};\n            if (isPresent(startingStyles) && startingStyles.styles.length > 0) {\n                startingStyleLookup = _populateStyles(startingStyles, {});\n                startingStyleLookup['offset'] = 0;\n                formattedSteps.push(startingStyleLookup);\n            }\n            keyframes.forEach(function (keyframe) {\n                var data = _populateStyles(keyframe.styles, startingStyleLookup);\n                data['offset'] = keyframe.offset;\n                formattedSteps.push(data);\n            });\n            // this is a special case when only styles are applied as an\n            // animation. When this occurs we want to animate from start to\n            // end with the same values. Removing the offset and having only\n            // start/end values is suitable enough for the web-animations API\n            if (formattedSteps.length == 1) {\n                var start = formattedSteps[0];\n                start['offset'] = null;\n                formattedSteps = [start, start];\n            }\n            var playerOptions = {\n                'duration': duration,\n                'delay': delay,\n                'fill': 'both' // we use `both` because it allows for styling at 0% to work with `delay`\n            };\n            // we check for this to avoid having a null|undefined value be present\n            // for the easing (which results in an error for certain browsers #9752)\n            if (easing) {\n                playerOptions['easing'] = easing;\n            }\n            // there may be a chance a NoOp player is returned depending\n            // on when the previous animation was cancelled\n            previousPlayers = previousPlayers.filter(filterWebAnimationPlayerFn);\n            return new WebAnimationsPlayer(element, formattedSteps, playerOptions, previousPlayers);\n        };\n        return WebAnimationsDriver;\n    }());\n    function _populateStyles(styles, defaultStyles) {\n        var data = {};\n        styles.styles.forEach(function (entry) { Object.keys(entry).forEach(function (prop) { data[prop] = entry[prop]; }); });\n        Object.keys(defaultStyles).forEach(function (prop) {\n            if (!isPresent(data[prop])) {\n                data[prop] = defaultStyles[prop];\n            }\n        });\n        return data;\n    }\n    function filterWebAnimationPlayerFn(player) {\n        return player instanceof WebAnimationsPlayer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Provides DOM operations in any browser environment.\n     *\n     * @security Tread carefully! Interacting with the DOM directly is dangerous and\n     * can introduce XSS risks.\n     */\n    var GenericBrowserDomAdapter = (function (_super) {\n        __extends$1(GenericBrowserDomAdapter, _super);\n        function GenericBrowserDomAdapter() {\n            var _this = this;\n            _super.call(this);\n            this._animationPrefix = null;\n            this._transitionEnd = null;\n            try {\n                var element_1 = this.createElement('div', this.defaultDoc());\n                if (isPresent(this.getStyle(element_1, 'animationName'))) {\n                    this._animationPrefix = '';\n                }\n                else {\n                    var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n                    for (var i = 0; i < domPrefixes.length; i++) {\n                        if (isPresent(this.getStyle(element_1, domPrefixes[i] + 'AnimationName'))) {\n                            this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n                            break;\n                        }\n                    }\n                }\n                var transEndEventNames_1 = {\n                    WebkitTransition: 'webkitTransitionEnd',\n                    MozTransition: 'transitionend',\n                    OTransition: 'oTransitionEnd otransitionend',\n                    transition: 'transitionend'\n                };\n                Object.keys(transEndEventNames_1).forEach(function (key) {\n                    if (isPresent(_this.getStyle(element_1, key))) {\n                        _this._transitionEnd = transEndEventNames_1[key];\n                    }\n                });\n            }\n            catch (e) {\n                this._animationPrefix = null;\n                this._transitionEnd = null;\n            }\n        }\n        GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) { return el.getDistributedNodes(); };\n        GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {\n            el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n        };\n        GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () { return true; };\n        GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {\n            return typeof this.defaultDoc().body.createShadowRoot === 'function';\n        };\n        GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () { return this._animationPrefix ? this._animationPrefix : ''; };\n        GenericBrowserDomAdapter.prototype.getTransitionEnd = function () { return this._transitionEnd ? this._transitionEnd : ''; };\n        GenericBrowserDomAdapter.prototype.supportsAnimation = function () {\n            return isPresent(this._animationPrefix) && isPresent(this._transitionEnd);\n        };\n        return GenericBrowserDomAdapter;\n    }(DomAdapter));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var _attrToPropMap = {\n        'class': 'className',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    var DOM_KEY_LOCATION_NUMPAD = 3;\n    // Map to convert some key or keyIdentifier values to what will be returned by getEventKey\n    var _keyMap = {\n        // The following values are here for cross-browser compatibility and to match the W3C standard\n        // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n        '\\b': 'Backspace',\n        '\\t': 'Tab',\n        '\\x7F': 'Delete',\n        '\\x1B': 'Escape',\n        'Del': 'Delete',\n        'Esc': 'Escape',\n        'Left': 'ArrowLeft',\n        'Right': 'ArrowRight',\n        'Up': 'ArrowUp',\n        'Down': 'ArrowDown',\n        'Menu': 'ContextMenu',\n        'Scroll': 'ScrollLock',\n        'Win': 'OS'\n    };\n    // There is a bug in Chrome for numeric keypad keys:\n    // https://code.google.com/p/chromium/issues/detail?id=155654\n    // 1, 2, 3 ... are reported as A, B, C ...\n    var _chromeNumKeyPadMap = {\n        'A': '1',\n        'B': '2',\n        'C': '3',\n        'D': '4',\n        'E': '5',\n        'F': '6',\n        'G': '7',\n        'H': '8',\n        'I': '9',\n        'J': '*',\n        'K': '+',\n        'M': '-',\n        'N': '.',\n        'O': '/',\n        '\\x60': '0',\n        '\\x90': 'NumLock'\n    };\n    /**\n     * A `DomAdapter` powered by full browser DOM APIs.\n     *\n     * @security Tread carefully! Interacting with the DOM directly is dangerous and\n     * can introduce XSS risks.\n     */\n    /* tslint:disable:requireParameterType */\n    var BrowserDomAdapter = (function (_super) {\n        __extends(BrowserDomAdapter, _super);\n        function BrowserDomAdapter() {\n            _super.apply(this, arguments);\n        }\n        BrowserDomAdapter.prototype.parse = function (templateHtml) { throw new Error('parse not implemented'); };\n        BrowserDomAdapter.makeCurrent = function () { setRootDomAdapter(new BrowserDomAdapter()); };\n        BrowserDomAdapter.prototype.hasProperty = function (element, name) { return name in element; };\n        BrowserDomAdapter.prototype.setProperty = function (el, name, value) { el[name] = value; };\n        BrowserDomAdapter.prototype.getProperty = function (el, name) { return el[name]; };\n        BrowserDomAdapter.prototype.invoke = function (el, methodName, args) { (_a = el)[methodName].apply(_a, args); var _a; };\n        // TODO(tbosch): move this into a separate environment class once we have it\n        BrowserDomAdapter.prototype.logError = function (error) {\n            if (window.console) {\n                (window.console.error || window.console.log)(error);\n            }\n        };\n        BrowserDomAdapter.prototype.log = function (error) {\n            if (window.console) {\n                // tslint:disable-next-line:no-console\n                window.console.log && window.console.log(error);\n            }\n        };\n        BrowserDomAdapter.prototype.logGroup = function (error) {\n            if (window.console) {\n                window.console.group && window.console.group(error);\n                this.logError(error);\n            }\n        };\n        BrowserDomAdapter.prototype.logGroupEnd = function () {\n            if (window.console) {\n                window.console.groupEnd && window.console.groupEnd();\n            }\n        };\n        Object.defineProperty(BrowserDomAdapter.prototype, \"attrToPropMap\", {\n            get: function () { return _attrToPropMap; },\n            enumerable: true,\n            configurable: true\n        });\n        BrowserDomAdapter.prototype.query = function (selector) { return document.querySelector(selector); };\n        BrowserDomAdapter.prototype.querySelector = function (el, selector) {\n            return el.querySelector(selector);\n        };\n        BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) { return el.querySelectorAll(selector); };\n        BrowserDomAdapter.prototype.on = function (el, evt, listener) { el.addEventListener(evt, listener, false); };\n        BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {\n            el.addEventListener(evt, listener, false);\n            // Needed to follow Dart's subscription semantic, until fix of\n            // https://code.google.com/p/dart/issues/detail?id=17406\n            return function () { el.removeEventListener(evt, listener, false); };\n        };\n        BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) { el.dispatchEvent(evt); };\n        BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {\n            var evt = document.createEvent('MouseEvent');\n            evt.initEvent(eventType, true, true);\n            return evt;\n        };\n        BrowserDomAdapter.prototype.createEvent = function (eventType) {\n            var evt = document.createEvent('Event');\n            evt.initEvent(eventType, true, true);\n            return evt;\n        };\n        BrowserDomAdapter.prototype.preventDefault = function (evt) {\n            evt.preventDefault();\n            evt.returnValue = false;\n        };\n        BrowserDomAdapter.prototype.isPrevented = function (evt) {\n            return evt.defaultPrevented || isPresent(evt.returnValue) && !evt.returnValue;\n        };\n        BrowserDomAdapter.prototype.getInnerHTML = function (el) { return el.innerHTML; };\n        BrowserDomAdapter.prototype.getTemplateContent = function (el) {\n            return 'content' in el && el instanceof HTMLTemplateElement ? el.content : null;\n        };\n        BrowserDomAdapter.prototype.getOuterHTML = function (el) { return el.outerHTML; };\n        BrowserDomAdapter.prototype.nodeName = function (node) { return node.nodeName; };\n        BrowserDomAdapter.prototype.nodeValue = function (node) { return node.nodeValue; };\n        BrowserDomAdapter.prototype.type = function (node) { return node.type; };\n        BrowserDomAdapter.prototype.content = function (node) {\n            if (this.hasProperty(node, 'content')) {\n                return node.content;\n            }\n            else {\n                return node;\n            }\n        };\n        BrowserDomAdapter.prototype.firstChild = function (el) { return el.firstChild; };\n        BrowserDomAdapter.prototype.nextSibling = function (el) { return el.nextSibling; };\n        BrowserDomAdapter.prototype.parentElement = function (el) { return el.parentNode; };\n        BrowserDomAdapter.prototype.childNodes = function (el) { return el.childNodes; };\n        BrowserDomAdapter.prototype.childNodesAsList = function (el) {\n            var childNodes = el.childNodes;\n            var res = new Array(childNodes.length);\n            for (var i = 0; i < childNodes.length; i++) {\n                res[i] = childNodes[i];\n            }\n            return res;\n        };\n        BrowserDomAdapter.prototype.clearNodes = function (el) {\n            while (el.firstChild) {\n                el.removeChild(el.firstChild);\n            }\n        };\n        BrowserDomAdapter.prototype.appendChild = function (el, node) { el.appendChild(node); };\n        BrowserDomAdapter.prototype.removeChild = function (el, node) { el.removeChild(node); };\n        BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) { el.replaceChild(newChild, oldChild); };\n        BrowserDomAdapter.prototype.remove = function (node) {\n            if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n            return node;\n        };\n        BrowserDomAdapter.prototype.insertBefore = function (el, node) { el.parentNode.insertBefore(node, el); };\n        BrowserDomAdapter.prototype.insertAllBefore = function (el, nodes) {\n            nodes.forEach(function (n) { return el.parentNode.insertBefore(n, el); });\n        };\n        BrowserDomAdapter.prototype.insertAfter = function (el, node) { el.parentNode.insertBefore(node, el.nextSibling); };\n        BrowserDomAdapter.prototype.setInnerHTML = function (el, value) { el.innerHTML = value; };\n        BrowserDomAdapter.prototype.getText = function (el) { return el.textContent; };\n        BrowserDomAdapter.prototype.setText = function (el, value) { el.textContent = value; };\n        BrowserDomAdapter.prototype.getValue = function (el) { return el.value; };\n        BrowserDomAdapter.prototype.setValue = function (el, value) { el.value = value; };\n        BrowserDomAdapter.prototype.getChecked = function (el) { return el.checked; };\n        BrowserDomAdapter.prototype.setChecked = function (el, value) { el.checked = value; };\n        BrowserDomAdapter.prototype.createComment = function (text) { return document.createComment(text); };\n        BrowserDomAdapter.prototype.createTemplate = function (html) {\n            var t = document.createElement('template');\n            t.innerHTML = html;\n            return t;\n        };\n        BrowserDomAdapter.prototype.createElement = function (tagName, doc) {\n            if (doc === void 0) { doc = document; }\n            return doc.createElement(tagName);\n        };\n        BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {\n            if (doc === void 0) { doc = document; }\n            return doc.createElementNS(ns, tagName);\n        };\n        BrowserDomAdapter.prototype.createTextNode = function (text, doc) {\n            if (doc === void 0) { doc = document; }\n            return doc.createTextNode(text);\n        };\n        BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {\n            if (doc === void 0) { doc = document; }\n            var el = doc.createElement('SCRIPT');\n            el.setAttribute(attrName, attrValue);\n            return el;\n        };\n        BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {\n            if (doc === void 0) { doc = document; }\n            var style = doc.createElement('style');\n            this.appendChild(style, this.createTextNode(css));\n            return style;\n        };\n        BrowserDomAdapter.prototype.createShadowRoot = function (el) { return el.createShadowRoot(); };\n        BrowserDomAdapter.prototype.getShadowRoot = function (el) { return el.shadowRoot; };\n        BrowserDomAdapter.prototype.getHost = function (el) { return el.host; };\n        BrowserDomAdapter.prototype.clone = function (node) { return node.cloneNode(true); };\n        BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {\n            return element.getElementsByClassName(name);\n        };\n        BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {\n            return element.getElementsByTagName(name);\n        };\n        BrowserDomAdapter.prototype.classList = function (element) { return Array.prototype.slice.call(element.classList, 0); };\n        BrowserDomAdapter.prototype.addClass = function (element, className) { element.classList.add(className); };\n        BrowserDomAdapter.prototype.removeClass = function (element, className) { element.classList.remove(className); };\n        BrowserDomAdapter.prototype.hasClass = function (element, className) {\n            return element.classList.contains(className);\n        };\n        BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {\n            element.style[styleName] = styleValue;\n        };\n        BrowserDomAdapter.prototype.removeStyle = function (element, stylename) {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            element.style[stylename] = '';\n        };\n        BrowserDomAdapter.prototype.getStyle = function (element, stylename) { return element.style[stylename]; };\n        BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {\n            if (styleValue === void 0) { styleValue = null; }\n            var value = this.getStyle(element, styleName) || '';\n            return styleValue ? value == styleValue : value.length > 0;\n        };\n        BrowserDomAdapter.prototype.tagName = function (element) { return element.tagName; };\n        BrowserDomAdapter.prototype.attributeMap = function (element) {\n            var res = new Map();\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var attrib = elAttrs[i];\n                res.set(attrib.name, attrib.value);\n            }\n            return res;\n        };\n        BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) {\n            return element.hasAttribute(attribute);\n        };\n        BrowserDomAdapter.prototype.hasAttributeNS = function (element, ns, attribute) {\n            return element.hasAttributeNS(ns, attribute);\n        };\n        BrowserDomAdapter.prototype.getAttribute = function (element, attribute) {\n            return element.getAttribute(attribute);\n        };\n        BrowserDomAdapter.prototype.getAttributeNS = function (element, ns, name) {\n            return element.getAttributeNS(ns, name);\n        };\n        BrowserDomAdapter.prototype.setAttribute = function (element, name, value) { element.setAttribute(name, value); };\n        BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {\n            element.setAttributeNS(ns, name, value);\n        };\n        BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) { element.removeAttribute(attribute); };\n        BrowserDomAdapter.prototype.removeAttributeNS = function (element, ns, name) {\n            element.removeAttributeNS(ns, name);\n        };\n        BrowserDomAdapter.prototype.templateAwareRoot = function (el) { return this.isTemplateElement(el) ? this.content(el) : el; };\n        BrowserDomAdapter.prototype.createHtmlDocument = function () {\n            return document.implementation.createHTMLDocument('fakeTitle');\n        };\n        BrowserDomAdapter.prototype.defaultDoc = function () { return document; };\n        BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {\n            try {\n                return el.getBoundingClientRect();\n            }\n            catch (e) {\n                return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\n            }\n        };\n        BrowserDomAdapter.prototype.getTitle = function () { return document.title; };\n        BrowserDomAdapter.prototype.setTitle = function (newTitle) { document.title = newTitle || ''; };\n        BrowserDomAdapter.prototype.elementMatches = function (n, selector) {\n            if (n instanceof HTMLElement) {\n                return n.matches && n.matches(selector) ||\n                    n.msMatchesSelector && n.msMatchesSelector(selector) ||\n                    n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n            }\n            return false;\n        };\n        BrowserDomAdapter.prototype.isTemplateElement = function (el) {\n            return el instanceof HTMLElement && el.nodeName == 'TEMPLATE';\n        };\n        BrowserDomAdapter.prototype.isTextNode = function (node) { return node.nodeType === Node.TEXT_NODE; };\n        BrowserDomAdapter.prototype.isCommentNode = function (node) { return node.nodeType === Node.COMMENT_NODE; };\n        BrowserDomAdapter.prototype.isElementNode = function (node) { return node.nodeType === Node.ELEMENT_NODE; };\n        BrowserDomAdapter.prototype.hasShadowRoot = function (node) {\n            return isPresent(node.shadowRoot) && node instanceof HTMLElement;\n        };\n        BrowserDomAdapter.prototype.isShadowRoot = function (node) { return node instanceof DocumentFragment; };\n        BrowserDomAdapter.prototype.importIntoDoc = function (node) { return document.importNode(this.templateAwareRoot(node), true); };\n        BrowserDomAdapter.prototype.adoptNode = function (node) { return document.adoptNode(node); };\n        BrowserDomAdapter.prototype.getHref = function (el) { return el.href; };\n        BrowserDomAdapter.prototype.getEventKey = function (event) {\n            var key = event.key;\n            if (isBlank(key)) {\n                key = event.keyIdentifier;\n                // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n                // Safari cf\n                // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n                if (isBlank(key)) {\n                    return 'Unidentified';\n                }\n                if (key.startsWith('U+')) {\n                    key = String.fromCharCode(parseInt(key.substring(2), 16));\n                    if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                        // There is a bug in Chrome for numeric keypad keys:\n                        // https://code.google.com/p/chromium/issues/detail?id=155654\n                        // 1, 2, 3 ... are reported as A, B, C ...\n                        key = _chromeNumKeyPadMap[key];\n                    }\n                }\n            }\n            return _keyMap[key] || key;\n        };\n        BrowserDomAdapter.prototype.getGlobalEventTarget = function (target) {\n            if (target === 'window') {\n                return window;\n            }\n            if (target === 'document') {\n                return document;\n            }\n            if (target === 'body') {\n                return document.body;\n            }\n        };\n        BrowserDomAdapter.prototype.getHistory = function () { return window.history; };\n        BrowserDomAdapter.prototype.getLocation = function () { return window.location; };\n        BrowserDomAdapter.prototype.getBaseHref = function () {\n            var href = getBaseElementHref();\n            return isBlank(href) ? null : relativePath(href);\n        };\n        BrowserDomAdapter.prototype.resetBaseElement = function () { baseElement = null; };\n        BrowserDomAdapter.prototype.getUserAgent = function () { return window.navigator.userAgent; };\n        BrowserDomAdapter.prototype.setData = function (element, name, value) {\n            this.setAttribute(element, 'data-' + name, value);\n        };\n        BrowserDomAdapter.prototype.getData = function (element, name) {\n            return this.getAttribute(element, 'data-' + name);\n        };\n        BrowserDomAdapter.prototype.getComputedStyle = function (element) { return getComputedStyle(element); };\n        // TODO(tbosch): move this into a separate environment class once we have it\n        BrowserDomAdapter.prototype.setGlobalVar = function (path, value) { setValueOnPath(global$1, path, value); };\n        BrowserDomAdapter.prototype.supportsWebAnimation = function () {\n            return typeof Element.prototype['animate'] === 'function';\n        };\n        BrowserDomAdapter.prototype.performanceNow = function () {\n            // performance.now() is not available in all browsers, see\n            // http://caniuse.com/#search=performance.now\n            return window.performance && window.performance.now ? window.performance.now() :\n                new Date().getTime();\n        };\n        BrowserDomAdapter.prototype.supportsCookies = function () { return true; };\n        BrowserDomAdapter.prototype.getCookie = function (name) { return parseCookieValue(document.cookie, name); };\n        BrowserDomAdapter.prototype.setCookie = function (name, value) {\n            // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n            // not clear other cookies.\n            document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n        };\n        return BrowserDomAdapter;\n    }(GenericBrowserDomAdapter));\n    var baseElement = null;\n    function getBaseElementHref() {\n        if (!baseElement) {\n            baseElement = document.querySelector('base');\n            if (!baseElement) {\n                return null;\n            }\n        }\n        return baseElement.getAttribute('href');\n    }\n    // based on urlUtils.js in AngularJS 1\n    var urlParsingNode;\n    function relativePath(url) {\n        if (!urlParsingNode) {\n            urlParsingNode = document.createElement('a');\n        }\n        urlParsingNode.setAttribute('href', url);\n        return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname;\n    }\n    function parseCookieValue(cookieStr, name) {\n        name = encodeURIComponent(name);\n        for (var _i = 0, _a = cookieStr.split(';'); _i < _a.length; _i++) {\n            var cookie = _a[_i];\n            var eqIndex = cookie.indexOf('=');\n            var _b = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], cookieName = _b[0], cookieValue = _b[1];\n            if (cookieName.trim() === name) {\n                return decodeURIComponent(cookieValue);\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function supportsState() {\n        return !!window.history.pushState;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n     * This class should not be used directly by an application developer. Instead, use\n     * {@link Location}.\n     */\n    var BrowserPlatformLocation = (function (_super) {\n        __extends$2(BrowserPlatformLocation, _super);\n        function BrowserPlatformLocation() {\n            _super.call(this);\n            this._init();\n        }\n        // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\n        /** @internal */\n        BrowserPlatformLocation.prototype._init = function () {\n            this._location = getDOM().getLocation();\n            this._history = getDOM().getHistory();\n        };\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"location\", {\n            get: function () { return this._location; },\n            enumerable: true,\n            configurable: true\n        });\n        BrowserPlatformLocation.prototype.getBaseHrefFromDOM = function () { return getDOM().getBaseHref(); };\n        BrowserPlatformLocation.prototype.onPopState = function (fn) {\n            getDOM().getGlobalEventTarget('window').addEventListener('popstate', fn, false);\n        };\n        BrowserPlatformLocation.prototype.onHashChange = function (fn) {\n            getDOM().getGlobalEventTarget('window').addEventListener('hashchange', fn, false);\n        };\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"pathname\", {\n            get: function () { return this._location.pathname; },\n            set: function (newPath) { this._location.pathname = newPath; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"search\", {\n            get: function () { return this._location.search; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"hash\", {\n            get: function () { return this._location.hash; },\n            enumerable: true,\n            configurable: true\n        });\n        BrowserPlatformLocation.prototype.pushState = function (state, title, url) {\n            if (supportsState()) {\n                this._history.pushState(state, title, url);\n            }\n            else {\n                this._location.hash = url;\n            }\n        };\n        BrowserPlatformLocation.prototype.replaceState = function (state, title, url) {\n            if (supportsState()) {\n                this._history.replaceState(state, title, url);\n            }\n            else {\n                this._location.hash = url;\n            }\n        };\n        BrowserPlatformLocation.prototype.forward = function () { this._history.forward(); };\n        BrowserPlatformLocation.prototype.back = function () { this._history.back(); };\n        BrowserPlatformLocation.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        BrowserPlatformLocation.ctorParameters = [];\n        return BrowserPlatformLocation;\n    }(_angular_common.PlatformLocation));\n\n    var BrowserGetTestability = (function () {\n        function BrowserGetTestability() {\n        }\n        BrowserGetTestability.init = function () { _angular_core.setTestabilityGetter(new BrowserGetTestability()); };\n        BrowserGetTestability.prototype.addToWindow = function (registry) {\n            global$1.getAngularTestability = function (elem, findInAncestors) {\n                if (findInAncestors === void 0) { findInAncestors = true; }\n                var testability = registry.findTestabilityInTree(elem, findInAncestors);\n                if (testability == null) {\n                    throw new Error('Could not find testability for element.');\n                }\n                return testability;\n            };\n            global$1.getAllAngularTestabilities = function () { return registry.getAllTestabilities(); };\n            global$1.getAllAngularRootElements = function () { return registry.getAllRootElements(); };\n            var whenAllStable = function (callback /** TODO #9100 */) {\n                var testabilities = global$1.getAllAngularTestabilities();\n                var count = testabilities.length;\n                var didWork = false;\n                var decrement = function (didWork_ /** TODO #9100 */) {\n                    didWork = didWork || didWork_;\n                    count--;\n                    if (count == 0) {\n                        callback(didWork);\n                    }\n                };\n                testabilities.forEach(function (testability /** TODO #9100 */) {\n                    testability.whenStable(decrement);\n                });\n            };\n            if (!global$1['frameworkStabilizers']) {\n                global$1['frameworkStabilizers'] = [];\n            }\n            global$1['frameworkStabilizers'].push(whenAllStable);\n        };\n        BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            if (elem == null) {\n                return null;\n            }\n            var t = registry.getTestability(elem);\n            if (isPresent(t)) {\n                return t;\n            }\n            else if (!findInAncestors) {\n                return null;\n            }\n            if (getDOM().isShadowRoot(elem)) {\n                return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n            }\n            return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n        };\n        return BrowserGetTestability;\n    }());\n\n    /**\n     * A service that can be used to get and set the title of a current HTML document.\n     *\n     * Since an Angular 2 application can't be bootstrapped on the entire HTML document (`<html>` tag)\n     * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n     * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n     * title value.\n     *\n     * @experimental\n     */\n    var Title = (function () {\n        function Title() {\n        }\n        /**\n         * Get the title of the current HTML document.\n         * @returns {string}\n         */\n        Title.prototype.getTitle = function () { return getDOM().getTitle(); };\n        /**\n         * Set the title of the current HTML document.\n         * @param newTitle\n         */\n        Title.prototype.setTitle = function (newTitle) { getDOM().setTitle(newTitle); };\n        return Title;\n    }());\n\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        StringMapWrapper.merge = function (m1, m2) {\n            var m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        StringMapWrapper.equals = function (m1, m2) {\n            var k1 = Object.keys(m1);\n            var k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var i = 0; i < k1.length; i++) {\n                var key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n\n    /**\n     * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n     *\n     * Note: Document might not be available in the Application Context when Application and Rendering\n     * Contexts are not the same (e.g. when running the application into a Web Worker).\n     *\n     * @stable\n     */\n    var DOCUMENT = new _angular_core.OpaqueToken('DocumentToken');\n\n    /**\n     * @stable\n     */\n    var EVENT_MANAGER_PLUGINS = new _angular_core.OpaqueToken('EventManagerPlugins');\n    /**\n     * @stable\n     */\n    var EventManager = (function () {\n        function EventManager(plugins, _zone) {\n            var _this = this;\n            this._zone = _zone;\n            this._eventNameToPlugin = new Map();\n            plugins.forEach(function (p) { return p.manager = _this; });\n            this._plugins = plugins.slice().reverse();\n        }\n        EventManager.prototype.addEventListener = function (element, eventName, handler) {\n            var plugin = this._findPluginFor(eventName);\n            return plugin.addEventListener(element, eventName, handler);\n        };\n        EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {\n            var plugin = this._findPluginFor(eventName);\n            return plugin.addGlobalEventListener(target, eventName, handler);\n        };\n        EventManager.prototype.getZone = function () { return this._zone; };\n        /** @internal */\n        EventManager.prototype._findPluginFor = function (eventName) {\n            var plugin = this._eventNameToPlugin.get(eventName);\n            if (plugin) {\n                return plugin;\n            }\n            var plugins = this._plugins;\n            for (var i = 0; i < plugins.length; i++) {\n                var plugin_1 = plugins[i];\n                if (plugin_1.supports(eventName)) {\n                    this._eventNameToPlugin.set(eventName, plugin_1);\n                    return plugin_1;\n                }\n            }\n            throw new Error(\"No event manager plugin found for event \" + eventName);\n        };\n        EventManager.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        EventManager.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Inject, args: [EVENT_MANAGER_PLUGINS,] },] },\n            { type: _angular_core.NgZone, },\n        ];\n        return EventManager;\n    }());\n    var EventManagerPlugin = (function () {\n        function EventManagerPlugin() {\n        }\n        EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {\n            var target = getDOM().getGlobalEventTarget(element);\n            if (!target) {\n                throw new Error(\"Unsupported event target \" + target + \" for event \" + eventName);\n            }\n            return this.addEventListener(target, eventName, handler);\n        };\n        ;\n        return EventManagerPlugin;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var SharedStylesHost = (function () {\n        function SharedStylesHost() {\n            /** @internal */\n            this._styles = [];\n            /** @internal */\n            this._stylesSet = new Set();\n        }\n        SharedStylesHost.prototype.addStyles = function (styles) {\n            var _this = this;\n            var additions = [];\n            styles.forEach(function (style) {\n                if (!_this._stylesSet.has(style)) {\n                    _this._stylesSet.add(style);\n                    _this._styles.push(style);\n                    additions.push(style);\n                }\n            });\n            this.onStylesAdded(additions);\n        };\n        SharedStylesHost.prototype.onStylesAdded = function (additions) { };\n        SharedStylesHost.prototype.getAllStyles = function () { return this._styles; };\n        SharedStylesHost.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        SharedStylesHost.ctorParameters = [];\n        return SharedStylesHost;\n    }());\n    var DomSharedStylesHost = (function (_super) {\n        __extends$4(DomSharedStylesHost, _super);\n        function DomSharedStylesHost(doc) {\n            _super.call(this);\n            this._hostNodes = new Set();\n            this._hostNodes.add(doc.head);\n        }\n        /** @internal */\n        DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {\n            for (var i = 0; i < styles.length; i++) {\n                var styleEl = document.createElement('style');\n                styleEl.textContent = styles[i];\n                host.appendChild(styleEl);\n            }\n        };\n        DomSharedStylesHost.prototype.addHost = function (hostNode) {\n            this._addStylesToHost(this._styles, hostNode);\n            this._hostNodes.add(hostNode);\n        };\n        DomSharedStylesHost.prototype.removeHost = function (hostNode) { this._hostNodes.delete(hostNode); };\n        DomSharedStylesHost.prototype.onStylesAdded = function (additions) {\n            var _this = this;\n            this._hostNodes.forEach(function (hostNode) { _this._addStylesToHost(additions, hostNode); });\n        };\n        DomSharedStylesHost.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        DomSharedStylesHost.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [DOCUMENT,] },] },\n        ];\n        return DomSharedStylesHost;\n    }(SharedStylesHost));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var NAMESPACE_URIS = {\n        'xlink': 'http://www.w3.org/1999/xlink',\n        'svg': 'http://www.w3.org/2000/svg',\n        'xhtml': 'http://www.w3.org/1999/xhtml'\n    };\n    var TEMPLATE_COMMENT_TEXT = 'template bindings={}';\n    var TEMPLATE_BINDINGS_EXP = /^template bindings=(.*)$/;\n    var DomRootRenderer = (function () {\n        function DomRootRenderer(document, eventManager, sharedStylesHost, animationDriver, appId) {\n            this.document = document;\n            this.eventManager = eventManager;\n            this.sharedStylesHost = sharedStylesHost;\n            this.animationDriver = animationDriver;\n            this.appId = appId;\n            this.registeredComponents = new Map();\n        }\n        DomRootRenderer.prototype.renderComponent = function (componentProto) {\n            var renderer = this.registeredComponents.get(componentProto.id);\n            if (!renderer) {\n                renderer = new DomRenderer(this, componentProto, this.animationDriver, this.appId + \"-\" + componentProto.id);\n                this.registeredComponents.set(componentProto.id, renderer);\n            }\n            return renderer;\n        };\n        return DomRootRenderer;\n    }());\n    var DomRootRenderer_ = (function (_super) {\n        __extends$3(DomRootRenderer_, _super);\n        function DomRootRenderer_(_document, _eventManager, sharedStylesHost, animationDriver, appId) {\n            _super.call(this, _document, _eventManager, sharedStylesHost, animationDriver, appId);\n        }\n        DomRootRenderer_.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        DomRootRenderer_.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [DOCUMENT,] },] },\n            { type: EventManager, },\n            { type: DomSharedStylesHost, },\n            { type: AnimationDriver, },\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.APP_ID,] },] },\n        ];\n        return DomRootRenderer_;\n    }(DomRootRenderer));\n    var DIRECT_DOM_RENDERER = {\n        remove: function (node) {\n            if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n        },\n        appendChild: function (node, parent) { parent.appendChild(node); },\n        insertBefore: function (node, refNode) { refNode.parentNode.insertBefore(node, refNode); },\n        nextSibling: function (node) { return node.nextSibling; },\n        parentElement: function (node) { return node.parentNode; }\n    };\n    var DomRenderer = (function () {\n        function DomRenderer(_rootRenderer, componentProto, _animationDriver, styleShimId) {\n            this._rootRenderer = _rootRenderer;\n            this.componentProto = componentProto;\n            this._animationDriver = _animationDriver;\n            this.directRenderer = DIRECT_DOM_RENDERER;\n            this._styles = flattenStyles(styleShimId, componentProto.styles, []);\n            if (componentProto.encapsulation !== _angular_core.ViewEncapsulation.Native) {\n                this._rootRenderer.sharedStylesHost.addStyles(this._styles);\n            }\n            if (this.componentProto.encapsulation === _angular_core.ViewEncapsulation.Emulated) {\n                this._contentAttr = shimContentAttribute(styleShimId);\n                this._hostAttr = shimHostAttribute(styleShimId);\n            }\n            else {\n                this._contentAttr = null;\n                this._hostAttr = null;\n            }\n        }\n        DomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n            var el;\n            if (typeof selectorOrNode === 'string') {\n                el = this._rootRenderer.document.querySelector(selectorOrNode);\n                if (!el) {\n                    throw new Error(\"The selector \\\"\" + selectorOrNode + \"\\\" did not match any elements\");\n                }\n            }\n            else {\n                el = selectorOrNode;\n            }\n            while (el.firstChild) {\n                el.removeChild(el.firstChild);\n            }\n            return el;\n        };\n        DomRenderer.prototype.createElement = function (parent, name, debugInfo) {\n            var el;\n            if (isNamespaced(name)) {\n                var nsAndName = splitNamespace(name);\n                el = document.createElementNS((NAMESPACE_URIS)[nsAndName[0]], nsAndName[1]);\n            }\n            else {\n                el = document.createElement(name);\n            }\n            if (this._contentAttr) {\n                el.setAttribute(this._contentAttr, '');\n            }\n            if (parent) {\n                parent.appendChild(el);\n            }\n            return el;\n        };\n        DomRenderer.prototype.createViewRoot = function (hostElement) {\n            var nodesParent;\n            if (this.componentProto.encapsulation === _angular_core.ViewEncapsulation.Native) {\n                nodesParent = hostElement.createShadowRoot();\n                this._rootRenderer.sharedStylesHost.addHost(nodesParent);\n                for (var i = 0; i < this._styles.length; i++) {\n                    var styleEl = document.createElement('style');\n                    styleEl.textContent = this._styles[i];\n                    nodesParent.appendChild(styleEl);\n                }\n            }\n            else {\n                if (this._hostAttr) {\n                    hostElement.setAttribute(this._hostAttr, '');\n                }\n                nodesParent = hostElement;\n            }\n            return nodesParent;\n        };\n        DomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n            var comment = document.createComment(TEMPLATE_COMMENT_TEXT);\n            if (parentElement) {\n                parentElement.appendChild(comment);\n            }\n            return comment;\n        };\n        DomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n            var node = document.createTextNode(value);\n            if (parentElement) {\n                parentElement.appendChild(node);\n            }\n            return node;\n        };\n        DomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n            if (!parentElement)\n                return;\n            appendNodes(parentElement, nodes);\n        };\n        DomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) { moveNodesAfterSibling(node, viewRootNodes); };\n        DomRenderer.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n            }\n        };\n        DomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n            if (this.componentProto.encapsulation === _angular_core.ViewEncapsulation.Native && hostElement) {\n                this._rootRenderer.sharedStylesHost.removeHost(hostElement.shadowRoot);\n            }\n        };\n        DomRenderer.prototype.listen = function (renderElement, name, callback) {\n            return this._rootRenderer.eventManager.addEventListener(renderElement, name, decoratePreventDefault(callback));\n        };\n        DomRenderer.prototype.listenGlobal = function (target, name, callback) {\n            return this._rootRenderer.eventManager.addGlobalEventListener(target, name, decoratePreventDefault(callback));\n        };\n        DomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            renderElement[propertyName] = propertyValue;\n        };\n        DomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n            var attrNs;\n            var attrNameWithoutNs = attributeName;\n            if (isNamespaced(attributeName)) {\n                var nsAndName = splitNamespace(attributeName);\n                attrNameWithoutNs = nsAndName[1];\n                attributeName = nsAndName[0] + ':' + nsAndName[1];\n                attrNs = NAMESPACE_URIS[nsAndName[0]];\n            }\n            if (isPresent(attributeValue)) {\n                if (attrNs) {\n                    renderElement.setAttributeNS(attrNs, attributeName, attributeValue);\n                }\n                else {\n                    renderElement.setAttribute(attributeName, attributeValue);\n                }\n            }\n            else {\n                if (isPresent(attrNs)) {\n                    renderElement.removeAttributeNS(attrNs, attrNameWithoutNs);\n                }\n                else {\n                    renderElement.removeAttribute(attributeName);\n                }\n            }\n        };\n        DomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n            if (renderElement.nodeType === Node.COMMENT_NODE) {\n                var existingBindings = renderElement.nodeValue.replace(/\\n/g, '').match(TEMPLATE_BINDINGS_EXP);\n                var parsedBindings = JSON.parse(existingBindings[1]);\n                parsedBindings[propertyName] = propertyValue;\n                renderElement.nodeValue =\n                    TEMPLATE_COMMENT_TEXT.replace('{}', JSON.stringify(parsedBindings, null, 2));\n            }\n            else {\n                this.setElementAttribute(renderElement, propertyName, propertyValue);\n            }\n        };\n        DomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                renderElement.classList.add(className);\n            }\n            else {\n                renderElement.classList.remove(className);\n            }\n        };\n        DomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (isPresent(styleValue)) {\n                renderElement.style[styleName] = stringify(styleValue);\n            }\n            else {\n                // IE requires '' instead of null\n                // see https://github.com/angular/angular/issues/7916\n                renderElement.style[styleName] = '';\n            }\n        };\n        DomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        DomRenderer.prototype.setText = function (renderNode, text) { renderNode.nodeValue = text; };\n        DomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            return this._animationDriver.animate(element, startingStyles, keyframes, duration, delay, easing, previousPlayers);\n        };\n        return DomRenderer;\n    }());\n    function moveNodesAfterSibling(sibling, nodes) {\n        var parent = sibling.parentNode;\n        if (nodes.length > 0 && parent) {\n            var nextSibling = sibling.nextSibling;\n            if (nextSibling) {\n                for (var i = 0; i < nodes.length; i++) {\n                    parent.insertBefore(nodes[i], nextSibling);\n                }\n            }\n            else {\n                for (var i = 0; i < nodes.length; i++) {\n                    parent.appendChild(nodes[i]);\n                }\n            }\n        }\n    }\n    function appendNodes(parent, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            parent.appendChild(nodes[i]);\n        }\n    }\n    function decoratePreventDefault(eventHandler) {\n        return function (event) {\n            var allowDefaultBehavior = eventHandler(event);\n            if (allowDefaultBehavior === false) {\n                // TODO(tbosch): move preventDefault into event plugins...\n                event.preventDefault();\n                event.returnValue = false;\n            }\n        };\n    }\n    var COMPONENT_REGEX = /%COMP%/g;\n    var COMPONENT_VARIABLE = '%COMP%';\n    var HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\n    var CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n    function shimContentAttribute(componentShortId) {\n        return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n    }\n    function shimHostAttribute(componentShortId) {\n        return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n    }\n    function flattenStyles(compId, styles, target) {\n        for (var i = 0; i < styles.length; i++) {\n            var style = styles[i];\n            if (Array.isArray(style)) {\n                flattenStyles(compId, style, target);\n            }\n            else {\n                style = style.replace(COMPONENT_REGEX, compId);\n                target.push(style);\n            }\n        }\n        return target;\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function isNamespaced(name) {\n        return name[0] === ':';\n    }\n    function splitNamespace(name) {\n        var match = name.match(NS_PREFIX_RE);\n        return [match[1], match[2]];\n    }\n\n    var CORE_TOKENS = {\n        'ApplicationRef': _angular_core.ApplicationRef,\n        'NgZone': _angular_core.NgZone\n    };\n    var INSPECT_GLOBAL_NAME = 'ng.probe';\n    var CORE_TOKENS_GLOBAL_NAME = 'ng.coreTokens';\n    /**\n     * Returns a {@link DebugElement} for the given native DOM element, or\n     * null if the given native element does not have an Angular view associated\n     * with it.\n     */\n    function inspectNativeElement(element /** TODO #9100 */) {\n        return _angular_core.getDebugNode(element);\n    }\n    /**\n     * @experimental\n     */\n    var NgProbeToken = (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    function _createConditionalRootRenderer(rootRenderer /** TODO #9100 */, extraTokens) {\n        if (_angular_core.isDevMode()) {\n            return _createRootRenderer(rootRenderer, extraTokens);\n        }\n        return rootRenderer;\n    }\n    function _createRootRenderer(rootRenderer /** TODO #9100 */, extraTokens) {\n        getDOM().setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n        getDOM().setGlobalVar(CORE_TOKENS_GLOBAL_NAME, StringMapWrapper.merge(CORE_TOKENS, _ngProbeTokensToMap(extraTokens || [])));\n        return new DebugDomRootRenderer(rootRenderer);\n    }\n    function _ngProbeTokensToMap(tokens) {\n        return tokens.reduce(function (prev, t) { return (prev[t.name] = t.token, prev); }, {});\n    }\n    /**\n     * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n     */\n    var ELEMENT_PROBE_PROVIDERS = [{\n            provide: _angular_core.RootRenderer,\n            useFactory: _createConditionalRootRenderer,\n            deps: [DomRootRenderer, [NgProbeToken, new _angular_core.Optional()]]\n        }];\n    var ELEMENT_PROBE_PROVIDERS_PROD_MODE = [{\n            provide: _angular_core.RootRenderer,\n            useFactory: _createRootRenderer,\n            deps: [DomRootRenderer, [NgProbeToken, new _angular_core.Optional()]]\n        }];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var DomEventsPlugin = (function (_super) {\n        __extends$5(DomEventsPlugin, _super);\n        function DomEventsPlugin() {\n            _super.apply(this, arguments);\n        }\n        // This plugin should come last in the list of plugins, because it accepts all\n        // events.\n        DomEventsPlugin.prototype.supports = function (eventName) { return true; };\n        DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n            element.addEventListener(eventName, handler, false);\n            return function () { return element.removeEventListener(eventName, handler, false); };\n        };\n        DomEventsPlugin.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        DomEventsPlugin.ctorParameters = [];\n        return DomEventsPlugin;\n    }(EventManagerPlugin));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var EVENT_NAMES = {\n        // pan\n        'pan': true,\n        'panstart': true,\n        'panmove': true,\n        'panend': true,\n        'pancancel': true,\n        'panleft': true,\n        'panright': true,\n        'panup': true,\n        'pandown': true,\n        // pinch\n        'pinch': true,\n        'pinchstart': true,\n        'pinchmove': true,\n        'pinchend': true,\n        'pinchcancel': true,\n        'pinchin': true,\n        'pinchout': true,\n        // press\n        'press': true,\n        'pressup': true,\n        // rotate\n        'rotate': true,\n        'rotatestart': true,\n        'rotatemove': true,\n        'rotateend': true,\n        'rotatecancel': true,\n        // swipe\n        'swipe': true,\n        'swipeleft': true,\n        'swiperight': true,\n        'swipeup': true,\n        'swipedown': true,\n        // tap\n        'tap': true,\n    };\n    /**\n     * A DI token that you can use to provide{@link HammerGestureConfig} to Angular. Use it to configure\n     * Hammer gestures.\n     *\n     * @experimental\n     */\n    var HAMMER_GESTURE_CONFIG = new _angular_core.OpaqueToken('HammerGestureConfig');\n    /**\n     * @experimental\n     */\n    var HammerGestureConfig = (function () {\n        function HammerGestureConfig() {\n            this.events = [];\n            this.overrides = {};\n        }\n        HammerGestureConfig.prototype.buildHammer = function (element) {\n            var mc = new Hammer(element);\n            mc.get('pinch').set({ enable: true });\n            mc.get('rotate').set({ enable: true });\n            for (var eventName in this.overrides) {\n                mc.get(eventName).set(this.overrides[eventName]);\n            }\n            return mc;\n        };\n        HammerGestureConfig.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        HammerGestureConfig.ctorParameters = [];\n        return HammerGestureConfig;\n    }());\n    var HammerGesturesPlugin = (function (_super) {\n        __extends$6(HammerGesturesPlugin, _super);\n        function HammerGesturesPlugin(_config) {\n            _super.call(this);\n            this._config = _config;\n        }\n        HammerGesturesPlugin.prototype.supports = function (eventName) {\n            if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n                return false;\n            }\n            if (!window.Hammer) {\n                throw new Error(\"Hammer.js is not loaded, can not bind \" + eventName + \" event\");\n            }\n            return true;\n        };\n        HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {\n            var _this = this;\n            var zone = this.manager.getZone();\n            eventName = eventName.toLowerCase();\n            return zone.runOutsideAngular(function () {\n                // Creating the manager bind events, must be done outside of angular\n                var mc = _this._config.buildHammer(element);\n                var callback = function (eventObj) {\n                    zone.runGuarded(function () { handler(eventObj); });\n                };\n                mc.on(eventName, callback);\n                return function () { return mc.off(eventName, callback); };\n            });\n        };\n        HammerGesturesPlugin.prototype.isCustomEvent = function (eventName) { return this._config.events.indexOf(eventName) > -1; };\n        HammerGesturesPlugin.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        HammerGesturesPlugin.ctorParameters = [\n            { type: HammerGestureConfig, decorators: [{ type: _angular_core.Inject, args: [HAMMER_GESTURE_CONFIG,] },] },\n        ];\n        return HammerGesturesPlugin;\n    }(EventManagerPlugin));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n    var MODIFIER_KEY_GETTERS = {\n        'alt': function (event) { return event.altKey; },\n        'control': function (event) { return event.ctrlKey; },\n        'meta': function (event) { return event.metaKey; },\n        'shift': function (event) { return event.shiftKey; }\n    };\n    /**\n     * @experimental\n     */\n    var KeyEventsPlugin = (function (_super) {\n        __extends$7(KeyEventsPlugin, _super);\n        function KeyEventsPlugin() {\n            _super.call(this);\n        }\n        KeyEventsPlugin.prototype.supports = function (eventName) { return KeyEventsPlugin.parseEventName(eventName) != null; };\n        KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n            var parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n            var outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n            return this.manager.getZone().runOutsideAngular(function () {\n                return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n            });\n        };\n        KeyEventsPlugin.parseEventName = function (eventName) {\n            var parts = eventName.toLowerCase().split('.');\n            var domEventName = parts.shift();\n            if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n                return null;\n            }\n            var key = KeyEventsPlugin._normalizeKey(parts.pop());\n            var fullKey = '';\n            MODIFIER_KEYS.forEach(function (modifierName) {\n                var index = parts.indexOf(modifierName);\n                if (index > -1) {\n                    parts.splice(index, 1);\n                    fullKey += modifierName + '.';\n                }\n            });\n            fullKey += key;\n            if (parts.length != 0 || key.length === 0) {\n                // returning null instead of throwing to let another plugin process the event\n                return null;\n            }\n            var result = {};\n            result['domEventName'] = domEventName;\n            result['fullKey'] = fullKey;\n            return result;\n        };\n        KeyEventsPlugin.getEventFullKey = function (event) {\n            var fullKey = '';\n            var key = getDOM().getEventKey(event);\n            key = key.toLowerCase();\n            if (key === ' ') {\n                key = 'space'; // for readability\n            }\n            else if (key === '.') {\n                key = 'dot'; // because '.' is used as a separator in event names\n            }\n            MODIFIER_KEYS.forEach(function (modifierName) {\n                if (modifierName != key) {\n                    var modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                    if (modifierGetter(event)) {\n                        fullKey += modifierName + '.';\n                    }\n                }\n            });\n            fullKey += key;\n            return fullKey;\n        };\n        KeyEventsPlugin.eventCallback = function (fullKey, handler, zone) {\n            return function (event /** TODO #9100 */) {\n                if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n                    zone.runGuarded(function () { return handler(event); });\n                }\n            };\n        };\n        /** @internal */\n        KeyEventsPlugin._normalizeKey = function (keyName) {\n            // TODO: switch to a Map if the mapping grows too much\n            switch (keyName) {\n                case 'esc':\n                    return 'escape';\n                default:\n                    return keyName;\n            }\n        };\n        KeyEventsPlugin.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        KeyEventsPlugin.ctorParameters = [];\n        return KeyEventsPlugin;\n    }(EventManagerPlugin));\n\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (_angular_core.isDevMode()) {\n            getDOM().log(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /** A <body> element that can be safely used to parse untrusted HTML. Lazily initialized below. */\n    var inertElement = null;\n    /** Lazily initialized to make sure the DOM adapter gets set before use. */\n    var DOM = null;\n    /** Returns an HTML element that is guaranteed to not execute code when creating elements in it. */\n    function getInertElement() {\n        if (inertElement)\n            return inertElement;\n        DOM = getDOM();\n        // Prefer using <template> element if supported.\n        var templateEl = DOM.createElement('template');\n        if ('content' in templateEl)\n            return templateEl;\n        var doc = DOM.createHtmlDocument();\n        inertElement = DOM.querySelector(doc, 'body');\n        if (inertElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so we\n            // need to create one.\n            var html = DOM.createElement('html', doc);\n            inertElement = DOM.createElement('body', doc);\n            DOM.appendChild(html, inertElement);\n            DOM.appendChild(doc, html);\n        }\n        return inertElement;\n    }\n    function tagSet(tags) {\n        var res = {};\n        for (var _i = 0, _a = tags.split(','); _i < _a.length; _i++) {\n            var t = _a[_i];\n            res[t] = true;\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i - 0] = arguments[_i];\n        }\n        var res = {};\n        for (var _a = 0, sets_1 = sets; _a < sets_1.length; _a++) {\n            var s = sets_1[_a];\n            for (var v in s) {\n                if (s.hasOwnProperty(v))\n                    res[v] = true;\n            }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently conciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (DOM.isElementNode(current)) {\n                    this.startElement(current);\n                }\n                else if (DOM.isTextNode(current)) {\n                    this.chars(DOM.nodeValue(current));\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (DOM.firstChild(current)) {\n                    current = DOM.firstChild(current);\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (DOM.isElementNode(current)) {\n                        this.endElement(current);\n                    }\n                    if (DOM.nextSibling(current)) {\n                        current = DOM.nextSibling(current);\n                        break;\n                    }\n                    current = DOM.parentElement(current);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var _this = this;\n            var tagName = DOM.nodeName(element).toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            DOM.attributeMap(element).forEach(function (value, attrName) {\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    _this.sanitizedSomething = true;\n                    return;\n                }\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                _this.buf.push(' ');\n                _this.buf.push(attrName);\n                _this.buf.push('=\"');\n                _this.buf.push(encodeEntities(value));\n                _this.buf.push('\"');\n            });\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = DOM.nodeName(current).toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars /** TODO #9100 */) { this.buf.push(encodeEntities(chars)); };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     * @returns {string} escaped text\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     */\n    function stripCustomNsAttrs(el) {\n        DOM.attributeMap(el).forEach(function (_, attrName) {\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                DOM.removeAttribute(el, attrName);\n            }\n        });\n        for (var _i = 0, _a = DOM.childNodesAsList(el); _i < _a.length; _i++) {\n            var n = _a[_i];\n            if (DOM.isElementNode(n))\n                stripCustomNsAttrs(n);\n        }\n    }\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function sanitizeHtml(unsafeHtmlInput) {\n        try {\n            var containerEl = getInertElement();\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                DOM.setInnerHTML(containerEl, unsafeHtml);\n                if (DOM.defaultDoc().documentMode) {\n                    // strip custom-namespaced attributes on IE<=11\n                    stripCustomNsAttrs(containerEl);\n                }\n                parsedHtml = DOM.getInnerHTML(containerEl);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(DOM.getTemplateContent(containerEl) || containerEl);\n            // Clear out the body element.\n            var parent_1 = DOM.getTemplateContent(containerEl) || containerEl;\n            for (var _i = 0, _a = DOM.childNodesAsList(parent_1); _i < _a.length; _i++) {\n                var child = _a[_i];\n                DOM.removeChild(parent_1, child);\n            }\n            if (_angular_core.isDevMode() && sanitizer.sanitizedSomething) {\n                DOM.log('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        catch (e) {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            inertElement = null;\n            throw e;\n        }\n    }\n\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var FN_ARGS = '\\\\([-0-9.%, a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \")\" + FN_ARGS + \")$\", 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (_angular_core.isDevMode()) {\n            getDOM().log(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n     * values to be safe to use in the different DOM contexts.\n     *\n     * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n     * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n     * the website.\n     *\n     * In specific situations, it might be necessary to disable sanitization, for example if the\n     * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n     * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n     * methods, and then binding to that value from the template.\n     *\n     * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n     * Cross Site Scripting (XSS) security bug!\n     *\n     * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n     * close as possible to the source of the value, to make it easy to verify no security bug is\n     * created by its use.\n     *\n     * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n     * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n     * code. The sanitizer leaves safe values intact.\n     *\n     * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n     * sanitization for the value passed in. Carefully check and audit all values and code paths going\n     * into this call. Make sure any user data is appropriately escaped for this security context.\n     * For more detail, see the [Security Guide](http://g.co/ng/security).\n     *\n     * @stable\n     */\n    var DomSanitizer = (function () {\n        function DomSanitizer() {\n        }\n        return DomSanitizer;\n    }());\n    var DomSanitizerImpl = (function (_super) {\n        __extends$8(DomSanitizerImpl, _super);\n        function DomSanitizerImpl() {\n            _super.apply(this, arguments);\n        }\n        DomSanitizerImpl.prototype.sanitize = function (ctx, value) {\n            if (value == null)\n                return null;\n            switch (ctx) {\n                case _angular_core.SecurityContext.NONE:\n                    return value;\n                case _angular_core.SecurityContext.HTML:\n                    if (value instanceof SafeHtmlImpl)\n                        return value.changingThisBreaksApplicationSecurity;\n                    this.checkNotSafeValue(value, 'HTML');\n                    return sanitizeHtml(String(value));\n                case _angular_core.SecurityContext.STYLE:\n                    if (value instanceof SafeStyleImpl)\n                        return value.changingThisBreaksApplicationSecurity;\n                    this.checkNotSafeValue(value, 'Style');\n                    return sanitizeStyle(value);\n                case _angular_core.SecurityContext.SCRIPT:\n                    if (value instanceof SafeScriptImpl)\n                        return value.changingThisBreaksApplicationSecurity;\n                    this.checkNotSafeValue(value, 'Script');\n                    throw new Error('unsafe value used in a script context');\n                case _angular_core.SecurityContext.URL:\n                    if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n                        // Allow resource URLs in URL contexts, they are strictly more trusted.\n                        return value.changingThisBreaksApplicationSecurity;\n                    }\n                    this.checkNotSafeValue(value, 'URL');\n                    return sanitizeUrl(String(value));\n                case _angular_core.SecurityContext.RESOURCE_URL:\n                    if (value instanceof SafeResourceUrlImpl) {\n                        return value.changingThisBreaksApplicationSecurity;\n                    }\n                    this.checkNotSafeValue(value, 'ResourceURL');\n                    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n                default:\n                    throw new Error(\"Unexpected SecurityContext \" + ctx + \" (see http://g.co/ng/security#xss)\");\n            }\n        };\n        DomSanitizerImpl.prototype.checkNotSafeValue = function (value, expectedType) {\n            if (value instanceof SafeValueImpl) {\n                throw new Error((\"Required a safe \" + expectedType + \", got a \" + value.getTypeName() + \" \") +\n                    \"(see http://g.co/ng/security#xss)\");\n            }\n        };\n        DomSanitizerImpl.prototype.bypassSecurityTrustHtml = function (value) { return new SafeHtmlImpl(value); };\n        DomSanitizerImpl.prototype.bypassSecurityTrustStyle = function (value) { return new SafeStyleImpl(value); };\n        DomSanitizerImpl.prototype.bypassSecurityTrustScript = function (value) { return new SafeScriptImpl(value); };\n        DomSanitizerImpl.prototype.bypassSecurityTrustUrl = function (value) { return new SafeUrlImpl(value); };\n        DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl = function (value) {\n            return new SafeResourceUrlImpl(value);\n        };\n        DomSanitizerImpl.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        DomSanitizerImpl.ctorParameters = [];\n        return DomSanitizerImpl;\n    }(DomSanitizer));\n    var SafeValueImpl = (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n            // empty\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return (\"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity) +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = (function (_super) {\n        __extends$8(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            _super.apply(this, arguments);\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return 'HTML'; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = (function (_super) {\n        __extends$8(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            _super.apply(this, arguments);\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return 'Style'; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = (function (_super) {\n        __extends$8(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            _super.apply(this, arguments);\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return 'Script'; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = (function (_super) {\n        __extends$8(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            _super.apply(this, arguments);\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return 'URL'; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = (function (_super) {\n        __extends$8(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            _super.apply(this, arguments);\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return 'ResourceURL'; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n\n    var INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n        { provide: _angular_core.PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n        { provide: _angular_common.PlatformLocation, useClass: BrowserPlatformLocation }\n    ];\n    /**\n     * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n     * Attacker-controlled data introduced by an unsanitized provider could expose your\n     * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n     * @experimental\n     */\n    var BROWSER_SANITIZATION_PROVIDERS = [\n        { provide: _angular_core.Sanitizer, useExisting: DomSanitizer },\n        { provide: DomSanitizer, useClass: DomSanitizerImpl },\n    ];\n    /**\n     * @stable\n     */\n    var platformBrowser = _angular_core.createPlatformFactory(_angular_core.platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n    function initDomAdapter() {\n        BrowserDomAdapter.makeCurrent();\n        BrowserGetTestability.init();\n    }\n    function errorHandler() {\n        return new _angular_core.ErrorHandler();\n    }\n    function _document() {\n        return getDOM().defaultDoc();\n    }\n    function _resolveDefaultAnimationDriver() {\n        if (getDOM().supportsWebAnimation()) {\n            return new WebAnimationsDriver();\n        }\n        return AnimationDriver.NOOP;\n    }\n    /**\n     * The ng module for the browser.\n     *\n     * @stable\n     */\n    var BrowserModule = (function () {\n        function BrowserModule(parentModule) {\n            if (parentModule) {\n                throw new Error(\"BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\");\n            }\n        }\n        BrowserModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        providers: [\n                            BROWSER_SANITIZATION_PROVIDERS, { provide: _angular_core.ErrorHandler, useFactory: errorHandler, deps: [] },\n                            { provide: DOCUMENT, useFactory: _document, deps: [] },\n                            { provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true },\n                            { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true },\n                            { provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true },\n                            { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig },\n                            { provide: DomRootRenderer, useClass: DomRootRenderer_ },\n                            { provide: _angular_core.RootRenderer, useExisting: DomRootRenderer },\n                            { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n                            { provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver }, DomSharedStylesHost,\n                            _angular_core.Testability, EventManager, ELEMENT_PROBE_PROVIDERS, Title\n                        ],\n                        exports: [_angular_common.CommonModule, _angular_core.ApplicationModule]\n                    },] },\n        ];\n        /** @nocollapse */\n        BrowserModule.ctorParameters = [\n            { type: BrowserModule, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.SkipSelf },] },\n        ];\n        return BrowserModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * JS version of browser APIs. This library can only run in the browser.\n     */\n    var win = typeof window !== 'undefined' && window || {};\n\n    var ChangeDetectionPerfRecord = (function () {\n        function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n            this.msPerTick = msPerTick;\n            this.numTicks = numTicks;\n        }\n        return ChangeDetectionPerfRecord;\n    }());\n    /**\n     * Entry point for all Angular debug tools. This object corresponds to the `ng`\n     * global variable accessible in the dev console.\n     */\n    var AngularTools = (function () {\n        function AngularTools(ref) {\n            this.profiler = new AngularProfiler(ref);\n        }\n        return AngularTools;\n    }());\n    /**\n     * Entry point for all Angular profiling-related debug tools. This object\n     * corresponds to the `ng.profiler` in the dev console.\n     */\n    var AngularProfiler = (function () {\n        function AngularProfiler(ref) {\n            this.appRef = ref.injector.get(_angular_core.ApplicationRef);\n        }\n        // tslint:disable:no-console\n        /**\n         * Exercises change detection in a loop and then prints the average amount of\n         * time in milliseconds how long a single round of change detection takes for\n         * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n         * of 500 milliseconds.\n         *\n         * Optionally, a user may pass a `config` parameter containing a map of\n         * options. Supported options are:\n         *\n         * `record` (boolean) - causes the profiler to record a CPU profile while\n         * it exercises the change detector. Example:\n         *\n         * ```\n         * ng.profiler.timeChangeDetection({record: true})\n         * ```\n         */\n        AngularProfiler.prototype.timeChangeDetection = function (config) {\n            var record = config && config['record'];\n            var profileName = 'Change Detection';\n            // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n            var isProfilerAvailable = isPresent(win.console.profile);\n            if (record && isProfilerAvailable) {\n                win.console.profile(profileName);\n            }\n            var start = getDOM().performanceNow();\n            var numTicks = 0;\n            while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n                this.appRef.tick();\n                numTicks++;\n            }\n            var end = getDOM().performanceNow();\n            if (record && isProfilerAvailable) {\n                // need to cast to <any> because type checker thinks there's no argument\n                // while in fact there is:\n                //\n                // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd\n                win.console.profileEnd(profileName);\n            }\n            var msPerTick = (end - start) / numTicks;\n            win.console.log(\"ran \" + numTicks + \" change detection cycles\");\n            win.console.log(msPerTick.toFixed(2) + \" ms per check\");\n            return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n        };\n        return AngularProfiler;\n    }());\n\n    var context = global$1;\n    /**\n     * Enabled Angular 2 debug tools that are accessible via your browser's\n     * developer console.\n     *\n     * Usage:\n     *\n     * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n     * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n     * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n     *    then hit Enter.\n     *\n     * @experimental All debugging apis are currently experimental.\n     */\n    function enableDebugTools(ref) {\n        Object.assign(context.ng, new AngularTools(ref));\n        return ref;\n    }\n    /**\n     * Disables Angular 2 tools.\n     *\n     * @experimental All debugging apis are currently experimental.\n     */\n    function disableDebugTools() {\n        if (context.ng) {\n            delete context.ng.profiler;\n        }\n    }\n\n    /**\n     * Predicates for use with {@link DebugElement}'s query functions.\n     *\n     * @experimental All debugging apis are currently experimental.\n     */\n    var By = (function () {\n        function By() {\n        }\n        /**\n         * Match all elements.\n         *\n         * ## Example\n         *\n         * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n         */\n        By.all = function () { return function (debugElement) { return true; }; };\n        /**\n         * Match elements by the given CSS selector.\n         *\n         * ## Example\n         *\n         * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n         */\n        By.css = function (selector) {\n            return function (debugElement) {\n                return isPresent(debugElement.nativeElement) ?\n                    getDOM().elementMatches(debugElement.nativeElement, selector) :\n                    false;\n            };\n        };\n        /**\n         * Match elements that have the given directive present.\n         *\n         * ## Example\n         *\n         * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n         */\n        By.directive = function (type) {\n            return function (debugElement) { return debugElement.providerTokens.indexOf(type) !== -1; };\n        };\n        return By;\n    }());\n\n    var __platform_browser_private__ = {\n        BrowserPlatformLocation: BrowserPlatformLocation,\n        DomAdapter: DomAdapter,\n        BrowserDomAdapter: BrowserDomAdapter,\n        BrowserGetTestability: BrowserGetTestability,\n        getDOM: getDOM,\n        setRootDomAdapter: setRootDomAdapter,\n        DomRootRenderer_: DomRootRenderer_,\n        DomRootRenderer: DomRootRenderer,\n        NAMESPACE_URIS: NAMESPACE_URIS,\n        shimContentAttribute: shimContentAttribute,\n        shimHostAttribute: shimHostAttribute,\n        flattenStyles: flattenStyles,\n        splitNamespace: splitNamespace,\n        isNamespaced: isNamespaced,\n        DomSharedStylesHost: DomSharedStylesHost,\n        SharedStylesHost: SharedStylesHost,\n        ELEMENT_PROBE_PROVIDERS: ELEMENT_PROBE_PROVIDERS,\n        DomEventsPlugin: DomEventsPlugin,\n        KeyEventsPlugin: KeyEventsPlugin,\n        HammerGesturesPlugin: HammerGesturesPlugin,\n        initDomAdapter: initDomAdapter,\n        INTERNAL_BROWSER_PLATFORM_PROVIDERS: INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n        BROWSER_SANITIZATION_PROVIDERS: BROWSER_SANITIZATION_PROVIDERS,\n        WebAnimationsDriver: WebAnimationsDriver\n    };\n\n    exports.BrowserModule = BrowserModule;\n    exports.platformBrowser = platformBrowser;\n    exports.Title = Title;\n    exports.disableDebugTools = disableDebugTools;\n    exports.enableDebugTools = enableDebugTools;\n    exports.AnimationDriver = AnimationDriver;\n    exports.By = By;\n    exports.NgProbeToken = NgProbeToken;\n    exports.DOCUMENT = DOCUMENT;\n    exports.EVENT_MANAGER_PLUGINS = EVENT_MANAGER_PLUGINS;\n    exports.EventManager = EventManager;\n    exports.HAMMER_GESTURE_CONFIG = HAMMER_GESTURE_CONFIG;\n    exports.HammerGestureConfig = HammerGestureConfig;\n    exports.DomSanitizer = DomSanitizer;\n    exports.__platform_browser_private__ = __platform_browser_private__;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/platform-browser/bundles/platform-browser.umd.js\n ** module id = 45\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/Subject.js\n ** module id = 46\n ** module chunks = 2\n **/","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this._subscriptions = null;\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                (errors = errors || []).push(errorObject_1.errorObject.e);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(err.errors);\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var sub = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                sub = new Subscription(teardown);\n            case 'object':\n                if (sub.closed || typeof sub.unsubscribe !== 'function') {\n                    break;\n                }\n                else if (this.closed) {\n                    sub.unsubscribe();\n                }\n                else {\n                    (this._subscriptions || (this._subscriptions = [])).push(sub);\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        return sub;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        // HACK: This might be redundant because of the logic in `add()`\n        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {\n            return;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\n//# sourceMappingURL=Subscription.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/Subscription.js\n ** module id = 58\n ** module chunks = 2\n **/","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.$$observable = getSymbolObservable(root_1.root);\n//# sourceMappingURL=observable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/symbol/observable.js\n ** module id = 60\n ** module chunks = 2\n **/","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n//# sourceMappingURL=rxSubscriber.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/symbol/rxSubscriber.js\n ** module id = 61\n ** module chunks = 2\n **/","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/isArray.js\n ** module id = 63\n ** module chunks = 2\n **/","/**\n * vis.js\n * https://github.com/almende/vis\n *\n * A dynamic, browser-based visualization library.\n *\n * @version 4.17.0\n * @date    2016-11-05\n *\n * @license\n * Copyright (C) 2011-2016 Almende B.V, http://almende.com\n *\n * Vis.js is dual licensed under both\n *\n * * The Apache 2.0 License\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * and\n *\n * * The MIT License\n *   http://opensource.org/licenses/MIT\n *\n * Vis.js may be distributed under either license.\n */\n\n\"use strict\";\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vis\"] = factory();\n\telse\n\t\troot[\"vis\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var util = __webpack_require__(1);\n\n  // Graph3d\n  util.extend(exports, __webpack_require__(7));\n\n  // Timeline & Graph2d\n  util.extend(exports, __webpack_require__(26));\n\n  // Network\n  util.extend(exports, __webpack_require__(62));\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  // utility functions\n\n  // first check if moment.js is already loaded in the browser window, if so,\n  // use this instance. Else, load via commonjs.\n\n\n  var moment = __webpack_require__(2);\n  var uuid = __webpack_require__(6);\n\n  /**\n   * Test whether given object is a number\n   * @param {*} object\n   * @return {Boolean} isNumber\n   */\n  exports.isNumber = function (object) {\n    return object instanceof Number || typeof object == 'number';\n  };\n\n  /**\n   * Remove everything in the DOM object\n   * @param DOMobject\n   */\n  exports.recursiveDOMDelete = function (DOMobject) {\n    if (DOMobject) {\n      while (DOMobject.hasChildNodes() === true) {\n        exports.recursiveDOMDelete(DOMobject.firstChild);\n        DOMobject.removeChild(DOMobject.firstChild);\n      }\n    }\n  };\n\n  /**\n   * this function gives you a range between 0 and 1 based on the min and max values in the set, the total sum of all values and the current value.\n   *\n   * @param min\n   * @param max\n   * @param total\n   * @param value\n   * @returns {number}\n   */\n  exports.giveRange = function (min, max, total, value) {\n    if (max == min) {\n      return 0.5;\n    } else {\n      var scale = 1 / (max - min);\n      return Math.max(0, (value - min) * scale);\n    }\n  };\n\n  /**\n   * Test whether given object is a string\n   * @param {*} object\n   * @return {Boolean} isString\n   */\n  exports.isString = function (object) {\n    return object instanceof String || typeof object == 'string';\n  };\n\n  /**\n   * Test whether given object is a Date, or a String containing a Date\n   * @param {Date | String} object\n   * @return {Boolean} isDate\n   */\n  exports.isDate = function (object) {\n    if (object instanceof Date) {\n      return true;\n    } else if (exports.isString(object)) {\n      // test whether this string contains a date\n      var match = ASPDateRegex.exec(object);\n      if (match) {\n        return true;\n      } else if (!isNaN(Date.parse(object))) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * Create a semi UUID\n   * source: http://stackoverflow.com/a/105074/1262753\n   * @return {String} uuid\n   */\n  exports.randomUUID = function () {\n    return uuid.v4();\n  };\n\n  /**\n   * assign all keys of an object that are not nested objects to a certain value (used for color objects).\n   * @param obj\n   * @param value\n   */\n  exports.assignAllKeys = function (obj, value) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        if (_typeof(obj[prop]) !== 'object') {\n          obj[prop] = value;\n        }\n      }\n    }\n  };\n\n  /**\n   * Fill an object with a possibly partially defined other object. Only copies values if the a object has an object requiring values.\n   * That means an object is not created on a property if only the b object has it.\n   * @param obj\n   * @param value\n   */\n  exports.fillIfDefined = function (a, b) {\n    var allowDeletion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    for (var prop in a) {\n      if (b[prop] !== undefined) {\n        if (_typeof(b[prop]) !== 'object') {\n          if ((b[prop] === undefined || b[prop] === null) && a[prop] !== undefined && allowDeletion === true) {\n            delete a[prop];\n          } else {\n            a[prop] = b[prop];\n          }\n        } else {\n          if (_typeof(a[prop]) === 'object') {\n            exports.fillIfDefined(a[prop], b[prop], allowDeletion);\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * Extend object a with the properties of object b or a series of objects\n   * Only properties with defined values are copied\n   * @param {Object} a\n   * @param {... Object} b\n   * @return {Object} a\n   */\n  exports.protoExtend = function (a, b) {\n    for (var i = 1; i < arguments.length; i++) {\n      var other = arguments[i];\n      for (var prop in other) {\n        a[prop] = other[prop];\n      }\n    }\n    return a;\n  };\n\n  /**\n   * Extend object a with the properties of object b or a series of objects\n   * Only properties with defined values are copied\n   * @param {Object} a\n   * @param {... Object} b\n   * @return {Object} a\n   */\n  exports.extend = function (a, b) {\n    for (var i = 1; i < arguments.length; i++) {\n      var other = arguments[i];\n      for (var prop in other) {\n        if (other.hasOwnProperty(prop)) {\n          a[prop] = other[prop];\n        }\n      }\n    }\n    return a;\n  };\n\n  /**\n   * Extend object a with selected properties of object b or a series of objects\n   * Only properties with defined values are copied\n   * @param {Array.<String>} props\n   * @param {Object} a\n   * @param {Object} b\n   * @return {Object} a\n   */\n  exports.selectiveExtend = function (props, a, b) {\n    if (!Array.isArray(props)) {\n      throw new Error('Array with property names expected as first argument');\n    }\n\n    for (var i = 2; i < arguments.length; i++) {\n      var other = arguments[i];\n\n      for (var p = 0; p < props.length; p++) {\n        var prop = props[p];\n        if (other.hasOwnProperty(prop)) {\n          a[prop] = other[prop];\n        }\n      }\n    }\n    return a;\n  };\n\n  /**\n   * Extend object a with selected properties of object b or a series of objects\n   * Only properties with defined values are copied\n   * @param {Array.<String>} props\n   * @param {Object} a\n   * @param {Object} b\n   * @return {Object} a\n   */\n  exports.selectiveDeepExtend = function (props, a, b) {\n    var allowDeletion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n    // TODO: add support for Arrays to deepExtend\n    if (Array.isArray(b)) {\n      throw new TypeError('Arrays are not supported by deepExtend');\n    }\n    for (var i = 2; i < arguments.length; i++) {\n      var other = arguments[i];\n      for (var p = 0; p < props.length; p++) {\n        var prop = props[p];\n        if (other.hasOwnProperty(prop)) {\n          if (b[prop] && b[prop].constructor === Object) {\n            if (a[prop] === undefined) {\n              a[prop] = {};\n            }\n            if (a[prop].constructor === Object) {\n              exports.deepExtend(a[prop], b[prop], false, allowDeletion);\n            } else {\n              if (b[prop] === null && a[prop] !== undefined && allowDeletion === true) {\n                delete a[prop];\n              } else {\n                a[prop] = b[prop];\n              }\n            }\n          } else if (Array.isArray(b[prop])) {\n            throw new TypeError('Arrays are not supported by deepExtend');\n          } else {\n            if (b[prop] === null && a[prop] !== undefined && allowDeletion === true) {\n              delete a[prop];\n            } else {\n              a[prop] = b[prop];\n            }\n          }\n        }\n      }\n    }\n    return a;\n  };\n\n  /**\n   * Extend object a with selected properties of object b or a series of objects\n   * Only properties with defined values are copied\n   * @param {Array.<String>} props\n   * @param {Object} a\n   * @param {Object} b\n   * @return {Object} a\n   */\n  exports.selectiveNotDeepExtend = function (props, a, b) {\n    var allowDeletion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n    // TODO: add support for Arrays to deepExtend\n    if (Array.isArray(b)) {\n      throw new TypeError('Arrays are not supported by deepExtend');\n    }\n    for (var prop in b) {\n      if (b.hasOwnProperty(prop)) {\n        if (props.indexOf(prop) == -1) {\n          if (b[prop] && b[prop].constructor === Object) {\n            if (a[prop] === undefined) {\n              a[prop] = {};\n            }\n            if (a[prop].constructor === Object) {\n              exports.deepExtend(a[prop], b[prop]);\n            } else {\n              if (b[prop] === null && a[prop] !== undefined && allowDeletion === true) {\n                delete a[prop];\n              } else {\n                a[prop] = b[prop];\n              }\n            }\n          } else if (Array.isArray(b[prop])) {\n            a[prop] = [];\n            for (var i = 0; i < b[prop].length; i++) {\n              a[prop].push(b[prop][i]);\n            }\n          } else {\n            if (b[prop] === null && a[prop] !== undefined && allowDeletion === true) {\n              delete a[prop];\n            } else {\n              a[prop] = b[prop];\n            }\n          }\n        }\n      }\n    }\n    return a;\n  };\n\n  /**\n   * Deep extend an object a with the properties of object b\n   * @param {Object} a\n   * @param {Object} b\n   * @param [Boolean] protoExtend --> optional parameter. If true, the prototype values will also be extended.\n   *                                  (ie. the options objects that inherit from others will also get the inherited options)\n   * @param [Boolean] global      --> optional parameter. If true, the values of fields that are null will not deleted\n   * @returns {Object}\n   */\n  exports.deepExtend = function (a, b, protoExtend, allowDeletion) {\n    for (var prop in b) {\n      if (b.hasOwnProperty(prop) || protoExtend === true) {\n        if (b[prop] && b[prop].constructor === Object) {\n          if (a[prop] === undefined) {\n            a[prop] = {};\n          }\n          if (a[prop].constructor === Object) {\n            exports.deepExtend(a[prop], b[prop], protoExtend);\n          } else {\n            if (b[prop] === null && a[prop] !== undefined && allowDeletion === true) {\n              delete a[prop];\n            } else {\n              a[prop] = b[prop];\n            }\n          }\n        } else if (Array.isArray(b[prop])) {\n          a[prop] = [];\n          for (var i = 0; i < b[prop].length; i++) {\n            a[prop].push(b[prop][i]);\n          }\n        } else {\n          if (b[prop] === null && a[prop] !== undefined && allowDeletion === true) {\n            delete a[prop];\n          } else {\n            a[prop] = b[prop];\n          }\n        }\n      }\n    }\n    return a;\n  };\n\n  /**\n   * Test whether all elements in two arrays are equal.\n   * @param {Array} a\n   * @param {Array} b\n   * @return {boolean} Returns true if both arrays have the same length and same\n   *                   elements.\n   */\n  exports.equalArray = function (a, b) {\n    if (a.length != b.length) return false;\n\n    for (var i = 0, len = a.length; i < len; i++) {\n      if (a[i] != b[i]) return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Convert an object to another type\n   * @param {Boolean | Number | String | Date | Moment | Null | undefined} object\n   * @param {String | undefined} type   Name of the type. Available types:\n   *                                    'Boolean', 'Number', 'String',\n   *                                    'Date', 'Moment', ISODate', 'ASPDate'.\n   * @return {*} object\n   * @throws Error\n   */\n  exports.convert = function (object, type) {\n    var match;\n\n    if (object === undefined) {\n      return undefined;\n    }\n    if (object === null) {\n      return null;\n    }\n\n    if (!type) {\n      return object;\n    }\n    if (!(typeof type === 'string') && !(type instanceof String)) {\n      throw new Error('Type must be a string');\n    }\n\n    //noinspection FallthroughInSwitchStatementJS\n    switch (type) {\n      case 'boolean':\n      case 'Boolean':\n        return Boolean(object);\n\n      case 'number':\n      case 'Number':\n        if (!isNaN(Date.parse(object))) {\n          return moment(object).valueOf();\n        } else {\n          return Number(object.valueOf());\n        }\n      case 'string':\n      case 'String':\n        return String(object);\n\n      case 'Date':\n        if (exports.isNumber(object)) {\n          return new Date(object);\n        }\n        if (object instanceof Date) {\n          return new Date(object.valueOf());\n        } else if (moment.isMoment(object)) {\n          return new Date(object.valueOf());\n        }\n        if (exports.isString(object)) {\n          match = ASPDateRegex.exec(object);\n          if (match) {\n            // object is an ASP date\n            return new Date(Number(match[1])); // parse number\n          } else {\n            return moment(new Date(object)).toDate(); // parse string\n          }\n        } else {\n          throw new Error('Cannot convert object of type ' + exports.getType(object) + ' to type Date');\n        }\n\n      case 'Moment':\n        if (exports.isNumber(object)) {\n          return moment(object);\n        }\n        if (object instanceof Date) {\n          return moment(object.valueOf());\n        } else if (moment.isMoment(object)) {\n          return moment(object);\n        }\n        if (exports.isString(object)) {\n          match = ASPDateRegex.exec(object);\n          if (match) {\n            // object is an ASP date\n            return moment(Number(match[1])); // parse number\n          } else {\n            return moment(object); // parse string\n          }\n        } else {\n          throw new Error('Cannot convert object of type ' + exports.getType(object) + ' to type Date');\n        }\n\n      case 'ISODate':\n        if (exports.isNumber(object)) {\n          return new Date(object);\n        } else if (object instanceof Date) {\n          return object.toISOString();\n        } else if (moment.isMoment(object)) {\n          return object.toDate().toISOString();\n        } else if (exports.isString(object)) {\n          match = ASPDateRegex.exec(object);\n          if (match) {\n            // object is an ASP date\n            return new Date(Number(match[1])).toISOString(); // parse number\n          } else {\n            return moment(object).format(); // ISO 8601\n          }\n        } else {\n          throw new Error('Cannot convert object of type ' + exports.getType(object) + ' to type ISODate');\n        }\n\n      case 'ASPDate':\n        if (exports.isNumber(object)) {\n          return '/Date(' + object + ')/';\n        } else if (object instanceof Date) {\n          return '/Date(' + object.valueOf() + ')/';\n        } else if (exports.isString(object)) {\n          match = ASPDateRegex.exec(object);\n          var value;\n          if (match) {\n            // object is an ASP date\n            value = new Date(Number(match[1])).valueOf(); // parse number\n          } else {\n            value = new Date(object).valueOf(); // parse string\n          }\n          return '/Date(' + value + ')/';\n        } else {\n          throw new Error('Cannot convert object of type ' + exports.getType(object) + ' to type ASPDate');\n        }\n\n      default:\n        throw new Error('Unknown type \"' + type + '\"');\n    }\n  };\n\n  // parse ASP.Net Date pattern,\n  // for example '/Date(1198908717056)/' or '/Date(1198908717056-0700)/'\n  // code from http://momentjs.com/\n  var ASPDateRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n  /**\n   * Get the type of an object, for example exports.getType([]) returns 'Array'\n   * @param {*} object\n   * @return {String} type\n   */\n  exports.getType = function (object) {\n    var type = typeof object === 'undefined' ? 'undefined' : _typeof(object);\n\n    if (type == 'object') {\n      if (object === null) {\n        return 'null';\n      }\n      if (object instanceof Boolean) {\n        return 'Boolean';\n      }\n      if (object instanceof Number) {\n        return 'Number';\n      }\n      if (object instanceof String) {\n        return 'String';\n      }\n      if (Array.isArray(object)) {\n        return 'Array';\n      }\n      if (object instanceof Date) {\n        return 'Date';\n      }\n      return 'Object';\n    } else if (type == 'number') {\n      return 'Number';\n    } else if (type == 'boolean') {\n      return 'Boolean';\n    } else if (type == 'string') {\n      return 'String';\n    } else if (type === undefined) {\n      return 'undefined';\n    }\n\n    return type;\n  };\n\n  /**\n   * Used to extend an array and copy it. This is used to propagate paths recursively.\n   *\n   * @param arr\n   * @param newValue\n   * @returns {Array}\n   */\n  exports.copyAndExtendArray = function (arr, newValue) {\n    var newArr = [];\n    for (var i = 0; i < arr.length; i++) {\n      newArr.push(arr[i]);\n    }\n    newArr.push(newValue);\n    return newArr;\n  };\n\n  /**\n   * Used to extend an array and copy it. This is used to propagate paths recursively.\n   *\n   * @param arr\n   * @param newValue\n   * @returns {Array}\n   */\n  exports.copyArray = function (arr) {\n    var newArr = [];\n    for (var i = 0; i < arr.length; i++) {\n      newArr.push(arr[i]);\n    }\n    return newArr;\n  };\n\n  /**\n   * Retrieve the absolute left value of a DOM element\n   * @param {Element} elem        A dom element, for example a div\n   * @return {number} left        The absolute left position of this element\n   *                              in the browser page.\n   */\n  exports.getAbsoluteLeft = function (elem) {\n    return elem.getBoundingClientRect().left;\n  };\n\n  exports.getAbsoluteRight = function (elem) {\n    return elem.getBoundingClientRect().right;\n  };\n\n  /**\n   * Retrieve the absolute top value of a DOM element\n   * @param {Element} elem        A dom element, for example a div\n   * @return {number} top        The absolute top position of this element\n   *                              in the browser page.\n   */\n  exports.getAbsoluteTop = function (elem) {\n    return elem.getBoundingClientRect().top;\n  };\n\n  /**\n   * add a className to the given elements style\n   * @param {Element} elem\n   * @param {String} className\n   */\n  exports.addClassName = function (elem, className) {\n    var classes = elem.className.split(' ');\n    if (classes.indexOf(className) == -1) {\n      classes.push(className); // add the class to the array\n      elem.className = classes.join(' ');\n    }\n  };\n\n  /**\n   * add a className to the given elements style\n   * @param {Element} elem\n   * @param {String} className\n   */\n  exports.removeClassName = function (elem, className) {\n    var classes = elem.className.split(' ');\n    var index = classes.indexOf(className);\n    if (index != -1) {\n      classes.splice(index, 1); // remove the class from the array\n      elem.className = classes.join(' ');\n    }\n  };\n\n  /**\n   * For each method for both arrays and objects.\n   * In case of an array, the built-in Array.forEach() is applied.\n   * In case of an Object, the method loops over all properties of the object.\n   * @param {Object | Array} object   An Object or Array\n   * @param {function} callback       Callback method, called for each item in\n   *                                  the object or array with three parameters:\n   *                                  callback(value, index, object)\n   */\n  exports.forEach = function (object, callback) {\n    var i, len;\n    if (Array.isArray(object)) {\n      // array\n      for (i = 0, len = object.length; i < len; i++) {\n        callback(object[i], i, object);\n      }\n    } else {\n      // object\n      for (i in object) {\n        if (object.hasOwnProperty(i)) {\n          callback(object[i], i, object);\n        }\n      }\n    }\n  };\n\n  /**\n   * Convert an object into an array: all objects properties are put into the\n   * array. The resulting array is unordered.\n   * @param {Object} object\n   * @param {Array} array\n   */\n  exports.toArray = function (object) {\n    var array = [];\n\n    for (var prop in object) {\n      if (object.hasOwnProperty(prop)) array.push(object[prop]);\n    }\n\n    return array;\n  };\n\n  /**\n   * Update a property in an object\n   * @param {Object} object\n   * @param {String} key\n   * @param {*} value\n   * @return {Boolean} changed\n   */\n  exports.updateProperty = function (object, key, value) {\n    if (object[key] !== value) {\n      object[key] = value;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  /**\n   * Throttle the given function to be only executed once per animation frame\n   * @param {function} fn\n   * @returns {function} Returns the throttled function\n   */\n  exports.throttle = function (fn) {\n    var scheduled = false;\n\n    return function throttled() {\n      if (!scheduled) {\n        scheduled = true;\n        requestAnimationFrame(function () {\n          scheduled = false;\n          fn();\n        });\n      }\n    };\n  };\n\n  /**\n   * Add and event listener. Works for all browsers\n   * @param {Element}     element    An html element\n   * @param {string}      action     The action, for example \"click\",\n   *                                 without the prefix \"on\"\n   * @param {function}    listener   The callback function to be executed\n   * @param {boolean}     [useCapture]\n   */\n  exports.addEventListener = function (element, action, listener, useCapture) {\n    if (element.addEventListener) {\n      if (useCapture === undefined) useCapture = false;\n\n      if (action === \"mousewheel\" && navigator.userAgent.indexOf(\"Firefox\") >= 0) {\n        action = \"DOMMouseScroll\"; // For Firefox\n      }\n\n      element.addEventListener(action, listener, useCapture);\n    } else {\n      element.attachEvent(\"on\" + action, listener); // IE browsers\n    }\n  };\n\n  /**\n   * Remove an event listener from an element\n   * @param {Element}     element         An html dom element\n   * @param {string}      action          The name of the event, for example \"mousedown\"\n   * @param {function}    listener        The listener function\n   * @param {boolean}     [useCapture]\n   */\n  exports.removeEventListener = function (element, action, listener, useCapture) {\n    if (element.removeEventListener) {\n      // non-IE browsers\n      if (useCapture === undefined) useCapture = false;\n\n      if (action === \"mousewheel\" && navigator.userAgent.indexOf(\"Firefox\") >= 0) {\n        action = \"DOMMouseScroll\"; // For Firefox\n      }\n\n      element.removeEventListener(action, listener, useCapture);\n    } else {\n      // IE browsers\n      element.detachEvent(\"on\" + action, listener);\n    }\n  };\n\n  /**\n   * Cancels the event if it is cancelable, without stopping further propagation of the event.\n   */\n  exports.preventDefault = function (event) {\n    if (!event) event = window.event;\n\n    if (event.preventDefault) {\n      event.preventDefault(); // non-IE browsers\n    } else {\n      event.returnValue = false; // IE browsers\n    }\n  };\n\n  /**\n   * Get HTML element which is the target of the event\n   * @param {Event} event\n   * @return {Element} target element\n   */\n  exports.getTarget = function (event) {\n    // code from http://www.quirksmode.org/js/events_properties.html\n    if (!event) {\n      event = window.event;\n    }\n\n    var target;\n\n    if (event.target) {\n      target = event.target;\n    } else if (event.srcElement) {\n      target = event.srcElement;\n    }\n\n    if (target.nodeType != undefined && target.nodeType == 3) {\n      // defeat Safari bug\n      target = target.parentNode;\n    }\n\n    return target;\n  };\n\n  /**\n   * Check if given element contains given parent somewhere in the DOM tree\n   * @param {Element} element\n   * @param {Element} parent\n   */\n  exports.hasParent = function (element, parent) {\n    var e = element;\n\n    while (e) {\n      if (e === parent) {\n        return true;\n      }\n      e = e.parentNode;\n    }\n\n    return false;\n  };\n\n  exports.option = {};\n\n  /**\n   * Convert a value into a boolean\n   * @param {Boolean | function | undefined} value\n   * @param {Boolean} [defaultValue]\n   * @returns {Boolean} bool\n   */\n  exports.option.asBoolean = function (value, defaultValue) {\n    if (typeof value == 'function') {\n      value = value();\n    }\n\n    if (value != null) {\n      return value != false;\n    }\n\n    return defaultValue || null;\n  };\n\n  /**\n   * Convert a value into a number\n   * @param {Boolean | function | undefined} value\n   * @param {Number} [defaultValue]\n   * @returns {Number} number\n   */\n  exports.option.asNumber = function (value, defaultValue) {\n    if (typeof value == 'function') {\n      value = value();\n    }\n\n    if (value != null) {\n      return Number(value) || defaultValue || null;\n    }\n\n    return defaultValue || null;\n  };\n\n  /**\n   * Convert a value into a string\n   * @param {String | function | undefined} value\n   * @param {String} [defaultValue]\n   * @returns {String} str\n   */\n  exports.option.asString = function (value, defaultValue) {\n    if (typeof value == 'function') {\n      value = value();\n    }\n\n    if (value != null) {\n      return String(value);\n    }\n\n    return defaultValue || null;\n  };\n\n  /**\n   * Convert a size or location into a string with pixels or a percentage\n   * @param {String | Number | function | undefined} value\n   * @param {String} [defaultValue]\n   * @returns {String} size\n   */\n  exports.option.asSize = function (value, defaultValue) {\n    if (typeof value == 'function') {\n      value = value();\n    }\n\n    if (exports.isString(value)) {\n      return value;\n    } else if (exports.isNumber(value)) {\n      return value + 'px';\n    } else {\n      return defaultValue || null;\n    }\n  };\n\n  /**\n   * Convert a value into a DOM element\n   * @param {HTMLElement | function | undefined} value\n   * @param {HTMLElement} [defaultValue]\n   * @returns {HTMLElement | null} dom\n   */\n  exports.option.asElement = function (value, defaultValue) {\n    if (typeof value == 'function') {\n      value = value();\n    }\n\n    return value || defaultValue || null;\n  };\n\n  /**\n   * http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n   *\n   * @param {String} hex\n   * @returns {{r: *, g: *, b: *}} | 255 range\n   */\n  exports.hexToRGB = function (hex) {\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n      return r + r + g + g + b + b;\n    });\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  };\n\n  /**\n   * This function takes color in hex format or rgb() or rgba() format and overrides the opacity. Returns rgba() string.\n   * @param color\n   * @param opacity\n   * @returns {*}\n   */\n  exports.overrideOpacity = function (color, opacity) {\n    if (color.indexOf(\"rgba\") != -1) {\n      return color;\n    } else if (color.indexOf(\"rgb\") != -1) {\n      var rgb = color.substr(color.indexOf(\"(\") + 1).replace(\")\", \"\").split(\",\");\n      return \"rgba(\" + rgb[0] + \",\" + rgb[1] + \",\" + rgb[2] + \",\" + opacity + \")\";\n    } else {\n      var rgb = exports.hexToRGB(color);\n      if (rgb == null) {\n        return color;\n      } else {\n        return \"rgba(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",\" + opacity + \")\";\n      }\n    }\n  };\n\n  /**\n   *\n   * @param red     0 -- 255\n   * @param green   0 -- 255\n   * @param blue    0 -- 255\n   * @returns {string}\n   * @constructor\n   */\n  exports.RGBToHex = function (red, green, blue) {\n    return \"#\" + ((1 << 24) + (red << 16) + (green << 8) + blue).toString(16).slice(1);\n  };\n\n  /**\n   * Parse a color property into an object with border, background, and\n   * highlight colors\n   * @param {Object | String} color\n   * @return {Object} colorObject\n   */\n  exports.parseColor = function (color) {\n    var c;\n    if (exports.isString(color) === true) {\n      if (exports.isValidRGB(color) === true) {\n        var rgb = color.substr(4).substr(0, color.length - 5).split(',').map(function (value) {\n          return parseInt(value);\n        });\n        color = exports.RGBToHex(rgb[0], rgb[1], rgb[2]);\n      }\n      if (exports.isValidHex(color) === true) {\n        var hsv = exports.hexToHSV(color);\n        var lighterColorHSV = { h: hsv.h, s: hsv.s * 0.8, v: Math.min(1, hsv.v * 1.02) };\n        var darkerColorHSV = { h: hsv.h, s: Math.min(1, hsv.s * 1.25), v: hsv.v * 0.8 };\n        var darkerColorHex = exports.HSVToHex(darkerColorHSV.h, darkerColorHSV.s, darkerColorHSV.v);\n        var lighterColorHex = exports.HSVToHex(lighterColorHSV.h, lighterColorHSV.s, lighterColorHSV.v);\n        c = {\n          background: color,\n          border: darkerColorHex,\n          highlight: {\n            background: lighterColorHex,\n            border: darkerColorHex\n          },\n          hover: {\n            background: lighterColorHex,\n            border: darkerColorHex\n          }\n        };\n      } else {\n        c = {\n          background: color,\n          border: color,\n          highlight: {\n            background: color,\n            border: color\n          },\n          hover: {\n            background: color,\n            border: color\n          }\n        };\n      }\n    } else {\n      c = {};\n      c.background = color.background || undefined;\n      c.border = color.border || undefined;\n\n      if (exports.isString(color.highlight)) {\n        c.highlight = {\n          border: color.highlight,\n          background: color.highlight\n        };\n      } else {\n        c.highlight = {};\n        c.highlight.background = color.highlight && color.highlight.background || undefined;\n        c.highlight.border = color.highlight && color.highlight.border || undefined;\n      }\n\n      if (exports.isString(color.hover)) {\n        c.hover = {\n          border: color.hover,\n          background: color.hover\n        };\n      } else {\n        c.hover = {};\n        c.hover.background = color.hover && color.hover.background || undefined;\n        c.hover.border = color.hover && color.hover.border || undefined;\n      }\n    }\n\n    return c;\n  };\n\n  /**\n   * http://www.javascripter.net/faq/rgb2hsv.htm\n   *\n   * @param red\n   * @param green\n   * @param blue\n   * @returns {*}\n   * @constructor\n   */\n  exports.RGBToHSV = function (red, green, blue) {\n    red = red / 255;green = green / 255;blue = blue / 255;\n    var minRGB = Math.min(red, Math.min(green, blue));\n    var maxRGB = Math.max(red, Math.max(green, blue));\n\n    // Black-gray-white\n    if (minRGB == maxRGB) {\n      return { h: 0, s: 0, v: minRGB };\n    }\n\n    // Colors other than black-gray-white:\n    var d = red == minRGB ? green - blue : blue == minRGB ? red - green : blue - red;\n    var h = red == minRGB ? 3 : blue == minRGB ? 1 : 5;\n    var hue = 60 * (h - d / (maxRGB - minRGB)) / 360;\n    var saturation = (maxRGB - minRGB) / maxRGB;\n    var value = maxRGB;\n    return { h: hue, s: saturation, v: value };\n  };\n\n  var cssUtil = {\n    // split a string with css styles into an object with key/values\n    split: function split(cssText) {\n      var styles = {};\n\n      cssText.split(';').forEach(function (style) {\n        if (style.trim() != '') {\n          var parts = style.split(':');\n          var key = parts[0].trim();\n          var value = parts[1].trim();\n          styles[key] = value;\n        }\n      });\n\n      return styles;\n    },\n\n    // build a css text string from an object with key/values\n    join: function join(styles) {\n      return Object.keys(styles).map(function (key) {\n        return key + ': ' + styles[key];\n      }).join('; ');\n    }\n  };\n\n  /**\n   * Append a string with css styles to an element\n   * @param {Element} element\n   * @param {String} cssText\n   */\n  exports.addCssText = function (element, cssText) {\n    var currentStyles = cssUtil.split(element.style.cssText);\n    var newStyles = cssUtil.split(cssText);\n    var styles = exports.extend(currentStyles, newStyles);\n\n    element.style.cssText = cssUtil.join(styles);\n  };\n\n  /**\n   * Remove a string with css styles from an element\n   * @param {Element} element\n   * @param {String} cssText\n   */\n  exports.removeCssText = function (element, cssText) {\n    var styles = cssUtil.split(element.style.cssText);\n    var removeStyles = cssUtil.split(cssText);\n\n    for (var key in removeStyles) {\n      if (removeStyles.hasOwnProperty(key)) {\n        delete styles[key];\n      }\n    }\n\n    element.style.cssText = cssUtil.join(styles);\n  };\n\n  /**\n   * https://gist.github.com/mjijackson/5311256\n   * @param h\n   * @param s\n   * @param v\n   * @returns {{r: number, g: number, b: number}}\n   * @constructor\n   */\n  exports.HSVToRGB = function (h, s, v) {\n    var r, g, b;\n\n    var i = Math.floor(h * 6);\n    var f = h * 6 - i;\n    var p = v * (1 - s);\n    var q = v * (1 - f * s);\n    var t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n      case 0:\n        r = v, g = t, b = p;break;\n      case 1:\n        r = q, g = v, b = p;break;\n      case 2:\n        r = p, g = v, b = t;break;\n      case 3:\n        r = p, g = q, b = v;break;\n      case 4:\n        r = t, g = p, b = v;break;\n      case 5:\n        r = v, g = p, b = q;break;\n    }\n\n    return { r: Math.floor(r * 255), g: Math.floor(g * 255), b: Math.floor(b * 255) };\n  };\n\n  exports.HSVToHex = function (h, s, v) {\n    var rgb = exports.HSVToRGB(h, s, v);\n    return exports.RGBToHex(rgb.r, rgb.g, rgb.b);\n  };\n\n  exports.hexToHSV = function (hex) {\n    var rgb = exports.hexToRGB(hex);\n    return exports.RGBToHSV(rgb.r, rgb.g, rgb.b);\n  };\n\n  exports.isValidHex = function (hex) {\n    var isOk = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex);\n    return isOk;\n  };\n\n  exports.isValidRGB = function (rgb) {\n    rgb = rgb.replace(\" \", \"\");\n    var isOk = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/i.test(rgb);\n    return isOk;\n  };\n  exports.isValidRGBA = function (rgba) {\n    rgba = rgba.replace(\" \", \"\");\n    var isOk = /rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),(.{1,3})\\)/i.test(rgba);\n    return isOk;\n  };\n\n  /**\n   * This recursively redirects the prototype of JSON objects to the referenceObject\n   * This is used for default options.\n   *\n   * @param referenceObject\n   * @returns {*}\n   */\n  exports.selectiveBridgeObject = function (fields, referenceObject) {\n    if ((typeof referenceObject === 'undefined' ? 'undefined' : _typeof(referenceObject)) == \"object\") {\n      var objectTo = Object.create(referenceObject);\n      for (var i = 0; i < fields.length; i++) {\n        if (referenceObject.hasOwnProperty(fields[i])) {\n          if (_typeof(referenceObject[fields[i]]) == \"object\") {\n            objectTo[fields[i]] = exports.bridgeObject(referenceObject[fields[i]]);\n          }\n        }\n      }\n      return objectTo;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * This recursively redirects the prototype of JSON objects to the referenceObject\n   * This is used for default options.\n   *\n   * @param referenceObject\n   * @returns {*}\n   */\n  exports.bridgeObject = function (referenceObject) {\n    if ((typeof referenceObject === 'undefined' ? 'undefined' : _typeof(referenceObject)) == \"object\") {\n      var objectTo = Object.create(referenceObject);\n      for (var i in referenceObject) {\n        if (referenceObject.hasOwnProperty(i)) {\n          if (_typeof(referenceObject[i]) == \"object\") {\n            objectTo[i] = exports.bridgeObject(referenceObject[i]);\n          }\n        }\n      }\n      return objectTo;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * This method provides a stable sort implementation, very fast for presorted data\n   *\n   * @param a the array\n   * @param a order comparator\n   * @returns {the array}\n   */\n  exports.insertSort = function (a, compare) {\n    for (var i = 0; i < a.length; i++) {\n      var k = a[i];\n      for (var j = i; j > 0 && compare(k, a[j - 1]) < 0; j--) {\n        a[j] = a[j - 1];\n      }\n      a[j] = k;\n    }\n    return a;\n  };\n\n  /**\n   * this is used to set the options of subobjects in the options object. A requirement of these subobjects\n   * is that they have an 'enabled' element which is optional for the user but mandatory for the program.\n   *\n   * @param [object] mergeTarget | this is either this.options or the options used for the groups.\n   * @param [object] options     | options\n   * @param [String] option      | this is the option key in the options argument\n   */\n  exports.mergeOptions = function (mergeTarget, options, option) {\n    var allowDeletion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var globalOptions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    if (options[option] === null) {\n      mergeTarget[option] = Object.create(globalOptions[option]);\n    } else {\n      if (options[option] !== undefined) {\n        if (typeof options[option] === 'boolean') {\n          mergeTarget[option].enabled = options[option];\n        } else {\n          if (options[option].enabled === undefined) {\n            mergeTarget[option].enabled = true;\n          }\n          for (var prop in options[option]) {\n            if (options[option].hasOwnProperty(prop)) {\n              mergeTarget[option][prop] = options[option][prop];\n            }\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * This function does a binary search for a visible item in a sorted list. If we find a visible item, the code that uses\n   * this function will then iterate in both directions over this sorted list to find all visible items.\n   *\n   * @param {Item[]} orderedItems       | Items ordered by start\n   * @param {function} comparator       | -1 is lower, 0 is equal, 1 is higher\n   * @param {String} field\n   * @param {String} field2\n   * @returns {number}\n   * @private\n   */\n  exports.binarySearchCustom = function (orderedItems, comparator, field, field2) {\n    var maxIterations = 10000;\n    var iteration = 0;\n    var low = 0;\n    var high = orderedItems.length - 1;\n\n    while (low <= high && iteration < maxIterations) {\n      var middle = Math.floor((low + high) / 2);\n\n      var item = orderedItems[middle];\n      var value = field2 === undefined ? item[field] : item[field][field2];\n\n      var searchResult = comparator(value);\n      if (searchResult == 0) {\n        // jihaa, found a visible item!\n        return middle;\n      } else if (searchResult == -1) {\n        // it is too small --> increase low\n        low = middle + 1;\n      } else {\n        // it is too big --> decrease high\n        high = middle - 1;\n      }\n\n      iteration++;\n    }\n\n    return -1;\n  };\n\n  /**\n   * This function does a binary search for a specific value in a sorted array. If it does not exist but is in between of\n   * two values, we return either the one before or the one after, depending on user input\n   * If it is found, we return the index, else -1.\n   *\n   * @param {Array} orderedItems\n   * @param {{start: number, end: number}} target\n   * @param {String} field\n   * @param {String} sidePreference   'before' or 'after'\n   * @param {function} comparator an optional comparator, returning -1,0,1 for <,==,>.\n   * @returns {number}\n   * @private\n   */\n  exports.binarySearchValue = function (orderedItems, target, field, sidePreference, comparator) {\n    var maxIterations = 10000;\n    var iteration = 0;\n    var low = 0;\n    var high = orderedItems.length - 1;\n    var prevValue, value, nextValue, middle;\n\n    var comparator = comparator != undefined ? comparator : function (a, b) {\n      return a == b ? 0 : a < b ? -1 : 1;\n    };\n\n    while (low <= high && iteration < maxIterations) {\n      // get a new guess\n      middle = Math.floor(0.5 * (high + low));\n      prevValue = orderedItems[Math.max(0, middle - 1)][field];\n      value = orderedItems[middle][field];\n      nextValue = orderedItems[Math.min(orderedItems.length - 1, middle + 1)][field];\n\n      if (comparator(value, target) == 0) {\n        // we found the target\n        return middle;\n      } else if (comparator(prevValue, target) < 0 && comparator(value, target) > 0) {\n        // target is in between of the previous and the current\n        return sidePreference == 'before' ? Math.max(0, middle - 1) : middle;\n      } else if (comparator(value, target) < 0 && comparator(nextValue, target) > 0) {\n        // target is in between of the current and the next\n        return sidePreference == 'before' ? middle : Math.min(orderedItems.length - 1, middle + 1);\n      } else {\n        // didnt find the target, we need to change our boundaries.\n        if (comparator(value, target) < 0) {\n          // it is too small --> increase low\n          low = middle + 1;\n        } else {\n          // it is too big --> decrease high\n          high = middle - 1;\n        }\n      }\n      iteration++;\n    }\n\n    // didnt find anything. Return -1.\n    return -1;\n  };\n\n  /*\n   * Easing Functions - inspired from http://gizma.com/easing/\n   * only considering the t value for the range [0, 1] => [0, 1]\n   * https://gist.github.com/gre/1650294\n   */\n  exports.easingFunctions = {\n    // no easing, no acceleration\n    linear: function linear(t) {\n      return t;\n    },\n    // accelerating from zero velocity\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    // decelerating to zero velocity\n    easeOutQuad: function easeOutQuad(t) {\n      return t * (2 - t);\n    },\n    // acceleration until halfway, then deceleration\n    easeInOutQuad: function easeInOutQuad(t) {\n      return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    },\n    // accelerating from zero velocity\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    // decelerating to zero velocity\n    easeOutCubic: function easeOutCubic(t) {\n      return --t * t * t + 1;\n    },\n    // acceleration until halfway, then deceleration\n    easeInOutCubic: function easeInOutCubic(t) {\n      return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n    },\n    // accelerating from zero velocity\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    // decelerating to zero velocity\n    easeOutQuart: function easeOutQuart(t) {\n      return 1 - --t * t * t * t;\n    },\n    // acceleration until halfway, then deceleration\n    easeInOutQuart: function easeInOutQuart(t) {\n      return t < .5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n    },\n    // accelerating from zero velocity\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    // decelerating to zero velocity\n    easeOutQuint: function easeOutQuint(t) {\n      return 1 + --t * t * t * t * t;\n    },\n    // acceleration until halfway, then deceleration\n    easeInOutQuint: function easeInOutQuint(t) {\n      return t < .5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n    }\n  };\n\n  exports.getScrollBarWidth = function () {\n    var inner = document.createElement('p');\n    inner.style.width = \"100%\";\n    inner.style.height = \"200px\";\n\n    var outer = document.createElement('div');\n    outer.style.position = \"absolute\";\n    outer.style.top = \"0px\";\n    outer.style.left = \"0px\";\n    outer.style.visibility = \"hidden\";\n    outer.style.width = \"200px\";\n    outer.style.height = \"150px\";\n    outer.style.overflow = \"hidden\";\n    outer.appendChild(inner);\n\n    document.body.appendChild(outer);\n    var w1 = inner.offsetWidth;\n    outer.style.overflow = 'scroll';\n    var w2 = inner.offsetWidth;\n    if (w1 == w2) w2 = outer.clientWidth;\n\n    document.body.removeChild(outer);\n\n    return w1 - w2;\n  };\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  // first check if moment.js is already loaded in the browser window, if so,\n  // use this instance. Else, load via commonjs.\n  module.exports = typeof window !== 'undefined' && window['moment'] || __webpack_require__(3);\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n  /* WEBPACK VAR INJECTION */(function(module) {//! moment.js\n  //! version : 2.15.2\n  //! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n  //! license : MIT\n  //! momentjs.com\n\n  ;(function (global, factory) {\n       true ? module.exports = factory() :\n      typeof define === 'function' && define.amd ? define(factory) :\n      global.moment = factory()\n  }(this, function () { 'use strict';\n\n      var hookCallback;\n\n      function utils_hooks__hooks () {\n          return hookCallback.apply(null, arguments);\n      }\n\n      // This is done to register the method called with moment()\n      // without creating circular dependencies.\n      function setHookCallback (callback) {\n          hookCallback = callback;\n      }\n\n      function isArray(input) {\n          return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n      }\n\n      function isObject(input) {\n          // IE8 will treat undefined and null as object if it wasn't for\n          // input != null\n          return input != null && Object.prototype.toString.call(input) === '[object Object]';\n      }\n\n      function isObjectEmpty(obj) {\n          var k;\n          for (k in obj) {\n              // even if its not own property I'd still call it non-empty\n              return false;\n          }\n          return true;\n      }\n\n      function isDate(input) {\n          return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n      }\n\n      function map(arr, fn) {\n          var res = [], i;\n          for (i = 0; i < arr.length; ++i) {\n              res.push(fn(arr[i], i));\n          }\n          return res;\n      }\n\n      function hasOwnProp(a, b) {\n          return Object.prototype.hasOwnProperty.call(a, b);\n      }\n\n      function extend(a, b) {\n          for (var i in b) {\n              if (hasOwnProp(b, i)) {\n                  a[i] = b[i];\n              }\n          }\n\n          if (hasOwnProp(b, 'toString')) {\n              a.toString = b.toString;\n          }\n\n          if (hasOwnProp(b, 'valueOf')) {\n              a.valueOf = b.valueOf;\n          }\n\n          return a;\n      }\n\n      function create_utc__createUTC (input, format, locale, strict) {\n          return createLocalOrUTC(input, format, locale, strict, true).utc();\n      }\n\n      function defaultParsingFlags() {\n          // We need to deep clone this object.\n          return {\n              empty           : false,\n              unusedTokens    : [],\n              unusedInput     : [],\n              overflow        : -2,\n              charsLeftOver   : 0,\n              nullInput       : false,\n              invalidMonth    : null,\n              invalidFormat   : false,\n              userInvalidated : false,\n              iso             : false,\n              parsedDateParts : [],\n              meridiem        : null\n          };\n      }\n\n      function getParsingFlags(m) {\n          if (m._pf == null) {\n              m._pf = defaultParsingFlags();\n          }\n          return m._pf;\n      }\n\n      var some;\n      if (Array.prototype.some) {\n          some = Array.prototype.some;\n      } else {\n          some = function (fun) {\n              var t = Object(this);\n              var len = t.length >>> 0;\n\n              for (var i = 0; i < len; i++) {\n                  if (i in t && fun.call(this, t[i], i, t)) {\n                      return true;\n                  }\n              }\n\n              return false;\n          };\n      }\n\n      function valid__isValid(m) {\n          if (m._isValid == null) {\n              var flags = getParsingFlags(m);\n              var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                  return i != null;\n              });\n              var isNowValid = !isNaN(m._d.getTime()) &&\n                  flags.overflow < 0 &&\n                  !flags.empty &&\n                  !flags.invalidMonth &&\n                  !flags.invalidWeekday &&\n                  !flags.nullInput &&\n                  !flags.invalidFormat &&\n                  !flags.userInvalidated &&\n                  (!flags.meridiem || (flags.meridiem && parsedParts));\n\n              if (m._strict) {\n                  isNowValid = isNowValid &&\n                      flags.charsLeftOver === 0 &&\n                      flags.unusedTokens.length === 0 &&\n                      flags.bigHour === undefined;\n              }\n\n              if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                  m._isValid = isNowValid;\n              }\n              else {\n                  return isNowValid;\n              }\n          }\n          return m._isValid;\n      }\n\n      function valid__createInvalid (flags) {\n          var m = create_utc__createUTC(NaN);\n          if (flags != null) {\n              extend(getParsingFlags(m), flags);\n          }\n          else {\n              getParsingFlags(m).userInvalidated = true;\n          }\n\n          return m;\n      }\n\n      function isUndefined(input) {\n          return input === void 0;\n      }\n\n      // Plugins that add properties should also add the key here (null value),\n      // so we can properly clone ourselves.\n      var momentProperties = utils_hooks__hooks.momentProperties = [];\n\n      function copyConfig(to, from) {\n          var i, prop, val;\n\n          if (!isUndefined(from._isAMomentObject)) {\n              to._isAMomentObject = from._isAMomentObject;\n          }\n          if (!isUndefined(from._i)) {\n              to._i = from._i;\n          }\n          if (!isUndefined(from._f)) {\n              to._f = from._f;\n          }\n          if (!isUndefined(from._l)) {\n              to._l = from._l;\n          }\n          if (!isUndefined(from._strict)) {\n              to._strict = from._strict;\n          }\n          if (!isUndefined(from._tzm)) {\n              to._tzm = from._tzm;\n          }\n          if (!isUndefined(from._isUTC)) {\n              to._isUTC = from._isUTC;\n          }\n          if (!isUndefined(from._offset)) {\n              to._offset = from._offset;\n          }\n          if (!isUndefined(from._pf)) {\n              to._pf = getParsingFlags(from);\n          }\n          if (!isUndefined(from._locale)) {\n              to._locale = from._locale;\n          }\n\n          if (momentProperties.length > 0) {\n              for (i in momentProperties) {\n                  prop = momentProperties[i];\n                  val = from[prop];\n                  if (!isUndefined(val)) {\n                      to[prop] = val;\n                  }\n              }\n          }\n\n          return to;\n      }\n\n      var updateInProgress = false;\n\n      // Moment prototype object\n      function Moment(config) {\n          copyConfig(this, config);\n          this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n          // Prevent infinite loop in case updateOffset creates new moment\n          // objects.\n          if (updateInProgress === false) {\n              updateInProgress = true;\n              utils_hooks__hooks.updateOffset(this);\n              updateInProgress = false;\n          }\n      }\n\n      function isMoment (obj) {\n          return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n      }\n\n      function absFloor (number) {\n          if (number < 0) {\n              // -0 -> 0\n              return Math.ceil(number) || 0;\n          } else {\n              return Math.floor(number);\n          }\n      }\n\n      function toInt(argumentForCoercion) {\n          var coercedNumber = +argumentForCoercion,\n              value = 0;\n\n          if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n              value = absFloor(coercedNumber);\n          }\n\n          return value;\n      }\n\n      // compare two arrays, return the number of differences\n      function compareArrays(array1, array2, dontConvert) {\n          var len = Math.min(array1.length, array2.length),\n              lengthDiff = Math.abs(array1.length - array2.length),\n              diffs = 0,\n              i;\n          for (i = 0; i < len; i++) {\n              if ((dontConvert && array1[i] !== array2[i]) ||\n                  (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                  diffs++;\n              }\n          }\n          return diffs + lengthDiff;\n      }\n\n      function warn(msg) {\n          if (utils_hooks__hooks.suppressDeprecationWarnings === false &&\n                  (typeof console !==  'undefined') && console.warn) {\n              console.warn('Deprecation warning: ' + msg);\n          }\n      }\n\n      function deprecate(msg, fn) {\n          var firstTime = true;\n\n          return extend(function () {\n              if (utils_hooks__hooks.deprecationHandler != null) {\n                  utils_hooks__hooks.deprecationHandler(null, msg);\n              }\n              if (firstTime) {\n                  var args = [];\n                  var arg;\n                  for (var i = 0; i < arguments.length; i++) {\n                      arg = '';\n                      if (typeof arguments[i] === 'object') {\n                          arg += '\\n[' + i + '] ';\n                          for (var key in arguments[0]) {\n                              arg += key + ': ' + arguments[0][key] + ', ';\n                          }\n                          arg = arg.slice(0, -2); // Remove trailing comma and space\n                      } else {\n                          arg = arguments[i];\n                      }\n                      args.push(arg);\n                  }\n                  warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                  firstTime = false;\n              }\n              return fn.apply(this, arguments);\n          }, fn);\n      }\n\n      var deprecations = {};\n\n      function deprecateSimple(name, msg) {\n          if (utils_hooks__hooks.deprecationHandler != null) {\n              utils_hooks__hooks.deprecationHandler(name, msg);\n          }\n          if (!deprecations[name]) {\n              warn(msg);\n              deprecations[name] = true;\n          }\n      }\n\n      utils_hooks__hooks.suppressDeprecationWarnings = false;\n      utils_hooks__hooks.deprecationHandler = null;\n\n      function isFunction(input) {\n          return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n      }\n\n      function locale_set__set (config) {\n          var prop, i;\n          for (i in config) {\n              prop = config[i];\n              if (isFunction(prop)) {\n                  this[i] = prop;\n              } else {\n                  this['_' + i] = prop;\n              }\n          }\n          this._config = config;\n          // Lenient ordinal parsing accepts just a number in addition to\n          // number + (possibly) stuff coming from _ordinalParseLenient.\n          this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\n      }\n\n      function mergeConfigs(parentConfig, childConfig) {\n          var res = extend({}, parentConfig), prop;\n          for (prop in childConfig) {\n              if (hasOwnProp(childConfig, prop)) {\n                  if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                      res[prop] = {};\n                      extend(res[prop], parentConfig[prop]);\n                      extend(res[prop], childConfig[prop]);\n                  } else if (childConfig[prop] != null) {\n                      res[prop] = childConfig[prop];\n                  } else {\n                      delete res[prop];\n                  }\n              }\n          }\n          for (prop in parentConfig) {\n              if (hasOwnProp(parentConfig, prop) &&\n                      !hasOwnProp(childConfig, prop) &&\n                      isObject(parentConfig[prop])) {\n                  // make sure changes to properties don't modify parent config\n                  res[prop] = extend({}, res[prop]);\n              }\n          }\n          return res;\n      }\n\n      function Locale(config) {\n          if (config != null) {\n              this.set(config);\n          }\n      }\n\n      var keys;\n\n      if (Object.keys) {\n          keys = Object.keys;\n      } else {\n          keys = function (obj) {\n              var i, res = [];\n              for (i in obj) {\n                  if (hasOwnProp(obj, i)) {\n                      res.push(i);\n                  }\n              }\n              return res;\n          };\n      }\n\n      var defaultCalendar = {\n          sameDay : '[Today at] LT',\n          nextDay : '[Tomorrow at] LT',\n          nextWeek : 'dddd [at] LT',\n          lastDay : '[Yesterday at] LT',\n          lastWeek : '[Last] dddd [at] LT',\n          sameElse : 'L'\n      };\n\n      function locale_calendar__calendar (key, mom, now) {\n          var output = this._calendar[key] || this._calendar['sameElse'];\n          return isFunction(output) ? output.call(mom, now) : output;\n      }\n\n      var defaultLongDateFormat = {\n          LTS  : 'h:mm:ss A',\n          LT   : 'h:mm A',\n          L    : 'MM/DD/YYYY',\n          LL   : 'MMMM D, YYYY',\n          LLL  : 'MMMM D, YYYY h:mm A',\n          LLLL : 'dddd, MMMM D, YYYY h:mm A'\n      };\n\n      function longDateFormat (key) {\n          var format = this._longDateFormat[key],\n              formatUpper = this._longDateFormat[key.toUpperCase()];\n\n          if (format || !formatUpper) {\n              return format;\n          }\n\n          this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n              return val.slice(1);\n          });\n\n          return this._longDateFormat[key];\n      }\n\n      var defaultInvalidDate = 'Invalid date';\n\n      function invalidDate () {\n          return this._invalidDate;\n      }\n\n      var defaultOrdinal = '%d';\n      var defaultOrdinalParse = /\\d{1,2}/;\n\n      function ordinal (number) {\n          return this._ordinal.replace('%d', number);\n      }\n\n      var defaultRelativeTime = {\n          future : 'in %s',\n          past   : '%s ago',\n          s  : 'a few seconds',\n          m  : 'a minute',\n          mm : '%d minutes',\n          h  : 'an hour',\n          hh : '%d hours',\n          d  : 'a day',\n          dd : '%d days',\n          M  : 'a month',\n          MM : '%d months',\n          y  : 'a year',\n          yy : '%d years'\n      };\n\n      function relative__relativeTime (number, withoutSuffix, string, isFuture) {\n          var output = this._relativeTime[string];\n          return (isFunction(output)) ?\n              output(number, withoutSuffix, string, isFuture) :\n              output.replace(/%d/i, number);\n      }\n\n      function pastFuture (diff, output) {\n          var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n          return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n      }\n\n      var aliases = {};\n\n      function addUnitAlias (unit, shorthand) {\n          var lowerCase = unit.toLowerCase();\n          aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n      }\n\n      function normalizeUnits(units) {\n          return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n      }\n\n      function normalizeObjectUnits(inputObject) {\n          var normalizedInput = {},\n              normalizedProp,\n              prop;\n\n          for (prop in inputObject) {\n              if (hasOwnProp(inputObject, prop)) {\n                  normalizedProp = normalizeUnits(prop);\n                  if (normalizedProp) {\n                      normalizedInput[normalizedProp] = inputObject[prop];\n                  }\n              }\n          }\n\n          return normalizedInput;\n      }\n\n      var priorities = {};\n\n      function addUnitPriority(unit, priority) {\n          priorities[unit] = priority;\n      }\n\n      function getPrioritizedUnits(unitsObj) {\n          var units = [];\n          for (var u in unitsObj) {\n              units.push({unit: u, priority: priorities[u]});\n          }\n          units.sort(function (a, b) {\n              return a.priority - b.priority;\n          });\n          return units;\n      }\n\n      function makeGetSet (unit, keepTime) {\n          return function (value) {\n              if (value != null) {\n                  get_set__set(this, unit, value);\n                  utils_hooks__hooks.updateOffset(this, keepTime);\n                  return this;\n              } else {\n                  return get_set__get(this, unit);\n              }\n          };\n      }\n\n      function get_set__get (mom, unit) {\n          return mom.isValid() ?\n              mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n      }\n\n      function get_set__set (mom, unit, value) {\n          if (mom.isValid()) {\n              mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n          }\n      }\n\n      // MOMENTS\n\n      function stringGet (units) {\n          units = normalizeUnits(units);\n          if (isFunction(this[units])) {\n              return this[units]();\n          }\n          return this;\n      }\n\n\n      function stringSet (units, value) {\n          if (typeof units === 'object') {\n              units = normalizeObjectUnits(units);\n              var prioritized = getPrioritizedUnits(units);\n              for (var i = 0; i < prioritized.length; i++) {\n                  this[prioritized[i].unit](units[prioritized[i].unit]);\n              }\n          } else {\n              units = normalizeUnits(units);\n              if (isFunction(this[units])) {\n                  return this[units](value);\n              }\n          }\n          return this;\n      }\n\n      function zeroFill(number, targetLength, forceSign) {\n          var absNumber = '' + Math.abs(number),\n              zerosToFill = targetLength - absNumber.length,\n              sign = number >= 0;\n          return (sign ? (forceSign ? '+' : '') : '-') +\n              Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n      }\n\n      var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n      var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n      var formatFunctions = {};\n\n      var formatTokenFunctions = {};\n\n      // token:    'M'\n      // padded:   ['MM', 2]\n      // ordinal:  'Mo'\n      // callback: function () { this.month() + 1 }\n      function addFormatToken (token, padded, ordinal, callback) {\n          var func = callback;\n          if (typeof callback === 'string') {\n              func = function () {\n                  return this[callback]();\n              };\n          }\n          if (token) {\n              formatTokenFunctions[token] = func;\n          }\n          if (padded) {\n              formatTokenFunctions[padded[0]] = function () {\n                  return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n              };\n          }\n          if (ordinal) {\n              formatTokenFunctions[ordinal] = function () {\n                  return this.localeData().ordinal(func.apply(this, arguments), token);\n              };\n          }\n      }\n\n      function removeFormattingTokens(input) {\n          if (input.match(/\\[[\\s\\S]/)) {\n              return input.replace(/^\\[|\\]$/g, '');\n          }\n          return input.replace(/\\\\/g, '');\n      }\n\n      function makeFormatFunction(format) {\n          var array = format.match(formattingTokens), i, length;\n\n          for (i = 0, length = array.length; i < length; i++) {\n              if (formatTokenFunctions[array[i]]) {\n                  array[i] = formatTokenFunctions[array[i]];\n              } else {\n                  array[i] = removeFormattingTokens(array[i]);\n              }\n          }\n\n          return function (mom) {\n              var output = '', i;\n              for (i = 0; i < length; i++) {\n                  output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n              }\n              return output;\n          };\n      }\n\n      // format date using native date object\n      function formatMoment(m, format) {\n          if (!m.isValid()) {\n              return m.localeData().invalidDate();\n          }\n\n          format = expandFormat(format, m.localeData());\n          formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n          return formatFunctions[format](m);\n      }\n\n      function expandFormat(format, locale) {\n          var i = 5;\n\n          function replaceLongDateFormatTokens(input) {\n              return locale.longDateFormat(input) || input;\n          }\n\n          localFormattingTokens.lastIndex = 0;\n          while (i >= 0 && localFormattingTokens.test(format)) {\n              format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n              localFormattingTokens.lastIndex = 0;\n              i -= 1;\n          }\n\n          return format;\n      }\n\n      var match1         = /\\d/;            //       0 - 9\n      var match2         = /\\d\\d/;          //      00 - 99\n      var match3         = /\\d{3}/;         //     000 - 999\n      var match4         = /\\d{4}/;         //    0000 - 9999\n      var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n      var match1to2      = /\\d\\d?/;         //       0 - 99\n      var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n      var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n      var match1to3      = /\\d{1,3}/;       //       0 - 999\n      var match1to4      = /\\d{1,4}/;       //       0 - 9999\n      var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n      var matchUnsigned  = /\\d+/;           //       0 - inf\n      var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n      var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n      var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n      var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n      // any word (or two) characters or numbers including two/three word month in arabic.\n      // includes scottish gaelic two word and hyphenated months\n      var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\n      var regexes = {};\n\n      function addRegexToken (token, regex, strictRegex) {\n          regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n              return (isStrict && strictRegex) ? strictRegex : regex;\n          };\n      }\n\n      function getParseRegexForToken (token, config) {\n          if (!hasOwnProp(regexes, token)) {\n              return new RegExp(unescapeFormat(token));\n          }\n\n          return regexes[token](config._strict, config._locale);\n      }\n\n      // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n      function unescapeFormat(s) {\n          return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n              return p1 || p2 || p3 || p4;\n          }));\n      }\n\n      function regexEscape(s) {\n          return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n      }\n\n      var tokens = {};\n\n      function addParseToken (token, callback) {\n          var i, func = callback;\n          if (typeof token === 'string') {\n              token = [token];\n          }\n          if (typeof callback === 'number') {\n              func = function (input, array) {\n                  array[callback] = toInt(input);\n              };\n          }\n          for (i = 0; i < token.length; i++) {\n              tokens[token[i]] = func;\n          }\n      }\n\n      function addWeekParseToken (token, callback) {\n          addParseToken(token, function (input, array, config, token) {\n              config._w = config._w || {};\n              callback(input, config._w, config, token);\n          });\n      }\n\n      function addTimeToArrayFromToken(token, input, config) {\n          if (input != null && hasOwnProp(tokens, token)) {\n              tokens[token](input, config._a, config, token);\n          }\n      }\n\n      var YEAR = 0;\n      var MONTH = 1;\n      var DATE = 2;\n      var HOUR = 3;\n      var MINUTE = 4;\n      var SECOND = 5;\n      var MILLISECOND = 6;\n      var WEEK = 7;\n      var WEEKDAY = 8;\n\n      var indexOf;\n\n      if (Array.prototype.indexOf) {\n          indexOf = Array.prototype.indexOf;\n      } else {\n          indexOf = function (o) {\n              // I know\n              var i;\n              for (i = 0; i < this.length; ++i) {\n                  if (this[i] === o) {\n                      return i;\n                  }\n              }\n              return -1;\n          };\n      }\n\n      function daysInMonth(year, month) {\n          return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n      }\n\n      // FORMATTING\n\n      addFormatToken('M', ['MM', 2], 'Mo', function () {\n          return this.month() + 1;\n      });\n\n      addFormatToken('MMM', 0, 0, function (format) {\n          return this.localeData().monthsShort(this, format);\n      });\n\n      addFormatToken('MMMM', 0, 0, function (format) {\n          return this.localeData().months(this, format);\n      });\n\n      // ALIASES\n\n      addUnitAlias('month', 'M');\n\n      // PRIORITY\n\n      addUnitPriority('month', 8);\n\n      // PARSING\n\n      addRegexToken('M',    match1to2);\n      addRegexToken('MM',   match1to2, match2);\n      addRegexToken('MMM',  function (isStrict, locale) {\n          return locale.monthsShortRegex(isStrict);\n      });\n      addRegexToken('MMMM', function (isStrict, locale) {\n          return locale.monthsRegex(isStrict);\n      });\n\n      addParseToken(['M', 'MM'], function (input, array) {\n          array[MONTH] = toInt(input) - 1;\n      });\n\n      addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n          var month = config._locale.monthsParse(input, token, config._strict);\n          // if we didn't find a month name, mark the date as invalid.\n          if (month != null) {\n              array[MONTH] = month;\n          } else {\n              getParsingFlags(config).invalidMonth = input;\n          }\n      });\n\n      // LOCALES\n\n      var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n      var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n      function localeMonths (m, format) {\n          if (!m) {\n              return this._months;\n          }\n          return isArray(this._months) ? this._months[m.month()] :\n              this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n      }\n\n      var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n      function localeMonthsShort (m, format) {\n          if (!m) {\n              return this._monthsShort;\n          }\n          return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n              this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n      }\n\n      function units_month__handleStrictParse(monthName, format, strict) {\n          var i, ii, mom, llc = monthName.toLocaleLowerCase();\n          if (!this._monthsParse) {\n              // this is not used\n              this._monthsParse = [];\n              this._longMonthsParse = [];\n              this._shortMonthsParse = [];\n              for (i = 0; i < 12; ++i) {\n                  mom = create_utc__createUTC([2000, i]);\n                  this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                  this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n              }\n          }\n\n          if (strict) {\n              if (format === 'MMM') {\n                  ii = indexOf.call(this._shortMonthsParse, llc);\n                  return ii !== -1 ? ii : null;\n              } else {\n                  ii = indexOf.call(this._longMonthsParse, llc);\n                  return ii !== -1 ? ii : null;\n              }\n          } else {\n              if (format === 'MMM') {\n                  ii = indexOf.call(this._shortMonthsParse, llc);\n                  if (ii !== -1) {\n                      return ii;\n                  }\n                  ii = indexOf.call(this._longMonthsParse, llc);\n                  return ii !== -1 ? ii : null;\n              } else {\n                  ii = indexOf.call(this._longMonthsParse, llc);\n                  if (ii !== -1) {\n                      return ii;\n                  }\n                  ii = indexOf.call(this._shortMonthsParse, llc);\n                  return ii !== -1 ? ii : null;\n              }\n          }\n      }\n\n      function localeMonthsParse (monthName, format, strict) {\n          var i, mom, regex;\n\n          if (this._monthsParseExact) {\n              return units_month__handleStrictParse.call(this, monthName, format, strict);\n          }\n\n          if (!this._monthsParse) {\n              this._monthsParse = [];\n              this._longMonthsParse = [];\n              this._shortMonthsParse = [];\n          }\n\n          // TODO: add sorting\n          // Sorting makes sure if one month (or abbr) is a prefix of another\n          // see sorting in computeMonthsParse\n          for (i = 0; i < 12; i++) {\n              // make the regex if we don't have it already\n              mom = create_utc__createUTC([2000, i]);\n              if (strict && !this._longMonthsParse[i]) {\n                  this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                  this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n              }\n              if (!strict && !this._monthsParse[i]) {\n                  regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                  this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n              }\n              // test the regex\n              if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                  return i;\n              } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                  return i;\n              } else if (!strict && this._monthsParse[i].test(monthName)) {\n                  return i;\n              }\n          }\n      }\n\n      // MOMENTS\n\n      function setMonth (mom, value) {\n          var dayOfMonth;\n\n          if (!mom.isValid()) {\n              // No op\n              return mom;\n          }\n\n          if (typeof value === 'string') {\n              if (/^\\d+$/.test(value)) {\n                  value = toInt(value);\n              } else {\n                  value = mom.localeData().monthsParse(value);\n                  // TODO: Another silent failure?\n                  if (typeof value !== 'number') {\n                      return mom;\n                  }\n              }\n          }\n\n          dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n          mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n          return mom;\n      }\n\n      function getSetMonth (value) {\n          if (value != null) {\n              setMonth(this, value);\n              utils_hooks__hooks.updateOffset(this, true);\n              return this;\n          } else {\n              return get_set__get(this, 'Month');\n          }\n      }\n\n      function getDaysInMonth () {\n          return daysInMonth(this.year(), this.month());\n      }\n\n      var defaultMonthsShortRegex = matchWord;\n      function monthsShortRegex (isStrict) {\n          if (this._monthsParseExact) {\n              if (!hasOwnProp(this, '_monthsRegex')) {\n                  computeMonthsParse.call(this);\n              }\n              if (isStrict) {\n                  return this._monthsShortStrictRegex;\n              } else {\n                  return this._monthsShortRegex;\n              }\n          } else {\n              if (!hasOwnProp(this, '_monthsShortRegex')) {\n                  this._monthsShortRegex = defaultMonthsShortRegex;\n              }\n              return this._monthsShortStrictRegex && isStrict ?\n                  this._monthsShortStrictRegex : this._monthsShortRegex;\n          }\n      }\n\n      var defaultMonthsRegex = matchWord;\n      function monthsRegex (isStrict) {\n          if (this._monthsParseExact) {\n              if (!hasOwnProp(this, '_monthsRegex')) {\n                  computeMonthsParse.call(this);\n              }\n              if (isStrict) {\n                  return this._monthsStrictRegex;\n              } else {\n                  return this._monthsRegex;\n              }\n          } else {\n              if (!hasOwnProp(this, '_monthsRegex')) {\n                  this._monthsRegex = defaultMonthsRegex;\n              }\n              return this._monthsStrictRegex && isStrict ?\n                  this._monthsStrictRegex : this._monthsRegex;\n          }\n      }\n\n      function computeMonthsParse () {\n          function cmpLenRev(a, b) {\n              return b.length - a.length;\n          }\n\n          var shortPieces = [], longPieces = [], mixedPieces = [],\n              i, mom;\n          for (i = 0; i < 12; i++) {\n              // make the regex if we don't have it already\n              mom = create_utc__createUTC([2000, i]);\n              shortPieces.push(this.monthsShort(mom, ''));\n              longPieces.push(this.months(mom, ''));\n              mixedPieces.push(this.months(mom, ''));\n              mixedPieces.push(this.monthsShort(mom, ''));\n          }\n          // Sorting makes sure if one month (or abbr) is a prefix of another it\n          // will match the longer piece.\n          shortPieces.sort(cmpLenRev);\n          longPieces.sort(cmpLenRev);\n          mixedPieces.sort(cmpLenRev);\n          for (i = 0; i < 12; i++) {\n              shortPieces[i] = regexEscape(shortPieces[i]);\n              longPieces[i] = regexEscape(longPieces[i]);\n          }\n          for (i = 0; i < 24; i++) {\n              mixedPieces[i] = regexEscape(mixedPieces[i]);\n          }\n\n          this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n          this._monthsShortRegex = this._monthsRegex;\n          this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n          this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n      }\n\n      // FORMATTING\n\n      addFormatToken('Y', 0, 0, function () {\n          var y = this.year();\n          return y <= 9999 ? '' + y : '+' + y;\n      });\n\n      addFormatToken(0, ['YY', 2], 0, function () {\n          return this.year() % 100;\n      });\n\n      addFormatToken(0, ['YYYY',   4],       0, 'year');\n      addFormatToken(0, ['YYYYY',  5],       0, 'year');\n      addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n      // ALIASES\n\n      addUnitAlias('year', 'y');\n\n      // PRIORITIES\n\n      addUnitPriority('year', 1);\n\n      // PARSING\n\n      addRegexToken('Y',      matchSigned);\n      addRegexToken('YY',     match1to2, match2);\n      addRegexToken('YYYY',   match1to4, match4);\n      addRegexToken('YYYYY',  match1to6, match6);\n      addRegexToken('YYYYYY', match1to6, match6);\n\n      addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n      addParseToken('YYYY', function (input, array) {\n          array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);\n      });\n      addParseToken('YY', function (input, array) {\n          array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);\n      });\n      addParseToken('Y', function (input, array) {\n          array[YEAR] = parseInt(input, 10);\n      });\n\n      // HELPERS\n\n      function daysInYear(year) {\n          return isLeapYear(year) ? 366 : 365;\n      }\n\n      function isLeapYear(year) {\n          return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n      }\n\n      // HOOKS\n\n      utils_hooks__hooks.parseTwoDigitYear = function (input) {\n          return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n      };\n\n      // MOMENTS\n\n      var getSetYear = makeGetSet('FullYear', true);\n\n      function getIsLeapYear () {\n          return isLeapYear(this.year());\n      }\n\n      function createDate (y, m, d, h, M, s, ms) {\n          //can't just apply() to create a date:\n          //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n          var date = new Date(y, m, d, h, M, s, ms);\n\n          //the date constructor remaps years 0-99 to 1900-1999\n          if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n              date.setFullYear(y);\n          }\n          return date;\n      }\n\n      function createUTCDate (y) {\n          var date = new Date(Date.UTC.apply(null, arguments));\n\n          //the Date.UTC function remaps years 0-99 to 1900-1999\n          if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n              date.setUTCFullYear(y);\n          }\n          return date;\n      }\n\n      // start-of-first-week - start-of-year\n      function firstWeekOffset(year, dow, doy) {\n          var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n              fwd = 7 + dow - doy,\n              // first-week day local weekday -- which local weekday is fwd\n              fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n          return -fwdlw + fwd - 1;\n      }\n\n      //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n      function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n          var localWeekday = (7 + weekday - dow) % 7,\n              weekOffset = firstWeekOffset(year, dow, doy),\n              dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n              resYear, resDayOfYear;\n\n          if (dayOfYear <= 0) {\n              resYear = year - 1;\n              resDayOfYear = daysInYear(resYear) + dayOfYear;\n          } else if (dayOfYear > daysInYear(year)) {\n              resYear = year + 1;\n              resDayOfYear = dayOfYear - daysInYear(year);\n          } else {\n              resYear = year;\n              resDayOfYear = dayOfYear;\n          }\n\n          return {\n              year: resYear,\n              dayOfYear: resDayOfYear\n          };\n      }\n\n      function weekOfYear(mom, dow, doy) {\n          var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n              week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n              resWeek, resYear;\n\n          if (week < 1) {\n              resYear = mom.year() - 1;\n              resWeek = week + weeksInYear(resYear, dow, doy);\n          } else if (week > weeksInYear(mom.year(), dow, doy)) {\n              resWeek = week - weeksInYear(mom.year(), dow, doy);\n              resYear = mom.year() + 1;\n          } else {\n              resYear = mom.year();\n              resWeek = week;\n          }\n\n          return {\n              week: resWeek,\n              year: resYear\n          };\n      }\n\n      function weeksInYear(year, dow, doy) {\n          var weekOffset = firstWeekOffset(year, dow, doy),\n              weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n          return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n      }\n\n      // FORMATTING\n\n      addFormatToken('w', ['ww', 2], 'wo', 'week');\n      addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n      // ALIASES\n\n      addUnitAlias('week', 'w');\n      addUnitAlias('isoWeek', 'W');\n\n      // PRIORITIES\n\n      addUnitPriority('week', 5);\n      addUnitPriority('isoWeek', 5);\n\n      // PARSING\n\n      addRegexToken('w',  match1to2);\n      addRegexToken('ww', match1to2, match2);\n      addRegexToken('W',  match1to2);\n      addRegexToken('WW', match1to2, match2);\n\n      addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n          week[token.substr(0, 1)] = toInt(input);\n      });\n\n      // HELPERS\n\n      // LOCALES\n\n      function localeWeek (mom) {\n          return weekOfYear(mom, this._week.dow, this._week.doy).week;\n      }\n\n      var defaultLocaleWeek = {\n          dow : 0, // Sunday is the first day of the week.\n          doy : 6  // The week that contains Jan 1st is the first week of the year.\n      };\n\n      function localeFirstDayOfWeek () {\n          return this._week.dow;\n      }\n\n      function localeFirstDayOfYear () {\n          return this._week.doy;\n      }\n\n      // MOMENTS\n\n      function getSetWeek (input) {\n          var week = this.localeData().week(this);\n          return input == null ? week : this.add((input - week) * 7, 'd');\n      }\n\n      function getSetISOWeek (input) {\n          var week = weekOfYear(this, 1, 4).week;\n          return input == null ? week : this.add((input - week) * 7, 'd');\n      }\n\n      // FORMATTING\n\n      addFormatToken('d', 0, 'do', 'day');\n\n      addFormatToken('dd', 0, 0, function (format) {\n          return this.localeData().weekdaysMin(this, format);\n      });\n\n      addFormatToken('ddd', 0, 0, function (format) {\n          return this.localeData().weekdaysShort(this, format);\n      });\n\n      addFormatToken('dddd', 0, 0, function (format) {\n          return this.localeData().weekdays(this, format);\n      });\n\n      addFormatToken('e', 0, 0, 'weekday');\n      addFormatToken('E', 0, 0, 'isoWeekday');\n\n      // ALIASES\n\n      addUnitAlias('day', 'd');\n      addUnitAlias('weekday', 'e');\n      addUnitAlias('isoWeekday', 'E');\n\n      // PRIORITY\n      addUnitPriority('day', 11);\n      addUnitPriority('weekday', 11);\n      addUnitPriority('isoWeekday', 11);\n\n      // PARSING\n\n      addRegexToken('d',    match1to2);\n      addRegexToken('e',    match1to2);\n      addRegexToken('E',    match1to2);\n      addRegexToken('dd',   function (isStrict, locale) {\n          return locale.weekdaysMinRegex(isStrict);\n      });\n      addRegexToken('ddd',   function (isStrict, locale) {\n          return locale.weekdaysShortRegex(isStrict);\n      });\n      addRegexToken('dddd',   function (isStrict, locale) {\n          return locale.weekdaysRegex(isStrict);\n      });\n\n      addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n          var weekday = config._locale.weekdaysParse(input, token, config._strict);\n          // if we didn't get a weekday name, mark the date as invalid\n          if (weekday != null) {\n              week.d = weekday;\n          } else {\n              getParsingFlags(config).invalidWeekday = input;\n          }\n      });\n\n      addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n          week[token] = toInt(input);\n      });\n\n      // HELPERS\n\n      function parseWeekday(input, locale) {\n          if (typeof input !== 'string') {\n              return input;\n          }\n\n          if (!isNaN(input)) {\n              return parseInt(input, 10);\n          }\n\n          input = locale.weekdaysParse(input);\n          if (typeof input === 'number') {\n              return input;\n          }\n\n          return null;\n      }\n\n      function parseIsoWeekday(input, locale) {\n          if (typeof input === 'string') {\n              return locale.weekdaysParse(input) % 7 || 7;\n          }\n          return isNaN(input) ? null : input;\n      }\n\n      // LOCALES\n\n      var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n      function localeWeekdays (m, format) {\n          if (!m) {\n              return this._weekdays;\n          }\n          return isArray(this._weekdays) ? this._weekdays[m.day()] :\n              this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n      }\n\n      var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n      function localeWeekdaysShort (m) {\n          return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n      }\n\n      var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n      function localeWeekdaysMin (m) {\n          return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n      }\n\n      function day_of_week__handleStrictParse(weekdayName, format, strict) {\n          var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n          if (!this._weekdaysParse) {\n              this._weekdaysParse = [];\n              this._shortWeekdaysParse = [];\n              this._minWeekdaysParse = [];\n\n              for (i = 0; i < 7; ++i) {\n                  mom = create_utc__createUTC([2000, 1]).day(i);\n                  this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                  this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                  this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n              }\n          }\n\n          if (strict) {\n              if (format === 'dddd') {\n                  ii = indexOf.call(this._weekdaysParse, llc);\n                  return ii !== -1 ? ii : null;\n              } else if (format === 'ddd') {\n                  ii = indexOf.call(this._shortWeekdaysParse, llc);\n                  return ii !== -1 ? ii : null;\n              } else {\n                  ii = indexOf.call(this._minWeekdaysParse, llc);\n                  return ii !== -1 ? ii : null;\n              }\n          } else {\n              if (format === 'dddd') {\n                  ii = indexOf.call(this._weekdaysParse, llc);\n                  if (ii !== -1) {\n                      return ii;\n                  }\n                  ii = indexOf.call(this._shortWeekdaysParse, llc);\n                  if (ii !== -1) {\n                      return ii;\n                  }\n                  ii = indexOf.call(this._minWeekdaysParse, llc);\n                  return ii !== -1 ? ii : null;\n              } else if (format === 'ddd') {\n                  ii = indexOf.call(this._shortWeekdaysParse, llc);\n                  if (ii !== -1) {\n                      return ii;\n                  }\n                  ii = indexOf.call(this._weekdaysParse, llc);\n                  if (ii !== -1) {\n                      return ii;\n                  }\n                  ii = indexOf.call(this._minWeekdaysParse, llc);\n                  return ii !== -1 ? ii : null;\n              } else {\n                  ii = indexOf.call(this._minWeekdaysParse, llc);\n                  if (ii !== -1) {\n                      return ii;\n                  }\n                  ii = indexOf.call(this._weekdaysParse, llc);\n                  if (ii !== -1) {\n                      return ii;\n                  }\n                  ii = indexOf.call(this._shortWeekdaysParse, llc);\n                  return ii !== -1 ? ii : null;\n              }\n          }\n      }\n\n      function localeWeekdaysParse (weekdayName, format, strict) {\n          var i, mom, regex;\n\n          if (this._weekdaysParseExact) {\n              return day_of_week__handleStrictParse.call(this, weekdayName, format, strict);\n          }\n\n          if (!this._weekdaysParse) {\n              this._weekdaysParse = [];\n              this._minWeekdaysParse = [];\n              this._shortWeekdaysParse = [];\n              this._fullWeekdaysParse = [];\n          }\n\n          for (i = 0; i < 7; i++) {\n              // make the regex if we don't have it already\n\n              mom = create_utc__createUTC([2000, 1]).day(i);\n              if (strict && !this._fullWeekdaysParse[i]) {\n                  this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n                  this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n                  this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n              }\n              if (!this._weekdaysParse[i]) {\n                  regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                  this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n              }\n              // test the regex\n              if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                  return i;\n              } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                  return i;\n              } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                  return i;\n              } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                  return i;\n              }\n          }\n      }\n\n      // MOMENTS\n\n      function getSetDayOfWeek (input) {\n          if (!this.isValid()) {\n              return input != null ? this : NaN;\n          }\n          var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n          if (input != null) {\n              input = parseWeekday(input, this.localeData());\n              return this.add(input - day, 'd');\n          } else {\n              return day;\n          }\n      }\n\n      function getSetLocaleDayOfWeek (input) {\n          if (!this.isValid()) {\n              return input != null ? this : NaN;\n          }\n          var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n          return input == null ? weekday : this.add(input - weekday, 'd');\n      }\n\n      function getSetISODayOfWeek (input) {\n          if (!this.isValid()) {\n              return input != null ? this : NaN;\n          }\n\n          // behaves the same as moment#day except\n          // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n          // as a setter, sunday should belong to the previous week.\n\n          if (input != null) {\n              var weekday = parseIsoWeekday(input, this.localeData());\n              return this.day(this.day() % 7 ? weekday : weekday - 7);\n          } else {\n              return this.day() || 7;\n          }\n      }\n\n      var defaultWeekdaysRegex = matchWord;\n      function weekdaysRegex (isStrict) {\n          if (this._weekdaysParseExact) {\n              if (!hasOwnProp(this, '_weekdaysRegex')) {\n                  computeWeekdaysParse.call(this);\n              }\n              if (isStrict) {\n                  return this._weekdaysStrictRegex;\n              } else {\n                  return this._weekdaysRegex;\n              }\n          } else {\n              if (!hasOwnProp(this, '_weekdaysRegex')) {\n                  this._weekdaysRegex = defaultWeekdaysRegex;\n              }\n              return this._weekdaysStrictRegex && isStrict ?\n                  this._weekdaysStrictRegex : this._weekdaysRegex;\n          }\n      }\n\n      var defaultWeekdaysShortRegex = matchWord;\n      function weekdaysShortRegex (isStrict) {\n          if (this._weekdaysParseExact) {\n              if (!hasOwnProp(this, '_weekdaysRegex')) {\n                  computeWeekdaysParse.call(this);\n              }\n              if (isStrict) {\n                  return this._weekdaysShortStrictRegex;\n              } else {\n                  return this._weekdaysShortRegex;\n              }\n          } else {\n              if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                  this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n              }\n              return this._weekdaysShortStrictRegex && isStrict ?\n                  this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n          }\n      }\n\n      var defaultWeekdaysMinRegex = matchWord;\n      function weekdaysMinRegex (isStrict) {\n          if (this._weekdaysParseExact) {\n              if (!hasOwnProp(this, '_weekdaysRegex')) {\n                  computeWeekdaysParse.call(this);\n              }\n              if (isStrict) {\n                  return this._weekdaysMinStrictRegex;\n              } else {\n                  return this._weekdaysMinRegex;\n              }\n          } else {\n              if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                  this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n              }\n              return this._weekdaysMinStrictRegex && isStrict ?\n                  this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n          }\n      }\n\n\n      function computeWeekdaysParse () {\n          function cmpLenRev(a, b) {\n              return b.length - a.length;\n          }\n\n          var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n              i, mom, minp, shortp, longp;\n          for (i = 0; i < 7; i++) {\n              // make the regex if we don't have it already\n              mom = create_utc__createUTC([2000, 1]).day(i);\n              minp = this.weekdaysMin(mom, '');\n              shortp = this.weekdaysShort(mom, '');\n              longp = this.weekdays(mom, '');\n              minPieces.push(minp);\n              shortPieces.push(shortp);\n              longPieces.push(longp);\n              mixedPieces.push(minp);\n              mixedPieces.push(shortp);\n              mixedPieces.push(longp);\n          }\n          // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n          // will match the longer piece.\n          minPieces.sort(cmpLenRev);\n          shortPieces.sort(cmpLenRev);\n          longPieces.sort(cmpLenRev);\n          mixedPieces.sort(cmpLenRev);\n          for (i = 0; i < 7; i++) {\n              shortPieces[i] = regexEscape(shortPieces[i]);\n              longPieces[i] = regexEscape(longPieces[i]);\n              mixedPieces[i] = regexEscape(mixedPieces[i]);\n          }\n\n          this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n          this._weekdaysShortRegex = this._weekdaysRegex;\n          this._weekdaysMinRegex = this._weekdaysRegex;\n\n          this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n          this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n          this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n      }\n\n      // FORMATTING\n\n      function hFormat() {\n          return this.hours() % 12 || 12;\n      }\n\n      function kFormat() {\n          return this.hours() || 24;\n      }\n\n      addFormatToken('H', ['HH', 2], 0, 'hour');\n      addFormatToken('h', ['hh', 2], 0, hFormat);\n      addFormatToken('k', ['kk', 2], 0, kFormat);\n\n      addFormatToken('hmm', 0, 0, function () {\n          return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n      });\n\n      addFormatToken('hmmss', 0, 0, function () {\n          return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n              zeroFill(this.seconds(), 2);\n      });\n\n      addFormatToken('Hmm', 0, 0, function () {\n          return '' + this.hours() + zeroFill(this.minutes(), 2);\n      });\n\n      addFormatToken('Hmmss', 0, 0, function () {\n          return '' + this.hours() + zeroFill(this.minutes(), 2) +\n              zeroFill(this.seconds(), 2);\n      });\n\n      function meridiem (token, lowercase) {\n          addFormatToken(token, 0, 0, function () {\n              return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n          });\n      }\n\n      meridiem('a', true);\n      meridiem('A', false);\n\n      // ALIASES\n\n      addUnitAlias('hour', 'h');\n\n      // PRIORITY\n      addUnitPriority('hour', 13);\n\n      // PARSING\n\n      function matchMeridiem (isStrict, locale) {\n          return locale._meridiemParse;\n      }\n\n      addRegexToken('a',  matchMeridiem);\n      addRegexToken('A',  matchMeridiem);\n      addRegexToken('H',  match1to2);\n      addRegexToken('h',  match1to2);\n      addRegexToken('HH', match1to2, match2);\n      addRegexToken('hh', match1to2, match2);\n\n      addRegexToken('hmm', match3to4);\n      addRegexToken('hmmss', match5to6);\n      addRegexToken('Hmm', match3to4);\n      addRegexToken('Hmmss', match5to6);\n\n      addParseToken(['H', 'HH'], HOUR);\n      addParseToken(['a', 'A'], function (input, array, config) {\n          config._isPm = config._locale.isPM(input);\n          config._meridiem = input;\n      });\n      addParseToken(['h', 'hh'], function (input, array, config) {\n          array[HOUR] = toInt(input);\n          getParsingFlags(config).bigHour = true;\n      });\n      addParseToken('hmm', function (input, array, config) {\n          var pos = input.length - 2;\n          array[HOUR] = toInt(input.substr(0, pos));\n          array[MINUTE] = toInt(input.substr(pos));\n          getParsingFlags(config).bigHour = true;\n      });\n      addParseToken('hmmss', function (input, array, config) {\n          var pos1 = input.length - 4;\n          var pos2 = input.length - 2;\n          array[HOUR] = toInt(input.substr(0, pos1));\n          array[MINUTE] = toInt(input.substr(pos1, 2));\n          array[SECOND] = toInt(input.substr(pos2));\n          getParsingFlags(config).bigHour = true;\n      });\n      addParseToken('Hmm', function (input, array, config) {\n          var pos = input.length - 2;\n          array[HOUR] = toInt(input.substr(0, pos));\n          array[MINUTE] = toInt(input.substr(pos));\n      });\n      addParseToken('Hmmss', function (input, array, config) {\n          var pos1 = input.length - 4;\n          var pos2 = input.length - 2;\n          array[HOUR] = toInt(input.substr(0, pos1));\n          array[MINUTE] = toInt(input.substr(pos1, 2));\n          array[SECOND] = toInt(input.substr(pos2));\n      });\n\n      // LOCALES\n\n      function localeIsPM (input) {\n          // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n          // Using charAt should be more compatible.\n          return ((input + '').toLowerCase().charAt(0) === 'p');\n      }\n\n      var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n      function localeMeridiem (hours, minutes, isLower) {\n          if (hours > 11) {\n              return isLower ? 'pm' : 'PM';\n          } else {\n              return isLower ? 'am' : 'AM';\n          }\n      }\n\n\n      // MOMENTS\n\n      // Setting the hour should keep the time, because the user explicitly\n      // specified which hour he wants. So trying to maintain the same hour (in\n      // a new timezone) makes sense. Adding/subtracting hours does not follow\n      // this rule.\n      var getSetHour = makeGetSet('Hours', true);\n\n      var baseConfig = {\n          calendar: defaultCalendar,\n          longDateFormat: defaultLongDateFormat,\n          invalidDate: defaultInvalidDate,\n          ordinal: defaultOrdinal,\n          ordinalParse: defaultOrdinalParse,\n          relativeTime: defaultRelativeTime,\n\n          months: defaultLocaleMonths,\n          monthsShort: defaultLocaleMonthsShort,\n\n          week: defaultLocaleWeek,\n\n          weekdays: defaultLocaleWeekdays,\n          weekdaysMin: defaultLocaleWeekdaysMin,\n          weekdaysShort: defaultLocaleWeekdaysShort,\n\n          meridiemParse: defaultLocaleMeridiemParse\n      };\n\n      // internal storage for locale config files\n      var locales = {};\n      var globalLocale;\n\n      function normalizeLocale(key) {\n          return key ? key.toLowerCase().replace('_', '-') : key;\n      }\n\n      // pick the locale from the array\n      // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n      // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n      function chooseLocale(names) {\n          var i = 0, j, next, locale, split;\n\n          while (i < names.length) {\n              split = normalizeLocale(names[i]).split('-');\n              j = split.length;\n              next = normalizeLocale(names[i + 1]);\n              next = next ? next.split('-') : null;\n              while (j > 0) {\n                  locale = loadLocale(split.slice(0, j).join('-'));\n                  if (locale) {\n                      return locale;\n                  }\n                  if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                      //the next array item is better than a shallower substring of this one\n                      break;\n                  }\n                  j--;\n              }\n              i++;\n          }\n          return null;\n      }\n\n      function loadLocale(name) {\n          var oldLocale = null;\n          // TODO: Find a better way to register and load all the locales in Node\n          if (!locales[name] && (typeof module !== 'undefined') &&\n                  module && module.exports) {\n              try {\n                  oldLocale = globalLocale._abbr;\n                  !(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./locale\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n                  // because defineLocale currently also sets the global locale, we\n                  // want to undo that for lazy loaded locales\n                  locale_locales__getSetGlobalLocale(oldLocale);\n              } catch (e) { }\n          }\n          return locales[name];\n      }\n\n      // This function will load locale and then set the global locale.  If\n      // no arguments are passed in, it will simply return the current global\n      // locale key.\n      function locale_locales__getSetGlobalLocale (key, values) {\n          var data;\n          if (key) {\n              if (isUndefined(values)) {\n                  data = locale_locales__getLocale(key);\n              }\n              else {\n                  data = defineLocale(key, values);\n              }\n\n              if (data) {\n                  // moment.duration._locale = moment._locale = data;\n                  globalLocale = data;\n              }\n          }\n\n          return globalLocale._abbr;\n      }\n\n      function defineLocale (name, config) {\n          if (config !== null) {\n              var parentConfig = baseConfig;\n              config.abbr = name;\n              if (locales[name] != null) {\n                  deprecateSimple('defineLocaleOverride',\n                          'use moment.updateLocale(localeName, config) to change ' +\n                          'an existing locale. moment.defineLocale(localeName, ' +\n                          'config) should only be used for creating a new locale ' +\n                          'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                  parentConfig = locales[name]._config;\n              } else if (config.parentLocale != null) {\n                  if (locales[config.parentLocale] != null) {\n                      parentConfig = locales[config.parentLocale]._config;\n                  } else {\n                      // treat as if there is no base config\n                      deprecateSimple('parentLocaleUndefined',\n                              'specified parentLocale is not defined yet. See http://momentjs.com/guides/#/warnings/parent-locale/');\n                  }\n              }\n              locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n              // backwards compat for now: also set the locale\n              locale_locales__getSetGlobalLocale(name);\n\n              return locales[name];\n          } else {\n              // useful for testing\n              delete locales[name];\n              return null;\n          }\n      }\n\n      function updateLocale(name, config) {\n          if (config != null) {\n              var locale, parentConfig = baseConfig;\n              // MERGE\n              if (locales[name] != null) {\n                  parentConfig = locales[name]._config;\n              }\n              config = mergeConfigs(parentConfig, config);\n              locale = new Locale(config);\n              locale.parentLocale = locales[name];\n              locales[name] = locale;\n\n              // backwards compat for now: also set the locale\n              locale_locales__getSetGlobalLocale(name);\n          } else {\n              // pass null for config to unupdate, useful for tests\n              if (locales[name] != null) {\n                  if (locales[name].parentLocale != null) {\n                      locales[name] = locales[name].parentLocale;\n                  } else if (locales[name] != null) {\n                      delete locales[name];\n                  }\n              }\n          }\n          return locales[name];\n      }\n\n      // returns locale data\n      function locale_locales__getLocale (key) {\n          var locale;\n\n          if (key && key._locale && key._locale._abbr) {\n              key = key._locale._abbr;\n          }\n\n          if (!key) {\n              return globalLocale;\n          }\n\n          if (!isArray(key)) {\n              //short-circuit everything else\n              locale = loadLocale(key);\n              if (locale) {\n                  return locale;\n              }\n              key = [key];\n          }\n\n          return chooseLocale(key);\n      }\n\n      function locale_locales__listLocales() {\n          return keys(locales);\n      }\n\n      function checkOverflow (m) {\n          var overflow;\n          var a = m._a;\n\n          if (a && getParsingFlags(m).overflow === -2) {\n              overflow =\n                  a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                  a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                  a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                  a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                  a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                  a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                  -1;\n\n              if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                  overflow = DATE;\n              }\n              if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                  overflow = WEEK;\n              }\n              if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                  overflow = WEEKDAY;\n              }\n\n              getParsingFlags(m).overflow = overflow;\n          }\n\n          return m;\n      }\n\n      // iso 8601 regex\n      // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n      var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n      var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n\n      var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n      var isoDates = [\n          ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n          ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n          ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n          ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n          ['YYYY-DDD', /\\d{4}-\\d{3}/],\n          ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n          ['YYYYYYMMDD', /[+-]\\d{10}/],\n          ['YYYYMMDD', /\\d{8}/],\n          // YYYYMM is NOT allowed by the standard\n          ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n          ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n          ['YYYYDDD', /\\d{7}/]\n      ];\n\n      // iso time formats and regexes\n      var isoTimes = [\n          ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n          ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n          ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n          ['HH:mm', /\\d\\d:\\d\\d/],\n          ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n          ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n          ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n          ['HHmm', /\\d\\d\\d\\d/],\n          ['HH', /\\d\\d/]\n      ];\n\n      var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n      // date from iso format\n      function configFromISO(config) {\n          var i, l,\n              string = config._i,\n              match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n              allowTime, dateFormat, timeFormat, tzFormat;\n\n          if (match) {\n              getParsingFlags(config).iso = true;\n\n              for (i = 0, l = isoDates.length; i < l; i++) {\n                  if (isoDates[i][1].exec(match[1])) {\n                      dateFormat = isoDates[i][0];\n                      allowTime = isoDates[i][2] !== false;\n                      break;\n                  }\n              }\n              if (dateFormat == null) {\n                  config._isValid = false;\n                  return;\n              }\n              if (match[3]) {\n                  for (i = 0, l = isoTimes.length; i < l; i++) {\n                      if (isoTimes[i][1].exec(match[3])) {\n                          // match[2] should be 'T' or space\n                          timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                          break;\n                      }\n                  }\n                  if (timeFormat == null) {\n                      config._isValid = false;\n                      return;\n                  }\n              }\n              if (!allowTime && timeFormat != null) {\n                  config._isValid = false;\n                  return;\n              }\n              if (match[4]) {\n                  if (tzRegex.exec(match[4])) {\n                      tzFormat = 'Z';\n                  } else {\n                      config._isValid = false;\n                      return;\n                  }\n              }\n              config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n              configFromStringAndFormat(config);\n          } else {\n              config._isValid = false;\n          }\n      }\n\n      // date from iso format or fallback\n      function configFromString(config) {\n          var matched = aspNetJsonRegex.exec(config._i);\n\n          if (matched !== null) {\n              config._d = new Date(+matched[1]);\n              return;\n          }\n\n          configFromISO(config);\n          if (config._isValid === false) {\n              delete config._isValid;\n              utils_hooks__hooks.createFromInputFallback(config);\n          }\n      }\n\n      utils_hooks__hooks.createFromInputFallback = deprecate(\n          'value provided is not in a recognized ISO format. moment construction falls back to js Date(), ' +\n          'which is not reliable across all browsers and versions. Non ISO date formats are ' +\n          'discouraged and will be removed in an upcoming major release. Please refer to ' +\n          'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n          function (config) {\n              config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n          }\n      );\n\n      // Pick the first defined of two or three arguments.\n      function defaults(a, b, c) {\n          if (a != null) {\n              return a;\n          }\n          if (b != null) {\n              return b;\n          }\n          return c;\n      }\n\n      function currentDateArray(config) {\n          // hooks is actually the exported moment object\n          var nowValue = new Date(utils_hooks__hooks.now());\n          if (config._useUTC) {\n              return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n          }\n          return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n      }\n\n      // convert an array to a date.\n      // the array should mirror the parameters below\n      // note: all values past the year are optional and will default to the lowest possible value.\n      // [year, month, day , hour, minute, second, millisecond]\n      function configFromArray (config) {\n          var i, date, input = [], currentDate, yearToUse;\n\n          if (config._d) {\n              return;\n          }\n\n          currentDate = currentDateArray(config);\n\n          //compute day of the year from weeks and weekdays\n          if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n              dayOfYearFromWeekInfo(config);\n          }\n\n          //if the day of the year is set, figure out what it is\n          if (config._dayOfYear) {\n              yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n              if (config._dayOfYear > daysInYear(yearToUse)) {\n                  getParsingFlags(config)._overflowDayOfYear = true;\n              }\n\n              date = createUTCDate(yearToUse, 0, config._dayOfYear);\n              config._a[MONTH] = date.getUTCMonth();\n              config._a[DATE] = date.getUTCDate();\n          }\n\n          // Default to current date.\n          // * if no year, month, day of month are given, default to today\n          // * if day of month is given, default month and year\n          // * if month is given, default only year\n          // * if year is given, don't default anything\n          for (i = 0; i < 3 && config._a[i] == null; ++i) {\n              config._a[i] = input[i] = currentDate[i];\n          }\n\n          // Zero out whatever was not defaulted, including time\n          for (; i < 7; i++) {\n              config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n          }\n\n          // Check for 24:00:00.000\n          if (config._a[HOUR] === 24 &&\n                  config._a[MINUTE] === 0 &&\n                  config._a[SECOND] === 0 &&\n                  config._a[MILLISECOND] === 0) {\n              config._nextDay = true;\n              config._a[HOUR] = 0;\n          }\n\n          config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n          // Apply timezone offset from input. The actual utcOffset can be changed\n          // with parseZone.\n          if (config._tzm != null) {\n              config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n          }\n\n          if (config._nextDay) {\n              config._a[HOUR] = 24;\n          }\n      }\n\n      function dayOfYearFromWeekInfo(config) {\n          var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n          w = config._w;\n          if (w.GG != null || w.W != null || w.E != null) {\n              dow = 1;\n              doy = 4;\n\n              // TODO: We need to take the current isoWeekYear, but that depends on\n              // how we interpret now (local, utc, fixed offset). So create\n              // a now version of current config (take local/utc/offset flags, and\n              // create now).\n              weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);\n              week = defaults(w.W, 1);\n              weekday = defaults(w.E, 1);\n              if (weekday < 1 || weekday > 7) {\n                  weekdayOverflow = true;\n              }\n          } else {\n              dow = config._locale._week.dow;\n              doy = config._locale._week.doy;\n\n              weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);\n              week = defaults(w.w, 1);\n\n              if (w.d != null) {\n                  // weekday -- low day numbers are considered next week\n                  weekday = w.d;\n                  if (weekday < 0 || weekday > 6) {\n                      weekdayOverflow = true;\n                  }\n              } else if (w.e != null) {\n                  // local weekday -- counting starts from begining of week\n                  weekday = w.e + dow;\n                  if (w.e < 0 || w.e > 6) {\n                      weekdayOverflow = true;\n                  }\n              } else {\n                  // default to begining of week\n                  weekday = dow;\n              }\n          }\n          if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n              getParsingFlags(config)._overflowWeeks = true;\n          } else if (weekdayOverflow != null) {\n              getParsingFlags(config)._overflowWeekday = true;\n          } else {\n              temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n              config._a[YEAR] = temp.year;\n              config._dayOfYear = temp.dayOfYear;\n          }\n      }\n\n      // constant that refers to the ISO standard\n      utils_hooks__hooks.ISO_8601 = function () {};\n\n      // date from string and format string\n      function configFromStringAndFormat(config) {\n          // TODO: Move this to another part of the creation flow to prevent circular deps\n          if (config._f === utils_hooks__hooks.ISO_8601) {\n              configFromISO(config);\n              return;\n          }\n\n          config._a = [];\n          getParsingFlags(config).empty = true;\n\n          // This array is used to make a Date, either with `new Date` or `Date.UTC`\n          var string = '' + config._i,\n              i, parsedInput, tokens, token, skipped,\n              stringLength = string.length,\n              totalParsedInputLength = 0;\n\n          tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n          for (i = 0; i < tokens.length; i++) {\n              token = tokens[i];\n              parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n              // console.log('token', token, 'parsedInput', parsedInput,\n              //         'regex', getParseRegexForToken(token, config));\n              if (parsedInput) {\n                  skipped = string.substr(0, string.indexOf(parsedInput));\n                  if (skipped.length > 0) {\n                      getParsingFlags(config).unusedInput.push(skipped);\n                  }\n                  string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                  totalParsedInputLength += parsedInput.length;\n              }\n              // don't parse if it's not a known token\n              if (formatTokenFunctions[token]) {\n                  if (parsedInput) {\n                      getParsingFlags(config).empty = false;\n                  }\n                  else {\n                      getParsingFlags(config).unusedTokens.push(token);\n                  }\n                  addTimeToArrayFromToken(token, parsedInput, config);\n              }\n              else if (config._strict && !parsedInput) {\n                  getParsingFlags(config).unusedTokens.push(token);\n              }\n          }\n\n          // add remaining unparsed input length to the string\n          getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n          if (string.length > 0) {\n              getParsingFlags(config).unusedInput.push(string);\n          }\n\n          // clear _12h flag if hour is <= 12\n          if (config._a[HOUR] <= 12 &&\n              getParsingFlags(config).bigHour === true &&\n              config._a[HOUR] > 0) {\n              getParsingFlags(config).bigHour = undefined;\n          }\n\n          getParsingFlags(config).parsedDateParts = config._a.slice(0);\n          getParsingFlags(config).meridiem = config._meridiem;\n          // handle meridiem\n          config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n          configFromArray(config);\n          checkOverflow(config);\n      }\n\n\n      function meridiemFixWrap (locale, hour, meridiem) {\n          var isPm;\n\n          if (meridiem == null) {\n              // nothing to do\n              return hour;\n          }\n          if (locale.meridiemHour != null) {\n              return locale.meridiemHour(hour, meridiem);\n          } else if (locale.isPM != null) {\n              // Fallback\n              isPm = locale.isPM(meridiem);\n              if (isPm && hour < 12) {\n                  hour += 12;\n              }\n              if (!isPm && hour === 12) {\n                  hour = 0;\n              }\n              return hour;\n          } else {\n              // this is not supposed to happen\n              return hour;\n          }\n      }\n\n      // date from string and array of format strings\n      function configFromStringAndArray(config) {\n          var tempConfig,\n              bestMoment,\n\n              scoreToBeat,\n              i,\n              currentScore;\n\n          if (config._f.length === 0) {\n              getParsingFlags(config).invalidFormat = true;\n              config._d = new Date(NaN);\n              return;\n          }\n\n          for (i = 0; i < config._f.length; i++) {\n              currentScore = 0;\n              tempConfig = copyConfig({}, config);\n              if (config._useUTC != null) {\n                  tempConfig._useUTC = config._useUTC;\n              }\n              tempConfig._f = config._f[i];\n              configFromStringAndFormat(tempConfig);\n\n              if (!valid__isValid(tempConfig)) {\n                  continue;\n              }\n\n              // if there is any input that was not parsed add a penalty for that format\n              currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n              //or tokens\n              currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n              getParsingFlags(tempConfig).score = currentScore;\n\n              if (scoreToBeat == null || currentScore < scoreToBeat) {\n                  scoreToBeat = currentScore;\n                  bestMoment = tempConfig;\n              }\n          }\n\n          extend(config, bestMoment || tempConfig);\n      }\n\n      function configFromObject(config) {\n          if (config._d) {\n              return;\n          }\n\n          var i = normalizeObjectUnits(config._i);\n          config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n              return obj && parseInt(obj, 10);\n          });\n\n          configFromArray(config);\n      }\n\n      function createFromConfig (config) {\n          var res = new Moment(checkOverflow(prepareConfig(config)));\n          if (res._nextDay) {\n              // Adding is smart enough around DST\n              res.add(1, 'd');\n              res._nextDay = undefined;\n          }\n\n          return res;\n      }\n\n      function prepareConfig (config) {\n          var input = config._i,\n              format = config._f;\n\n          config._locale = config._locale || locale_locales__getLocale(config._l);\n\n          if (input === null || (format === undefined && input === '')) {\n              return valid__createInvalid({nullInput: true});\n          }\n\n          if (typeof input === 'string') {\n              config._i = input = config._locale.preparse(input);\n          }\n\n          if (isMoment(input)) {\n              return new Moment(checkOverflow(input));\n          } else if (isArray(format)) {\n              configFromStringAndArray(config);\n          } else if (isDate(input)) {\n              config._d = input;\n          } else if (format) {\n              configFromStringAndFormat(config);\n          }  else {\n              configFromInput(config);\n          }\n\n          if (!valid__isValid(config)) {\n              config._d = null;\n          }\n\n          return config;\n      }\n\n      function configFromInput(config) {\n          var input = config._i;\n          if (input === undefined) {\n              config._d = new Date(utils_hooks__hooks.now());\n          } else if (isDate(input)) {\n              config._d = new Date(input.valueOf());\n          } else if (typeof input === 'string') {\n              configFromString(config);\n          } else if (isArray(input)) {\n              config._a = map(input.slice(0), function (obj) {\n                  return parseInt(obj, 10);\n              });\n              configFromArray(config);\n          } else if (typeof(input) === 'object') {\n              configFromObject(config);\n          } else if (typeof(input) === 'number') {\n              // from milliseconds\n              config._d = new Date(input);\n          } else {\n              utils_hooks__hooks.createFromInputFallback(config);\n          }\n      }\n\n      function createLocalOrUTC (input, format, locale, strict, isUTC) {\n          var c = {};\n\n          if (typeof(locale) === 'boolean') {\n              strict = locale;\n              locale = undefined;\n          }\n\n          if ((isObject(input) && isObjectEmpty(input)) ||\n                  (isArray(input) && input.length === 0)) {\n              input = undefined;\n          }\n          // object construction must be done this way.\n          // https://github.com/moment/moment/issues/1423\n          c._isAMomentObject = true;\n          c._useUTC = c._isUTC = isUTC;\n          c._l = locale;\n          c._i = input;\n          c._f = format;\n          c._strict = strict;\n\n          return createFromConfig(c);\n      }\n\n      function local__createLocal (input, format, locale, strict) {\n          return createLocalOrUTC(input, format, locale, strict, false);\n      }\n\n      var prototypeMin = deprecate(\n          'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n          function () {\n              var other = local__createLocal.apply(null, arguments);\n              if (this.isValid() && other.isValid()) {\n                  return other < this ? this : other;\n              } else {\n                  return valid__createInvalid();\n              }\n          }\n      );\n\n      var prototypeMax = deprecate(\n          'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n          function () {\n              var other = local__createLocal.apply(null, arguments);\n              if (this.isValid() && other.isValid()) {\n                  return other > this ? this : other;\n              } else {\n                  return valid__createInvalid();\n              }\n          }\n      );\n\n      // Pick a moment m from moments so that m[fn](other) is true for all\n      // other. This relies on the function fn to be transitive.\n      //\n      // moments should either be an array of moment objects or an array, whose\n      // first element is an array of moment objects.\n      function pickBy(fn, moments) {\n          var res, i;\n          if (moments.length === 1 && isArray(moments[0])) {\n              moments = moments[0];\n          }\n          if (!moments.length) {\n              return local__createLocal();\n          }\n          res = moments[0];\n          for (i = 1; i < moments.length; ++i) {\n              if (!moments[i].isValid() || moments[i][fn](res)) {\n                  res = moments[i];\n              }\n          }\n          return res;\n      }\n\n      // TODO: Use [].sort instead?\n      function min () {\n          var args = [].slice.call(arguments, 0);\n\n          return pickBy('isBefore', args);\n      }\n\n      function max () {\n          var args = [].slice.call(arguments, 0);\n\n          return pickBy('isAfter', args);\n      }\n\n      var now = function () {\n          return Date.now ? Date.now() : +(new Date());\n      };\n\n      function Duration (duration) {\n          var normalizedInput = normalizeObjectUnits(duration),\n              years = normalizedInput.year || 0,\n              quarters = normalizedInput.quarter || 0,\n              months = normalizedInput.month || 0,\n              weeks = normalizedInput.week || 0,\n              days = normalizedInput.day || 0,\n              hours = normalizedInput.hour || 0,\n              minutes = normalizedInput.minute || 0,\n              seconds = normalizedInput.second || 0,\n              milliseconds = normalizedInput.millisecond || 0;\n\n          // representation for dateAddRemove\n          this._milliseconds = +milliseconds +\n              seconds * 1e3 + // 1000\n              minutes * 6e4 + // 1000 * 60\n              hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n          // Because of dateAddRemove treats 24 hours as different from a\n          // day when working around DST, we need to store them separately\n          this._days = +days +\n              weeks * 7;\n          // It is impossible translate months into days without knowing\n          // which months you are are talking about, so we have to store\n          // it separately.\n          this._months = +months +\n              quarters * 3 +\n              years * 12;\n\n          this._data = {};\n\n          this._locale = locale_locales__getLocale();\n\n          this._bubble();\n      }\n\n      function isDuration (obj) {\n          return obj instanceof Duration;\n      }\n\n      function absRound (number) {\n          if (number < 0) {\n              return Math.round(-1 * number) * -1;\n          } else {\n              return Math.round(number);\n          }\n      }\n\n      // FORMATTING\n\n      function offset (token, separator) {\n          addFormatToken(token, 0, 0, function () {\n              var offset = this.utcOffset();\n              var sign = '+';\n              if (offset < 0) {\n                  offset = -offset;\n                  sign = '-';\n              }\n              return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n          });\n      }\n\n      offset('Z', ':');\n      offset('ZZ', '');\n\n      // PARSING\n\n      addRegexToken('Z',  matchShortOffset);\n      addRegexToken('ZZ', matchShortOffset);\n      addParseToken(['Z', 'ZZ'], function (input, array, config) {\n          config._useUTC = true;\n          config._tzm = offsetFromString(matchShortOffset, input);\n      });\n\n      // HELPERS\n\n      // timezone chunker\n      // '+10:00' > ['10',  '00']\n      // '-1530'  > ['-15', '30']\n      var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n      function offsetFromString(matcher, string) {\n          var matches = ((string || '').match(matcher) || []);\n          var chunk   = matches[matches.length - 1] || [];\n          var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n          var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n          return parts[0] === '+' ? minutes : -minutes;\n      }\n\n      // Return a moment from input, that is local/utc/zone equivalent to model.\n      function cloneWithOffset(input, model) {\n          var res, diff;\n          if (model._isUTC) {\n              res = model.clone();\n              diff = (isMoment(input) || isDate(input) ? input.valueOf() : local__createLocal(input).valueOf()) - res.valueOf();\n              // Use low-level api, because this fn is low-level api.\n              res._d.setTime(res._d.valueOf() + diff);\n              utils_hooks__hooks.updateOffset(res, false);\n              return res;\n          } else {\n              return local__createLocal(input).local();\n          }\n      }\n\n      function getDateOffset (m) {\n          // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n          // https://github.com/moment/moment/pull/1871\n          return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n      }\n\n      // HOOKS\n\n      // This function will be called whenever a moment is mutated.\n      // It is intended to keep the offset in sync with the timezone.\n      utils_hooks__hooks.updateOffset = function () {};\n\n      // MOMENTS\n\n      // keepLocalTime = true means only change the timezone, without\n      // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n      // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n      // +0200, so we adjust the time as needed, to be valid.\n      //\n      // Keeping the time actually adds/subtracts (one hour)\n      // from the actual represented time. That is why we call updateOffset\n      // a second time. In case it wants us to change the offset again\n      // _changeInProgress == true case, then we have to adjust, because\n      // there is no such time in the given timezone.\n      function getSetOffset (input, keepLocalTime) {\n          var offset = this._offset || 0,\n              localAdjust;\n          if (!this.isValid()) {\n              return input != null ? this : NaN;\n          }\n          if (input != null) {\n              if (typeof input === 'string') {\n                  input = offsetFromString(matchShortOffset, input);\n              } else if (Math.abs(input) < 16) {\n                  input = input * 60;\n              }\n              if (!this._isUTC && keepLocalTime) {\n                  localAdjust = getDateOffset(this);\n              }\n              this._offset = input;\n              this._isUTC = true;\n              if (localAdjust != null) {\n                  this.add(localAdjust, 'm');\n              }\n              if (offset !== input) {\n                  if (!keepLocalTime || this._changeInProgress) {\n                      add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);\n                  } else if (!this._changeInProgress) {\n                      this._changeInProgress = true;\n                      utils_hooks__hooks.updateOffset(this, true);\n                      this._changeInProgress = null;\n                  }\n              }\n              return this;\n          } else {\n              return this._isUTC ? offset : getDateOffset(this);\n          }\n      }\n\n      function getSetZone (input, keepLocalTime) {\n          if (input != null) {\n              if (typeof input !== 'string') {\n                  input = -input;\n              }\n\n              this.utcOffset(input, keepLocalTime);\n\n              return this;\n          } else {\n              return -this.utcOffset();\n          }\n      }\n\n      function setOffsetToUTC (keepLocalTime) {\n          return this.utcOffset(0, keepLocalTime);\n      }\n\n      function setOffsetToLocal (keepLocalTime) {\n          if (this._isUTC) {\n              this.utcOffset(0, keepLocalTime);\n              this._isUTC = false;\n\n              if (keepLocalTime) {\n                  this.subtract(getDateOffset(this), 'm');\n              }\n          }\n          return this;\n      }\n\n      function setOffsetToParsedOffset () {\n          if (this._tzm) {\n              this.utcOffset(this._tzm);\n          } else if (typeof this._i === 'string') {\n              var tZone = offsetFromString(matchOffset, this._i);\n\n              if (tZone === 0) {\n                  this.utcOffset(0, true);\n              } else {\n                  this.utcOffset(offsetFromString(matchOffset, this._i));\n              }\n          }\n          return this;\n      }\n\n      function hasAlignedHourOffset (input) {\n          if (!this.isValid()) {\n              return false;\n          }\n          input = input ? local__createLocal(input).utcOffset() : 0;\n\n          return (this.utcOffset() - input) % 60 === 0;\n      }\n\n      function isDaylightSavingTime () {\n          return (\n              this.utcOffset() > this.clone().month(0).utcOffset() ||\n              this.utcOffset() > this.clone().month(5).utcOffset()\n          );\n      }\n\n      function isDaylightSavingTimeShifted () {\n          if (!isUndefined(this._isDSTShifted)) {\n              return this._isDSTShifted;\n          }\n\n          var c = {};\n\n          copyConfig(c, this);\n          c = prepareConfig(c);\n\n          if (c._a) {\n              var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);\n              this._isDSTShifted = this.isValid() &&\n                  compareArrays(c._a, other.toArray()) > 0;\n          } else {\n              this._isDSTShifted = false;\n          }\n\n          return this._isDSTShifted;\n      }\n\n      function isLocal () {\n          return this.isValid() ? !this._isUTC : false;\n      }\n\n      function isUtcOffset () {\n          return this.isValid() ? this._isUTC : false;\n      }\n\n      function isUtc () {\n          return this.isValid() ? this._isUTC && this._offset === 0 : false;\n      }\n\n      // ASP.NET json date format regex\n      var aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n      // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n      // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n      // and further modified to allow for strings containing both week and day\n      var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\n      function create__createDuration (input, key) {\n          var duration = input,\n              // matching against regexp is expensive, do it on demand\n              match = null,\n              sign,\n              ret,\n              diffRes;\n\n          if (isDuration(input)) {\n              duration = {\n                  ms : input._milliseconds,\n                  d  : input._days,\n                  M  : input._months\n              };\n          } else if (typeof input === 'number') {\n              duration = {};\n              if (key) {\n                  duration[key] = input;\n              } else {\n                  duration.milliseconds = input;\n              }\n          } else if (!!(match = aspNetRegex.exec(input))) {\n              sign = (match[1] === '-') ? -1 : 1;\n              duration = {\n                  y  : 0,\n                  d  : toInt(match[DATE])                         * sign,\n                  h  : toInt(match[HOUR])                         * sign,\n                  m  : toInt(match[MINUTE])                       * sign,\n                  s  : toInt(match[SECOND])                       * sign,\n                  ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n              };\n          } else if (!!(match = isoRegex.exec(input))) {\n              sign = (match[1] === '-') ? -1 : 1;\n              duration = {\n                  y : parseIso(match[2], sign),\n                  M : parseIso(match[3], sign),\n                  w : parseIso(match[4], sign),\n                  d : parseIso(match[5], sign),\n                  h : parseIso(match[6], sign),\n                  m : parseIso(match[7], sign),\n                  s : parseIso(match[8], sign)\n              };\n          } else if (duration == null) {// checks for null or undefined\n              duration = {};\n          } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n              diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));\n\n              duration = {};\n              duration.ms = diffRes.milliseconds;\n              duration.M = diffRes.months;\n          }\n\n          ret = new Duration(duration);\n\n          if (isDuration(input) && hasOwnProp(input, '_locale')) {\n              ret._locale = input._locale;\n          }\n\n          return ret;\n      }\n\n      create__createDuration.fn = Duration.prototype;\n\n      function parseIso (inp, sign) {\n          // We'd normally use ~~inp for this, but unfortunately it also\n          // converts floats to ints.\n          // inp may be undefined, so careful calling replace on it.\n          var res = inp && parseFloat(inp.replace(',', '.'));\n          // apply sign while we're at it\n          return (isNaN(res) ? 0 : res) * sign;\n      }\n\n      function positiveMomentsDifference(base, other) {\n          var res = {milliseconds: 0, months: 0};\n\n          res.months = other.month() - base.month() +\n              (other.year() - base.year()) * 12;\n          if (base.clone().add(res.months, 'M').isAfter(other)) {\n              --res.months;\n          }\n\n          res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n          return res;\n      }\n\n      function momentsDifference(base, other) {\n          var res;\n          if (!(base.isValid() && other.isValid())) {\n              return {milliseconds: 0, months: 0};\n          }\n\n          other = cloneWithOffset(other, base);\n          if (base.isBefore(other)) {\n              res = positiveMomentsDifference(base, other);\n          } else {\n              res = positiveMomentsDifference(other, base);\n              res.milliseconds = -res.milliseconds;\n              res.months = -res.months;\n          }\n\n          return res;\n      }\n\n      // TODO: remove 'name' arg after deprecation is removed\n      function createAdder(direction, name) {\n          return function (val, period) {\n              var dur, tmp;\n              //invert the arguments, but complain about it\n              if (period !== null && !isNaN(+period)) {\n                  deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                  'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                  tmp = val; val = period; period = tmp;\n              }\n\n              val = typeof val === 'string' ? +val : val;\n              dur = create__createDuration(val, period);\n              add_subtract__addSubtract(this, dur, direction);\n              return this;\n          };\n      }\n\n      function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {\n          var milliseconds = duration._milliseconds,\n              days = absRound(duration._days),\n              months = absRound(duration._months);\n\n          if (!mom.isValid()) {\n              // No op\n              return;\n          }\n\n          updateOffset = updateOffset == null ? true : updateOffset;\n\n          if (milliseconds) {\n              mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n          }\n          if (days) {\n              get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);\n          }\n          if (months) {\n              setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);\n          }\n          if (updateOffset) {\n              utils_hooks__hooks.updateOffset(mom, days || months);\n          }\n      }\n\n      var add_subtract__add      = createAdder(1, 'add');\n      var add_subtract__subtract = createAdder(-1, 'subtract');\n\n      function getCalendarFormat(myMoment, now) {\n          var diff = myMoment.diff(now, 'days', true);\n          return diff < -6 ? 'sameElse' :\n                  diff < -1 ? 'lastWeek' :\n                  diff < 0 ? 'lastDay' :\n                  diff < 1 ? 'sameDay' :\n                  diff < 2 ? 'nextDay' :\n                  diff < 7 ? 'nextWeek' : 'sameElse';\n      }\n\n      function moment_calendar__calendar (time, formats) {\n          // We want to compare the start of today, vs this.\n          // Getting start-of-today depends on whether we're local/utc/offset or not.\n          var now = time || local__createLocal(),\n              sod = cloneWithOffset(now, this).startOf('day'),\n              format = utils_hooks__hooks.calendarFormat(this, sod) || 'sameElse';\n\n          var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n          return this.format(output || this.localeData().calendar(format, this, local__createLocal(now)));\n      }\n\n      function clone () {\n          return new Moment(this);\n      }\n\n      function isAfter (input, units) {\n          var localInput = isMoment(input) ? input : local__createLocal(input);\n          if (!(this.isValid() && localInput.isValid())) {\n              return false;\n          }\n          units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n          if (units === 'millisecond') {\n              return this.valueOf() > localInput.valueOf();\n          } else {\n              return localInput.valueOf() < this.clone().startOf(units).valueOf();\n          }\n      }\n\n      function isBefore (input, units) {\n          var localInput = isMoment(input) ? input : local__createLocal(input);\n          if (!(this.isValid() && localInput.isValid())) {\n              return false;\n          }\n          units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n          if (units === 'millisecond') {\n              return this.valueOf() < localInput.valueOf();\n          } else {\n              return this.clone().endOf(units).valueOf() < localInput.valueOf();\n          }\n      }\n\n      function isBetween (from, to, units, inclusivity) {\n          inclusivity = inclusivity || '()';\n          return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n              (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n      }\n\n      function isSame (input, units) {\n          var localInput = isMoment(input) ? input : local__createLocal(input),\n              inputMs;\n          if (!(this.isValid() && localInput.isValid())) {\n              return false;\n          }\n          units = normalizeUnits(units || 'millisecond');\n          if (units === 'millisecond') {\n              return this.valueOf() === localInput.valueOf();\n          } else {\n              inputMs = localInput.valueOf();\n              return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n          }\n      }\n\n      function isSameOrAfter (input, units) {\n          return this.isSame(input, units) || this.isAfter(input,units);\n      }\n\n      function isSameOrBefore (input, units) {\n          return this.isSame(input, units) || this.isBefore(input,units);\n      }\n\n      function diff (input, units, asFloat) {\n          var that,\n              zoneDelta,\n              delta, output;\n\n          if (!this.isValid()) {\n              return NaN;\n          }\n\n          that = cloneWithOffset(input, this);\n\n          if (!that.isValid()) {\n              return NaN;\n          }\n\n          zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n          units = normalizeUnits(units);\n\n          if (units === 'year' || units === 'month' || units === 'quarter') {\n              output = monthDiff(this, that);\n              if (units === 'quarter') {\n                  output = output / 3;\n              } else if (units === 'year') {\n                  output = output / 12;\n              }\n          } else {\n              delta = this - that;\n              output = units === 'second' ? delta / 1e3 : // 1000\n                  units === 'minute' ? delta / 6e4 : // 1000 * 60\n                  units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n                  units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                  units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                  delta;\n          }\n          return asFloat ? output : absFloor(output);\n      }\n\n      function monthDiff (a, b) {\n          // difference in months\n          var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n              // b is in (anchor - 1 month, anchor + 1 month)\n              anchor = a.clone().add(wholeMonthDiff, 'months'),\n              anchor2, adjust;\n\n          if (b - anchor < 0) {\n              anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n              // linear across the month\n              adjust = (b - anchor) / (anchor - anchor2);\n          } else {\n              anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n              // linear across the month\n              adjust = (b - anchor) / (anchor2 - anchor);\n          }\n\n          //check for negative zero, return zero if negative zero\n          return -(wholeMonthDiff + adjust) || 0;\n      }\n\n      utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n      utils_hooks__hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n      function toString () {\n          return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n      }\n\n      function moment_format__toISOString () {\n          var m = this.clone().utc();\n          if (0 < m.year() && m.year() <= 9999) {\n              if (isFunction(Date.prototype.toISOString)) {\n                  // native implementation is ~50x faster, use it when we can\n                  return this.toDate().toISOString();\n              } else {\n                  return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n              }\n          } else {\n              return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n          }\n      }\n\n      function format (inputString) {\n          if (!inputString) {\n              inputString = this.isUtc() ? utils_hooks__hooks.defaultFormatUtc : utils_hooks__hooks.defaultFormat;\n          }\n          var output = formatMoment(this, inputString);\n          return this.localeData().postformat(output);\n      }\n\n      function from (time, withoutSuffix) {\n          if (this.isValid() &&\n                  ((isMoment(time) && time.isValid()) ||\n                   local__createLocal(time).isValid())) {\n              return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n          } else {\n              return this.localeData().invalidDate();\n          }\n      }\n\n      function fromNow (withoutSuffix) {\n          return this.from(local__createLocal(), withoutSuffix);\n      }\n\n      function to (time, withoutSuffix) {\n          if (this.isValid() &&\n                  ((isMoment(time) && time.isValid()) ||\n                   local__createLocal(time).isValid())) {\n              return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n          } else {\n              return this.localeData().invalidDate();\n          }\n      }\n\n      function toNow (withoutSuffix) {\n          return this.to(local__createLocal(), withoutSuffix);\n      }\n\n      // If passed a locale key, it will set the locale for this\n      // instance.  Otherwise, it will return the locale configuration\n      // variables for this instance.\n      function locale (key) {\n          var newLocaleData;\n\n          if (key === undefined) {\n              return this._locale._abbr;\n          } else {\n              newLocaleData = locale_locales__getLocale(key);\n              if (newLocaleData != null) {\n                  this._locale = newLocaleData;\n              }\n              return this;\n          }\n      }\n\n      var lang = deprecate(\n          'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n          function (key) {\n              if (key === undefined) {\n                  return this.localeData();\n              } else {\n                  return this.locale(key);\n              }\n          }\n      );\n\n      function localeData () {\n          return this._locale;\n      }\n\n      function startOf (units) {\n          units = normalizeUnits(units);\n          // the following switch intentionally omits break keywords\n          // to utilize falling through the cases.\n          switch (units) {\n              case 'year':\n                  this.month(0);\n                  /* falls through */\n              case 'quarter':\n              case 'month':\n                  this.date(1);\n                  /* falls through */\n              case 'week':\n              case 'isoWeek':\n              case 'day':\n              case 'date':\n                  this.hours(0);\n                  /* falls through */\n              case 'hour':\n                  this.minutes(0);\n                  /* falls through */\n              case 'minute':\n                  this.seconds(0);\n                  /* falls through */\n              case 'second':\n                  this.milliseconds(0);\n          }\n\n          // weeks are a special case\n          if (units === 'week') {\n              this.weekday(0);\n          }\n          if (units === 'isoWeek') {\n              this.isoWeekday(1);\n          }\n\n          // quarters are also special\n          if (units === 'quarter') {\n              this.month(Math.floor(this.month() / 3) * 3);\n          }\n\n          return this;\n      }\n\n      function endOf (units) {\n          units = normalizeUnits(units);\n          if (units === undefined || units === 'millisecond') {\n              return this;\n          }\n\n          // 'date' is an alias for 'day', so it should be considered as such.\n          if (units === 'date') {\n              units = 'day';\n          }\n\n          return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n      }\n\n      function to_type__valueOf () {\n          return this._d.valueOf() - ((this._offset || 0) * 60000);\n      }\n\n      function unix () {\n          return Math.floor(this.valueOf() / 1000);\n      }\n\n      function toDate () {\n          return new Date(this.valueOf());\n      }\n\n      function toArray () {\n          var m = this;\n          return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n      }\n\n      function toObject () {\n          var m = this;\n          return {\n              years: m.year(),\n              months: m.month(),\n              date: m.date(),\n              hours: m.hours(),\n              minutes: m.minutes(),\n              seconds: m.seconds(),\n              milliseconds: m.milliseconds()\n          };\n      }\n\n      function toJSON () {\n          // new Date(NaN).toJSON() === null\n          return this.isValid() ? this.toISOString() : null;\n      }\n\n      function moment_valid__isValid () {\n          return valid__isValid(this);\n      }\n\n      function parsingFlags () {\n          return extend({}, getParsingFlags(this));\n      }\n\n      function invalidAt () {\n          return getParsingFlags(this).overflow;\n      }\n\n      function creationData() {\n          return {\n              input: this._i,\n              format: this._f,\n              locale: this._locale,\n              isUTC: this._isUTC,\n              strict: this._strict\n          };\n      }\n\n      // FORMATTING\n\n      addFormatToken(0, ['gg', 2], 0, function () {\n          return this.weekYear() % 100;\n      });\n\n      addFormatToken(0, ['GG', 2], 0, function () {\n          return this.isoWeekYear() % 100;\n      });\n\n      function addWeekYearFormatToken (token, getter) {\n          addFormatToken(0, [token, token.length], 0, getter);\n      }\n\n      addWeekYearFormatToken('gggg',     'weekYear');\n      addWeekYearFormatToken('ggggg',    'weekYear');\n      addWeekYearFormatToken('GGGG',  'isoWeekYear');\n      addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n      // ALIASES\n\n      addUnitAlias('weekYear', 'gg');\n      addUnitAlias('isoWeekYear', 'GG');\n\n      // PRIORITY\n\n      addUnitPriority('weekYear', 1);\n      addUnitPriority('isoWeekYear', 1);\n\n\n      // PARSING\n\n      addRegexToken('G',      matchSigned);\n      addRegexToken('g',      matchSigned);\n      addRegexToken('GG',     match1to2, match2);\n      addRegexToken('gg',     match1to2, match2);\n      addRegexToken('GGGG',   match1to4, match4);\n      addRegexToken('gggg',   match1to4, match4);\n      addRegexToken('GGGGG',  match1to6, match6);\n      addRegexToken('ggggg',  match1to6, match6);\n\n      addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n          week[token.substr(0, 2)] = toInt(input);\n      });\n\n      addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n          week[token] = utils_hooks__hooks.parseTwoDigitYear(input);\n      });\n\n      // MOMENTS\n\n      function getSetWeekYear (input) {\n          return getSetWeekYearHelper.call(this,\n                  input,\n                  this.week(),\n                  this.weekday(),\n                  this.localeData()._week.dow,\n                  this.localeData()._week.doy);\n      }\n\n      function getSetISOWeekYear (input) {\n          return getSetWeekYearHelper.call(this,\n                  input, this.isoWeek(), this.isoWeekday(), 1, 4);\n      }\n\n      function getISOWeeksInYear () {\n          return weeksInYear(this.year(), 1, 4);\n      }\n\n      function getWeeksInYear () {\n          var weekInfo = this.localeData()._week;\n          return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n      }\n\n      function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n          var weeksTarget;\n          if (input == null) {\n              return weekOfYear(this, dow, doy).year;\n          } else {\n              weeksTarget = weeksInYear(input, dow, doy);\n              if (week > weeksTarget) {\n                  week = weeksTarget;\n              }\n              return setWeekAll.call(this, input, week, weekday, dow, doy);\n          }\n      }\n\n      function setWeekAll(weekYear, week, weekday, dow, doy) {\n          var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n              date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n          this.year(date.getUTCFullYear());\n          this.month(date.getUTCMonth());\n          this.date(date.getUTCDate());\n          return this;\n      }\n\n      // FORMATTING\n\n      addFormatToken('Q', 0, 'Qo', 'quarter');\n\n      // ALIASES\n\n      addUnitAlias('quarter', 'Q');\n\n      // PRIORITY\n\n      addUnitPriority('quarter', 7);\n\n      // PARSING\n\n      addRegexToken('Q', match1);\n      addParseToken('Q', function (input, array) {\n          array[MONTH] = (toInt(input) - 1) * 3;\n      });\n\n      // MOMENTS\n\n      function getSetQuarter (input) {\n          return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n      }\n\n      // FORMATTING\n\n      addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n      // ALIASES\n\n      addUnitAlias('date', 'D');\n\n      // PRIOROITY\n      addUnitPriority('date', 9);\n\n      // PARSING\n\n      addRegexToken('D',  match1to2);\n      addRegexToken('DD', match1to2, match2);\n      addRegexToken('Do', function (isStrict, locale) {\n          return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\n      });\n\n      addParseToken(['D', 'DD'], DATE);\n      addParseToken('Do', function (input, array) {\n          array[DATE] = toInt(input.match(match1to2)[0], 10);\n      });\n\n      // MOMENTS\n\n      var getSetDayOfMonth = makeGetSet('Date', true);\n\n      // FORMATTING\n\n      addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n      // ALIASES\n\n      addUnitAlias('dayOfYear', 'DDD');\n\n      // PRIORITY\n      addUnitPriority('dayOfYear', 4);\n\n      // PARSING\n\n      addRegexToken('DDD',  match1to3);\n      addRegexToken('DDDD', match3);\n      addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n          config._dayOfYear = toInt(input);\n      });\n\n      // HELPERS\n\n      // MOMENTS\n\n      function getSetDayOfYear (input) {\n          var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n          return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n      }\n\n      // FORMATTING\n\n      addFormatToken('m', ['mm', 2], 0, 'minute');\n\n      // ALIASES\n\n      addUnitAlias('minute', 'm');\n\n      // PRIORITY\n\n      addUnitPriority('minute', 14);\n\n      // PARSING\n\n      addRegexToken('m',  match1to2);\n      addRegexToken('mm', match1to2, match2);\n      addParseToken(['m', 'mm'], MINUTE);\n\n      // MOMENTS\n\n      var getSetMinute = makeGetSet('Minutes', false);\n\n      // FORMATTING\n\n      addFormatToken('s', ['ss', 2], 0, 'second');\n\n      // ALIASES\n\n      addUnitAlias('second', 's');\n\n      // PRIORITY\n\n      addUnitPriority('second', 15);\n\n      // PARSING\n\n      addRegexToken('s',  match1to2);\n      addRegexToken('ss', match1to2, match2);\n      addParseToken(['s', 'ss'], SECOND);\n\n      // MOMENTS\n\n      var getSetSecond = makeGetSet('Seconds', false);\n\n      // FORMATTING\n\n      addFormatToken('S', 0, 0, function () {\n          return ~~(this.millisecond() / 100);\n      });\n\n      addFormatToken(0, ['SS', 2], 0, function () {\n          return ~~(this.millisecond() / 10);\n      });\n\n      addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n      addFormatToken(0, ['SSSS', 4], 0, function () {\n          return this.millisecond() * 10;\n      });\n      addFormatToken(0, ['SSSSS', 5], 0, function () {\n          return this.millisecond() * 100;\n      });\n      addFormatToken(0, ['SSSSSS', 6], 0, function () {\n          return this.millisecond() * 1000;\n      });\n      addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n          return this.millisecond() * 10000;\n      });\n      addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n          return this.millisecond() * 100000;\n      });\n      addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n          return this.millisecond() * 1000000;\n      });\n\n\n      // ALIASES\n\n      addUnitAlias('millisecond', 'ms');\n\n      // PRIORITY\n\n      addUnitPriority('millisecond', 16);\n\n      // PARSING\n\n      addRegexToken('S',    match1to3, match1);\n      addRegexToken('SS',   match1to3, match2);\n      addRegexToken('SSS',  match1to3, match3);\n\n      var token;\n      for (token = 'SSSS'; token.length <= 9; token += 'S') {\n          addRegexToken(token, matchUnsigned);\n      }\n\n      function parseMs(input, array) {\n          array[MILLISECOND] = toInt(('0.' + input) * 1000);\n      }\n\n      for (token = 'S'; token.length <= 9; token += 'S') {\n          addParseToken(token, parseMs);\n      }\n      // MOMENTS\n\n      var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n      // FORMATTING\n\n      addFormatToken('z',  0, 0, 'zoneAbbr');\n      addFormatToken('zz', 0, 0, 'zoneName');\n\n      // MOMENTS\n\n      function getZoneAbbr () {\n          return this._isUTC ? 'UTC' : '';\n      }\n\n      function getZoneName () {\n          return this._isUTC ? 'Coordinated Universal Time' : '';\n      }\n\n      var momentPrototype__proto = Moment.prototype;\n\n      momentPrototype__proto.add               = add_subtract__add;\n      momentPrototype__proto.calendar          = moment_calendar__calendar;\n      momentPrototype__proto.clone             = clone;\n      momentPrototype__proto.diff              = diff;\n      momentPrototype__proto.endOf             = endOf;\n      momentPrototype__proto.format            = format;\n      momentPrototype__proto.from              = from;\n      momentPrototype__proto.fromNow           = fromNow;\n      momentPrototype__proto.to                = to;\n      momentPrototype__proto.toNow             = toNow;\n      momentPrototype__proto.get               = stringGet;\n      momentPrototype__proto.invalidAt         = invalidAt;\n      momentPrototype__proto.isAfter           = isAfter;\n      momentPrototype__proto.isBefore          = isBefore;\n      momentPrototype__proto.isBetween         = isBetween;\n      momentPrototype__proto.isSame            = isSame;\n      momentPrototype__proto.isSameOrAfter     = isSameOrAfter;\n      momentPrototype__proto.isSameOrBefore    = isSameOrBefore;\n      momentPrototype__proto.isValid           = moment_valid__isValid;\n      momentPrototype__proto.lang              = lang;\n      momentPrototype__proto.locale            = locale;\n      momentPrototype__proto.localeData        = localeData;\n      momentPrototype__proto.max               = prototypeMax;\n      momentPrototype__proto.min               = prototypeMin;\n      momentPrototype__proto.parsingFlags      = parsingFlags;\n      momentPrototype__proto.set               = stringSet;\n      momentPrototype__proto.startOf           = startOf;\n      momentPrototype__proto.subtract          = add_subtract__subtract;\n      momentPrototype__proto.toArray           = toArray;\n      momentPrototype__proto.toObject          = toObject;\n      momentPrototype__proto.toDate            = toDate;\n      momentPrototype__proto.toISOString       = moment_format__toISOString;\n      momentPrototype__proto.toJSON            = toJSON;\n      momentPrototype__proto.toString          = toString;\n      momentPrototype__proto.unix              = unix;\n      momentPrototype__proto.valueOf           = to_type__valueOf;\n      momentPrototype__proto.creationData      = creationData;\n\n      // Year\n      momentPrototype__proto.year       = getSetYear;\n      momentPrototype__proto.isLeapYear = getIsLeapYear;\n\n      // Week Year\n      momentPrototype__proto.weekYear    = getSetWeekYear;\n      momentPrototype__proto.isoWeekYear = getSetISOWeekYear;\n\n      // Quarter\n      momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;\n\n      // Month\n      momentPrototype__proto.month       = getSetMonth;\n      momentPrototype__proto.daysInMonth = getDaysInMonth;\n\n      // Week\n      momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;\n      momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;\n      momentPrototype__proto.weeksInYear    = getWeeksInYear;\n      momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;\n\n      // Day\n      momentPrototype__proto.date       = getSetDayOfMonth;\n      momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;\n      momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;\n      momentPrototype__proto.isoWeekday = getSetISODayOfWeek;\n      momentPrototype__proto.dayOfYear  = getSetDayOfYear;\n\n      // Hour\n      momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;\n\n      // Minute\n      momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;\n\n      // Second\n      momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;\n\n      // Millisecond\n      momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;\n\n      // Offset\n      momentPrototype__proto.utcOffset            = getSetOffset;\n      momentPrototype__proto.utc                  = setOffsetToUTC;\n      momentPrototype__proto.local                = setOffsetToLocal;\n      momentPrototype__proto.parseZone            = setOffsetToParsedOffset;\n      momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;\n      momentPrototype__proto.isDST                = isDaylightSavingTime;\n      momentPrototype__proto.isLocal              = isLocal;\n      momentPrototype__proto.isUtcOffset          = isUtcOffset;\n      momentPrototype__proto.isUtc                = isUtc;\n      momentPrototype__proto.isUTC                = isUtc;\n\n      // Timezone\n      momentPrototype__proto.zoneAbbr = getZoneAbbr;\n      momentPrototype__proto.zoneName = getZoneName;\n\n      // Deprecations\n      momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n      momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n      momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n      momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n      momentPrototype__proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n      var momentPrototype = momentPrototype__proto;\n\n      function moment__createUnix (input) {\n          return local__createLocal(input * 1000);\n      }\n\n      function moment__createInZone () {\n          return local__createLocal.apply(null, arguments).parseZone();\n      }\n\n      function preParsePostFormat (string) {\n          return string;\n      }\n\n      var prototype__proto = Locale.prototype;\n\n      prototype__proto.calendar        = locale_calendar__calendar;\n      prototype__proto.longDateFormat  = longDateFormat;\n      prototype__proto.invalidDate     = invalidDate;\n      prototype__proto.ordinal         = ordinal;\n      prototype__proto.preparse        = preParsePostFormat;\n      prototype__proto.postformat      = preParsePostFormat;\n      prototype__proto.relativeTime    = relative__relativeTime;\n      prototype__proto.pastFuture      = pastFuture;\n      prototype__proto.set             = locale_set__set;\n\n      // Month\n      prototype__proto.months            =        localeMonths;\n      prototype__proto.monthsShort       =        localeMonthsShort;\n      prototype__proto.monthsParse       =        localeMonthsParse;\n      prototype__proto.monthsRegex       = monthsRegex;\n      prototype__proto.monthsShortRegex  = monthsShortRegex;\n\n      // Week\n      prototype__proto.week = localeWeek;\n      prototype__proto.firstDayOfYear = localeFirstDayOfYear;\n      prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;\n\n      // Day of Week\n      prototype__proto.weekdays       =        localeWeekdays;\n      prototype__proto.weekdaysMin    =        localeWeekdaysMin;\n      prototype__proto.weekdaysShort  =        localeWeekdaysShort;\n      prototype__proto.weekdaysParse  =        localeWeekdaysParse;\n\n      prototype__proto.weekdaysRegex       =        weekdaysRegex;\n      prototype__proto.weekdaysShortRegex  =        weekdaysShortRegex;\n      prototype__proto.weekdaysMinRegex    =        weekdaysMinRegex;\n\n      // Hours\n      prototype__proto.isPM = localeIsPM;\n      prototype__proto.meridiem = localeMeridiem;\n\n      function lists__get (format, index, field, setter) {\n          var locale = locale_locales__getLocale();\n          var utc = create_utc__createUTC().set(setter, index);\n          return locale[field](utc, format);\n      }\n\n      function listMonthsImpl (format, index, field) {\n          if (typeof format === 'number') {\n              index = format;\n              format = undefined;\n          }\n\n          format = format || '';\n\n          if (index != null) {\n              return lists__get(format, index, field, 'month');\n          }\n\n          var i;\n          var out = [];\n          for (i = 0; i < 12; i++) {\n              out[i] = lists__get(format, i, field, 'month');\n          }\n          return out;\n      }\n\n      // ()\n      // (5)\n      // (fmt, 5)\n      // (fmt)\n      // (true)\n      // (true, 5)\n      // (true, fmt, 5)\n      // (true, fmt)\n      function listWeekdaysImpl (localeSorted, format, index, field) {\n          if (typeof localeSorted === 'boolean') {\n              if (typeof format === 'number') {\n                  index = format;\n                  format = undefined;\n              }\n\n              format = format || '';\n          } else {\n              format = localeSorted;\n              index = format;\n              localeSorted = false;\n\n              if (typeof format === 'number') {\n                  index = format;\n                  format = undefined;\n              }\n\n              format = format || '';\n          }\n\n          var locale = locale_locales__getLocale(),\n              shift = localeSorted ? locale._week.dow : 0;\n\n          if (index != null) {\n              return lists__get(format, (index + shift) % 7, field, 'day');\n          }\n\n          var i;\n          var out = [];\n          for (i = 0; i < 7; i++) {\n              out[i] = lists__get(format, (i + shift) % 7, field, 'day');\n          }\n          return out;\n      }\n\n      function lists__listMonths (format, index) {\n          return listMonthsImpl(format, index, 'months');\n      }\n\n      function lists__listMonthsShort (format, index) {\n          return listMonthsImpl(format, index, 'monthsShort');\n      }\n\n      function lists__listWeekdays (localeSorted, format, index) {\n          return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n      }\n\n      function lists__listWeekdaysShort (localeSorted, format, index) {\n          return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n      }\n\n      function lists__listWeekdaysMin (localeSorted, format, index) {\n          return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n      }\n\n      locale_locales__getSetGlobalLocale('en', {\n          ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n          ordinal : function (number) {\n              var b = number % 10,\n                  output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                  (b === 1) ? 'st' :\n                  (b === 2) ? 'nd' :\n                  (b === 3) ? 'rd' : 'th';\n              return number + output;\n          }\n      });\n\n      // Side effect imports\n      utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);\n      utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);\n\n      var mathAbs = Math.abs;\n\n      function duration_abs__abs () {\n          var data           = this._data;\n\n          this._milliseconds = mathAbs(this._milliseconds);\n          this._days         = mathAbs(this._days);\n          this._months       = mathAbs(this._months);\n\n          data.milliseconds  = mathAbs(data.milliseconds);\n          data.seconds       = mathAbs(data.seconds);\n          data.minutes       = mathAbs(data.minutes);\n          data.hours         = mathAbs(data.hours);\n          data.months        = mathAbs(data.months);\n          data.years         = mathAbs(data.years);\n\n          return this;\n      }\n\n      function duration_add_subtract__addSubtract (duration, input, value, direction) {\n          var other = create__createDuration(input, value);\n\n          duration._milliseconds += direction * other._milliseconds;\n          duration._days         += direction * other._days;\n          duration._months       += direction * other._months;\n\n          return duration._bubble();\n      }\n\n      // supports only 2.0-style add(1, 's') or add(duration)\n      function duration_add_subtract__add (input, value) {\n          return duration_add_subtract__addSubtract(this, input, value, 1);\n      }\n\n      // supports only 2.0-style subtract(1, 's') or subtract(duration)\n      function duration_add_subtract__subtract (input, value) {\n          return duration_add_subtract__addSubtract(this, input, value, -1);\n      }\n\n      function absCeil (number) {\n          if (number < 0) {\n              return Math.floor(number);\n          } else {\n              return Math.ceil(number);\n          }\n      }\n\n      function bubble () {\n          var milliseconds = this._milliseconds;\n          var days         = this._days;\n          var months       = this._months;\n          var data         = this._data;\n          var seconds, minutes, hours, years, monthsFromDays;\n\n          // if we have a mix of positive and negative values, bubble down first\n          // check: https://github.com/moment/moment/issues/2166\n          if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                  (milliseconds <= 0 && days <= 0 && months <= 0))) {\n              milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n              days = 0;\n              months = 0;\n          }\n\n          // The following code bubbles up values, see the tests for\n          // examples of what that means.\n          data.milliseconds = milliseconds % 1000;\n\n          seconds           = absFloor(milliseconds / 1000);\n          data.seconds      = seconds % 60;\n\n          minutes           = absFloor(seconds / 60);\n          data.minutes      = minutes % 60;\n\n          hours             = absFloor(minutes / 60);\n          data.hours        = hours % 24;\n\n          days += absFloor(hours / 24);\n\n          // convert days to months\n          monthsFromDays = absFloor(daysToMonths(days));\n          months += monthsFromDays;\n          days -= absCeil(monthsToDays(monthsFromDays));\n\n          // 12 months -> 1 year\n          years = absFloor(months / 12);\n          months %= 12;\n\n          data.days   = days;\n          data.months = months;\n          data.years  = years;\n\n          return this;\n      }\n\n      function daysToMonths (days) {\n          // 400 years have 146097 days (taking into account leap year rules)\n          // 400 years have 12 months === 4800\n          return days * 4800 / 146097;\n      }\n\n      function monthsToDays (months) {\n          // the reverse of daysToMonths\n          return months * 146097 / 4800;\n      }\n\n      function as (units) {\n          var days;\n          var months;\n          var milliseconds = this._milliseconds;\n\n          units = normalizeUnits(units);\n\n          if (units === 'month' || units === 'year') {\n              days   = this._days   + milliseconds / 864e5;\n              months = this._months + daysToMonths(days);\n              return units === 'month' ? months : months / 12;\n          } else {\n              // handle milliseconds separately because of floating point math errors (issue #1867)\n              days = this._days + Math.round(monthsToDays(this._months));\n              switch (units) {\n                  case 'week'   : return days / 7     + milliseconds / 6048e5;\n                  case 'day'    : return days         + milliseconds / 864e5;\n                  case 'hour'   : return days * 24    + milliseconds / 36e5;\n                  case 'minute' : return days * 1440  + milliseconds / 6e4;\n                  case 'second' : return days * 86400 + milliseconds / 1000;\n                  // Math.floor prevents floating point math errors here\n                  case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                  default: throw new Error('Unknown unit ' + units);\n              }\n          }\n      }\n\n      // TODO: Use this.as('ms')?\n      function duration_as__valueOf () {\n          return (\n              this._milliseconds +\n              this._days * 864e5 +\n              (this._months % 12) * 2592e6 +\n              toInt(this._months / 12) * 31536e6\n          );\n      }\n\n      function makeAs (alias) {\n          return function () {\n              return this.as(alias);\n          };\n      }\n\n      var asMilliseconds = makeAs('ms');\n      var asSeconds      = makeAs('s');\n      var asMinutes      = makeAs('m');\n      var asHours        = makeAs('h');\n      var asDays         = makeAs('d');\n      var asWeeks        = makeAs('w');\n      var asMonths       = makeAs('M');\n      var asYears        = makeAs('y');\n\n      function duration_get__get (units) {\n          units = normalizeUnits(units);\n          return this[units + 's']();\n      }\n\n      function makeGetter(name) {\n          return function () {\n              return this._data[name];\n          };\n      }\n\n      var milliseconds = makeGetter('milliseconds');\n      var seconds      = makeGetter('seconds');\n      var minutes      = makeGetter('minutes');\n      var hours        = makeGetter('hours');\n      var days         = makeGetter('days');\n      var months       = makeGetter('months');\n      var years        = makeGetter('years');\n\n      function weeks () {\n          return absFloor(this.days() / 7);\n      }\n\n      var round = Math.round;\n      var thresholds = {\n          s: 45,  // seconds to minute\n          m: 45,  // minutes to hour\n          h: 22,  // hours to day\n          d: 26,  // days to month\n          M: 11   // months to year\n      };\n\n      // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n      function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n          return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n      }\n\n      function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {\n          var duration = create__createDuration(posNegDuration).abs();\n          var seconds  = round(duration.as('s'));\n          var minutes  = round(duration.as('m'));\n          var hours    = round(duration.as('h'));\n          var days     = round(duration.as('d'));\n          var months   = round(duration.as('M'));\n          var years    = round(duration.as('y'));\n\n          var a = seconds < thresholds.s && ['s', seconds]  ||\n                  minutes <= 1           && ['m']           ||\n                  minutes < thresholds.m && ['mm', minutes] ||\n                  hours   <= 1           && ['h']           ||\n                  hours   < thresholds.h && ['hh', hours]   ||\n                  days    <= 1           && ['d']           ||\n                  days    < thresholds.d && ['dd', days]    ||\n                  months  <= 1           && ['M']           ||\n                  months  < thresholds.M && ['MM', months]  ||\n                  years   <= 1           && ['y']           || ['yy', years];\n\n          a[2] = withoutSuffix;\n          a[3] = +posNegDuration > 0;\n          a[4] = locale;\n          return substituteTimeAgo.apply(null, a);\n      }\n\n      // This function allows you to set the rounding function for relative time strings\n      function duration_humanize__getSetRelativeTimeRounding (roundingFunction) {\n          if (roundingFunction === undefined) {\n              return round;\n          }\n          if (typeof(roundingFunction) === 'function') {\n              round = roundingFunction;\n              return true;\n          }\n          return false;\n      }\n\n      // This function allows you to set a threshold for relative time strings\n      function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {\n          if (thresholds[threshold] === undefined) {\n              return false;\n          }\n          if (limit === undefined) {\n              return thresholds[threshold];\n          }\n          thresholds[threshold] = limit;\n          return true;\n      }\n\n      function humanize (withSuffix) {\n          var locale = this.localeData();\n          var output = duration_humanize__relativeTime(this, !withSuffix, locale);\n\n          if (withSuffix) {\n              output = locale.pastFuture(+this, output);\n          }\n\n          return locale.postformat(output);\n      }\n\n      var iso_string__abs = Math.abs;\n\n      function iso_string__toISOString() {\n          // for ISO strings we do not use the normal bubbling rules:\n          //  * milliseconds bubble up until they become hours\n          //  * days do not bubble at all\n          //  * months bubble up until they become years\n          // This is because there is no context-free conversion between hours and days\n          // (think of clock changes)\n          // and also not between days and months (28-31 days per month)\n          var seconds = iso_string__abs(this._milliseconds) / 1000;\n          var days         = iso_string__abs(this._days);\n          var months       = iso_string__abs(this._months);\n          var minutes, hours, years;\n\n          // 3600 seconds -> 60 minutes -> 1 hour\n          minutes           = absFloor(seconds / 60);\n          hours             = absFloor(minutes / 60);\n          seconds %= 60;\n          minutes %= 60;\n\n          // 12 months -> 1 year\n          years  = absFloor(months / 12);\n          months %= 12;\n\n\n          // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n          var Y = years;\n          var M = months;\n          var D = days;\n          var h = hours;\n          var m = minutes;\n          var s = seconds;\n          var total = this.asSeconds();\n\n          if (!total) {\n              // this is the same as C#'s (Noda) and python (isodate)...\n              // but not other JS (goog.date)\n              return 'P0D';\n          }\n\n          return (total < 0 ? '-' : '') +\n              'P' +\n              (Y ? Y + 'Y' : '') +\n              (M ? M + 'M' : '') +\n              (D ? D + 'D' : '') +\n              ((h || m || s) ? 'T' : '') +\n              (h ? h + 'H' : '') +\n              (m ? m + 'M' : '') +\n              (s ? s + 'S' : '');\n      }\n\n      var duration_prototype__proto = Duration.prototype;\n\n      duration_prototype__proto.abs            = duration_abs__abs;\n      duration_prototype__proto.add            = duration_add_subtract__add;\n      duration_prototype__proto.subtract       = duration_add_subtract__subtract;\n      duration_prototype__proto.as             = as;\n      duration_prototype__proto.asMilliseconds = asMilliseconds;\n      duration_prototype__proto.asSeconds      = asSeconds;\n      duration_prototype__proto.asMinutes      = asMinutes;\n      duration_prototype__proto.asHours        = asHours;\n      duration_prototype__proto.asDays         = asDays;\n      duration_prototype__proto.asWeeks        = asWeeks;\n      duration_prototype__proto.asMonths       = asMonths;\n      duration_prototype__proto.asYears        = asYears;\n      duration_prototype__proto.valueOf        = duration_as__valueOf;\n      duration_prototype__proto._bubble        = bubble;\n      duration_prototype__proto.get            = duration_get__get;\n      duration_prototype__proto.milliseconds   = milliseconds;\n      duration_prototype__proto.seconds        = seconds;\n      duration_prototype__proto.minutes        = minutes;\n      duration_prototype__proto.hours          = hours;\n      duration_prototype__proto.days           = days;\n      duration_prototype__proto.weeks          = weeks;\n      duration_prototype__proto.months         = months;\n      duration_prototype__proto.years          = years;\n      duration_prototype__proto.humanize       = humanize;\n      duration_prototype__proto.toISOString    = iso_string__toISOString;\n      duration_prototype__proto.toString       = iso_string__toISOString;\n      duration_prototype__proto.toJSON         = iso_string__toISOString;\n      duration_prototype__proto.locale         = locale;\n      duration_prototype__proto.localeData     = localeData;\n\n      // Deprecations\n      duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);\n      duration_prototype__proto.lang = lang;\n\n      // Side effect imports\n\n      // FORMATTING\n\n      addFormatToken('X', 0, 0, 'unix');\n      addFormatToken('x', 0, 0, 'valueOf');\n\n      // PARSING\n\n      addRegexToken('x', matchSigned);\n      addRegexToken('X', matchTimestamp);\n      addParseToken('X', function (input, array, config) {\n          config._d = new Date(parseFloat(input, 10) * 1000);\n      });\n      addParseToken('x', function (input, array, config) {\n          config._d = new Date(toInt(input));\n      });\n\n      // Side effect imports\n\n\n      utils_hooks__hooks.version = '2.15.2';\n\n      setHookCallback(local__createLocal);\n\n      utils_hooks__hooks.fn                    = momentPrototype;\n      utils_hooks__hooks.min                   = min;\n      utils_hooks__hooks.max                   = max;\n      utils_hooks__hooks.now                   = now;\n      utils_hooks__hooks.utc                   = create_utc__createUTC;\n      utils_hooks__hooks.unix                  = moment__createUnix;\n      utils_hooks__hooks.months                = lists__listMonths;\n      utils_hooks__hooks.isDate                = isDate;\n      utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;\n      utils_hooks__hooks.invalid               = valid__createInvalid;\n      utils_hooks__hooks.duration              = create__createDuration;\n      utils_hooks__hooks.isMoment              = isMoment;\n      utils_hooks__hooks.weekdays              = lists__listWeekdays;\n      utils_hooks__hooks.parseZone             = moment__createInZone;\n      utils_hooks__hooks.localeData            = locale_locales__getLocale;\n      utils_hooks__hooks.isDuration            = isDuration;\n      utils_hooks__hooks.monthsShort           = lists__listMonthsShort;\n      utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;\n      utils_hooks__hooks.defineLocale          = defineLocale;\n      utils_hooks__hooks.updateLocale          = updateLocale;\n      utils_hooks__hooks.locales               = locale_locales__listLocales;\n      utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;\n      utils_hooks__hooks.normalizeUnits        = normalizeUnits;\n      utils_hooks__hooks.relativeTimeRounding = duration_humanize__getSetRelativeTimeRounding;\n      utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;\n      utils_hooks__hooks.calendarFormat        = getCalendarFormat;\n      utils_hooks__hooks.prototype             = momentPrototype;\n\n      var _moment = utils_hooks__hooks;\n\n      return _moment;\n\n  }));\n  /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)(module)))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n  module.exports = function(module) {\n  \tif(!module.webpackPolyfill) {\n  \t\tmodule.deprecate = function() {};\n  \t\tmodule.paths = [];\n  \t\t// module.parent = undefined by default\n  \t\tmodule.children = [];\n  \t\tmodule.webpackPolyfill = 1;\n  \t}\n  \treturn module;\n  }\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n  function webpackContext(req) {\n  \tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n  }\n  webpackContext.keys = function() { return []; };\n  webpackContext.resolve = webpackContext;\n  module.exports = webpackContext;\n  webpackContext.id = 5;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n  /* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n  var _rng;\n\n  var globalVar = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : null;\n\n  if (globalVar && globalVar.crypto && crypto.getRandomValues) {\n    // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n    // Moderately fast, high quality\n    var _rnds8 = new Uint8Array(16);\n    _rng = function whatwgRNG() {\n      crypto.getRandomValues(_rnds8);\n      return _rnds8;\n    };\n  }\n\n  if (!_rng) {\n    // Math.random()-based (RNG)\n    //\n    // If all else fails, use Math.random().  It's fast, but is of unspecified\n    // quality.\n    var _rnds = new Array(16);\n    _rng = function _rng() {\n      for (var i = 0, r; i < 16; i++) {\n        if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n        _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n      }\n\n      return _rnds;\n    };\n  }\n\n  //     uuid.js\n  //\n  //     Copyright (c) 2010-2012 Robert Kieffer\n  //     MIT License - http://opensource.org/licenses/mit-license.php\n\n  // Unique ID creation requires a high quality random # generator.  We feature\n  // detect to determine the best RNG source, normalizing to a function that\n  // returns 128-bits of randomness, since that's what's usually required\n\n  //var _rng = require('./rng');\n\n  // Maps for number <-> hex string conversion\n  var _byteToHex = [];\n  var _hexToByte = {};\n  for (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    _hexToByte[_byteToHex[i]] = i;\n  }\n\n  // **`parse()` - Parse a UUID into it's component bytes**\n  function parse(s, buf, offset) {\n    var i = buf && offset || 0,\n        ii = 0;\n\n    buf = buf || [];\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, function (oct) {\n      if (ii < 16) {\n        // Don't overflow!\n        buf[i + ii++] = _hexToByte[oct];\n      }\n    });\n\n    // Zero out remaining bytes if string was short\n    while (ii < 16) {\n      buf[i + ii++] = 0;\n    }\n\n    return buf;\n  }\n\n  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n  function unparse(buf, offset) {\n    var i = offset || 0,\n        bth = _byteToHex;\n    return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];\n  }\n\n  // **`v1()` - Generate time-based UUID**\n  //\n  // Inspired by https://github.com/LiosK/UUID.js\n  // and http://docs.python.org/library/uuid.html\n\n  // random #'s we need to init node and clockseq\n  var _seedBytes = _rng();\n\n  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n  var _nodeId = [_seedBytes[0] | 0x01, _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]];\n\n  // Per 4.2.2, randomize (14 bit) clockseq\n  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n  // Previous uuid creation time\n  var _lastMSecs = 0,\n      _lastNSecs = 0;\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v1(options, buf, offset) {\n    var i = buf && offset || 0;\n    var b = buf || [];\n\n    options = options || {};\n\n    var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n    // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n    var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n    // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n    var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n    // Time since last uuid creation (in msecs)\n    var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n\n    // Per 4.2.1.2, Bump clockseq on clock regression\n    if (dt < 0 && options.clockseq === undefined) {\n      clockseq = clockseq + 1 & 0x3fff;\n    }\n\n    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n      nsecs = 0;\n    }\n\n    // Per 4.2.1.2 Throw error if too many uuids are requested\n    if (nsecs >= 10000) {\n      throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n    }\n\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq;\n\n    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n    msecs += 12219292800000;\n\n    // `time_low`\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff;\n\n    // `time_mid`\n    var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff;\n\n    // `time_high_and_version`\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n    b[i++] = tmh >>> 16 & 0xff;\n\n    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n    b[i++] = clockseq >>> 8 | 0x80;\n\n    // `clock_seq_low`\n    b[i++] = clockseq & 0xff;\n\n    // `node`\n    var node = options.node || _nodeId;\n    for (var n = 0; n < 6; n++) {\n      b[i + n] = node[n];\n    }\n\n    return buf ? buf : unparse(b);\n  }\n\n  // **`v4()` - Generate random UUID**\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v4(options, buf, offset) {\n    // Deprecated - 'format' argument, as supported in v1.2\n    var i = buf && offset || 0;\n\n    if (typeof options == 'string') {\n      buf = options == 'binary' ? new Array(16) : null;\n      options = null;\n    }\n    options = options || {};\n\n    var rnds = options.random || (options.rng || _rng)();\n\n    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = rnds[6] & 0x0f | 0x40;\n    rnds[8] = rnds[8] & 0x3f | 0x80;\n\n    // Copy bytes to buffer, if provided\n    if (buf) {\n      for (var ii = 0; ii < 16; ii++) {\n        buf[i + ii] = rnds[ii];\n      }\n    }\n\n    return buf || unparse(rnds);\n  }\n\n  // Export public API\n  var uuid = v4;\n  uuid.v1 = v1;\n  uuid.v4 = v4;\n  uuid.parse = parse;\n  uuid.unparse = unparse;\n\n  module.exports = uuid;\n  /* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  // utils\n  exports.util = __webpack_require__(1);\n  exports.DOMutil = __webpack_require__(8);\n\n  // data\n  exports.DataSet = __webpack_require__(9);\n  exports.DataView = __webpack_require__(11);\n  exports.Queue = __webpack_require__(10);\n\n  // Graph3d\n  exports.Graph3d = __webpack_require__(12);\n  exports.graph3d = {\n    Camera: __webpack_require__(16),\n    Filter: __webpack_require__(17),\n    Point2d: __webpack_require__(15),\n    Point3d: __webpack_require__(14),\n    Slider: __webpack_require__(18),\n    StepNumber: __webpack_require__(19)\n  };\n\n  // bundled external libraries\n  exports.moment = __webpack_require__(2);\n  exports.Hammer = __webpack_require__(22);\n  exports.keycharm = __webpack_require__(25);\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n  'use strict';\n\n  // DOM utility methods\n\n  /**\n   * this prepares the JSON container for allocating SVG elements\n   * @param JSONcontainer\n   * @private\n   */\n  exports.prepareElements = function (JSONcontainer) {\n    // cleanup the redundant svgElements;\n    for (var elementType in JSONcontainer) {\n      if (JSONcontainer.hasOwnProperty(elementType)) {\n        JSONcontainer[elementType].redundant = JSONcontainer[elementType].used;\n        JSONcontainer[elementType].used = [];\n      }\n    }\n  };\n\n  /**\n   * this cleans up all the unused SVG elements. By asking for the parentNode, we only need to supply the JSON container from\n   * which to remove the redundant elements.\n   *\n   * @param JSONcontainer\n   * @private\n   */\n  exports.cleanupElements = function (JSONcontainer) {\n    // cleanup the redundant svgElements;\n    for (var elementType in JSONcontainer) {\n      if (JSONcontainer.hasOwnProperty(elementType)) {\n        if (JSONcontainer[elementType].redundant) {\n          for (var i = 0; i < JSONcontainer[elementType].redundant.length; i++) {\n            JSONcontainer[elementType].redundant[i].parentNode.removeChild(JSONcontainer[elementType].redundant[i]);\n          }\n          JSONcontainer[elementType].redundant = [];\n        }\n      }\n    }\n  };\n\n  /**\n   * Ensures that all elements are removed first up so they can be recreated cleanly\n   * @param JSONcontainer\n   */\n  exports.resetElements = function (JSONcontainer) {\n    exports.prepareElements(JSONcontainer);\n    exports.cleanupElements(JSONcontainer);\n    exports.prepareElements(JSONcontainer);\n  };\n\n  /**\n   * Allocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer\n   * the JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.\n   *\n   * @param elementType\n   * @param JSONcontainer\n   * @param svgContainer\n   * @returns {*}\n   * @private\n   */\n  exports.getSVGElement = function (elementType, JSONcontainer, svgContainer) {\n    var element;\n    // allocate SVG element, if it doesnt yet exist, create one.\n    if (JSONcontainer.hasOwnProperty(elementType)) {\n      // this element has been created before\n      // check if there is an redundant element\n      if (JSONcontainer[elementType].redundant.length > 0) {\n        element = JSONcontainer[elementType].redundant[0];\n        JSONcontainer[elementType].redundant.shift();\n      } else {\n        // create a new element and add it to the SVG\n        element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n        svgContainer.appendChild(element);\n      }\n    } else {\n      // create a new element and add it to the SVG, also create a new object in the svgElements to keep track of it.\n      element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n      JSONcontainer[elementType] = { used: [], redundant: [] };\n      svgContainer.appendChild(element);\n    }\n    JSONcontainer[elementType].used.push(element);\n    return element;\n  };\n\n  /**\n   * Allocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer\n   * the JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.\n   *\n   * @param elementType\n   * @param JSONcontainer\n   * @param DOMContainer\n   * @returns {*}\n   * @private\n   */\n  exports.getDOMElement = function (elementType, JSONcontainer, DOMContainer, insertBefore) {\n    var element;\n    // allocate DOM element, if it doesnt yet exist, create one.\n    if (JSONcontainer.hasOwnProperty(elementType)) {\n      // this element has been created before\n      // check if there is an redundant element\n      if (JSONcontainer[elementType].redundant.length > 0) {\n        element = JSONcontainer[elementType].redundant[0];\n        JSONcontainer[elementType].redundant.shift();\n      } else {\n        // create a new element and add it to the SVG\n        element = document.createElement(elementType);\n        if (insertBefore !== undefined) {\n          DOMContainer.insertBefore(element, insertBefore);\n        } else {\n          DOMContainer.appendChild(element);\n        }\n      }\n    } else {\n      // create a new element and add it to the SVG, also create a new object in the svgElements to keep track of it.\n      element = document.createElement(elementType);\n      JSONcontainer[elementType] = { used: [], redundant: [] };\n      if (insertBefore !== undefined) {\n        DOMContainer.insertBefore(element, insertBefore);\n      } else {\n        DOMContainer.appendChild(element);\n      }\n    }\n    JSONcontainer[elementType].used.push(element);\n    return element;\n  };\n\n  /**\n   * Draw a point object. This is a separate function because it can also be called by the legend.\n   * The reason the JSONcontainer and the target SVG svgContainer have to be supplied is so the legend can use these functions\n   * as well.\n   *\n   * @param x\n   * @param y\n   * @param groupTemplate: A template containing the necessary information to draw the datapoint e.g., {style: 'circle', size: 5, className: 'className' }\n   * @param JSONcontainer\n   * @param svgContainer\n   * @param labelObj\n   * @returns {*}\n   */\n  exports.drawPoint = function (x, y, groupTemplate, JSONcontainer, svgContainer, labelObj) {\n    var point;\n    if (groupTemplate.style == 'circle') {\n      point = exports.getSVGElement('circle', JSONcontainer, svgContainer);\n      point.setAttributeNS(null, \"cx\", x);\n      point.setAttributeNS(null, \"cy\", y);\n      point.setAttributeNS(null, \"r\", 0.5 * groupTemplate.size);\n    } else {\n      point = exports.getSVGElement('rect', JSONcontainer, svgContainer);\n      point.setAttributeNS(null, \"x\", x - 0.5 * groupTemplate.size);\n      point.setAttributeNS(null, \"y\", y - 0.5 * groupTemplate.size);\n      point.setAttributeNS(null, \"width\", groupTemplate.size);\n      point.setAttributeNS(null, \"height\", groupTemplate.size);\n    }\n\n    if (groupTemplate.styles !== undefined) {\n      point.setAttributeNS(null, \"style\", groupTemplate.styles);\n    }\n    point.setAttributeNS(null, \"class\", groupTemplate.className + \" vis-point\");\n    //handle label\n\n\n    if (labelObj) {\n      var label = exports.getSVGElement('text', JSONcontainer, svgContainer);\n      if (labelObj.xOffset) {\n        x = x + labelObj.xOffset;\n      }\n\n      if (labelObj.yOffset) {\n        y = y + labelObj.yOffset;\n      }\n      if (labelObj.content) {\n        label.textContent = labelObj.content;\n      }\n\n      if (labelObj.className) {\n        label.setAttributeNS(null, \"class\", labelObj.className + \" vis-label\");\n      }\n      label.setAttributeNS(null, \"x\", x);\n      label.setAttributeNS(null, \"y\", y);\n    }\n\n    return point;\n  };\n\n  /**\n   * draw a bar SVG element centered on the X coordinate\n   *\n   * @param x\n   * @param y\n   * @param className\n   */\n  exports.drawBar = function (x, y, width, height, className, JSONcontainer, svgContainer, style) {\n    if (height != 0) {\n      if (height < 0) {\n        height *= -1;\n        y -= height;\n      }\n      var rect = exports.getSVGElement('rect', JSONcontainer, svgContainer);\n      rect.setAttributeNS(null, \"x\", x - 0.5 * width);\n      rect.setAttributeNS(null, \"y\", y);\n      rect.setAttributeNS(null, \"width\", width);\n      rect.setAttributeNS(null, \"height\", height);\n      rect.setAttributeNS(null, \"class\", className);\n      if (style) {\n        rect.setAttributeNS(null, \"style\", style);\n      }\n    }\n  };\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  var util = __webpack_require__(1);\n  var Queue = __webpack_require__(10);\n\n  /**\n   * DataSet\n   *\n   * Usage:\n   *     var dataSet = new DataSet({\n   *         fieldId: '_id',\n   *         type: {\n   *             // ...\n   *         }\n   *     });\n   *\n   *     dataSet.add(item);\n   *     dataSet.add(data);\n   *     dataSet.update(item);\n   *     dataSet.update(data);\n   *     dataSet.remove(id);\n   *     dataSet.remove(ids);\n   *     var data = dataSet.get();\n   *     var data = dataSet.get(id);\n   *     var data = dataSet.get(ids);\n   *     var data = dataSet.get(ids, options, data);\n   *     dataSet.clear();\n   *\n   * A data set can:\n   * - add/remove/update data\n   * - gives triggers upon changes in the data\n   * - can  import/export data in various data formats\n   *\n   * @param {Array} [data]    Optional array with initial data\n   * @param {Object} [options]   Available options:\n   *                             {String} fieldId Field name of the id in the\n   *                                              items, 'id' by default.\n   *                             {Object.<String, String} type\n   *                                              A map with field names as key,\n   *                                              and the field type as value.\n   *                             {Object} queue   Queue changes to the DataSet,\n   *                                              flush them all at once.\n   *                                              Queue options:\n   *                                              - {number} delay  Delay in ms, null by default\n   *                                              - {number} max    Maximum number of entries in the queue, Infinity by default\n   * @constructor DataSet\n   */\n  // TODO: add a DataSet constructor DataSet(data, options)\n  function DataSet(data, options) {\n    // correctly read optional arguments\n    if (data && !Array.isArray(data)) {\n      options = data;\n      data = null;\n    }\n\n    this._options = options || {};\n    this._data = {}; // map with data indexed by id\n    this.length = 0; // number of items in the DataSet\n    this._fieldId = this._options.fieldId || 'id'; // name of the field containing id\n    this._type = {}; // internal field types (NOTE: this can differ from this._options.type)\n\n    // all variants of a Date are internally stored as Date, so we can convert\n    // from everything to everything (also from ISODate to Number for example)\n    if (this._options.type) {\n      var fields = Object.keys(this._options.type);\n      for (var i = 0, len = fields.length; i < len; i++) {\n        var field = fields[i];\n        var value = this._options.type[field];\n        if (value == 'Date' || value == 'ISODate' || value == 'ASPDate') {\n          this._type[field] = 'Date';\n        } else {\n          this._type[field] = value;\n        }\n      }\n    }\n\n    // TODO: deprecated since version 1.1.1 (or 2.0.0?)\n    if (this._options.convert) {\n      throw new Error('Option \"convert\" is deprecated. Use \"type\" instead.');\n    }\n\n    this._subscribers = {}; // event subscribers\n\n    // add initial data when provided\n    if (data) {\n      this.add(data);\n    }\n\n    this.setOptions(options);\n  }\n\n  /**\n   * @param {Object} [options]   Available options:\n   *                             {Object} queue   Queue changes to the DataSet,\n   *                                              flush them all at once.\n   *                                              Queue options:\n   *                                              - {number} delay  Delay in ms, null by default\n   *                                              - {number} max    Maximum number of entries in the queue, Infinity by default\n   * @param options\n   */\n  DataSet.prototype.setOptions = function (options) {\n    if (options && options.queue !== undefined) {\n      if (options.queue === false) {\n        // delete queue if loaded\n        if (this._queue) {\n          this._queue.destroy();\n          delete this._queue;\n        }\n      } else {\n        // create queue and update its options\n        if (!this._queue) {\n          this._queue = Queue.extend(this, {\n            replace: ['add', 'update', 'remove']\n          });\n        }\n\n        if (_typeof(options.queue) === 'object') {\n          this._queue.setOptions(options.queue);\n        }\n      }\n    }\n  };\n\n  /**\n   * Subscribe to an event, add an event listener\n   * @param {String} event        Event name. Available events: 'put', 'update',\n   *                              'remove'\n   * @param {function} callback   Callback method. Called with three parameters:\n   *                                  {String} event\n   *                                  {Object | null} params\n   *                                  {String | Number} senderId\n   */\n  DataSet.prototype.on = function (event, callback) {\n    var subscribers = this._subscribers[event];\n    if (!subscribers) {\n      subscribers = [];\n      this._subscribers[event] = subscribers;\n    }\n\n    subscribers.push({\n      callback: callback\n    });\n  };\n\n  // TODO: remove this deprecated function some day (replaced with `on` since version 0.5, deprecated since v4.0)\n  DataSet.prototype.subscribe = function () {\n    throw new Error('DataSet.subscribe is deprecated. Use DataSet.on instead.');\n  };\n\n  /**\n   * Unsubscribe from an event, remove an event listener\n   * @param {String} event\n   * @param {function} callback\n   */\n  DataSet.prototype.off = function (event, callback) {\n    var subscribers = this._subscribers[event];\n    if (subscribers) {\n      this._subscribers[event] = subscribers.filter(function (listener) {\n        return listener.callback != callback;\n      });\n    }\n  };\n\n  // TODO: remove this deprecated function some day (replaced with `on` since version 0.5, deprecated since v4.0)\n  DataSet.prototype.unsubscribe = function () {\n    throw new Error('DataSet.unsubscribe is deprecated. Use DataSet.off instead.');\n  };\n\n  /**\n   * Trigger an event\n   * @param {String} event\n   * @param {Object | null} params\n   * @param {String} [senderId]       Optional id of the sender.\n   * @private\n   */\n  DataSet.prototype._trigger = function (event, params, senderId) {\n    if (event == '*') {\n      throw new Error('Cannot trigger event *');\n    }\n\n    var subscribers = [];\n    if (event in this._subscribers) {\n      subscribers = subscribers.concat(this._subscribers[event]);\n    }\n    if ('*' in this._subscribers) {\n      subscribers = subscribers.concat(this._subscribers['*']);\n    }\n\n    for (var i = 0, len = subscribers.length; i < len; i++) {\n      var subscriber = subscribers[i];\n      if (subscriber.callback) {\n        subscriber.callback(event, params, senderId || null);\n      }\n    }\n  };\n\n  /**\n   * Add data.\n   * Adding an item will fail when there already is an item with the same id.\n   * @param {Object | Array} data\n   * @param {String} [senderId] Optional sender id\n   * @return {Array} addedIds      Array with the ids of the added items\n   */\n  DataSet.prototype.add = function (data, senderId) {\n    var addedIds = [],\n        id,\n        me = this;\n\n    if (Array.isArray(data)) {\n      // Array\n      for (var i = 0, len = data.length; i < len; i++) {\n        id = me._addItem(data[i]);\n        addedIds.push(id);\n      }\n    } else if (data instanceof Object) {\n      // Single item\n      id = me._addItem(data);\n      addedIds.push(id);\n    } else {\n      throw new Error('Unknown dataType');\n    }\n\n    if (addedIds.length) {\n      this._trigger('add', { items: addedIds }, senderId);\n    }\n\n    return addedIds;\n  };\n\n  /**\n   * Update existing items. When an item does not exist, it will be created\n   * @param {Object | Array} data\n   * @param {String} [senderId] Optional sender id\n   * @return {Array} updatedIds     The ids of the added or updated items\n   */\n  DataSet.prototype.update = function (data, senderId) {\n    var addedIds = [];\n    var updatedIds = [];\n    var oldData = [];\n    var updatedData = [];\n    var me = this;\n    var fieldId = me._fieldId;\n\n    var addOrUpdate = function addOrUpdate(item) {\n      var id = item[fieldId];\n      if (me._data[id]) {\n        var oldItem = util.extend({}, me._data[id]);\n        // update item\n        id = me._updateItem(item);\n        updatedIds.push(id);\n        updatedData.push(item);\n        oldData.push(oldItem);\n      } else {\n        // add new item\n        id = me._addItem(item);\n        addedIds.push(id);\n      }\n    };\n\n    if (Array.isArray(data)) {\n      // Array\n      for (var i = 0, len = data.length; i < len; i++) {\n        if (data[i] instanceof Object) {\n          addOrUpdate(data[i]);\n        } else {\n          console.warn('Ignoring input item, which is not an object at index ' + i);\n        }\n      }\n    } else if (data instanceof Object) {\n      // Single item\n      addOrUpdate(data);\n    } else {\n      throw new Error('Unknown dataType');\n    }\n\n    if (addedIds.length) {\n      this._trigger('add', { items: addedIds }, senderId);\n    }\n    if (updatedIds.length) {\n      var props = { items: updatedIds, oldData: oldData, data: updatedData };\n      // TODO: remove deprecated property 'data' some day\n      //Object.defineProperty(props, 'data', {\n      //  'get': (function() {\n      //    console.warn('Property data is deprecated. Use DataSet.get(ids) to retrieve the new data, use the oldData property on this object to get the old data');\n      //    return updatedData;\n      //  }).bind(this)\n      //});\n      this._trigger('update', props, senderId);\n    }\n\n    return addedIds.concat(updatedIds);\n  };\n\n  /**\n   * Get a data item or multiple items.\n   *\n   * Usage:\n   *\n   *     get()\n   *     get(options: Object)\n   *\n   *     get(id: Number | String)\n   *     get(id: Number | String, options: Object)\n   *\n   *     get(ids: Number[] | String[])\n   *     get(ids: Number[] | String[], options: Object)\n   *\n   * Where:\n   *\n   * {Number | String} id         The id of an item\n   * {Number[] | String{}} ids    An array with ids of items\n   * {Object} options             An Object with options. Available options:\n   * {String} [returnType]        Type of data to be returned.\n   *                              Can be 'Array' (default) or 'Object'.\n   * {Object.<String, String>} [type]\n   * {String[]} [fields]          field names to be returned\n   * {function} [filter]          filter items\n   * {String | function} [order]  Order the items by a field name or custom sort function.\n   * @throws Error\n   */\n  DataSet.prototype.get = function (args) {\n    var me = this;\n\n    // parse the arguments\n    var id, ids, options;\n    var firstType = util.getType(arguments[0]);\n    if (firstType == 'String' || firstType == 'Number') {\n      // get(id [, options])\n      id = arguments[0];\n      options = arguments[1];\n    } else if (firstType == 'Array') {\n      // get(ids [, options])\n      ids = arguments[0];\n      options = arguments[1];\n    } else {\n      // get([, options])\n      options = arguments[0];\n    }\n\n    // determine the return type\n    var returnType;\n    if (options && options.returnType) {\n      var allowedValues = ['Array', 'Object'];\n      returnType = allowedValues.indexOf(options.returnType) == -1 ? 'Array' : options.returnType;\n    } else {\n      returnType = 'Array';\n    }\n\n    // build options\n    var type = options && options.type || this._options.type;\n    var filter = options && options.filter;\n    var items = [],\n        item,\n        itemIds,\n        itemId,\n        i,\n        len;\n\n    // convert items\n    if (id != undefined) {\n      // return a single item\n      item = me._getItem(id, type);\n      if (item && filter && !filter(item)) {\n        item = null;\n      }\n    } else if (ids != undefined) {\n      // return a subset of items\n      for (i = 0, len = ids.length; i < len; i++) {\n        item = me._getItem(ids[i], type);\n        if (!filter || filter(item)) {\n          items.push(item);\n        }\n      }\n    } else {\n      // return all items\n      itemIds = Object.keys(this._data);\n      for (i = 0, len = itemIds.length; i < len; i++) {\n        itemId = itemIds[i];\n        item = me._getItem(itemId, type);\n        if (!filter || filter(item)) {\n          items.push(item);\n        }\n      }\n    }\n\n    // order the results\n    if (options && options.order && id == undefined) {\n      this._sort(items, options.order);\n    }\n\n    // filter fields of the items\n    if (options && options.fields) {\n      var fields = options.fields;\n      if (id != undefined) {\n        item = this._filterFields(item, fields);\n      } else {\n        for (i = 0, len = items.length; i < len; i++) {\n          items[i] = this._filterFields(items[i], fields);\n        }\n      }\n    }\n\n    // return the results\n    if (returnType == 'Object') {\n      var result = {},\n          resultant;\n      for (i = 0, len = items.length; i < len; i++) {\n        resultant = items[i];\n        result[resultant.id] = resultant;\n      }\n      return result;\n    } else {\n      if (id != undefined) {\n        // a single item\n        return item;\n      } else {\n        // just return our array\n        return items;\n      }\n    }\n  };\n\n  /**\n   * Get ids of all items or from a filtered set of items.\n   * @param {Object} [options]    An Object with options. Available options:\n   *                              {function} [filter] filter items\n   *                              {String | function} [order] Order the items by\n   *                                  a field name or custom sort function.\n   * @return {Array} ids\n   */\n  DataSet.prototype.getIds = function (options) {\n    var data = this._data,\n        filter = options && options.filter,\n        order = options && options.order,\n        type = options && options.type || this._options.type,\n        itemIds = Object.keys(data),\n        i,\n        len,\n        id,\n        item,\n        items,\n        ids = [];\n\n    if (filter) {\n      // get filtered items\n      if (order) {\n        // create ordered list\n        items = [];\n        for (i = 0, len = itemIds.length; i < len; i++) {\n          id = itemIds[i];\n          item = this._getItem(id, type);\n          if (filter(item)) {\n            items.push(item);\n          }\n        }\n\n        this._sort(items, order);\n\n        for (i = 0, len = items.length; i < len; i++) {\n          ids.push(items[i][this._fieldId]);\n        }\n      } else {\n        // create unordered list\n        for (i = 0, len = itemIds.length; i < len; i++) {\n          id = itemIds[i];\n          item = this._getItem(id, type);\n          if (filter(item)) {\n            ids.push(item[this._fieldId]);\n          }\n        }\n      }\n    } else {\n      // get all items\n      if (order) {\n        // create an ordered list\n        items = [];\n        for (i = 0, len = itemIds.length; i < len; i++) {\n          id = itemIds[i];\n          items.push(data[id]);\n        }\n\n        this._sort(items, order);\n\n        for (i = 0, len = items.length; i < len; i++) {\n          ids.push(items[i][this._fieldId]);\n        }\n      } else {\n        // create unordered list\n        for (i = 0, len = itemIds.length; i < len; i++) {\n          id = itemIds[i];\n          item = data[id];\n          ids.push(item[this._fieldId]);\n        }\n      }\n    }\n\n    return ids;\n  };\n\n  /**\n   * Returns the DataSet itself. Is overwritten for example by the DataView,\n   * which returns the DataSet it is connected to instead.\n   */\n  DataSet.prototype.getDataSet = function () {\n    return this;\n  };\n\n  /**\n   * Execute a callback function for every item in the dataset.\n   * @param {function} callback\n   * @param {Object} [options]    Available options:\n   *                              {Object.<String, String>} [type]\n   *                              {String[]} [fields] filter fields\n   *                              {function} [filter] filter items\n   *                              {String | function} [order] Order the items by\n   *                                  a field name or custom sort function.\n   */\n  DataSet.prototype.forEach = function (callback, options) {\n    var filter = options && options.filter,\n        type = options && options.type || this._options.type,\n        data = this._data,\n        itemIds = Object.keys(data),\n        i,\n        len,\n        item,\n        id;\n\n    if (options && options.order) {\n      // execute forEach on ordered list\n      var items = this.get(options);\n\n      for (i = 0, len = items.length; i < len; i++) {\n        item = items[i];\n        id = item[this._fieldId];\n        callback(item, id);\n      }\n    } else {\n      // unordered\n      for (i = 0, len = itemIds.length; i < len; i++) {\n        id = itemIds[i];\n        item = this._getItem(id, type);\n        if (!filter || filter(item)) {\n          callback(item, id);\n        }\n      }\n    }\n  };\n\n  /**\n   * Map every item in the dataset.\n   * @param {function} callback\n   * @param {Object} [options]    Available options:\n   *                              {Object.<String, String>} [type]\n   *                              {String[]} [fields] filter fields\n   *                              {function} [filter] filter items\n   *                              {String | function} [order] Order the items by\n   *                                  a field name or custom sort function.\n   * @return {Object[]} mappedItems\n   */\n  DataSet.prototype.map = function (callback, options) {\n    var filter = options && options.filter,\n        type = options && options.type || this._options.type,\n        mappedItems = [],\n        data = this._data,\n        itemIds = Object.keys(data),\n        i,\n        len,\n        id,\n        item;\n\n    // convert and filter items\n    for (i = 0, len = itemIds.length; i < len; i++) {\n      id = itemIds[i];\n      item = this._getItem(id, type);\n      if (!filter || filter(item)) {\n        mappedItems.push(callback(item, id));\n      }\n    }\n\n    // order items\n    if (options && options.order) {\n      this._sort(mappedItems, options.order);\n    }\n\n    return mappedItems;\n  };\n\n  /**\n   * Filter the fields of an item\n   * @param {Object | null} item\n   * @param {String[]} fields     Field names\n   * @return {Object | null} filteredItem or null if no item is provided\n   * @private\n   */\n  DataSet.prototype._filterFields = function (item, fields) {\n    if (!item) {\n      // item is null\n      return item;\n    }\n\n    var filteredItem = {},\n        itemFields = Object.keys(item),\n        len = itemFields.length,\n        i,\n        field;\n\n    if (Array.isArray(fields)) {\n      for (i = 0; i < len; i++) {\n        field = itemFields[i];\n        if (fields.indexOf(field) != -1) {\n          filteredItem[field] = item[field];\n        }\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        field = itemFields[i];\n        if (fields.hasOwnProperty(field)) {\n          filteredItem[fields[field]] = item[field];\n        }\n      }\n    }\n\n    return filteredItem;\n  };\n\n  /**\n   * Sort the provided array with items\n   * @param {Object[]} items\n   * @param {String | function} order      A field name or custom sort function.\n   * @private\n   */\n  DataSet.prototype._sort = function (items, order) {\n    if (util.isString(order)) {\n      // order by provided field name\n      var name = order; // field name\n      items.sort(function (a, b) {\n        var av = a[name];\n        var bv = b[name];\n        return av > bv ? 1 : av < bv ? -1 : 0;\n      });\n    } else if (typeof order === 'function') {\n      // order by sort function\n      items.sort(order);\n    }\n    // TODO: extend order by an Object {field:String, direction:String}\n    //       where direction can be 'asc' or 'desc'\n    else {\n        throw new TypeError('Order must be a function or a string');\n      }\n  };\n\n  /**\n   * Remove an object by pointer or by id\n   * @param {String | Number | Object | Array} id Object or id, or an array with\n   *                                              objects or ids to be removed\n   * @param {String} [senderId] Optional sender id\n   * @return {Array} removedIds\n   */\n  DataSet.prototype.remove = function (id, senderId) {\n    var removedIds = [],\n        removedItems = [],\n        ids = [],\n        i,\n        len,\n        itemId,\n        item;\n\n    // force everything to be an array for simplicity\n    ids = Array.isArray(id) ? id : [id];\n\n    for (i = 0, len = ids.length; i < len; i++) {\n      item = this._remove(ids[i]);\n      if (item) {\n        itemId = item[this._fieldId];\n        if (itemId) {\n          removedIds.push(itemId);\n          removedItems.push(item);\n        }\n      }\n    }\n\n    if (removedIds.length) {\n      this._trigger('remove', { items: removedIds, oldData: removedItems }, senderId);\n    }\n\n    return removedIds;\n  };\n\n  /**\n   * Remove an item by its id\n   * @param {Number | String | Object} id   id or item\n   * @returns {Number | String | null} id\n   * @private\n   */\n  DataSet.prototype._remove = function (id) {\n    var item, ident;\n\n    // confirm the id to use based on the args type\n    if (util.isNumber(id) || util.isString(id)) {\n      ident = id;\n    } else if (id instanceof Object) {\n      ident = id[this._fieldId]; // look for the identifier field using _fieldId\n    }\n\n    // do the remove if the item is found\n    if (ident !== undefined && this._data[ident]) {\n      item = this._data[ident];\n      delete this._data[ident];\n      this.length--;\n      return item;\n    }\n    return null;\n  };\n\n  /**\n   * Clear the data\n   * @param {String} [senderId] Optional sender id\n   * @return {Array} removedIds    The ids of all removed items\n   */\n  DataSet.prototype.clear = function (senderId) {\n    var i, len;\n    var ids = Object.keys(this._data);\n    var items = [];\n\n    for (i = 0, len = ids.length; i < len; i++) {\n      items.push(this._data[ids[i]]);\n    }\n\n    this._data = {};\n    this.length = 0;\n\n    this._trigger('remove', { items: ids, oldData: items }, senderId);\n\n    return ids;\n  };\n\n  /**\n   * Find the item with maximum value of a specified field\n   * @param {String} field\n   * @return {Object | null} item  Item containing max value, or null if no items\n   */\n  DataSet.prototype.max = function (field) {\n    var data = this._data,\n        itemIds = Object.keys(data),\n        max = null,\n        maxField = null,\n        i,\n        len;\n\n    for (i = 0, len = itemIds.length; i < len; i++) {\n      var id = itemIds[i];\n      var item = data[id];\n      var itemField = item[field];\n      if (itemField != null && (!max || itemField > maxField)) {\n        max = item;\n        maxField = itemField;\n      }\n    }\n\n    return max;\n  };\n\n  /**\n   * Find the item with minimum value of a specified field\n   * @param {String} field\n   * @return {Object | null} item  Item containing max value, or null if no items\n   */\n  DataSet.prototype.min = function (field) {\n    var data = this._data,\n        itemIds = Object.keys(data),\n        min = null,\n        minField = null,\n        i,\n        len;\n\n    for (i = 0, len = itemIds.length; i < len; i++) {\n      var id = itemIds[i];\n      var item = data[id];\n      var itemField = item[field];\n      if (itemField != null && (!min || itemField < minField)) {\n        min = item;\n        minField = itemField;\n      }\n    }\n\n    return min;\n  };\n\n  /**\n   * Find all distinct values of a specified field\n   * @param {String} field\n   * @return {Array} values  Array containing all distinct values. If data items\n   *                         do not contain the specified field are ignored.\n   *                         The returned array is unordered.\n   */\n  DataSet.prototype.distinct = function (field) {\n    var data = this._data;\n    var itemIds = Object.keys(data);\n    var values = [];\n    var fieldType = this._options.type && this._options.type[field] || null;\n    var count = 0;\n    var i, j, len;\n\n    for (i = 0, len = itemIds.length; i < len; i++) {\n      var id = itemIds[i];\n      var item = data[id];\n      var value = item[field];\n      var exists = false;\n      for (j = 0; j < count; j++) {\n        if (values[j] == value) {\n          exists = true;\n          break;\n        }\n      }\n      if (!exists && value !== undefined) {\n        values[count] = value;\n        count++;\n      }\n    }\n\n    if (fieldType) {\n      for (i = 0, len = values.length; i < len; i++) {\n        values[i] = util.convert(values[i], fieldType);\n      }\n    }\n\n    return values;\n  };\n\n  /**\n   * Add a single item. Will fail when an item with the same id already exists.\n   * @param {Object} item\n   * @return {String} id\n   * @private\n   */\n  DataSet.prototype._addItem = function (item) {\n    var id = item[this._fieldId];\n\n    if (id != undefined) {\n      // check whether this id is already taken\n      if (this._data[id]) {\n        // item already exists\n        throw new Error('Cannot add item: item with id ' + id + ' already exists');\n      }\n    } else {\n      // generate an id\n      id = util.randomUUID();\n      item[this._fieldId] = id;\n    }\n\n    var d = {},\n        fields = Object.keys(item),\n        i,\n        len;\n    for (i = 0, len = fields.length; i < len; i++) {\n      var field = fields[i];\n      var fieldType = this._type[field]; // type may be undefined\n      d[field] = util.convert(item[field], fieldType);\n    }\n    this._data[id] = d;\n    this.length++;\n\n    return id;\n  };\n\n  /**\n   * Get an item. Fields can be converted to a specific type\n   * @param {String} id\n   * @param {Object.<String, String>} [types]  field types to convert\n   * @return {Object | null} item\n   * @private\n   */\n  DataSet.prototype._getItem = function (id, types) {\n    var field, value, i, len;\n\n    // get the item from the dataset\n    var raw = this._data[id];\n    if (!raw) {\n      return null;\n    }\n\n    // convert the items field types\n    var converted = {},\n        fields = Object.keys(raw);\n\n    if (types) {\n      for (i = 0, len = fields.length; i < len; i++) {\n        field = fields[i];\n        value = raw[field];\n        converted[field] = util.convert(value, types[field]);\n      }\n    } else {\n      // no field types specified, no converting needed\n      for (i = 0, len = fields.length; i < len; i++) {\n        field = fields[i];\n        value = raw[field];\n        converted[field] = value;\n      }\n    }\n    return converted;\n  };\n\n  /**\n   * Update a single item: merge with existing item.\n   * Will fail when the item has no id, or when there does not exist an item\n   * with the same id.\n   * @param {Object} item\n   * @return {String} id\n   * @private\n   */\n  DataSet.prototype._updateItem = function (item) {\n    var id = item[this._fieldId];\n    if (id == undefined) {\n      throw new Error('Cannot update item: item has no id (item: ' + JSON.stringify(item) + ')');\n    }\n    var d = this._data[id];\n    if (!d) {\n      // item doesn't exist\n      throw new Error('Cannot update item: no item with id ' + id + ' found');\n    }\n\n    // merge with current item\n    var fields = Object.keys(item);\n    for (var i = 0, len = fields.length; i < len; i++) {\n      var field = fields[i];\n      var fieldType = this._type[field]; // type may be undefined\n      d[field] = util.convert(item[field], fieldType);\n    }\n\n    return id;\n  };\n\n  module.exports = DataSet;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n  'use strict';\n\n  /**\n   * A queue\n   * @param {Object} options\n   *            Available options:\n   *            - delay: number    When provided, the queue will be flushed\n   *                               automatically after an inactivity of this delay\n   *                               in milliseconds.\n   *                               Default value is null.\n   *            - max: number      When the queue exceeds the given maximum number\n   *                               of entries, the queue is flushed automatically.\n   *                               Default value of max is Infinity.\n   * @constructor\n   */\n  function Queue(options) {\n    // options\n    this.delay = null;\n    this.max = Infinity;\n\n    // properties\n    this._queue = [];\n    this._timeout = null;\n    this._extended = null;\n\n    this.setOptions(options);\n  }\n\n  /**\n   * Update the configuration of the queue\n   * @param {Object} options\n   *            Available options:\n   *            - delay: number    When provided, the queue will be flushed\n   *                               automatically after an inactivity of this delay\n   *                               in milliseconds.\n   *                               Default value is null.\n   *            - max: number      When the queue exceeds the given maximum number\n   *                               of entries, the queue is flushed automatically.\n   *                               Default value of max is Infinity.\n   * @param options\n   */\n  Queue.prototype.setOptions = function (options) {\n    if (options && typeof options.delay !== 'undefined') {\n      this.delay = options.delay;\n    }\n    if (options && typeof options.max !== 'undefined') {\n      this.max = options.max;\n    }\n\n    this._flushIfNeeded();\n  };\n\n  /**\n   * Extend an object with queuing functionality.\n   * The object will be extended with a function flush, and the methods provided\n   * in options.replace will be replaced with queued ones.\n   * @param {Object} object\n   * @param {Object} options\n   *            Available options:\n   *            - replace: Array.<string>\n   *                               A list with method names of the methods\n   *                               on the object to be replaced with queued ones.\n   *            - delay: number    When provided, the queue will be flushed\n   *                               automatically after an inactivity of this delay\n   *                               in milliseconds.\n   *                               Default value is null.\n   *            - max: number      When the queue exceeds the given maximum number\n   *                               of entries, the queue is flushed automatically.\n   *                               Default value of max is Infinity.\n   * @return {Queue} Returns the created queue\n   */\n  Queue.extend = function (object, options) {\n    var queue = new Queue(options);\n\n    if (object.flush !== undefined) {\n      throw new Error('Target object already has a property flush');\n    }\n    object.flush = function () {\n      queue.flush();\n    };\n\n    var methods = [{\n      name: 'flush',\n      original: undefined\n    }];\n\n    if (options && options.replace) {\n      for (var i = 0; i < options.replace.length; i++) {\n        var name = options.replace[i];\n        methods.push({\n          name: name,\n          original: object[name]\n        });\n        queue.replace(object, name);\n      }\n    }\n\n    queue._extended = {\n      object: object,\n      methods: methods\n    };\n\n    return queue;\n  };\n\n  /**\n   * Destroy the queue. The queue will first flush all queued actions, and in\n   * case it has extended an object, will restore the original object.\n   */\n  Queue.prototype.destroy = function () {\n    this.flush();\n\n    if (this._extended) {\n      var object = this._extended.object;\n      var methods = this._extended.methods;\n      for (var i = 0; i < methods.length; i++) {\n        var method = methods[i];\n        if (method.original) {\n          object[method.name] = method.original;\n        } else {\n          delete object[method.name];\n        }\n      }\n      this._extended = null;\n    }\n  };\n\n  /**\n   * Replace a method on an object with a queued version\n   * @param {Object} object   Object having the method\n   * @param {string} method   The method name\n   */\n  Queue.prototype.replace = function (object, method) {\n    var me = this;\n    var original = object[method];\n    if (!original) {\n      throw new Error('Method ' + method + ' undefined');\n    }\n\n    object[method] = function () {\n      // create an Array with the arguments\n      var args = [];\n      for (var i = 0; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n\n      // add this call to the queue\n      me.queue({\n        args: args,\n        fn: original,\n        context: this\n      });\n    };\n  };\n\n  /**\n   * Queue a call\n   * @param {function | {fn: function, args: Array} | {fn: function, args: Array, context: Object}} entry\n   */\n  Queue.prototype.queue = function (entry) {\n    if (typeof entry === 'function') {\n      this._queue.push({ fn: entry });\n    } else {\n      this._queue.push(entry);\n    }\n\n    this._flushIfNeeded();\n  };\n\n  /**\n   * Check whether the queue needs to be flushed\n   * @private\n   */\n  Queue.prototype._flushIfNeeded = function () {\n    // flush when the maximum is exceeded.\n    if (this._queue.length > this.max) {\n      this.flush();\n    }\n\n    // flush after a period of inactivity when a delay is configured\n    clearTimeout(this._timeout);\n    if (this.queue.length > 0 && typeof this.delay === 'number') {\n      var me = this;\n      this._timeout = setTimeout(function () {\n        me.flush();\n      }, this.delay);\n    }\n  };\n\n  /**\n   * Flush all queued calls\n   */\n  Queue.prototype.flush = function () {\n    while (this._queue.length > 0) {\n      var entry = this._queue.shift();\n      entry.fn.apply(entry.context || entry.fn, entry.args || []);\n    }\n  };\n\n  module.exports = Queue;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(9);\n\n  /**\n   * DataView\n   *\n   * a dataview offers a filtered view on a dataset or an other dataview.\n   *\n   * @param {DataSet | DataView} data\n   * @param {Object} [options]   Available options: see method get\n   *\n   * @constructor DataView\n   */\n  function DataView(data, options) {\n    this._data = null;\n    this._ids = {}; // ids of the items currently in memory (just contains a boolean true)\n    this.length = 0; // number of items in the DataView\n    this._options = options || {};\n    this._fieldId = 'id'; // name of the field containing id\n    this._subscribers = {}; // event subscribers\n\n    var me = this;\n    this.listener = function () {\n      me._onEvent.apply(me, arguments);\n    };\n\n    this.setData(data);\n  }\n\n  // TODO: implement a function .config() to dynamically update things like configured filter\n  // and trigger changes accordingly\n\n  /**\n   * Set a data source for the view\n   * @param {DataSet | DataView} data\n   */\n  DataView.prototype.setData = function (data) {\n    var ids, id, i, len, items;\n\n    if (this._data) {\n      // unsubscribe from current dataset\n      if (this._data.off) {\n        this._data.off('*', this.listener);\n      }\n\n      // trigger a remove of all items in memory\n      ids = this._data.getIds({ filter: this._options && this._options.filter });\n      items = [];\n\n      for (i = 0, len = ids.length; i < len; i++) {\n        items.push(this._data._data[ids[i]]);\n      }\n\n      this._ids = {};\n      this.length = 0;\n      this._trigger('remove', { items: ids, oldData: items });\n    }\n\n    this._data = data;\n\n    if (this._data) {\n      // update fieldId\n      this._fieldId = this._options.fieldId || this._data && this._data.options && this._data.options.fieldId || 'id';\n\n      // trigger an add of all added items\n      ids = this._data.getIds({ filter: this._options && this._options.filter });\n      for (i = 0, len = ids.length; i < len; i++) {\n        id = ids[i];\n        this._ids[id] = true;\n      }\n      this.length = ids.length;\n      this._trigger('add', { items: ids });\n\n      // subscribe to new dataset\n      if (this._data.on) {\n        this._data.on('*', this.listener);\n      }\n    }\n  };\n\n  /**\n   * Refresh the DataView. Useful when the DataView has a filter function\n   * containing a variable parameter.\n   */\n  DataView.prototype.refresh = function () {\n    var id, i, len;\n    var ids = this._data.getIds({ filter: this._options && this._options.filter }),\n        oldIds = Object.keys(this._ids),\n        newIds = {},\n        addedIds = [],\n        removedIds = [],\n        removedItems = [];\n\n    // check for additions\n    for (i = 0, len = ids.length; i < len; i++) {\n      id = ids[i];\n      newIds[id] = true;\n      if (!this._ids[id]) {\n        addedIds.push(id);\n        this._ids[id] = true;\n      }\n    }\n\n    // check for removals\n    for (i = 0, len = oldIds.length; i < len; i++) {\n      id = oldIds[i];\n      if (!newIds[id]) {\n        removedIds.push(id);\n        removedItems.push(this._data[id]);\n        delete this._ids[id];\n      }\n    }\n\n    this.length += addedIds.length - removedIds.length;\n\n    // trigger events\n    if (addedIds.length) {\n      this._trigger('add', { items: addedIds });\n    }\n    if (removedIds.length) {\n      this._trigger('remove', { items: removedIds, oldData: removedItems });\n    }\n  };\n\n  /**\n   * Get data from the data view\n   *\n   * Usage:\n   *\n   *     get()\n   *     get(options: Object)\n   *     get(options: Object, data: Array | DataTable)\n   *\n   *     get(id: Number)\n   *     get(id: Number, options: Object)\n   *     get(id: Number, options: Object, data: Array | DataTable)\n   *\n   *     get(ids: Number[])\n   *     get(ids: Number[], options: Object)\n   *     get(ids: Number[], options: Object, data: Array | DataTable)\n   *\n   * Where:\n   *\n   * {Number | String} id         The id of an item\n   * {Number[] | String{}} ids    An array with ids of items\n   * {Object} options             An Object with options. Available options:\n   *                              {String} [type] Type of data to be returned. Can\n   *                                              be 'DataTable' or 'Array' (default)\n   *                              {Object.<String, String>} [convert]\n   *                              {String[]} [fields] field names to be returned\n   *                              {function} [filter] filter items\n   *                              {String | function} [order] Order the items by\n   *                                  a field name or custom sort function.\n   * {Array | DataTable} [data]   If provided, items will be appended to this\n   *                              array or table. Required in case of Google\n   *                              DataTable.\n   * @param args\n   */\n  DataView.prototype.get = function (args) {\n    var me = this;\n\n    // parse the arguments\n    var ids, options, data;\n    var firstType = util.getType(arguments[0]);\n    if (firstType == 'String' || firstType == 'Number' || firstType == 'Array') {\n      // get(id(s) [, options] [, data])\n      ids = arguments[0]; // can be a single id or an array with ids\n      options = arguments[1];\n      data = arguments[2];\n    } else {\n      // get([, options] [, data])\n      options = arguments[0];\n      data = arguments[1];\n    }\n\n    // extend the options with the default options and provided options\n    var viewOptions = util.extend({}, this._options, options);\n\n    // create a combined filter method when needed\n    if (this._options.filter && options && options.filter) {\n      viewOptions.filter = function (item) {\n        return me._options.filter(item) && options.filter(item);\n      };\n    }\n\n    // build up the call to the linked data set\n    var getArguments = [];\n    if (ids != undefined) {\n      getArguments.push(ids);\n    }\n    getArguments.push(viewOptions);\n    getArguments.push(data);\n\n    return this._data && this._data.get.apply(this._data, getArguments);\n  };\n\n  /**\n   * Get ids of all items or from a filtered set of items.\n   * @param {Object} [options]    An Object with options. Available options:\n   *                              {function} [filter] filter items\n   *                              {String | function} [order] Order the items by\n   *                                  a field name or custom sort function.\n   * @return {Array} ids\n   */\n  DataView.prototype.getIds = function (options) {\n    var ids;\n\n    if (this._data) {\n      var defaultFilter = this._options.filter;\n      var filter;\n\n      if (options && options.filter) {\n        if (defaultFilter) {\n          filter = function filter(item) {\n            return defaultFilter(item) && options.filter(item);\n          };\n        } else {\n          filter = options.filter;\n        }\n      } else {\n        filter = defaultFilter;\n      }\n\n      ids = this._data.getIds({\n        filter: filter,\n        order: options && options.order\n      });\n    } else {\n      ids = [];\n    }\n\n    return ids;\n  };\n\n  /**\n   * Map every item in the dataset.\n   * @param {function} callback\n   * @param {Object} [options]    Available options:\n   *                              {Object.<String, String>} [type]\n   *                              {String[]} [fields] filter fields\n   *                              {function} [filter] filter items\n   *                              {String | function} [order] Order the items by\n   *                                  a field name or custom sort function.\n   * @return {Object[]} mappedItems\n   */\n  DataView.prototype.map = function (callback, options) {\n    var mappedItems = [];\n    if (this._data) {\n      var defaultFilter = this._options.filter;\n      var filter;\n\n      if (options && options.filter) {\n        if (defaultFilter) {\n          filter = function filter(item) {\n            return defaultFilter(item) && options.filter(item);\n          };\n        } else {\n          filter = options.filter;\n        }\n      } else {\n        filter = defaultFilter;\n      }\n\n      mappedItems = this._data.map(callback, {\n        filter: filter,\n        order: options && options.order\n      });\n    } else {\n      mappedItems = [];\n    }\n\n    return mappedItems;\n  };\n\n  /**\n   * Get the DataSet to which this DataView is connected. In case there is a chain\n   * of multiple DataViews, the root DataSet of this chain is returned.\n   * @return {DataSet} dataSet\n   */\n  DataView.prototype.getDataSet = function () {\n    var dataSet = this;\n    while (dataSet instanceof DataView) {\n      dataSet = dataSet._data;\n    }\n    return dataSet || null;\n  };\n\n  /**\n   * Event listener. Will propagate all events from the connected data set to\n   * the subscribers of the DataView, but will filter the items and only trigger\n   * when there are changes in the filtered data set.\n   * @param {String} event\n   * @param {Object | null} params\n   * @param {String} senderId\n   * @private\n   */\n  DataView.prototype._onEvent = function (event, params, senderId) {\n    var i, len, id, item;\n    var ids = params && params.items;\n    var addedIds = [],\n        updatedIds = [],\n        removedIds = [],\n        oldItems = [],\n        updatedItems = [],\n        removedItems = [];\n\n    if (ids && this._data) {\n      switch (event) {\n        case 'add':\n          // filter the ids of the added items\n          for (i = 0, len = ids.length; i < len; i++) {\n            id = ids[i];\n            item = this.get(id);\n            if (item) {\n              this._ids[id] = true;\n              addedIds.push(id);\n            }\n          }\n\n          break;\n\n        case 'update':\n          // determine the event from the views viewpoint: an updated\n          // item can be added, updated, or removed from this view.\n          for (i = 0, len = ids.length; i < len; i++) {\n            id = ids[i];\n            item = this.get(id);\n\n            if (item) {\n              if (this._ids[id]) {\n                updatedIds.push(id);\n                updatedItems.push(params.data[i]);\n                oldItems.push(params.oldData[i]);\n              } else {\n                this._ids[id] = true;\n                addedIds.push(id);\n              }\n            } else {\n              if (this._ids[id]) {\n                delete this._ids[id];\n                removedIds.push(id);\n                removedItems.push(params.oldData[i]);\n              } else {\n                // nothing interesting for me :-(\n              }\n            }\n          }\n\n          break;\n\n        case 'remove':\n          // filter the ids of the removed items\n          for (i = 0, len = ids.length; i < len; i++) {\n            id = ids[i];\n            if (this._ids[id]) {\n              delete this._ids[id];\n              removedIds.push(id);\n              removedItems.push(params.oldData[i]);\n            }\n          }\n\n          break;\n      }\n\n      this.length += addedIds.length - removedIds.length;\n\n      if (addedIds.length) {\n        this._trigger('add', { items: addedIds }, senderId);\n      }\n      if (updatedIds.length) {\n        this._trigger('update', { items: updatedIds, oldData: oldItems, data: updatedItems }, senderId);\n      }\n      if (removedIds.length) {\n        this._trigger('remove', { items: removedIds, oldData: removedItems }, senderId);\n      }\n    }\n  };\n\n  // copy subscription functionality from DataSet\n  DataView.prototype.on = DataSet.prototype.on;\n  DataView.prototype.off = DataSet.prototype.off;\n  DataView.prototype._trigger = DataSet.prototype._trigger;\n\n  // TODO: make these functions deprecated (replaced with `on` and `off` since version 0.5)\n  DataView.prototype.subscribe = DataView.prototype.on;\n  DataView.prototype.unsubscribe = DataView.prototype.off;\n\n  module.exports = DataView;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var Emitter = __webpack_require__(13);var DataSet = __webpack_require__(9);\n  var DataView = __webpack_require__(11);\n  var util = __webpack_require__(1);\n  var Point3d = __webpack_require__(14);\n  var Point2d = __webpack_require__(15);\n  var Camera = __webpack_require__(16);\n  var Filter = __webpack_require__(17);\n  var Slider = __webpack_require__(18);\n  var StepNumber = __webpack_require__(19);\n  var Range = __webpack_require__(20);\n  var Settings = __webpack_require__(21);\n\n  /// enumerate the available styles\n  Graph3d.STYLE = Settings.STYLE;\n\n  /**\n   * Following label is used in the settings to describe values which should be\n   * determined by the code while running, from the current data and graph style.\n   * \n   * Using 'undefined' directly achieves the same thing, but this is more\n   * descriptive by describing the intent.\n   */\n  var autoByDefault = undefined;\n\n  /**\n   * Default values for option settings.\n   *\n   * These are the values used when a Graph3d instance is initialized without\n   * custom settings.\n   *\n   * If a field is not in this list, a default value of 'autoByDefault' is assumed,\n   * which is just an alias for 'undefined'.\n   */\n  var DEFAULTS = {\n    width: '400px',\n    height: '400px',\n    filterLabel: 'time',\n    legendLabel: 'value',\n    xLabel: 'x',\n    yLabel: 'y',\n    zLabel: 'z',\n    xValueLabel: function xValueLabel(v) {\n      return v;\n    },\n    yValueLabel: function yValueLabel(v) {\n      return v;\n    },\n    zValueLabel: function zValueLabel(v) {\n      return v;\n    },\n    showGrid: true,\n    showPerspective: true,\n    showShadow: false,\n    keepAspectRatio: true,\n    verticalRatio: 0.5, // 0.1 to 1.0, where 1.0 results in a 'cube'\n    dotSizeRatio: 0.02, // size of the dots as a fraction of the graph width\n\n    showAnimationControls: autoByDefault,\n    animationInterval: 1000, // milliseconds\n    animationPreload: false,\n    animationAutoStart: autoByDefault,\n\n    axisColor: '#4D4D4D',\n    gridColor: '#D3D3D3',\n    xCenter: '55%',\n    yCenter: '50%',\n\n    style: Graph3d.STYLE.DOT,\n    tooltip: false,\n    showLegend: autoByDefault, // determined by graph style\n    backgroundColor: autoByDefault,\n\n    dataColor: {\n      fill: '#7DC1FF',\n      stroke: '#3267D2',\n      strokeWidth: 1 // px\n    },\n\n    cameraPosition: {\n      horizontal: 1.0,\n      vertical: 0.5,\n      distance: 1.7\n    },\n\n    xBarWidth: autoByDefault,\n    yBarWidth: autoByDefault,\n    valueMin: autoByDefault,\n    valueMax: autoByDefault,\n    xMin: autoByDefault,\n    xMax: autoByDefault,\n    xStep: autoByDefault,\n    yMin: autoByDefault,\n    yMax: autoByDefault,\n    yStep: autoByDefault,\n    zMin: autoByDefault,\n    zMax: autoByDefault,\n    zStep: autoByDefault\n  };\n\n  // -----------------------------------------------------------------------------\n  // Class Graph3d\n  // -----------------------------------------------------------------------------\n\n\n  /**\n   * @constructor Graph3d\n   * Graph3d displays data in 3d.\n   *\n   * Graph3d is developed in javascript as a Google Visualization Chart.\n   *\n   * @param {Element} container   The DOM element in which the Graph3d will\n   *                              be created. Normally a div element.\n   * @param {DataSet | DataView | Array} [data]\n   * @param {Object} [options]\n   */\n  function Graph3d(container, data, options) {\n    if (!(this instanceof Graph3d)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    // create variables and set default values\n    this.containerElement = container;\n\n    this.dataTable = null; // The original data table\n    this.dataPoints = null; // The table with point objects\n\n    // create a frame and canvas\n    this.create();\n\n    Settings.setDefaults(DEFAULTS, this);\n\n    // the column indexes\n    this.colX = undefined;\n    this.colY = undefined;\n    this.colZ = undefined;\n    this.colValue = undefined;\n    this.colFilter = undefined;\n\n    // TODO: customize axis range\n\n    // apply options (also when undefined)\n    this.setOptions(options);\n\n    // apply data\n    if (data) {\n      this.setData(data);\n    }\n  }\n\n  // Extend Graph3d with an Emitter mixin\n  Emitter(Graph3d.prototype);\n\n  /**\n   * Calculate the scaling values, dependent on the range in x, y, and z direction\n   */\n  Graph3d.prototype._setScale = function () {\n    this.scale = new Point3d(1 / this.xRange.range(), 1 / this.yRange.range(), 1 / this.zRange.range());\n\n    // keep aspect ration between x and y scale if desired\n    if (this.keepAspectRatio) {\n      if (this.scale.x < this.scale.y) {\n        //noinspection JSSuspiciousNameCombination\n        this.scale.y = this.scale.x;\n      } else {\n        //noinspection JSSuspiciousNameCombination\n        this.scale.x = this.scale.y;\n      }\n    }\n\n    // scale the vertical axis\n    this.scale.z *= this.verticalRatio;\n    // TODO: can this be automated? verticalRatio?\n\n    // determine scale for (optional) value\n    if (this.valueRange !== undefined) {\n      this.scale.value = 1 / this.valueRange.range();\n    }\n\n    // position the camera arm\n    var xCenter = this.xRange.center() * this.scale.x;\n    var yCenter = this.yRange.center() * this.scale.y;\n    var zCenter = this.zRange.center() * this.scale.z;\n    this.camera.setArmLocation(xCenter, yCenter, zCenter);\n  };\n\n  /**\n   * Convert a 3D location to a 2D location on screen\n   * Source: ttp://en.wikipedia.org/wiki/3D_projection\n   *\n   * @param   {Point3d} point3d  A 3D point with parameters x, y, z\n   * @returns {Point2d} point2d  A 2D point with parameters x, y\n   */\n  Graph3d.prototype._convert3Dto2D = function (point3d) {\n    var translation = this._convertPointToTranslation(point3d);\n    return this._convertTranslationToScreen(translation);\n  };\n\n  /**\n   * Convert a 3D location its translation seen from the camera\n   * Source: http://en.wikipedia.org/wiki/3D_projection\n   *\n   * @param   {Point3d} point3d     A 3D point with parameters x, y, z\n   * @returns {Point3d} translation A 3D point with parameters x, y, z This is\n   *                                the translation of the point, seen from the\n   *                                camera.\n   */\n  Graph3d.prototype._convertPointToTranslation = function (point3d) {\n    var cameraLocation = this.camera.getCameraLocation(),\n        cameraRotation = this.camera.getCameraRotation(),\n        ax = point3d.x * this.scale.x,\n        ay = point3d.y * this.scale.y,\n        az = point3d.z * this.scale.z,\n        cx = cameraLocation.x,\n        cy = cameraLocation.y,\n        cz = cameraLocation.z,\n\n\n    // calculate angles\n    sinTx = Math.sin(cameraRotation.x),\n        cosTx = Math.cos(cameraRotation.x),\n        sinTy = Math.sin(cameraRotation.y),\n        cosTy = Math.cos(cameraRotation.y),\n        sinTz = Math.sin(cameraRotation.z),\n        cosTz = Math.cos(cameraRotation.z),\n\n\n    // calculate translation\n    dx = cosTy * (sinTz * (ay - cy) + cosTz * (ax - cx)) - sinTy * (az - cz),\n        dy = sinTx * (cosTy * (az - cz) + sinTy * (sinTz * (ay - cy) + cosTz * (ax - cx))) + cosTx * (cosTz * (ay - cy) - sinTz * (ax - cx)),\n        dz = cosTx * (cosTy * (az - cz) + sinTy * (sinTz * (ay - cy) + cosTz * (ax - cx))) - sinTx * (cosTz * (ay - cy) - sinTz * (ax - cx));\n\n    return new Point3d(dx, dy, dz);\n  };\n\n  /**\n   * Convert a translation point to a point on the screen\n   *\n   * @param   {Point3d} translation A 3D point with parameters x, y, z This is\n   *                                the translation of the point, seen from the\n   *                                camera.\n   * @returns {Point2d} point2d     A 2D point with parameters x, y\n   */\n  Graph3d.prototype._convertTranslationToScreen = function (translation) {\n    var ex = this.eye.x,\n        ey = this.eye.y,\n        ez = this.eye.z,\n        dx = translation.x,\n        dy = translation.y,\n        dz = translation.z;\n\n    // calculate position on screen from translation\n    var bx;\n    var by;\n    if (this.showPerspective) {\n      bx = (dx - ex) * (ez / dz);\n      by = (dy - ey) * (ez / dz);\n    } else {\n      bx = dx * -(ez / this.camera.getArmLength());\n      by = dy * -(ez / this.camera.getArmLength());\n    }\n\n    // shift and scale the point to the center of the screen\n    // use the width of the graph to scale both horizontally and vertically.\n    return new Point2d(this.currentXCenter + bx * this.frame.canvas.clientWidth, this.currentYCenter - by * this.frame.canvas.clientWidth);\n  };\n\n  /**\n   * Calculate the translations and screen positions of all points\n   */\n  Graph3d.prototype._calcTranslations = function (points, sort) {\n    if (sort === undefined) {\n      sort = true;\n    }\n\n    for (var i = 0; i < points.length; i++) {\n      var point = points[i];\n      point.trans = this._convertPointToTranslation(point.point);\n      point.screen = this._convertTranslationToScreen(point.trans);\n\n      // calculate the translation of the point at the bottom (needed for sorting)\n      var transBottom = this._convertPointToTranslation(point.bottom);\n      point.dist = this.showPerspective ? transBottom.length() : -transBottom.z;\n    }\n\n    if (!sort) {\n      return;\n    }\n\n    // sort the points on depth of their (x,y) position (not on z)\n    var sortDepth = function sortDepth(a, b) {\n      return b.dist - a.dist;\n    };\n    points.sort(sortDepth);\n  };\n\n  Graph3d.prototype.getNumberOfRows = function (data) {\n    return data.length;\n  };\n\n  Graph3d.prototype.getNumberOfColumns = function (data) {\n    var counter = 0;\n    for (var column in data[0]) {\n      if (data[0].hasOwnProperty(column)) {\n        counter++;\n      }\n    }\n    return counter;\n  };\n\n  Graph3d.prototype.getDistinctValues = function (data, column) {\n    var distinctValues = [];\n    for (var i = 0; i < data.length; i++) {\n      if (distinctValues.indexOf(data[i][column]) == -1) {\n        distinctValues.push(data[i][column]);\n      }\n    }\n    return distinctValues;\n  };\n\n  /**\n   * Get the absolute min/max values for the passed data column.\n   *\n   * @returns {Range} A Range instance with min/max members properly set.\n   */\n  Graph3d.prototype.getColumnRange = function (data, column) {\n    var range = new Range();\n\n    // Adjust the range so that it covers all values in the passed data elements.\n    for (var i = 0; i < data.length; i++) {\n      var item = data[i][column];\n      range.adjust(item);\n    }\n\n    return range;\n  };\n\n  /**\n   * Check if the state is consistent for the use of the value field.\n   *\n   * Throws if a problem is detected.\n   */\n  Graph3d.prototype._checkValueField = function (data) {\n\n    var hasValueField = this.style === Graph3d.STYLE.BARCOLOR || this.style === Graph3d.STYLE.BARSIZE || this.style === Graph3d.STYLE.DOTCOLOR || this.style === Graph3d.STYLE.DOTSIZE;\n\n    if (!hasValueField) {\n      return; // No need to check further\n    }\n\n    // Following field must be present for the current graph style\n    if (this.colValue === undefined) {\n      throw new Error('Expected data to have ' + ' field \\'style\\' ' + ' for graph style \\'' + this.style + '\\'');\n    }\n\n    // The data must also contain this field.\n    // Note that only first data element is checked.\n    if (data[0][this.colValue] === undefined) {\n      throw new Error('Expected data to have ' + ' field \\'' + this.colValue + '\\' ' + ' for graph style \\'' + this.style + '\\'');\n    }\n  };\n\n  /**\n   * Set default values for range\n   *\n   * The default values override the range values, if defined.\n   *\n   * Because it's possible that only defaultMin or defaultMax is set, it's better\n   * to pass in a range already set with the min/max set from the data. Otherwise,\n   * it's quite hard to process the min/max properly.\n   */\n  Graph3d.prototype._setRangeDefaults = function (range, defaultMin, defaultMax) {\n    if (defaultMin !== undefined) {\n      range.min = defaultMin;\n    }\n\n    if (defaultMax !== undefined) {\n      range.max = defaultMax;\n    }\n\n    // This is the original way that the default min/max values were adjusted.\n    // TODO: Perhaps it's better if an error is thrown if the values do not agree.\n    //       But this will change the behaviour.\n    if (range.max <= range.min) range.max = range.min + 1;\n  };\n\n  /**\n   * Initialize the data from the data table. Calculate minimum and maximum values\n   * and column index values\n   * @param {Array | DataSet | DataView} rawData The data containing the items for\n   *                                             the Graph.\n   * @param {Number}                     style   Style Number\n   */\n  Graph3d.prototype._dataInitialize = function (rawData, style) {\n    var me = this;\n\n    // unsubscribe from the dataTable\n    if (this.dataSet) {\n      this.dataSet.off('*', this._onChange);\n    }\n\n    if (rawData === undefined) return;\n\n    if (Array.isArray(rawData)) {\n      rawData = new DataSet(rawData);\n    }\n\n    var data;\n    if (rawData instanceof DataSet || rawData instanceof DataView) {\n      data = rawData.get();\n    } else {\n      throw new Error('Array, DataSet, or DataView expected');\n    }\n\n    if (data.length == 0) return;\n\n    this.dataSet = rawData;\n    this.dataTable = data;\n\n    // subscribe to changes in the dataset\n    this._onChange = function () {\n      me.setData(me.dataSet);\n    };\n    this.dataSet.on('*', this._onChange);\n\n    // determine the location of x,y,z,value,filter columns\n    this.colX = 'x';\n    this.colY = 'y';\n    this.colZ = 'z';\n\n    var withBars = this.style == Graph3d.STYLE.BAR || this.style == Graph3d.STYLE.BARCOLOR || this.style == Graph3d.STYLE.BARSIZE;\n\n    // determine barWidth from data\n    if (withBars) {\n      if (this.defaultXBarWidth !== undefined) {\n        this.xBarWidth = this.defaultXBarWidth;\n      } else {\n        var dataX = this.getDistinctValues(data, this.colX);\n        this.xBarWidth = dataX[1] - dataX[0] || 1;\n      }\n\n      if (this.defaultYBarWidth !== undefined) {\n        this.yBarWidth = this.defaultYBarWidth;\n      } else {\n        var dataY = this.getDistinctValues(data, this.colY);\n        this.yBarWidth = dataY[1] - dataY[0] || 1;\n      }\n    }\n\n    // calculate minimums and maximums\n    var NUMSTEPS = 5;\n\n    var xRange = this.getColumnRange(data, this.colX);\n    if (withBars) {\n      xRange.expand(this.xBarWidth / 2);\n    }\n    this._setRangeDefaults(xRange, this.defaultXMin, this.defaultXMax);\n    this.xRange = xRange;\n    this.xStep = this.defaultXStep !== undefined ? this.defaultXStep : xRange.range() / NUMSTEPS;\n\n    var yRange = this.getColumnRange(data, this.colY);\n    if (withBars) {\n      yRange.expand(this.yBarWidth / 2);\n    }\n    this._setRangeDefaults(yRange, this.defaultYMin, this.defaultYMax);\n    this.yRange = yRange;\n    this.yStep = this.defaultYStep !== undefined ? this.defaultYStep : yRange.range() / NUMSTEPS;\n\n    var zRange = this.getColumnRange(data, this.colZ);\n    this._setRangeDefaults(zRange, this.defaultZMin, this.defaultZMax);\n    this.zRange = zRange;\n    this.zStep = this.defaultZStep !== undefined ? this.defaultZStep : zRange.range() / NUMSTEPS;\n\n    if (data[0].hasOwnProperty('style')) {\n      this.colValue = 'style';\n      var valueRange = this.getColumnRange(data, this.colValue);\n      this._setRangeDefaults(valueRange, this.defaultValueMin, this.defaultValueMax);\n      this.valueRange = valueRange;\n    }\n\n    // check if a filter column is provided\n    // Needs to be started after zRange is defined\n    if (data[0].hasOwnProperty('filter')) {\n      // Only set this field if it's actually present\n      this.colFilter = 'filter';\n\n      if (this.dataFilter === undefined) {\n        this.dataFilter = new Filter(rawData, this.colFilter, this);\n        this.dataFilter.setOnLoadCallback(function () {\n          me.redraw();\n        });\n      }\n    }\n\n    // set the scale dependent on the ranges.\n    this._setScale();\n  };\n\n  /**\n   * Filter the data based on the current filter\n   *\n   * @param   {Array} data\n   * @returns {Array} dataPoints Array with point objects which can be drawn on\n   *                             screen\n   */\n  Graph3d.prototype._getDataPoints = function (data) {\n    // TODO: store the created matrix dataPoints in the filters instead of\n    //       reloading each time.\n    var x, y, i, z, obj, point;\n\n    var dataPoints = [];\n\n    if (this.style === Graph3d.STYLE.GRID || this.style === Graph3d.STYLE.SURFACE) {\n      // copy all values from the google data table to a matrix\n      // the provided values are supposed to form a grid of (x,y) positions\n\n      // create two lists with all present x and y values\n      var dataX = [];\n      var dataY = [];\n      for (i = 0; i < this.getNumberOfRows(data); i++) {\n        x = data[i][this.colX] || 0;\n        y = data[i][this.colY] || 0;\n\n        if (dataX.indexOf(x) === -1) {\n          dataX.push(x);\n        }\n        if (dataY.indexOf(y) === -1) {\n          dataY.push(y);\n        }\n      }\n\n      var sortNumber = function sortNumber(a, b) {\n        return a - b;\n      };\n      dataX.sort(sortNumber);\n      dataY.sort(sortNumber);\n\n      // create a grid, a 2d matrix, with all values.\n      var dataMatrix = []; // temporary data matrix\n      for (i = 0; i < data.length; i++) {\n        x = data[i][this.colX] || 0;\n        y = data[i][this.colY] || 0;\n        z = data[i][this.colZ] || 0;\n\n        // TODO: implement Array().indexOf() for Internet Explorer\n        var xIndex = dataX.indexOf(x);\n        var yIndex = dataY.indexOf(y);\n\n        if (dataMatrix[xIndex] === undefined) {\n          dataMatrix[xIndex] = [];\n        }\n\n        var point3d = new Point3d();\n        point3d.x = x;\n        point3d.y = y;\n        point3d.z = z;\n        point3d.data = data[i];\n\n        obj = {};\n        obj.point = point3d;\n        obj.trans = undefined;\n        obj.screen = undefined;\n        obj.bottom = new Point3d(x, y, this.zRange.min);\n\n        dataMatrix[xIndex][yIndex] = obj;\n\n        dataPoints.push(obj);\n      }\n\n      // fill in the pointers to the neighbors.\n      for (x = 0; x < dataMatrix.length; x++) {\n        for (y = 0; y < dataMatrix[x].length; y++) {\n          if (dataMatrix[x][y]) {\n            dataMatrix[x][y].pointRight = x < dataMatrix.length - 1 ? dataMatrix[x + 1][y] : undefined;\n            dataMatrix[x][y].pointTop = y < dataMatrix[x].length - 1 ? dataMatrix[x][y + 1] : undefined;\n            dataMatrix[x][y].pointCross = x < dataMatrix.length - 1 && y < dataMatrix[x].length - 1 ? dataMatrix[x + 1][y + 1] : undefined;\n          }\n        }\n      }\n    } else {\n      // 'dot', 'dot-line', etc.\n      this._checkValueField(data);\n\n      // copy all values from the google data table to a list with Point3d objects\n      for (i = 0; i < data.length; i++) {\n        point = new Point3d();\n        point.x = data[i][this.colX] || 0;\n        point.y = data[i][this.colY] || 0;\n        point.z = data[i][this.colZ] || 0;\n        point.data = data[i];\n\n        if (this.colValue !== undefined) {\n          point.value = data[i][this.colValue] || 0;\n        }\n\n        obj = {};\n        obj.point = point;\n        obj.bottom = new Point3d(point.x, point.y, this.zRange.min);\n        obj.trans = undefined;\n        obj.screen = undefined;\n\n        if (this.style === Graph3d.STYLE.LINE) {\n          if (i > 0) {\n            // Add next point for line drawing\n            dataPoints[i - 1].pointNext = obj;\n          }\n        }\n\n        dataPoints.push(obj);\n      }\n    }\n\n    return dataPoints;\n  };\n\n  /**\n   * Create the main frame for the Graph3d.\n   *\n   * This function is executed once when a Graph3d object is created. The frame\n   * contains a canvas, and this canvas contains all objects like the axis and\n   * nodes.\n   */\n  Graph3d.prototype.create = function () {\n    // remove all elements from the container element.\n    while (this.containerElement.hasChildNodes()) {\n      this.containerElement.removeChild(this.containerElement.firstChild);\n    }\n\n    this.frame = document.createElement('div');\n    this.frame.style.position = 'relative';\n    this.frame.style.overflow = 'hidden';\n\n    // create the graph canvas (HTML canvas element)\n    this.frame.canvas = document.createElement('canvas');\n    this.frame.canvas.style.position = 'relative';\n    this.frame.appendChild(this.frame.canvas);\n    //if (!this.frame.canvas.getContext) {\n    {\n      var noCanvas = document.createElement('DIV');\n      noCanvas.style.color = 'red';\n      noCanvas.style.fontWeight = 'bold';\n      noCanvas.style.padding = '10px';\n      noCanvas.innerHTML = 'Error: your browser does not support HTML canvas';\n      this.frame.canvas.appendChild(noCanvas);\n    }\n\n    this.frame.filter = document.createElement('div');\n    this.frame.filter.style.position = 'absolute';\n    this.frame.filter.style.bottom = '0px';\n    this.frame.filter.style.left = '0px';\n    this.frame.filter.style.width = '100%';\n    this.frame.appendChild(this.frame.filter);\n\n    // add event listeners to handle moving and zooming the contents\n    var me = this;\n    var onmousedown = function onmousedown(event) {\n      me._onMouseDown(event);\n    };\n    var ontouchstart = function ontouchstart(event) {\n      me._onTouchStart(event);\n    };\n    var onmousewheel = function onmousewheel(event) {\n      me._onWheel(event);\n    };\n    var ontooltip = function ontooltip(event) {\n      me._onTooltip(event);\n    };\n    // TODO: these events are never cleaned up... can give a 'memory leakage'\n\n    util.addEventListener(this.frame.canvas, 'keydown', onkeydown);\n    util.addEventListener(this.frame.canvas, 'mousedown', onmousedown);\n    util.addEventListener(this.frame.canvas, 'touchstart', ontouchstart);\n    util.addEventListener(this.frame.canvas, 'mousewheel', onmousewheel);\n    util.addEventListener(this.frame.canvas, 'mousemove', ontooltip);\n\n    // add the new graph to the container element\n    this.containerElement.appendChild(this.frame);\n  };\n\n  /**\n   * Set a new size for the graph\n   *\n   * @param {string} width  Width in pixels or percentage (for example '800px'\n   *                        or '50%')\n   * @param {string} height Height in pixels or percentage  (for example '400px'\n   *                        or '30%')\n   */\n  Graph3d.prototype.setSize = function (width, height) {\n    this.frame.style.width = width;\n    this.frame.style.height = height;\n\n    this._resizeCanvas();\n  };\n\n  /**\n   * Resize the canvas to the current size of the frame\n   */\n  Graph3d.prototype._resizeCanvas = function () {\n    this.frame.canvas.style.width = '100%';\n    this.frame.canvas.style.height = '100%';\n\n    this.frame.canvas.width = this.frame.canvas.clientWidth;\n    this.frame.canvas.height = this.frame.canvas.clientHeight;\n\n    // adjust with for margin\n    this.frame.filter.style.width = this.frame.canvas.clientWidth - 2 * 10 + 'px';\n  };\n\n  /**\n   * Start animation\n   */\n  Graph3d.prototype.animationStart = function () {\n    if (!this.frame.filter || !this.frame.filter.slider) throw new Error('No animation available');\n\n    this.frame.filter.slider.play();\n  };\n\n  /**\n   * Stop animation\n   */\n  Graph3d.prototype.animationStop = function () {\n    if (!this.frame.filter || !this.frame.filter.slider) return;\n\n    this.frame.filter.slider.stop();\n  };\n\n  /**\n   * Resize the center position based on the current values in this.xCenter\n   * and this.yCenter (which are strings with a percentage or a value\n   * in pixels). The center positions are the variables this.currentXCenter\n   * and this.currentYCenter\n   */\n  Graph3d.prototype._resizeCenter = function () {\n    // calculate the horizontal center position\n    if (this.xCenter.charAt(this.xCenter.length - 1) === '%') {\n      this.currentXCenter = parseFloat(this.xCenter) / 100 * this.frame.canvas.clientWidth;\n    } else {\n      this.currentXCenter = parseFloat(this.xCenter); // supposed to be in px\n    }\n\n    // calculate the vertical center position\n    if (this.yCenter.charAt(this.yCenter.length - 1) === '%') {\n      this.currentYCenter = parseFloat(this.yCenter) / 100 * (this.frame.canvas.clientHeight - this.frame.filter.clientHeight);\n    } else {\n      this.currentYCenter = parseFloat(this.yCenter); // supposed to be in px\n    }\n  };\n\n  /**\n   * Retrieve the current camera rotation\n   *\n   * @returns {object} An object with parameters horizontal, vertical, and\n   *                   distance\n   */\n  Graph3d.prototype.getCameraPosition = function () {\n    var pos = this.camera.getArmRotation();\n    pos.distance = this.camera.getArmLength();\n    return pos;\n  };\n\n  /**\n   * Load data into the 3D Graph\n   */\n  Graph3d.prototype._readData = function (data) {\n    // read the data\n    this._dataInitialize(data, this.style);\n\n    if (this.dataFilter) {\n      // apply filtering\n      this.dataPoints = this.dataFilter._getDataPoints();\n    } else {\n      // no filtering. load all data\n      this.dataPoints = this._getDataPoints(this.dataTable);\n    }\n\n    // draw the filter\n    this._redrawFilter();\n  };\n\n  /**\n   * Replace the dataset of the Graph3d\n   *\n   * @param {Array | DataSet | DataView} data\n   */\n  Graph3d.prototype.setData = function (data) {\n    this._readData(data);\n    this.redraw();\n\n    // start animation when option is true\n    if (this.animationAutoStart && this.dataFilter) {\n      this.animationStart();\n    }\n  };\n\n  /**\n   * Update the options. Options will be merged with current options\n   *\n   * @param {Object} options\n   */\n  Graph3d.prototype.setOptions = function (options) {\n    var cameraPosition = undefined;\n\n    this.animationStop();\n\n    Settings.setOptions(options, this);\n\n    this.setPointDrawingMethod();\n    this.setSize(this.width, this.height);\n\n    // re-load the data\n    if (this.dataTable) {\n      this.setData(this.dataTable);\n    }\n\n    // start animation when option is true\n    if (this.animationAutoStart && this.dataFilter) {\n      this.animationStart();\n    }\n  };\n\n  /**\n   * Determine which point drawing method to use for the current graph style.\n   */\n  Graph3d.prototype.setPointDrawingMethod = function () {\n    var method = undefined;\n\n    switch (this.style) {\n      case Graph3d.STYLE.BAR:\n        method = Graph3d.prototype._redrawBarGraphPoint;\n        break;\n      case Graph3d.STYLE.BARCOLOR:\n        method = Graph3d.prototype._redrawBarColorGraphPoint;\n        break;\n      case Graph3d.STYLE.BARSIZE:\n        method = Graph3d.prototype._redrawBarSizeGraphPoint;\n        break;\n      case Graph3d.STYLE.DOT:\n        method = Graph3d.prototype._redrawDotGraphPoint;\n        break;\n      case Graph3d.STYLE.DOTLINE:\n        method = Graph3d.prototype._redrawDotLineGraphPoint;\n        break;\n      case Graph3d.STYLE.DOTCOLOR:\n        method = Graph3d.prototype._redrawDotColorGraphPoint;\n        break;\n      case Graph3d.STYLE.DOTSIZE:\n        method = Graph3d.prototype._redrawDotSizeGraphPoint;\n        break;\n      case Graph3d.STYLE.SURFACE:\n        method = Graph3d.prototype._redrawSurfaceGraphPoint;\n        break;\n      case Graph3d.STYLE.GRID:\n        method = Graph3d.prototype._redrawGridGraphPoint;\n        break;\n      case Graph3d.STYLE.LINE:\n        method = Graph3d.prototype._redrawLineGraphPoint;\n        break;\n      default:\n        throw new Error('Can not determine point drawing method ' + 'for graph style \\'' + this.style + '\\'');\n        break;\n    }\n\n    this._pointDrawingMethod = method;\n  };\n\n  /**\n   * Redraw the Graph.\n   */\n  Graph3d.prototype.redraw = function () {\n    if (this.dataPoints === undefined) {\n      throw new Error('Graph data not initialized');\n    }\n\n    this._resizeCanvas();\n    this._resizeCenter();\n    this._redrawSlider();\n    this._redrawClear();\n    this._redrawAxis();\n\n    this._redrawDataGraph();\n\n    this._redrawInfo();\n    this._redrawLegend();\n  };\n\n  /**\n   * Get drawing context without exposing canvas\n   */\n  Graph3d.prototype._getContext = function () {\n    var canvas = this.frame.canvas;\n    var ctx = canvas.getContext('2d');\n\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n\n    return ctx;\n  };\n\n  /**\n   * Clear the canvas before redrawing\n   */\n  Graph3d.prototype._redrawClear = function () {\n    var canvas = this.frame.canvas;\n    var ctx = canvas.getContext('2d');\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n  Graph3d.prototype._dotSize = function () {\n    return this.frame.clientWidth * this.dotSizeRatio;\n  };\n\n  /**\n   * Get legend width \n   */\n  Graph3d.prototype._getLegendWidth = function () {\n    var width;\n\n    if (this.style === Graph3d.STYLE.DOTSIZE) {\n      var dotSize = this._dotSize();\n      width = dotSize / 2 + dotSize * 2;\n    } else if (this.style === Graph3d.STYLE.BARSIZE) {\n      width = this.xBarWidth;\n    } else {\n      width = 20;\n    }\n    return width;\n  };\n\n  /**\n   * Redraw the legend based on size, dot color, or surface height \n   */\n  Graph3d.prototype._redrawLegend = function () {\n\n    //Return without drawing anything, if no legend is specified \n    if (this.showLegend !== true) {\n      return;\n    }\n\n    // Do not draw legend when graph style does not support\n    if (this.style === Graph3d.STYLE.LINE || this.style === Graph3d.STYLE.BARSIZE //TODO add legend support for BARSIZE \n    ) {\n        return;\n      }\n\n    // Legend types - size and color. Determine if size legend.  \n    var isSizeLegend = this.style === Graph3d.STYLE.BARSIZE || this.style === Graph3d.STYLE.DOTSIZE;\n\n    // Legend is either tracking z values or style values. This flag if false means use z values. \n    var isValueLegend = this.style === Graph3d.STYLE.DOTSIZE || this.style === Graph3d.STYLE.DOTCOLOR || this.style === Graph3d.STYLE.BARCOLOR;\n\n    var height = Math.max(this.frame.clientHeight * 0.25, 100);\n    var top = this.margin;\n    var width = this._getLegendWidth(); // px - overwritten by size legend  \n    var right = this.frame.clientWidth - this.margin;\n    var left = right - width;\n    var bottom = top + height;\n\n    var ctx = this._getContext();\n    ctx.lineWidth = 1;\n    ctx.font = '14px arial'; // TODO: put in options\n\n    if (isSizeLegend === false) {\n      // draw the color bar\n      var ymin = 0;\n      var ymax = height; // Todo: make height customizable\n      var y;\n\n      for (y = ymin; y < ymax; y++) {\n        var f = (y - ymin) / (ymax - ymin);\n        var hue = f * 240;\n        var color = this._hsv2rgb(hue, 1, 1);\n\n        ctx.strokeStyle = color;\n        ctx.beginPath();\n        ctx.moveTo(left, top + y);\n        ctx.lineTo(right, top + y);\n        ctx.stroke();\n      }\n      ctx.strokeStyle = this.axisColor;\n      ctx.strokeRect(left, top, width, height);\n    } else {\n\n      // draw the size legend box \n      var widthMin;\n      if (this.style === Graph3d.STYLE.DOTSIZE) {\n        var dotSize = this._dotSize();\n        widthMin = dotSize / 2; // px\n      } else if (this.style === Graph3d.STYLE.BARSIZE) {\n        //widthMin = this.xBarWidth * 0.2 this is wrong - barwidth measures in terms of xvalues \n      }\n      ctx.strokeStyle = this.axisColor;\n      ctx.fillStyle = this.dataColor.fill;\n      ctx.beginPath();\n      ctx.moveTo(left, top);\n      ctx.lineTo(right, top);\n      ctx.lineTo(right - width + widthMin, bottom);\n      ctx.lineTo(left, bottom);\n      ctx.closePath();\n      ctx.fill();\n      ctx.stroke();\n    }\n\n    // print value text along the legend edge \n    var gridLineLen = 5; // px\n\n    var legendMin = isValueLegend ? this.valueRange.min : this.zRange.min;\n    var legendMax = isValueLegend ? this.valueRange.max : this.zRange.max;\n    var step = new StepNumber(legendMin, legendMax, (legendMax - legendMin) / 5, true);\n    step.start(true);\n\n    var y;\n    var from;\n    var to;\n    while (!step.end()) {\n      y = bottom - (step.getCurrent() - legendMin) / (legendMax - legendMin) * height;\n      from = new Point2d(left - gridLineLen, y);\n      to = new Point2d(left, y);\n      this._line(ctx, from, to);\n\n      ctx.textAlign = 'right';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = this.axisColor;\n      ctx.fillText(step.getCurrent(), left - 2 * gridLineLen, y);\n\n      step.next();\n    }\n\n    ctx.textAlign = 'right';\n    ctx.textBaseline = 'top';\n    var label = this.legendLabel;\n    ctx.fillText(label, right, bottom + this.margin);\n  };\n\n  /**\n   * Redraw the filter\n   */\n  Graph3d.prototype._redrawFilter = function () {\n    this.frame.filter.innerHTML = '';\n\n    if (this.dataFilter) {\n      var options = {\n        'visible': this.showAnimationControls\n      };\n      var slider = new Slider(this.frame.filter, options);\n      this.frame.filter.slider = slider;\n\n      // TODO: css here is not nice here...\n      this.frame.filter.style.padding = '10px';\n      //this.frame.filter.style.backgroundColor = '#EFEFEF';\n\n      slider.setValues(this.dataFilter.values);\n      slider.setPlayInterval(this.animationInterval);\n\n      // create an event handler\n      var me = this;\n      var onchange = function onchange() {\n        var index = slider.getIndex();\n\n        me.dataFilter.selectValue(index);\n        me.dataPoints = me.dataFilter._getDataPoints();\n\n        me.redraw();\n      };\n      slider.setOnChangeCallback(onchange);\n    } else {\n      this.frame.filter.slider = undefined;\n    }\n  };\n\n  /**\n   * Redraw the slider\n   */\n  Graph3d.prototype._redrawSlider = function () {\n    if (this.frame.filter.slider !== undefined) {\n      this.frame.filter.slider.redraw();\n    }\n  };\n\n  /**\n   * Redraw common information\n   */\n  Graph3d.prototype._redrawInfo = function () {\n    if (this.dataFilter) {\n      var ctx = this._getContext();\n\n      ctx.font = '14px arial'; // TODO: put in options\n      ctx.lineStyle = 'gray';\n      ctx.fillStyle = 'gray';\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'top';\n\n      var x = this.margin;\n      var y = this.margin;\n      ctx.fillText(this.dataFilter.getLabel() + ': ' + this.dataFilter.getSelectedValue(), x, y);\n    }\n  };\n\n  /**\n   * Draw a line between 2d points 'from' and 'to'.\n   *\n   * If stroke style specified, set that as well.\n   */\n  Graph3d.prototype._line = function (ctx, from, to, strokeStyle) {\n    if (strokeStyle !== undefined) {\n      ctx.strokeStyle = strokeStyle;\n    }\n\n    ctx.beginPath();\n    ctx.moveTo(from.x, from.y);\n    ctx.lineTo(to.x, to.y);\n    ctx.stroke();\n  };\n\n  Graph3d.prototype.drawAxisLabelX = function (ctx, point3d, text, armAngle, yMargin) {\n    if (yMargin === undefined) {\n      yMargin = 0;\n    }\n\n    var point2d = this._convert3Dto2D(point3d);\n\n    if (Math.cos(armAngle * 2) > 0) {\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'top';\n      point2d.y += yMargin;\n    } else if (Math.sin(armAngle * 2) < 0) {\n      ctx.textAlign = 'right';\n      ctx.textBaseline = 'middle';\n    } else {\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n    }\n\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(text, point2d.x, point2d.y);\n  };\n\n  Graph3d.prototype.drawAxisLabelY = function (ctx, point3d, text, armAngle, yMargin) {\n    if (yMargin === undefined) {\n      yMargin = 0;\n    }\n\n    var point2d = this._convert3Dto2D(point3d);\n\n    if (Math.cos(armAngle * 2) < 0) {\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'top';\n      point2d.y += yMargin;\n    } else if (Math.sin(armAngle * 2) > 0) {\n      ctx.textAlign = 'right';\n      ctx.textBaseline = 'middle';\n    } else {\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n    }\n\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(text, point2d.x, point2d.y);\n  };\n\n  Graph3d.prototype.drawAxisLabelZ = function (ctx, point3d, text, offset) {\n    if (offset === undefined) {\n      offset = 0;\n    }\n\n    var point2d = this._convert3Dto2D(point3d);\n    ctx.textAlign = 'right';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(text, point2d.x - offset, point2d.y);\n  };\n\n  /**\n\n\n  /**\n   * Draw a line between 2d points 'from' and 'to'.\n   *\n   * If stroke style specified, set that as well.\n   */\n  Graph3d.prototype._line3d = function (ctx, from, to, strokeStyle) {\n    var from2d = this._convert3Dto2D(from);\n    var to2d = this._convert3Dto2D(to);\n\n    this._line(ctx, from2d, to2d, strokeStyle);\n  };\n\n  /**\n   * Redraw the axis\n   */\n  Graph3d.prototype._redrawAxis = function () {\n    var ctx = this._getContext(),\n        from,\n        to,\n        step,\n        prettyStep,\n        text,\n        xText,\n        yText,\n        zText,\n        offset,\n        xOffset,\n        yOffset;\n\n    // TODO: get the actual rendered style of the containerElement\n    //ctx.font = this.containerElement.style.font;\n    ctx.font = 24 / this.camera.getArmLength() + 'px arial';\n\n    // calculate the length for the short grid lines\n    var gridLenX = 0.025 / this.scale.x;\n    var gridLenY = 0.025 / this.scale.y;\n    var textMargin = 5 / this.camera.getArmLength(); // px\n    var armAngle = this.camera.getArmRotation().horizontal;\n    var armVector = new Point2d(Math.cos(armAngle), Math.sin(armAngle));\n\n    var xRange = this.xRange;\n    var yRange = this.yRange;\n    var zRange = this.zRange;\n\n    // draw x-grid lines\n    ctx.lineWidth = 1;\n    prettyStep = this.defaultXStep === undefined;\n    step = new StepNumber(xRange.min, xRange.max, this.xStep, prettyStep);\n    step.start(true);\n\n    while (!step.end()) {\n      var x = step.getCurrent();\n\n      if (this.showGrid) {\n        from = new Point3d(x, yRange.min, zRange.min);\n        to = new Point3d(x, yRange.max, zRange.min);\n        this._line3d(ctx, from, to, this.gridColor);\n      } else {\n        from = new Point3d(x, yRange.min, zRange.min);\n        to = new Point3d(x, yRange.min + gridLenX, zRange.min);\n        this._line3d(ctx, from, to, this.axisColor);\n\n        from = new Point3d(x, yRange.max, zRange.min);\n        to = new Point3d(x, yRange.max - gridLenX, zRange.min);\n        this._line3d(ctx, from, to, this.axisColor);\n      }\n\n      yText = armVector.x > 0 ? yRange.min : yRange.max;\n      var point3d = new Point3d(x, yText, zRange.min);\n      var msg = '  ' + this.xValueLabel(x) + '  ';\n      this.drawAxisLabelX(ctx, point3d, msg, armAngle, textMargin);\n\n      step.next();\n    }\n\n    // draw y-grid lines\n    ctx.lineWidth = 1;\n    prettyStep = this.defaultYStep === undefined;\n    step = new StepNumber(yRange.min, yRange.max, this.yStep, prettyStep);\n    step.start(true);\n\n    while (!step.end()) {\n      var y = step.getCurrent();\n\n      if (this.showGrid) {\n        from = new Point3d(xRange.min, y, zRange.min);\n        to = new Point3d(xRange.max, y, zRange.min);\n        this._line3d(ctx, from, to, this.gridColor);\n      } else {\n        from = new Point3d(xRange.min, y, zRange.min);\n        to = new Point3d(xRange.min + gridLenY, y, zRange.min);\n        this._line3d(ctx, from, to, this.axisColor);\n\n        from = new Point3d(xRange.max, y, zRange.min);\n        to = new Point3d(xRange.max - gridLenY, y, zRange.min);\n        this._line3d(ctx, from, to, this.axisColor);\n      }\n\n      xText = armVector.y > 0 ? xRange.min : xRange.max;\n      point3d = new Point3d(xText, y, zRange.min);\n      var msg = '  ' + this.yValueLabel(y) + '  ';\n      this.drawAxisLabelY(ctx, point3d, msg, armAngle, textMargin);\n\n      step.next();\n    }\n\n    // draw z-grid lines and axis\n    ctx.lineWidth = 1;\n    prettyStep = this.defaultZStep === undefined;\n    step = new StepNumber(zRange.min, zRange.max, this.zStep, prettyStep);\n    step.start(true);\n\n    xText = armVector.x > 0 ? xRange.min : xRange.max;\n    yText = armVector.y < 0 ? yRange.min : yRange.max;\n\n    while (!step.end()) {\n      var z = step.getCurrent();\n\n      // TODO: make z-grid lines really 3d?\n      var from3d = new Point3d(xText, yText, z);\n      var from2d = this._convert3Dto2D(from3d);\n      to = new Point2d(from2d.x - textMargin, from2d.y);\n      this._line(ctx, from2d, to, this.axisColor);\n\n      var msg = this.zValueLabel(z) + ' ';\n      this.drawAxisLabelZ(ctx, from3d, msg, 5);\n\n      step.next();\n    }\n\n    ctx.lineWidth = 1;\n    from = new Point3d(xText, yText, zRange.min);\n    to = new Point3d(xText, yText, zRange.max);\n    this._line3d(ctx, from, to, this.axisColor);\n\n    // draw x-axis\n    var xMin2d;\n    var xMax2d;\n    ctx.lineWidth = 1;\n\n    // line at yMin\n    xMin2d = new Point3d(xRange.min, yRange.min, zRange.min);\n    xMax2d = new Point3d(xRange.max, yRange.min, zRange.min);\n    this._line3d(ctx, xMin2d, xMax2d, this.axisColor);\n    // line at ymax\n    xMin2d = new Point3d(xRange.min, yRange.max, zRange.min);\n    xMax2d = new Point3d(xRange.max, yRange.max, zRange.min);\n    this._line3d(ctx, xMin2d, xMax2d, this.axisColor);\n\n    // draw y-axis\n    ctx.lineWidth = 1;\n    // line at xMin\n    from = new Point3d(xRange.min, yRange.min, zRange.min);\n    to = new Point3d(xRange.min, yRange.max, zRange.min);\n    this._line3d(ctx, from, to, this.axisColor);\n    // line at xMax\n    from = new Point3d(xRange.max, yRange.min, zRange.min);\n    to = new Point3d(xRange.max, yRange.max, zRange.min);\n    this._line3d(ctx, from, to, this.axisColor);\n\n    // draw x-label\n    var xLabel = this.xLabel;\n    if (xLabel.length > 0) {\n      yOffset = 0.1 / this.scale.y;\n      xText = xRange.center() / 2;\n      yText = armVector.x > 0 ? yRange.min - yOffset : yRange.max + yOffset;\n      text = new Point3d(xText, yText, zRange.min);\n      this.drawAxisLabelX(ctx, text, xLabel, armAngle);\n    }\n\n    // draw y-label\n    var yLabel = this.yLabel;\n    if (yLabel.length > 0) {\n      xOffset = 0.1 / this.scale.x;\n      xText = armVector.y > 0 ? xRange.min - xOffset : xRange.max + xOffset;\n      yText = yRange.center() / 2;\n      text = new Point3d(xText, yText, zRange.min);\n\n      this.drawAxisLabelY(ctx, text, yLabel, armAngle);\n    }\n\n    // draw z-label\n    var zLabel = this.zLabel;\n    if (zLabel.length > 0) {\n      offset = 30; // pixels.  // TODO: relate to the max width of the values on the z axis?\n      xText = armVector.x > 0 ? xRange.min : xRange.max;\n      yText = armVector.y < 0 ? yRange.min : yRange.max;\n      zText = zRange.center() / 2;\n      text = new Point3d(xText, yText, zText);\n\n      this.drawAxisLabelZ(ctx, text, zLabel, offset);\n    }\n  };\n\n  /**\n   * Calculate the color based on the given value.\n   * @param {Number} H   Hue, a value be between 0 and 360\n   * @param {Number} S   Saturation, a value between 0 and 1\n   * @param {Number} V   Value, a value between 0 and 1\n   */\n  Graph3d.prototype._hsv2rgb = function (H, S, V) {\n    var R, G, B, C, Hi, X;\n\n    C = V * S;\n    Hi = Math.floor(H / 60); // hi = 0,1,2,3,4,5\n    X = C * (1 - Math.abs(H / 60 % 2 - 1));\n\n    switch (Hi) {\n      case 0:\n        R = C;G = X;B = 0;break;\n      case 1:\n        R = X;G = C;B = 0;break;\n      case 2:\n        R = 0;G = C;B = X;break;\n      case 3:\n        R = 0;G = X;B = C;break;\n      case 4:\n        R = X;G = 0;B = C;break;\n      case 5:\n        R = C;G = 0;B = X;break;\n\n      default:\n        R = 0;G = 0;B = 0;break;\n    }\n\n    return 'RGB(' + parseInt(R * 255) + ',' + parseInt(G * 255) + ',' + parseInt(B * 255) + ')';\n  };\n\n  Graph3d.prototype._getStrokeWidth = function (point) {\n    if (point !== undefined) {\n      if (this.showPerspective) {\n        return 1 / -point.trans.z * this.dataColor.strokeWidth;\n      } else {\n        return -(this.eye.z / this.camera.getArmLength()) * this.dataColor.strokeWidth;\n      }\n    }\n\n    return this.dataColor.strokeWidth;\n  };\n\n  // -----------------------------------------------------------------------------\n  // Drawing primitives for the graphs\n  // -----------------------------------------------------------------------------\n\n\n  /**\n   * Draw a bar element in the view with the given properties.\n   */\n  Graph3d.prototype._redrawBar = function (ctx, point, xWidth, yWidth, color, borderColor) {\n    var i, j, surface;\n\n    // calculate all corner points\n    var me = this;\n    var point3d = point.point;\n    var zMin = this.zRange.min;\n    var top = [{ point: new Point3d(point3d.x - xWidth, point3d.y - yWidth, point3d.z) }, { point: new Point3d(point3d.x + xWidth, point3d.y - yWidth, point3d.z) }, { point: new Point3d(point3d.x + xWidth, point3d.y + yWidth, point3d.z) }, { point: new Point3d(point3d.x - xWidth, point3d.y + yWidth, point3d.z) }];\n    var bottom = [{ point: new Point3d(point3d.x - xWidth, point3d.y - yWidth, zMin) }, { point: new Point3d(point3d.x + xWidth, point3d.y - yWidth, zMin) }, { point: new Point3d(point3d.x + xWidth, point3d.y + yWidth, zMin) }, { point: new Point3d(point3d.x - xWidth, point3d.y + yWidth, zMin) }];\n\n    // calculate screen location of the points\n    top.forEach(function (obj) {\n      obj.screen = me._convert3Dto2D(obj.point);\n    });\n    bottom.forEach(function (obj) {\n      obj.screen = me._convert3Dto2D(obj.point);\n    });\n\n    // create five sides, calculate both corner points and center points\n    var surfaces = [{ corners: top, center: Point3d.avg(bottom[0].point, bottom[2].point) }, { corners: [top[0], top[1], bottom[1], bottom[0]], center: Point3d.avg(bottom[1].point, bottom[0].point) }, { corners: [top[1], top[2], bottom[2], bottom[1]], center: Point3d.avg(bottom[2].point, bottom[1].point) }, { corners: [top[2], top[3], bottom[3], bottom[2]], center: Point3d.avg(bottom[3].point, bottom[2].point) }, { corners: [top[3], top[0], bottom[0], bottom[3]], center: Point3d.avg(bottom[0].point, bottom[3].point) }];\n    point.surfaces = surfaces;\n\n    // calculate the distance of each of the surface centers to the camera\n    for (j = 0; j < surfaces.length; j++) {\n      surface = surfaces[j];\n      var transCenter = this._convertPointToTranslation(surface.center);\n      surface.dist = this.showPerspective ? transCenter.length() : -transCenter.z;\n      // TODO: this dept calculation doesn't work 100% of the cases due to perspective,\n      //     but the current solution is fast/simple and works in 99.9% of all cases\n      //     the issue is visible in example 14, with graph.setCameraPosition({horizontal: 2.97, vertical: 0.5, distance: 0.9})\n    }\n\n    // order the surfaces by their (translated) depth\n    surfaces.sort(function (a, b) {\n      var diff = b.dist - a.dist;\n      if (diff) return diff;\n\n      // if equal depth, sort the top surface last\n      if (a.corners === top) return 1;\n      if (b.corners === top) return -1;\n\n      // both are equal\n      return 0;\n    });\n\n    // draw the ordered surfaces\n    ctx.lineWidth = this._getStrokeWidth(point);\n    ctx.strokeStyle = borderColor;\n    ctx.fillStyle = color;\n    // NOTE: we start at j=2 instead of j=0 as we don't need to draw the two surfaces at the backside\n    for (j = 2; j < surfaces.length; j++) {\n      surface = surfaces[j];\n      this._polygon(ctx, surface.corners);\n    }\n  };\n\n  /**\n   * Draw a polygon using the passed points and fill it with the passed style and stroke.\n   *\n   * @param points      an array of points. \n   * @param fillStyle   optional; the fill style to set\n   * @param strokeStyle optional; the stroke style to set\n   */\n  Graph3d.prototype._polygon = function (ctx, points, fillStyle, strokeStyle) {\n    if (points.length < 2) {\n      return;\n    }\n\n    if (fillStyle !== undefined) {\n      ctx.fillStyle = fillStyle;\n    }\n    if (strokeStyle !== undefined) {\n      ctx.strokeStyle = strokeStyle;\n    }\n    ctx.beginPath();\n    ctx.moveTo(points[0].screen.x, points[0].screen.y);\n\n    for (var i = 1; i < points.length; ++i) {\n      var point = points[i];\n      ctx.lineTo(point.screen.x, point.screen.y);\n    }\n\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke(); // TODO: only draw stroke when strokeWidth > 0\n  };\n\n  /**\n   * @param size optional; if not specified use value from 'this._dotSize()`\n   */\n  Graph3d.prototype._drawCircle = function (ctx, point, color, borderColor, size) {\n    var radius = this._calcRadius(point, size);\n\n    ctx.lineWidth = this._getStrokeWidth(point);\n    ctx.strokeStyle = borderColor;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(point.screen.x, point.screen.y, radius, 0, Math.PI * 2, true);\n    ctx.fill();\n    ctx.stroke();\n  };\n\n  /**\n   * Determine the colors for the 'regular' graph styles.\n   */\n  Graph3d.prototype._getColorsRegular = function (point) {\n    // calculate Hue from the current value. At zMin the hue is 240, at zMax the hue is 0\n    var hue = (1 - (point.point.z - this.zRange.min) * this.scale.z / this.verticalRatio) * 240;\n    var color = this._hsv2rgb(hue, 1, 1);\n    var borderColor = this._hsv2rgb(hue, 1, 0.8);\n\n    return {\n      fill: color,\n      border: borderColor\n    };\n  };\n\n  /**\n   * Get the colors for the 'color' graph styles.\n   * These styles are currently: 'bar-color' and 'dot-color'\n   */\n  Graph3d.prototype._getColorsColor = function (point) {\n    // calculate the color based on the value\n    var hue = (1 - (point.point.value - this.valueRange.min) * this.scale.value) * 240;\n    var color = this._hsv2rgb(hue, 1, 1);\n    var borderColor = this._hsv2rgb(hue, 1, 0.8);\n\n    return {\n      fill: color,\n      border: borderColor\n    };\n  };\n\n  /**\n   * Get the colors for the 'size' graph styles.\n   * These styles are currently: 'bar-size' and 'dot-size'\n   */\n  Graph3d.prototype._getColorsSize = function () {\n    return {\n      fill: this.dataColor.fill,\n      border: this.dataColor.stroke\n    };\n  };\n\n  /**\n   * Determine the size of a point on-screen, as determined by the\n   * distance to the camera.\n   *\n   * @param size the size that needs to be translated to screen coordinates.\n   *             optional; if not passed, use the default point size.\n   */\n  Graph3d.prototype._calcRadius = function (point, size) {\n    if (size === undefined) {\n      size = this._dotSize();\n    }\n\n    var radius;\n    if (this.showPerspective) {\n      radius = size / -point.trans.z;\n    } else {\n      radius = size * -(this.eye.z / this.camera.getArmLength());\n    }\n    if (radius < 0) {\n      radius = 0;\n    }\n\n    return radius;\n  };\n\n  // -----------------------------------------------------------------------------\n  // Methods for drawing points per graph style.\n  // -----------------------------------------------------------------------------\n\n\n  /**\n   * Draw single datapoint for graph style 'bar'.\n   */\n  Graph3d.prototype._redrawBarGraphPoint = function (ctx, point) {\n    var xWidth = this.xBarWidth / 2;\n    var yWidth = this.yBarWidth / 2;\n    var colors = this._getColorsRegular(point);\n\n    this._redrawBar(ctx, point, xWidth, yWidth, colors.fill, colors.border);\n  };\n\n  /**\n   * Draw single datapoint for graph style 'bar-color'.\n   */\n  Graph3d.prototype._redrawBarColorGraphPoint = function (ctx, point) {\n    var xWidth = this.xBarWidth / 2;\n    var yWidth = this.yBarWidth / 2;\n    var colors = this._getColorsColor(point);\n\n    this._redrawBar(ctx, point, xWidth, yWidth, colors.fill, colors.border);\n  };\n\n  /**\n   * Draw single datapoint for graph style 'bar-size'.\n   */\n  Graph3d.prototype._redrawBarSizeGraphPoint = function (ctx, point) {\n    // calculate size for the bar\n    var fraction = (point.point.value - this.valueRange.min) / this.valueRange.range();\n    var xWidth = this.xBarWidth / 2 * (fraction * 0.8 + 0.2);\n    var yWidth = this.yBarWidth / 2 * (fraction * 0.8 + 0.2);\n\n    var colors = this._getColorsSize();\n\n    this._redrawBar(ctx, point, xWidth, yWidth, colors.fill, colors.border);\n  };\n\n  /**\n   * Draw single datapoint for graph style 'dot'.\n   */\n  Graph3d.prototype._redrawDotGraphPoint = function (ctx, point) {\n    var colors = this._getColorsRegular(point);\n\n    this._drawCircle(ctx, point, colors.fill, colors.border);\n  };\n\n  /**\n   * Draw single datapoint for graph style 'dot-line'.\n   */\n  Graph3d.prototype._redrawDotLineGraphPoint = function (ctx, point) {\n    // draw a vertical line from the XY-plane to the graph value\n    var from = this._convert3Dto2D(point.bottom);\n    ctx.lineWidth = 1;\n    this._line(ctx, from, point.screen, this.gridColor);\n\n    this._redrawDotGraphPoint(ctx, point);\n  };\n\n  /**\n   * Draw single datapoint for graph style 'dot-color'.\n   */\n  Graph3d.prototype._redrawDotColorGraphPoint = function (ctx, point) {\n    var colors = this._getColorsColor(point);\n\n    this._drawCircle(ctx, point, colors.fill, colors.border);\n  };\n\n  /**\n   * Draw single datapoint for graph style 'dot-size'.\n   */\n  Graph3d.prototype._redrawDotSizeGraphPoint = function (ctx, point) {\n    var dotSize = this._dotSize();\n    var fraction = (point.point.value - this.valueRange.min) / this.valueRange.range();\n    var size = dotSize / 2 + 2 * dotSize * fraction;\n    var colors = this._getColorsSize();\n\n    this._drawCircle(ctx, point, colors.fill, colors.border, size);\n  };\n\n  /**\n   * Draw single datapoint for graph style 'surface'.\n   */\n  Graph3d.prototype._redrawSurfaceGraphPoint = function (ctx, point) {\n    var right = point.pointRight;\n    var top = point.pointTop;\n    var cross = point.pointCross;\n\n    if (point === undefined || right === undefined || top === undefined || cross === undefined) {\n      return;\n    }\n\n    var topSideVisible = true;\n    var fillStyle;\n    var strokeStyle;\n    var lineWidth;\n\n    if (this.showGrayBottom || this.showShadow) {\n      // calculate the cross product of the two vectors from center\n      // to left and right, in order to know whether we are looking at the\n      // bottom or at the top side. We can also use the cross product\n      // for calculating light intensity\n      var aDiff = Point3d.subtract(cross.trans, point.trans);\n      var bDiff = Point3d.subtract(top.trans, right.trans);\n      var crossproduct = Point3d.crossProduct(aDiff, bDiff);\n      var len = crossproduct.length();\n      // FIXME: there is a bug with determining the surface side (shadow or colored)\n\n      topSideVisible = crossproduct.z > 0;\n    }\n\n    if (topSideVisible) {\n\n      // calculate Hue from the current value. At zMin the hue is 240, at zMax the hue is 0\n      var zAvg = (point.point.z + right.point.z + top.point.z + cross.point.z) / 4;\n      var h = (1 - (zAvg - this.zRange.min) * this.scale.z / this.verticalRatio) * 240;\n      var s = 1; // saturation\n      var v;\n\n      if (this.showShadow) {\n        v = Math.min(1 + crossproduct.x / len / 2, 1); // value. TODO: scale\n        fillStyle = this._hsv2rgb(h, s, v);\n        strokeStyle = fillStyle;\n      } else {\n        v = 1;\n        fillStyle = this._hsv2rgb(h, s, v);\n        strokeStyle = this.axisColor; // TODO: should be customizable\n      }\n    } else {\n      fillStyle = 'gray';\n      strokeStyle = this.axisColor;\n    }\n\n    ctx.lineWidth = this._getStrokeWidth(point);\n    // TODO: only draw stroke when strokeWidth > 0\n\n    var points = [point, right, cross, top];\n    this._polygon(ctx, points, fillStyle, strokeStyle);\n  };\n\n  /**\n   * Helper method for _redrawGridGraphPoint()\n   */\n  Graph3d.prototype._drawGridLine = function (ctx, from, to) {\n    if (from === undefined || to === undefined) {\n      return;\n    }\n\n    // calculate Hue from the current value. At zMin the hue is 240, at zMax the hue is 0\n    var zAvg = (from.point.z + to.point.z) / 2;\n    var h = (1 - (zAvg - this.zRange.min) * this.scale.z / this.verticalRatio) * 240;\n\n    ctx.lineWidth = this._getStrokeWidth(from) * 2;\n    ctx.strokeStyle = this._hsv2rgb(h, 1, 1);\n    this._line(ctx, from.screen, to.screen);\n  };\n\n  /**\n   * Draw single datapoint for graph style 'Grid'.\n   */\n  Graph3d.prototype._redrawGridGraphPoint = function (ctx, point) {\n    this._drawGridLine(ctx, point, point.pointRight);\n    this._drawGridLine(ctx, point, point.pointTop);\n  };\n\n  /**\n   * Draw single datapoint for graph style 'line'.\n   */\n  Graph3d.prototype._redrawLineGraphPoint = function (ctx, point) {\n    if (point.pointNext === undefined) {\n      return;\n    }\n\n    ctx.lineWidth = this._getStrokeWidth(point);\n    ctx.strokeStyle = this.dataColor.stroke;\n\n    this._line(ctx, point.screen, point.pointNext.screen);\n  };\n\n  /**\n   * Draw all datapoints for currently selected graph style.\n   *\n   */\n  Graph3d.prototype._redrawDataGraph = function () {\n    var ctx = this._getContext();\n    var i;\n\n    if (this.dataPoints === undefined || this.dataPoints.length <= 0) return; // TODO: throw exception?\n\n    this._calcTranslations(this.dataPoints);\n\n    for (i = 0; i < this.dataPoints.length; i++) {\n      var point = this.dataPoints[i];\n\n      // Using call() ensures that the correct context is used\n      this._pointDrawingMethod.call(this, ctx, point);\n    }\n  };\n\n  // -----------------------------------------------------------------------------\n  // End methods for drawing points per graph style.\n  // -----------------------------------------------------------------------------\n\n\n  /**\n   * Start a moving operation inside the provided parent element\n   * @param {Event}     event     The event that occurred (required for\n   *                  retrieving the  mouse position)\n   */\n  Graph3d.prototype._onMouseDown = function (event) {\n    event = event || window.event;\n\n    // check if mouse is still down (may be up when focus is lost for example\n    // in an iframe)\n    if (this.leftButtonDown) {\n      this._onMouseUp(event);\n    }\n\n    // only react on left mouse button down\n    this.leftButtonDown = event.which ? event.which === 1 : event.button === 1;\n    if (!this.leftButtonDown && !this.touchDown) return;\n\n    // get mouse position (different code for IE and all other browsers)\n    this.startMouseX = getMouseX(event);\n    this.startMouseY = getMouseY(event);\n\n    this.startStart = new Date(this.start);\n    this.startEnd = new Date(this.end);\n    this.startArmRotation = this.camera.getArmRotation();\n\n    this.frame.style.cursor = 'move';\n\n    // add event listeners to handle moving the contents\n    // we store the function onmousemove and onmouseup in the graph, so we can\n    // remove the eventlisteners lateron in the function mouseUp()\n    var me = this;\n    this.onmousemove = function (event) {\n      me._onMouseMove(event);\n    };\n    this.onmouseup = function (event) {\n      me._onMouseUp(event);\n    };\n    util.addEventListener(document, 'mousemove', me.onmousemove);\n    util.addEventListener(document, 'mouseup', me.onmouseup);\n    util.preventDefault(event);\n  };\n\n  /**\n   * Perform moving operating.\n   * This function activated from within the funcion Graph.mouseDown().\n   * @param {Event}   event  Well, eehh, the event\n   */\n  Graph3d.prototype._onMouseMove = function (event) {\n    event = event || window.event;\n\n    // calculate change in mouse position\n    var diffX = parseFloat(getMouseX(event)) - this.startMouseX;\n    var diffY = parseFloat(getMouseY(event)) - this.startMouseY;\n\n    var horizontalNew = this.startArmRotation.horizontal + diffX / 200;\n    var verticalNew = this.startArmRotation.vertical + diffY / 200;\n\n    var snapAngle = 4; // degrees\n    var snapValue = Math.sin(snapAngle / 360 * 2 * Math.PI);\n\n    // snap horizontally to nice angles at 0pi, 0.5pi, 1pi, 1.5pi, etc...\n    // the -0.001 is to take care that the vertical axis is always drawn at the left front corner\n    if (Math.abs(Math.sin(horizontalNew)) < snapValue) {\n      horizontalNew = Math.round(horizontalNew / Math.PI) * Math.PI - 0.001;\n    }\n    if (Math.abs(Math.cos(horizontalNew)) < snapValue) {\n      horizontalNew = (Math.round(horizontalNew / Math.PI - 0.5) + 0.5) * Math.PI - 0.001;\n    }\n\n    // snap vertically to nice angles\n    if (Math.abs(Math.sin(verticalNew)) < snapValue) {\n      verticalNew = Math.round(verticalNew / Math.PI) * Math.PI;\n    }\n    if (Math.abs(Math.cos(verticalNew)) < snapValue) {\n      verticalNew = (Math.round(verticalNew / Math.PI - 0.5) + 0.5) * Math.PI;\n    }\n\n    this.camera.setArmRotation(horizontalNew, verticalNew);\n    this.redraw();\n\n    // fire a cameraPositionChange event\n    var parameters = this.getCameraPosition();\n    this.emit('cameraPositionChange', parameters);\n\n    util.preventDefault(event);\n  };\n\n  /**\n   * Stop moving operating.\n   * This function activated from within the funcion Graph.mouseDown().\n   * @param {event}  event   The event\n   */\n  Graph3d.prototype._onMouseUp = function (event) {\n    this.frame.style.cursor = 'auto';\n    this.leftButtonDown = false;\n\n    // remove event listeners here\n    util.removeEventListener(document, 'mousemove', this.onmousemove);\n    util.removeEventListener(document, 'mouseup', this.onmouseup);\n    util.preventDefault(event);\n  };\n\n  /**\n   * After having moved the mouse, a tooltip should pop up when the mouse is resting on a data point\n   * @param {Event}  event   A mouse move event\n   */\n  Graph3d.prototype._onTooltip = function (event) {\n    var delay = 300; // ms\n    var boundingRect = this.frame.getBoundingClientRect();\n    var mouseX = getMouseX(event) - boundingRect.left;\n    var mouseY = getMouseY(event) - boundingRect.top;\n\n    if (!this.showTooltip) {\n      return;\n    }\n\n    if (this.tooltipTimeout) {\n      clearTimeout(this.tooltipTimeout);\n    }\n\n    // (delayed) display of a tooltip only if no mouse button is down\n    if (this.leftButtonDown) {\n      this._hideTooltip();\n      return;\n    }\n\n    if (this.tooltip && this.tooltip.dataPoint) {\n      // tooltip is currently visible\n      var dataPoint = this._dataPointFromXY(mouseX, mouseY);\n      if (dataPoint !== this.tooltip.dataPoint) {\n        // datapoint changed\n        if (dataPoint) {\n          this._showTooltip(dataPoint);\n        } else {\n          this._hideTooltip();\n        }\n      }\n    } else {\n      // tooltip is currently not visible\n      var me = this;\n      this.tooltipTimeout = setTimeout(function () {\n        me.tooltipTimeout = null;\n\n        // show a tooltip if we have a data point\n        var dataPoint = me._dataPointFromXY(mouseX, mouseY);\n        if (dataPoint) {\n          me._showTooltip(dataPoint);\n        }\n      }, delay);\n    }\n  };\n\n  /**\n   * Event handler for touchstart event on mobile devices\n   */\n  Graph3d.prototype._onTouchStart = function (event) {\n    this.touchDown = true;\n\n    var me = this;\n    this.ontouchmove = function (event) {\n      me._onTouchMove(event);\n    };\n    this.ontouchend = function (event) {\n      me._onTouchEnd(event);\n    };\n    util.addEventListener(document, 'touchmove', me.ontouchmove);\n    util.addEventListener(document, 'touchend', me.ontouchend);\n\n    this._onMouseDown(event);\n  };\n\n  /**\n   * Event handler for touchmove event on mobile devices\n   */\n  Graph3d.prototype._onTouchMove = function (event) {\n    this._onMouseMove(event);\n  };\n\n  /**\n   * Event handler for touchend event on mobile devices\n   */\n  Graph3d.prototype._onTouchEnd = function (event) {\n    this.touchDown = false;\n\n    util.removeEventListener(document, 'touchmove', this.ontouchmove);\n    util.removeEventListener(document, 'touchend', this.ontouchend);\n\n    this._onMouseUp(event);\n  };\n\n  /**\n   * Event handler for mouse wheel event, used to zoom the graph\n   * Code from http://adomas.org/javascript-mouse-wheel/\n   * @param {event}  event   The event\n   */\n  Graph3d.prototype._onWheel = function (event) {\n    if (!event) /* For IE. */\n      event = window.event;\n\n    // retrieve delta\n    var delta = 0;\n    if (event.wheelDelta) {\n      /* IE/Opera. */\n      delta = event.wheelDelta / 120;\n    } else if (event.detail) {\n      /* Mozilla case. */\n      // In Mozilla, sign of delta is different than in IE.\n      // Also, delta is multiple of 3.\n      delta = -event.detail / 3;\n    }\n\n    // If delta is nonzero, handle it.\n    // Basically, delta is now positive if wheel was scrolled up,\n    // and negative, if wheel was scrolled down.\n    if (delta) {\n      var oldLength = this.camera.getArmLength();\n      var newLength = oldLength * (1 - delta / 10);\n\n      this.camera.setArmLength(newLength);\n      this.redraw();\n\n      this._hideTooltip();\n    }\n\n    // fire a cameraPositionChange event\n    var parameters = this.getCameraPosition();\n    this.emit('cameraPositionChange', parameters);\n\n    // Prevent default actions caused by mouse wheel.\n    // That might be ugly, but we handle scrolls somehow\n    // anyway, so don't bother here..\n    util.preventDefault(event);\n  };\n\n  /**\n   * Test whether a point lies inside given 2D triangle\n   *\n   * @param   {Point2d}   point\n   * @param   {Point2d[]} triangle\n   * @returns {boolean}   true if given point lies inside or on the edge of the\n   *                      triangle, false otherwise\n   * @private\n   */\n  Graph3d.prototype._insideTriangle = function (point, triangle) {\n    var a = triangle[0],\n        b = triangle[1],\n        c = triangle[2];\n\n    function sign(x) {\n      return x > 0 ? 1 : x < 0 ? -1 : 0;\n    }\n\n    var as = sign((b.x - a.x) * (point.y - a.y) - (b.y - a.y) * (point.x - a.x));\n    var bs = sign((c.x - b.x) * (point.y - b.y) - (c.y - b.y) * (point.x - b.x));\n    var cs = sign((a.x - c.x) * (point.y - c.y) - (a.y - c.y) * (point.x - c.x));\n\n    // each of the three signs must be either equal to each other or zero\n    return (as == 0 || bs == 0 || as == bs) && (bs == 0 || cs == 0 || bs == cs) && (as == 0 || cs == 0 || as == cs);\n  };\n\n  /**\n   * Find a data point close to given screen position (x, y)\n   *\n   * @param   {Number} x\n   * @param   {Number} y\n   * @returns {Object | null} The closest data point or null if not close to any\n   *                          data point\n   * @private\n   */\n  Graph3d.prototype._dataPointFromXY = function (x, y) {\n    var i,\n        distMax = 100,\n        // px\n    dataPoint = null,\n        closestDataPoint = null,\n        closestDist = null,\n        center = new Point2d(x, y);\n\n    if (this.style === Graph3d.STYLE.BAR || this.style === Graph3d.STYLE.BARCOLOR || this.style === Graph3d.STYLE.BARSIZE) {\n      // the data points are ordered from far away to closest\n      for (i = this.dataPoints.length - 1; i >= 0; i--) {\n        dataPoint = this.dataPoints[i];\n        var surfaces = dataPoint.surfaces;\n        if (surfaces) {\n          for (var s = surfaces.length - 1; s >= 0; s--) {\n            // split each surface in two triangles, and see if the center point is inside one of these\n            var surface = surfaces[s];\n            var corners = surface.corners;\n            var triangle1 = [corners[0].screen, corners[1].screen, corners[2].screen];\n            var triangle2 = [corners[2].screen, corners[3].screen, corners[0].screen];\n            if (this._insideTriangle(center, triangle1) || this._insideTriangle(center, triangle2)) {\n              // return immediately at the first hit\n              return dataPoint;\n            }\n          }\n        }\n      }\n    } else {\n      // find the closest data point, using distance to the center of the point on 2d screen\n      for (i = 0; i < this.dataPoints.length; i++) {\n        dataPoint = this.dataPoints[i];\n        var point = dataPoint.screen;\n        if (point) {\n          var distX = Math.abs(x - point.x);\n          var distY = Math.abs(y - point.y);\n          var dist = Math.sqrt(distX * distX + distY * distY);\n\n          if ((closestDist === null || dist < closestDist) && dist < distMax) {\n            closestDist = dist;\n            closestDataPoint = dataPoint;\n          }\n        }\n      }\n    }\n\n    return closestDataPoint;\n  };\n\n  /**\n   * Display a tooltip for given data point\n   * @param {Object} dataPoint\n   * @private\n   */\n  Graph3d.prototype._showTooltip = function (dataPoint) {\n    var content, line, dot;\n\n    if (!this.tooltip) {\n      content = document.createElement('div');\n      content.style.position = 'absolute';\n      content.style.padding = '10px';\n      content.style.border = '1px solid #4d4d4d';\n      content.style.color = '#1a1a1a';\n      content.style.background = 'rgba(255,255,255,0.7)';\n      content.style.borderRadius = '2px';\n      content.style.boxShadow = '5px 5px 10px rgba(128,128,128,0.5)';\n\n      line = document.createElement('div');\n      line.style.position = 'absolute';\n      line.style.height = '40px';\n      line.style.width = '0';\n      line.style.borderLeft = '1px solid #4d4d4d';\n\n      dot = document.createElement('div');\n      dot.style.position = 'absolute';\n      dot.style.height = '0';\n      dot.style.width = '0';\n      dot.style.border = '5px solid #4d4d4d';\n      dot.style.borderRadius = '5px';\n\n      this.tooltip = {\n        dataPoint: null,\n        dom: {\n          content: content,\n          line: line,\n          dot: dot\n        }\n      };\n    } else {\n      content = this.tooltip.dom.content;\n      line = this.tooltip.dom.line;\n      dot = this.tooltip.dom.dot;\n    }\n\n    this._hideTooltip();\n\n    this.tooltip.dataPoint = dataPoint;\n    if (typeof this.showTooltip === 'function') {\n      content.innerHTML = this.showTooltip(dataPoint.point);\n    } else {\n      content.innerHTML = '<table>' + '<tr><td>' + this.xLabel + ':</td><td>' + dataPoint.point.x + '</td></tr>' + '<tr><td>' + this.yLabel + ':</td><td>' + dataPoint.point.y + '</td></tr>' + '<tr><td>' + this.zLabel + ':</td><td>' + dataPoint.point.z + '</td></tr>' + '</table>';\n    }\n\n    content.style.left = '0';\n    content.style.top = '0';\n    this.frame.appendChild(content);\n    this.frame.appendChild(line);\n    this.frame.appendChild(dot);\n\n    // calculate sizes\n    var contentWidth = content.offsetWidth;\n    var contentHeight = content.offsetHeight;\n    var lineHeight = line.offsetHeight;\n    var dotWidth = dot.offsetWidth;\n    var dotHeight = dot.offsetHeight;\n\n    var left = dataPoint.screen.x - contentWidth / 2;\n    left = Math.min(Math.max(left, 10), this.frame.clientWidth - 10 - contentWidth);\n\n    line.style.left = dataPoint.screen.x + 'px';\n    line.style.top = dataPoint.screen.y - lineHeight + 'px';\n    content.style.left = left + 'px';\n    content.style.top = dataPoint.screen.y - lineHeight - contentHeight + 'px';\n    dot.style.left = dataPoint.screen.x - dotWidth / 2 + 'px';\n    dot.style.top = dataPoint.screen.y - dotHeight / 2 + 'px';\n  };\n\n  /**\n   * Hide the tooltip when displayed\n   * @private\n   */\n  Graph3d.prototype._hideTooltip = function () {\n    if (this.tooltip) {\n      this.tooltip.dataPoint = null;\n\n      for (var prop in this.tooltip.dom) {\n        if (this.tooltip.dom.hasOwnProperty(prop)) {\n          var elem = this.tooltip.dom[prop];\n          if (elem && elem.parentNode) {\n            elem.parentNode.removeChild(elem);\n          }\n        }\n      }\n    }\n  };\n\n  /**--------------------------------------------------------------------------**/\n\n  /**\n   * Get the horizontal mouse position from a mouse event\n   *\n   * @param   {Event}  event\n   * @returns {Number} mouse x\n   */\n  function getMouseX(event) {\n    if ('clientX' in event) return event.clientX;\n    return event.targetTouches[0] && event.targetTouches[0].clientX || 0;\n  }\n\n  /**\n   * Get the vertical mouse position from a mouse event\n   *\n   * @param   {Event}  event\n   * @returns {Number} mouse y\n   */\n  function getMouseY(event) {\n    if ('clientY' in event) return event.clientY;\n    return event.targetTouches[0] && event.targetTouches[0].clientY || 0;\n  }\n\n  // -----------------------------------------------------------------------------\n  //  Public methods for specific settings\n  // -----------------------------------------------------------------------------\n\n  /**\n   * Set the rotation and distance of the camera\n   *\n   * @param {Object}  pos            An object with the camera position\n   * @param {?Number} pos.horizontal The horizontal rotation, between 0 and 2*PI.\n   *                                 Optional, can be left undefined.\n   * @param {?Number} pos.vertical   The vertical rotation, between 0 and 0.5*PI.\n   *                                 if vertical=0.5*PI, the graph is shown from\n   *                                 the top. Optional, can be left undefined.\n   * @param {?Number} pos.distance   The (normalized) distance of the camera to the\n   *                                 center of the graph, a value between 0.71 and\n   *                                 5.0. Optional, can be left undefined.\n   */\n  Graph3d.prototype.setCameraPosition = function (pos) {\n    Settings.setCameraPosition(pos, this);\n    this.redraw();\n  };\n\n  // -----------------------------------------------------------------------------\n  //  End public methods for specific settings\n  // -----------------------------------------------------------------------------\n\n\n  module.exports = Graph3d;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n  \n  /**\n   * Expose `Emitter`.\n   */\n\n  module.exports = Emitter;\n\n  /**\n   * Initialize a new `Emitter`.\n   *\n   * @api public\n   */\n\n  function Emitter(obj) {\n    if (obj) return mixin(obj);\n  };\n\n  /**\n   * Mixin the emitter properties.\n   *\n   * @param {Object} obj\n   * @return {Object}\n   * @api private\n   */\n\n  function mixin(obj) {\n    for (var key in Emitter.prototype) {\n      obj[key] = Emitter.prototype[key];\n    }\n    return obj;\n  }\n\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n  Emitter.prototype.on =\n  Emitter.prototype.addEventListener = function(event, fn){\n    this._callbacks = this._callbacks || {};\n    (this._callbacks[event] = this._callbacks[event] || [])\n      .push(fn);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n  Emitter.prototype.once = function(event, fn){\n    var self = this;\n    this._callbacks = this._callbacks || {};\n\n    function on() {\n      self.off(event, on);\n      fn.apply(this, arguments);\n    }\n\n    on.fn = fn;\n    this.on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n  Emitter.prototype.off =\n  Emitter.prototype.removeListener =\n  Emitter.prototype.removeAllListeners =\n  Emitter.prototype.removeEventListener = function(event, fn){\n    this._callbacks = this._callbacks || {};\n\n    // all\n    if (0 == arguments.length) {\n      this._callbacks = {};\n      return this;\n    }\n\n    // specific event\n    var callbacks = this._callbacks[event];\n    if (!callbacks) return this;\n\n    // remove all handlers\n    if (1 == arguments.length) {\n      delete this._callbacks[event];\n      return this;\n    }\n\n    // remove specific handler\n    var cb;\n    for (var i = 0; i < callbacks.length; i++) {\n      cb = callbacks[i];\n      if (cb === fn || cb.fn === fn) {\n        callbacks.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Emit `event` with the given args.\n   *\n   * @param {String} event\n   * @param {Mixed} ...\n   * @return {Emitter}\n   */\n\n  Emitter.prototype.emit = function(event){\n    this._callbacks = this._callbacks || {};\n    var args = [].slice.call(arguments, 1)\n      , callbacks = this._callbacks[event];\n\n    if (callbacks) {\n      callbacks = callbacks.slice(0);\n      for (var i = 0, len = callbacks.length; i < len; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * Return array of callbacks for `event`.\n   *\n   * @param {String} event\n   * @return {Array}\n   * @api public\n   */\n\n  Emitter.prototype.listeners = function(event){\n    this._callbacks = this._callbacks || {};\n    return this._callbacks[event] || [];\n  };\n\n  /**\n   * Check if this emitter has `event` handlers.\n   *\n   * @param {String} event\n   * @return {Boolean}\n   * @api public\n   */\n\n  Emitter.prototype.hasListeners = function(event){\n    return !! this.listeners(event).length;\n  };\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n  \"use strict\";\n\n  /**\n   * @prototype Point3d\n   * @param {Number} [x]\n   * @param {Number} [y]\n   * @param {Number} [z]\n   */\n  function Point3d(x, y, z) {\n    this.x = x !== undefined ? x : 0;\n    this.y = y !== undefined ? y : 0;\n    this.z = z !== undefined ? z : 0;\n  };\n\n  /**\n   * Subtract the two provided points, returns a-b\n   * @param {Point3d} a\n   * @param {Point3d} b\n   * @return {Point3d} a-b\n   */\n  Point3d.subtract = function (a, b) {\n    var sub = new Point3d();\n    sub.x = a.x - b.x;\n    sub.y = a.y - b.y;\n    sub.z = a.z - b.z;\n    return sub;\n  };\n\n  /**\n   * Add the two provided points, returns a+b\n   * @param {Point3d} a\n   * @param {Point3d} b\n   * @return {Point3d} a+b\n   */\n  Point3d.add = function (a, b) {\n    var sum = new Point3d();\n    sum.x = a.x + b.x;\n    sum.y = a.y + b.y;\n    sum.z = a.z + b.z;\n    return sum;\n  };\n\n  /**\n   * Calculate the average of two 3d points\n   * @param {Point3d} a\n   * @param {Point3d} b\n   * @return {Point3d} The average, (a+b)/2\n   */\n  Point3d.avg = function (a, b) {\n    return new Point3d((a.x + b.x) / 2, (a.y + b.y) / 2, (a.z + b.z) / 2);\n  };\n\n  /**\n   * Calculate the cross product of the two provided points, returns axb\n   * Documentation: http://en.wikipedia.org/wiki/Cross_product\n   * @param {Point3d} a\n   * @param {Point3d} b\n   * @return {Point3d} cross product axb\n   */\n  Point3d.crossProduct = function (a, b) {\n    var crossproduct = new Point3d();\n\n    crossproduct.x = a.y * b.z - a.z * b.y;\n    crossproduct.y = a.z * b.x - a.x * b.z;\n    crossproduct.z = a.x * b.y - a.y * b.x;\n\n    return crossproduct;\n  };\n\n  /**\n   * Rtrieve the length of the vector (or the distance from this point to the origin\n   * @return {Number}  length\n   */\n  Point3d.prototype.length = function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  };\n\n  module.exports = Point3d;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n  \"use strict\";\n\n  /**\n   * @prototype Point2d\n   * @param {Number} [x]\n   * @param {Number} [y]\n   */\n  function Point2d(x, y) {\n    this.x = x !== undefined ? x : 0;\n    this.y = y !== undefined ? y : 0;\n  }\n\n  module.exports = Point2d;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var Point3d = __webpack_require__(14);\n\n  /**\n   * @class Camera\n   * The camera is mounted on a (virtual) camera arm. The camera arm can rotate\n   * The camera is always looking in the direction of the origin of the arm.\n   * This way, the camera always rotates around one fixed point, the location\n   * of the camera arm.\n   *\n   * Documentation:\n   *   http://en.wikipedia.org/wiki/3D_projection\n   */\n  function Camera() {\n    this.armLocation = new Point3d();\n    this.armRotation = {};\n    this.armRotation.horizontal = 0;\n    this.armRotation.vertical = 0;\n    this.armLength = 1.7;\n\n    this.cameraLocation = new Point3d();\n    this.cameraRotation = new Point3d(0.5 * Math.PI, 0, 0);\n\n    this.calculateCameraOrientation();\n  }\n\n  /**\n   * Set the location (origin) of the arm\n   * @param {Number} x  Normalized value of x\n   * @param {Number} y  Normalized value of y\n   * @param {Number} z  Normalized value of z\n   */\n  Camera.prototype.setArmLocation = function (x, y, z) {\n    this.armLocation.x = x;\n    this.armLocation.y = y;\n    this.armLocation.z = z;\n\n    this.calculateCameraOrientation();\n  };\n\n  /**\n   * Set the rotation of the camera arm\n   * @param {Number} horizontal   The horizontal rotation, between 0 and 2*PI.\n   *                Optional, can be left undefined.\n   * @param {Number} vertical   The vertical rotation, between 0 and 0.5*PI\n   *                if vertical=0.5*PI, the graph is shown from the\n   *                top. Optional, can be left undefined.\n   */\n  Camera.prototype.setArmRotation = function (horizontal, vertical) {\n    if (horizontal !== undefined) {\n      this.armRotation.horizontal = horizontal;\n    }\n\n    if (vertical !== undefined) {\n      this.armRotation.vertical = vertical;\n      if (this.armRotation.vertical < 0) this.armRotation.vertical = 0;\n      if (this.armRotation.vertical > 0.5 * Math.PI) this.armRotation.vertical = 0.5 * Math.PI;\n    }\n\n    if (horizontal !== undefined || vertical !== undefined) {\n      this.calculateCameraOrientation();\n    }\n  };\n\n  /**\n   * Retrieve the current arm rotation\n   * @return {object}   An object with parameters horizontal and vertical\n   */\n  Camera.prototype.getArmRotation = function () {\n    var rot = {};\n    rot.horizontal = this.armRotation.horizontal;\n    rot.vertical = this.armRotation.vertical;\n\n    return rot;\n  };\n\n  /**\n   * Set the (normalized) length of the camera arm.\n   * @param {Number} length A length between 0.71 and 5.0\n   */\n  Camera.prototype.setArmLength = function (length) {\n    if (length === undefined) return;\n\n    this.armLength = length;\n\n    // Radius must be larger than the corner of the graph,\n    // which has a distance of sqrt(0.5^2+0.5^2) = 0.71 from the center of the\n    // graph\n    if (this.armLength < 0.71) this.armLength = 0.71;\n    if (this.armLength > 5.0) this.armLength = 5.0;\n\n    this.calculateCameraOrientation();\n  };\n\n  /**\n   * Retrieve the arm length\n   * @return {Number} length\n   */\n  Camera.prototype.getArmLength = function () {\n    return this.armLength;\n  };\n\n  /**\n   * Retrieve the camera location\n   * @return {Point3d} cameraLocation\n   */\n  Camera.prototype.getCameraLocation = function () {\n    return this.cameraLocation;\n  };\n\n  /**\n   * Retrieve the camera rotation\n   * @return {Point3d} cameraRotation\n   */\n  Camera.prototype.getCameraRotation = function () {\n    return this.cameraRotation;\n  };\n\n  /**\n   * Calculate the location and rotation of the camera based on the\n   * position and orientation of the camera arm\n   */\n  Camera.prototype.calculateCameraOrientation = function () {\n    // calculate location of the camera\n    this.cameraLocation.x = this.armLocation.x - this.armLength * Math.sin(this.armRotation.horizontal) * Math.cos(this.armRotation.vertical);\n    this.cameraLocation.y = this.armLocation.y - this.armLength * Math.cos(this.armRotation.horizontal) * Math.cos(this.armRotation.vertical);\n    this.cameraLocation.z = this.armLocation.z + this.armLength * Math.sin(this.armRotation.vertical);\n\n    // calculate rotation of the camera\n    this.cameraRotation.x = Math.PI / 2 - this.armRotation.vertical;\n    this.cameraRotation.y = 0;\n    this.cameraRotation.z = -this.armRotation.horizontal;\n  };\n\n  module.exports = Camera;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var DataView = __webpack_require__(11);\n\n  /**\n   * @class Filter\n   *\n   * @param {DataSet} data The google data table\n   * @param {Number}  column             The index of the column to be filtered\n   * @param {Graph} graph           The graph\n   */\n  function Filter(data, column, graph) {\n    this.data = data;\n    this.column = column;\n    this.graph = graph; // the parent graph\n\n    this.index = undefined;\n    this.value = undefined;\n\n    // read all distinct values and select the first one\n    this.values = graph.getDistinctValues(data.get(), this.column);\n\n    // sort both numeric and string values correctly\n    this.values.sort(function (a, b) {\n      return a > b ? 1 : a < b ? -1 : 0;\n    });\n\n    if (this.values.length > 0) {\n      this.selectValue(0);\n    }\n\n    // create an array with the filtered datapoints. this will be loaded afterwards\n    this.dataPoints = [];\n\n    this.loaded = false;\n    this.onLoadCallback = undefined;\n\n    if (graph.animationPreload) {\n      this.loaded = false;\n      this.loadInBackground();\n    } else {\n      this.loaded = true;\n    }\n  };\n\n  /**\n   * Return the label\n   * @return {string} label\n   */\n  Filter.prototype.isLoaded = function () {\n    return this.loaded;\n  };\n\n  /**\n   * Return the loaded progress\n   * @return {Number} percentage between 0 and 100\n   */\n  Filter.prototype.getLoadedProgress = function () {\n    var len = this.values.length;\n\n    var i = 0;\n    while (this.dataPoints[i]) {\n      i++;\n    }\n\n    return Math.round(i / len * 100);\n  };\n\n  /**\n   * Return the label\n   * @return {string} label\n   */\n  Filter.prototype.getLabel = function () {\n    return this.graph.filterLabel;\n  };\n\n  /**\n   * Return the columnIndex of the filter\n   * @return {Number} columnIndex\n   */\n  Filter.prototype.getColumn = function () {\n    return this.column;\n  };\n\n  /**\n   * Return the currently selected value. Returns undefined if there is no selection\n   * @return {*} value\n   */\n  Filter.prototype.getSelectedValue = function () {\n    if (this.index === undefined) return undefined;\n\n    return this.values[this.index];\n  };\n\n  /**\n   * Retrieve all values of the filter\n   * @return {Array} values\n   */\n  Filter.prototype.getValues = function () {\n    return this.values;\n  };\n\n  /**\n   * Retrieve one value of the filter\n   * @param {Number}  index\n   * @return {*} value\n   */\n  Filter.prototype.getValue = function (index) {\n    if (index >= this.values.length) throw new Error('Index out of range');\n\n    return this.values[index];\n  };\n\n  /**\n   * Retrieve the (filtered) dataPoints for the currently selected filter index\n   * @param {Number} [index] (optional)\n   * @return {Array} dataPoints\n   */\n  Filter.prototype._getDataPoints = function (index) {\n    if (index === undefined) index = this.index;\n\n    if (index === undefined) return [];\n\n    var dataPoints;\n    if (this.dataPoints[index]) {\n      dataPoints = this.dataPoints[index];\n    } else {\n      var f = {};\n      f.column = this.column;\n      f.value = this.values[index];\n\n      var dataView = new DataView(this.data, { filter: function filter(item) {\n          return item[f.column] == f.value;\n        } }).get();\n      dataPoints = this.graph._getDataPoints(dataView);\n\n      this.dataPoints[index] = dataPoints;\n    }\n\n    return dataPoints;\n  };\n\n  /**\n   * Set a callback function when the filter is fully loaded.\n   */\n  Filter.prototype.setOnLoadCallback = function (callback) {\n    this.onLoadCallback = callback;\n  };\n\n  /**\n   * Add a value to the list with available values for this filter\n   * No double entries will be created.\n   * @param {Number} index\n   */\n  Filter.prototype.selectValue = function (index) {\n    if (index >= this.values.length) throw new Error('Index out of range');\n\n    this.index = index;\n    this.value = this.values[index];\n  };\n\n  /**\n   * Load all filtered rows in the background one by one\n   * Start this method without providing an index!\n   */\n  Filter.prototype.loadInBackground = function (index) {\n    if (index === undefined) index = 0;\n\n    var frame = this.graph.frame;\n\n    if (index < this.values.length) {\n      var dataPointsTemp = this._getDataPoints(index);\n      //this.graph.redrawInfo(); // TODO: not neat\n\n      // create a progress box\n      if (frame.progress === undefined) {\n        frame.progress = document.createElement('DIV');\n        frame.progress.style.position = 'absolute';\n        frame.progress.style.color = 'gray';\n        frame.appendChild(frame.progress);\n      }\n      var progress = this.getLoadedProgress();\n      frame.progress.innerHTML = 'Loading animation... ' + progress + '%';\n      // TODO: this is no nice solution...\n      frame.progress.style.bottom = 60 + 'px'; // TODO: use height of slider\n      frame.progress.style.left = 10 + 'px';\n\n      var me = this;\n      setTimeout(function () {\n        me.loadInBackground(index + 1);\n      }, 10);\n      this.loaded = false;\n    } else {\n      this.loaded = true;\n\n      // remove the progress box\n      if (frame.progress !== undefined) {\n        frame.removeChild(frame.progress);\n        frame.progress = undefined;\n      }\n\n      if (this.onLoadCallback) this.onLoadCallback();\n    }\n  };\n\n  module.exports = Filter;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var util = __webpack_require__(1);\n\n  /**\n   * @constructor Slider\n   *\n   * An html slider control with start/stop/prev/next buttons\n   * @param {Element} container  The element where the slider will be created\n   * @param {Object} options   Available options:\n   *                 {boolean} visible   If true (default) the\n   *                           slider is visible.\n   */\n  function Slider(container, options) {\n    if (container === undefined) {\n      throw new Error('No container element defined');\n    }\n    this.container = container;\n    this.visible = options && options.visible != undefined ? options.visible : true;\n\n    if (this.visible) {\n      this.frame = document.createElement('DIV');\n      //this.frame.style.backgroundColor = '#E5E5E5';\n      this.frame.style.width = '100%';\n      this.frame.style.position = 'relative';\n      this.container.appendChild(this.frame);\n\n      this.frame.prev = document.createElement('INPUT');\n      this.frame.prev.type = 'BUTTON';\n      this.frame.prev.value = 'Prev';\n      this.frame.appendChild(this.frame.prev);\n\n      this.frame.play = document.createElement('INPUT');\n      this.frame.play.type = 'BUTTON';\n      this.frame.play.value = 'Play';\n      this.frame.appendChild(this.frame.play);\n\n      this.frame.next = document.createElement('INPUT');\n      this.frame.next.type = 'BUTTON';\n      this.frame.next.value = 'Next';\n      this.frame.appendChild(this.frame.next);\n\n      this.frame.bar = document.createElement('INPUT');\n      this.frame.bar.type = 'BUTTON';\n      this.frame.bar.style.position = 'absolute';\n      this.frame.bar.style.border = '1px solid red';\n      this.frame.bar.style.width = '100px';\n      this.frame.bar.style.height = '6px';\n      this.frame.bar.style.borderRadius = '2px';\n      this.frame.bar.style.MozBorderRadius = '2px';\n      this.frame.bar.style.border = '1px solid #7F7F7F';\n      this.frame.bar.style.backgroundColor = '#E5E5E5';\n      this.frame.appendChild(this.frame.bar);\n\n      this.frame.slide = document.createElement('INPUT');\n      this.frame.slide.type = 'BUTTON';\n      this.frame.slide.style.margin = '0px';\n      this.frame.slide.value = ' ';\n      this.frame.slide.style.position = 'relative';\n      this.frame.slide.style.left = '-100px';\n      this.frame.appendChild(this.frame.slide);\n\n      // create events\n      var me = this;\n      this.frame.slide.onmousedown = function (event) {\n        me._onMouseDown(event);\n      };\n      this.frame.prev.onclick = function (event) {\n        me.prev(event);\n      };\n      this.frame.play.onclick = function (event) {\n        me.togglePlay(event);\n      };\n      this.frame.next.onclick = function (event) {\n        me.next(event);\n      };\n    }\n\n    this.onChangeCallback = undefined;\n\n    this.values = [];\n    this.index = undefined;\n\n    this.playTimeout = undefined;\n    this.playInterval = 1000; // milliseconds\n    this.playLoop = true;\n  }\n\n  /**\n   * Select the previous index\n   */\n  Slider.prototype.prev = function () {\n    var index = this.getIndex();\n    if (index > 0) {\n      index--;\n      this.setIndex(index);\n    }\n  };\n\n  /**\n   * Select the next index\n   */\n  Slider.prototype.next = function () {\n    var index = this.getIndex();\n    if (index < this.values.length - 1) {\n      index++;\n      this.setIndex(index);\n    }\n  };\n\n  /**\n   * Select the next index\n   */\n  Slider.prototype.playNext = function () {\n    var start = new Date();\n\n    var index = this.getIndex();\n    if (index < this.values.length - 1) {\n      index++;\n      this.setIndex(index);\n    } else if (this.playLoop) {\n      // jump to the start\n      index = 0;\n      this.setIndex(index);\n    }\n\n    var end = new Date();\n    var diff = end - start;\n\n    // calculate how much time it to to set the index and to execute the callback\n    // function.\n    var interval = Math.max(this.playInterval - diff, 0);\n    // document.title = diff // TODO: cleanup\n\n    var me = this;\n    this.playTimeout = setTimeout(function () {\n      me.playNext();\n    }, interval);\n  };\n\n  /**\n   * Toggle start or stop playing\n   */\n  Slider.prototype.togglePlay = function () {\n    if (this.playTimeout === undefined) {\n      this.play();\n    } else {\n      this.stop();\n    }\n  };\n\n  /**\n   * Start playing\n   */\n  Slider.prototype.play = function () {\n    // Test whether already playing\n    if (this.playTimeout) return;\n\n    this.playNext();\n\n    if (this.frame) {\n      this.frame.play.value = 'Stop';\n    }\n  };\n\n  /**\n   * Stop playing\n   */\n  Slider.prototype.stop = function () {\n    clearInterval(this.playTimeout);\n    this.playTimeout = undefined;\n\n    if (this.frame) {\n      this.frame.play.value = 'Play';\n    }\n  };\n\n  /**\n   * Set a callback function which will be triggered when the value of the\n   * slider bar has changed.\n   */\n  Slider.prototype.setOnChangeCallback = function (callback) {\n    this.onChangeCallback = callback;\n  };\n\n  /**\n   * Set the interval for playing the list\n   * @param {Number} interval   The interval in milliseconds\n   */\n  Slider.prototype.setPlayInterval = function (interval) {\n    this.playInterval = interval;\n  };\n\n  /**\n   * Retrieve the current play interval\n   * @return {Number} interval   The interval in milliseconds\n   */\n  Slider.prototype.getPlayInterval = function (interval) {\n    return this.playInterval;\n  };\n\n  /**\n   * Set looping on or off\n   * @pararm {boolean} doLoop  If true, the slider will jump to the start when\n   *               the end is passed, and will jump to the end\n   *               when the start is passed.\n   */\n  Slider.prototype.setPlayLoop = function (doLoop) {\n    this.playLoop = doLoop;\n  };\n\n  /**\n   * Execute the onchange callback function\n   */\n  Slider.prototype.onChange = function () {\n    if (this.onChangeCallback !== undefined) {\n      this.onChangeCallback();\n    }\n  };\n\n  /**\n   * redraw the slider on the correct place\n   */\n  Slider.prototype.redraw = function () {\n    if (this.frame) {\n      // resize the bar\n      this.frame.bar.style.top = this.frame.clientHeight / 2 - this.frame.bar.offsetHeight / 2 + 'px';\n      this.frame.bar.style.width = this.frame.clientWidth - this.frame.prev.clientWidth - this.frame.play.clientWidth - this.frame.next.clientWidth - 30 + 'px';\n\n      // position the slider button\n      var left = this.indexToLeft(this.index);\n      this.frame.slide.style.left = left + 'px';\n    }\n  };\n\n  /**\n   * Set the list with values for the slider\n   * @param {Array} values   A javascript array with values (any type)\n   */\n  Slider.prototype.setValues = function (values) {\n    this.values = values;\n\n    if (this.values.length > 0) this.setIndex(0);else this.index = undefined;\n  };\n\n  /**\n   * Select a value by its index\n   * @param {Number} index\n   */\n  Slider.prototype.setIndex = function (index) {\n    if (index < this.values.length) {\n      this.index = index;\n\n      this.redraw();\n      this.onChange();\n    } else {\n      throw new Error('Index out of range');\n    }\n  };\n\n  /**\n   * retrieve the index of the currently selected vaue\n   * @return {Number} index\n   */\n  Slider.prototype.getIndex = function () {\n    return this.index;\n  };\n\n  /**\n   * retrieve the currently selected value\n   * @return {*} value\n   */\n  Slider.prototype.get = function () {\n    return this.values[this.index];\n  };\n\n  Slider.prototype._onMouseDown = function (event) {\n    // only react on left mouse button down\n    var leftButtonDown = event.which ? event.which === 1 : event.button === 1;\n    if (!leftButtonDown) return;\n\n    this.startClientX = event.clientX;\n    this.startSlideX = parseFloat(this.frame.slide.style.left);\n\n    this.frame.style.cursor = 'move';\n\n    // add event listeners to handle moving the contents\n    // we store the function onmousemove and onmouseup in the graph, so we can\n    // remove the eventlisteners lateron in the function mouseUp()\n    var me = this;\n    this.onmousemove = function (event) {\n      me._onMouseMove(event);\n    };\n    this.onmouseup = function (event) {\n      me._onMouseUp(event);\n    };\n    util.addEventListener(document, 'mousemove', this.onmousemove);\n    util.addEventListener(document, 'mouseup', this.onmouseup);\n    util.preventDefault(event);\n  };\n\n  Slider.prototype.leftToIndex = function (left) {\n    var width = parseFloat(this.frame.bar.style.width) - this.frame.slide.clientWidth - 10;\n    var x = left - 3;\n\n    var index = Math.round(x / width * (this.values.length - 1));\n    if (index < 0) index = 0;\n    if (index > this.values.length - 1) index = this.values.length - 1;\n\n    return index;\n  };\n\n  Slider.prototype.indexToLeft = function (index) {\n    var width = parseFloat(this.frame.bar.style.width) - this.frame.slide.clientWidth - 10;\n\n    var x = index / (this.values.length - 1) * width;\n    var left = x + 3;\n\n    return left;\n  };\n\n  Slider.prototype._onMouseMove = function (event) {\n    var diff = event.clientX - this.startClientX;\n    var x = this.startSlideX + diff;\n\n    var index = this.leftToIndex(x);\n\n    this.setIndex(index);\n\n    util.preventDefault();\n  };\n\n  Slider.prototype._onMouseUp = function (event) {\n    this.frame.style.cursor = 'auto';\n\n    // remove event listeners\n    util.removeEventListener(document, 'mousemove', this.onmousemove);\n    util.removeEventListener(document, 'mouseup', this.onmouseup);\n\n    util.preventDefault();\n  };\n\n  module.exports = Slider;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n  'use strict';\n\n  /**\n   * @prototype StepNumber\n   * The class StepNumber is an iterator for Numbers. You provide a start and end\n   * value, and a best step size. StepNumber itself rounds to fixed values and\n   * a finds the step that best fits the provided step.\n   *\n   * If prettyStep is true, the step size is chosen as close as possible to the\n   * provided step, but being a round value like 1, 2, 5, 10, 20, 50, ....\n   *\n   * Example usage:\n   *   var step = new StepNumber(0, 10, 2.5, true);\n   *   step.start();\n   *   while (!step.end()) {\n   *   alert(step.getCurrent());\n   *   step.next();\n   *   }\n   *\n   * Version: 1.0\n   *\n   * @param {Number} start     The start value\n   * @param {Number} end     The end value\n   * @param {Number} step    Optional. Step size. Must be a positive value.\n   * @param {boolean} prettyStep Optional. If true, the step size is rounded\n   *               To a pretty step size (like 1, 2, 5, 10, 20, 50, ...)\n   */\n  function StepNumber(start, end, step, prettyStep) {\n    // set default values\n    this._start = 0;\n    this._end = 0;\n    this._step = 1;\n    this.prettyStep = true;\n    this.precision = 5;\n\n    this._current = 0;\n    this.setRange(start, end, step, prettyStep);\n  };\n\n  /**\n   * Check for input values, to prevent disasters from happening\n   *\n   * Source: http://stackoverflow.com/a/1830844\n   */\n  StepNumber.prototype.isNumeric = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  /**\n   * Set a new range: start, end and step.\n   *\n   * @param {Number} start     The start value\n   * @param {Number} end     The end value\n   * @param {Number} step    Optional. Step size. Must be a positive value.\n   * @param {boolean} prettyStep Optional. If true, the step size is rounded\n   *               To a pretty step size (like 1, 2, 5, 10, 20, 50, ...)\n   */\n  StepNumber.prototype.setRange = function (start, end, step, prettyStep) {\n    if (!this.isNumeric(start)) {\n      throw new Error('Parameter \\'start\\' is not numeric; value: ' + start);\n    }\n    if (!this.isNumeric(end)) {\n      throw new Error('Parameter \\'end\\' is not numeric; value: ' + start);\n    }\n    if (!this.isNumeric(step)) {\n      throw new Error('Parameter \\'step\\' is not numeric; value: ' + start);\n    }\n\n    this._start = start ? start : 0;\n    this._end = end ? end : 0;\n\n    this.setStep(step, prettyStep);\n  };\n\n  /**\n   * Set a new step size\n   * @param {Number} step    New step size. Must be a positive value\n   * @param {boolean} prettyStep Optional. If true, the provided step is rounded\n   *               to a pretty step size (like 1, 2, 5, 10, 20, 50, ...)\n   */\n  StepNumber.prototype.setStep = function (step, prettyStep) {\n    if (step === undefined || step <= 0) return;\n\n    if (prettyStep !== undefined) this.prettyStep = prettyStep;\n\n    if (this.prettyStep === true) this._step = StepNumber.calculatePrettyStep(step);else this._step = step;\n  };\n\n  /**\n   * Calculate a nice step size, closest to the desired step size.\n   * Returns a value in one of the ranges 1*10^n, 2*10^n, or 5*10^n, where n is an\n   * integer Number. For example 1, 2, 5, 10, 20, 50, etc...\n   * @param {Number}  step  Desired step size\n   * @return {Number}     Nice step size\n   */\n  StepNumber.calculatePrettyStep = function (step) {\n    var log10 = function log10(x) {\n      return Math.log(x) / Math.LN10;\n    };\n\n    // try three steps (multiple of 1, 2, or 5\n    var step1 = Math.pow(10, Math.round(log10(step))),\n        step2 = 2 * Math.pow(10, Math.round(log10(step / 2))),\n        step5 = 5 * Math.pow(10, Math.round(log10(step / 5)));\n\n    // choose the best step (closest to minimum step)\n    var prettyStep = step1;\n    if (Math.abs(step2 - step) <= Math.abs(prettyStep - step)) prettyStep = step2;\n    if (Math.abs(step5 - step) <= Math.abs(prettyStep - step)) prettyStep = step5;\n\n    // for safety\n    if (prettyStep <= 0) {\n      prettyStep = 1;\n    }\n\n    return prettyStep;\n  };\n\n  /**\n   * returns the current value of the step\n   * @return {Number} current value\n   */\n  StepNumber.prototype.getCurrent = function () {\n    return parseFloat(this._current.toPrecision(this.precision));\n  };\n\n  /**\n   * returns the current step size\n   * @return {Number} current step size\n   */\n  StepNumber.prototype.getStep = function () {\n    return this._step;\n  };\n\n  /**\n   * Set the current to its starting value.\n   *\n   * By default, this will be the largest value smaller than start, which\n   * is a multiple of the step size.\n   *\n   * Parameters checkFirst is optional, default false.\n   * If set to true, move the current value one step if smaller than start.\n   */\n  StepNumber.prototype.start = function (checkFirst) {\n    if (checkFirst === undefined) {\n      checkFirst = false;\n    }\n\n    this._current = this._start - this._start % this._step;\n\n    if (checkFirst) {\n      if (this.getCurrent() < this._start) {\n        this.next();\n      }\n    }\n  };\n\n  /**\n   * Do a step, add the step size to the current value\n   */\n  StepNumber.prototype.next = function () {\n    this._current += this._step;\n  };\n\n  /**\n   * Returns true whether the end is reached\n   * @return {boolean}  True if the current value has passed the end value.\n   */\n  StepNumber.prototype.end = function () {\n    return this._current > this._end;\n  };\n\n  module.exports = StepNumber;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n  'use strict';\n\n  /**\n   * @prototype Range\n   *\n   * Helper class to make working with related min and max values easier.\n   *\n   * The range is inclusive; a given value is considered part of the range if:\n   *\n   *    this.min <= value <= this.max\n   */\n  function Range() {\n    this.min = undefined;\n    this.max = undefined;\n  }\n\n  /**\n   * Adjust the range so that the passed value fits in it.\n   *\n   * If the value is outside of the current extremes, adjust\n   * the min or max so that the value is within the range.\n   *\n   * @param {number} value Numeric value to fit in range\n   */\n  Range.prototype.adjust = function (value) {\n    if (value === undefined) return;\n\n    if (this.min === undefined || this.min > value) {\n      this.min = value;\n    }\n\n    if (this.max === undefined || this.max < value) {\n      this.max = value;\n    }\n  };\n\n  /**\n   * Adjust the current range so that the passed range fits in it.\n   *\n   * @param {Range} range Range instance to fit in current instance\n   */\n  Range.prototype.combine = function (range) {\n    this.add(range.min);\n    this.add(range.max);\n  };\n\n  /**\n   * Expand the range by the given value\n   *\n   * min will be lowered by given value;\n   * max will be raised by given value\n   *\n   * Shrinking by passing a negative value is allowed.\n   *\n   * @param {number} val Amount by which to expand or shrink current range with\n   */\n  Range.prototype.expand = function (val) {\n    if (val === undefined) {\n      return;\n    }\n\n    var newMin = this.min - val;\n    var newMax = this.max + val;\n\n    // Note that following allows newMin === newMax.\n    // This should be OK, since method expand() allows this also.\n    if (newMin > newMax) {\n      throw new Error('Passed expansion value makes range invalid');\n    }\n\n    this.min = newMin;\n    this.max = newMax;\n  };\n\n  /**\n   * Determine the full range width of current instance.\n   *\n   * @returns {num} The calculated width of this range\n   */\n  Range.prototype.range = function () {\n    return this.max - this.min;\n  };\n\n  /**\n   * Determine the central point of current instance.\n   *\n   * @returns {number} the value in the middle of min and max\n   */\n  Range.prototype.center = function () {\n    return (this.min + this.max) / 2;\n  };\n\n  module.exports = Range;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // This modules handles the options for Graph3d.\n  //\n  ////////////////////////////////////////////////////////////////////////////////\n  var Camera = __webpack_require__(16);\n  var Point3d = __webpack_require__(14);\n\n  // enumerate the available styles\n  var STYLE = {\n    BAR: 0,\n    BARCOLOR: 1,\n    BARSIZE: 2,\n    DOT: 3,\n    DOTLINE: 4,\n    DOTCOLOR: 5,\n    DOTSIZE: 6,\n    GRID: 7,\n    LINE: 8,\n    SURFACE: 9\n  };\n\n  // The string representations of the styles\n  var STYLENAME = {\n    'dot': STYLE.DOT,\n    'dot-line': STYLE.DOTLINE,\n    'dot-color': STYLE.DOTCOLOR,\n    'dot-size': STYLE.DOTSIZE,\n    'line': STYLE.LINE,\n    'grid': STYLE.GRID,\n    'surface': STYLE.SURFACE,\n    'bar': STYLE.BAR,\n    'bar-color': STYLE.BARCOLOR,\n    'bar-size': STYLE.BARSIZE\n  };\n\n  /**\n   * Field names in the options hash which are of relevance to the user.\n   *\n   * Specifically, these are the fields which require no special handling,\n   * and can be directly copied over.\n   */\n  var OPTIONKEYS = ['width', 'height', 'filterLabel', 'legendLabel', 'xLabel', 'yLabel', 'zLabel', 'xValueLabel', 'yValueLabel', 'zValueLabel', 'showGrid', 'showPerspective', 'showShadow', 'keepAspectRatio', 'verticalRatio', 'dotSizeRatio', 'showAnimationControls', 'animationInterval', 'animationPreload', 'animationAutoStart', 'axisColor', 'gridColor', 'xCenter', 'yCenter'];\n\n  /**\n   * Field names in the options hash which are of relevance to the user.\n   *\n   * Same as OPTIONKEYS, but internally these fields are stored with \n   * prefix 'default' in the name.\n   */\n  var PREFIXEDOPTIONKEYS = ['xBarWidth', 'yBarWidth', 'valueMin', 'valueMax', 'xMin', 'xMax', 'xStep', 'yMin', 'yMax', 'yStep', 'zMin', 'zMax', 'zStep'];\n\n  // Placeholder for DEFAULTS reference\n  var DEFAULTS = undefined;\n\n  /**\n   * Check if given hash is empty.\n   *\n   * Source: http://stackoverflow.com/a/679937\n   */\n  function isEmpty(obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Make first letter of parameter upper case.\n   *\n   * Source: http://stackoverflow.com/a/1026087\n   */\n  function capitalize(str) {\n    if (str === undefined || str === \"\") {\n      return str;\n    }\n\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  /**\n   * Add a prefix to a field name, taking style guide into account\n   */\n  function prefixFieldName(prefix, fieldName) {\n    if (prefix === undefined || prefix === \"\") {\n      return fieldName;\n    }\n\n    return prefix + capitalize(fieldName);\n  }\n\n  /**\n   * Forcibly copy fields from src to dst in a controlled manner.\n   *\n   * A given field in dst will always be overwitten. If this field\n   * is undefined or not present in src, the field in dst will \n   * be explicitly set to undefined.\n   * \n   * The intention here is to be able to reset all option fields.\n   * \n   * Only the fields mentioned in array 'fields' will be handled.\n   *\n   * @param fields array with names of fields to copy\n   * @param prefix optional; prefix to use for the target fields.\n   */\n  function forceCopy(src, dst, fields, prefix) {\n    var srcKey;\n    var dstKey;\n\n    for (var i in fields) {\n      srcKey = fields[i];\n      dstKey = prefixFieldName(prefix, srcKey);\n\n      dst[dstKey] = src[srcKey];\n    }\n  }\n\n  /**\n   * Copy fields from src to dst in a safe and controlled manner.\n   *\n   * Only the fields mentioned in array 'fields' will be copied over,\n   * and only if these are actually defined.\n   *\n   * @param fields array with names of fields to copy\n   * @param prefix optional; prefix to use for the target fields.\n   */\n  function safeCopy(src, dst, fields, prefix) {\n    var srcKey;\n    var dstKey;\n\n    for (var i in fields) {\n      srcKey = fields[i];\n      if (src[srcKey] === undefined) continue;\n\n      dstKey = prefixFieldName(prefix, srcKey);\n\n      dst[dstKey] = src[srcKey];\n    }\n  }\n\n  /**\n   * Initialize dst with the values in src.\n   *\n   * src is the hash with the default values. \n   * A reference DEFAULTS to this hash is stored locally for \n   * further handling.\n   *\n   * For now, dst is assumed to be a Graph3d instance.\n   */\n  function setDefaults(src, dst) {\n    if (src === undefined || isEmpty(src)) {\n      throw new Error('No DEFAULTS passed');\n    }\n    if (dst === undefined) {\n      throw new Error('No dst passed');\n    }\n\n    // Remember defaults for future reference\n    DEFAULTS = src;\n\n    // Handle the defaults which can be simply copied over\n    forceCopy(src, dst, OPTIONKEYS);\n    forceCopy(src, dst, PREFIXEDOPTIONKEYS, 'default');\n\n    // Handle the more complex ('special') fields\n    setSpecialSettings(src, dst);\n\n    // Following are internal fields, not part of the user settings\n    dst.margin = 10; // px\n    dst.showGrayBottom = false; // TODO: this does not work correctly\n    dst.showTooltip = false;\n    dst.eye = new Point3d(0, 0, -1); // TODO: set eye.z about 3/4 of the width of the window?\n  }\n\n  function setOptions(options, dst) {\n    if (options === undefined) {\n      return;\n    }\n    if (dst === undefined) {\n      throw new Error('No dst passed');\n    }\n\n    if (DEFAULTS === undefined || isEmpty(DEFAULTS)) {\n      throw new Error('DEFAULTS not set for module Settings');\n    }\n\n    // Handle the parameters which can be simply copied over\n    safeCopy(options, dst, OPTIONKEYS);\n    safeCopy(options, dst, PREFIXEDOPTIONKEYS, 'default');\n\n    // Handle the more complex ('special') fields\n    setSpecialSettings(options, dst);\n  }\n\n  /**\n   * Special handling for certain parameters\n   *\n   * 'Special' here means: setting requires more than a simple copy\n   */\n  function setSpecialSettings(src, dst) {\n    if (src.backgroundColor !== undefined) {\n      setBackgroundColor(src.backgroundColor, dst);\n    }\n\n    setDataColor(src.dataColor, dst);\n    setStyle(src.style, dst);\n    setShowLegend(src.showLegend, dst);\n    setCameraPosition(src.cameraPosition, dst);\n\n    // As special fields go, this is an easy one; just a translation of the name.\n    // Can't use this.tooltip directly, because that field exists internally\n    if (src.tooltip !== undefined) {\n      dst.showTooltip = src.tooltip;\n    }\n  }\n\n  /**\n   * Set the value of setting 'showLegend'\n   *\n   * This depends on the value of the style fields, so it must be called\n   * after the style field has been initialized.\n   */\n  function setShowLegend(showLegend, dst) {\n    if (showLegend === undefined) {\n      // If the default was auto, make a choice for this field\n      var isAutoByDefault = DEFAULTS.showLegend === undefined;\n\n      if (isAutoByDefault) {\n        // these styles default to having legends\n        var isLegendGraphStyle = dst.style === STYLE.DOTCOLOR || dst.style === STYLE.DOTSIZE;\n\n        dst.showLegend = isLegendGraphStyle;\n      } else {\n        // Leave current value as is\n      }\n    } else {\n      dst.showLegend = showLegend;\n    }\n  }\n\n  /**\n   * Retrieve the style index from given styleName\n   * @param {string} styleName  Style name such as 'dot', 'grid', 'dot-line'\n   * @return {Number} styleNumber Enumeration value representing the style, or -1\n   *                when not found\n   */\n  function getStyleNumberByName(styleName) {\n    var number = STYLENAME[styleName];\n\n    if (number === undefined) {\n      return -1;\n    }\n\n    return number;\n  }\n\n  /**\n   * Check if given number is a valid style number.\n   *\n   * @return true if valid, false otherwise\n   */\n  function checkStyleNumber(style) {\n    var valid = false;\n\n    for (var n in STYLE) {\n      if (STYLE[n] === style) {\n        valid = true;\n        break;\n      }\n    }\n\n    return valid;\n  }\n\n  function setStyle(style, dst) {\n    if (style === undefined) {\n      return; // Nothing to do\n    }\n\n    var styleNumber;\n\n    if (typeof style === 'string') {\n      styleNumber = getStyleNumberByName(style);\n\n      if (styleNumber === -1) {\n        throw new Error('Style \\'' + style + '\\' is invalid');\n      }\n    } else {\n      // Do a pedantic check on style number value\n      if (!checkStyleNumber(style)) {\n        throw new Error('Style \\'' + style + '\\' is invalid');\n      }\n\n      styleNumber = style;\n    }\n\n    dst.style = styleNumber;\n  }\n\n  /**\n   * Set the background styling for the graph\n   * @param {string | {fill: string, stroke: string, strokeWidth: string}} backgroundColor\n   */\n  function setBackgroundColor(backgroundColor, dst) {\n    var fill = 'white';\n    var stroke = 'gray';\n    var strokeWidth = 1;\n\n    if (typeof backgroundColor === 'string') {\n      fill = backgroundColor;\n      stroke = 'none';\n      strokeWidth = 0;\n    } else if ((typeof backgroundColor === 'undefined' ? 'undefined' : _typeof(backgroundColor)) === 'object') {\n      if (backgroundColor.fill !== undefined) fill = backgroundColor.fill;\n      if (backgroundColor.stroke !== undefined) stroke = backgroundColor.stroke;\n      if (backgroundColor.strokeWidth !== undefined) strokeWidth = backgroundColor.strokeWidth;\n    } else {\n      throw new Error('Unsupported type of backgroundColor');\n    }\n\n    dst.frame.style.backgroundColor = fill;\n    dst.frame.style.borderColor = stroke;\n    dst.frame.style.borderWidth = strokeWidth + 'px';\n    dst.frame.style.borderStyle = 'solid';\n  }\n\n  function setDataColor(dataColor, dst) {\n    if (dataColor === undefined) {\n      return; // Nothing to do\n    }\n\n    if (dst.dataColor === undefined) {\n      dst.dataColor = {};\n    }\n\n    if (typeof dataColor === 'string') {\n      dst.dataColor.fill = dataColor;\n      dst.dataColor.stroke = dataColor;\n    } else {\n      if (dataColor.fill) {\n        dst.dataColor.fill = dataColor.fill;\n      }\n      if (dataColor.stroke) {\n        dst.dataColor.stroke = dataColor.stroke;\n      }\n      if (dataColor.strokeWidth !== undefined) {\n        dst.dataColor.strokeWidth = dataColor.strokeWidth;\n      }\n    }\n  }\n\n  function setCameraPosition(cameraPosition, dst) {\n    var camPos = cameraPosition;\n    if (camPos === undefined) {\n      return;\n    }\n\n    if (dst.camera === undefined) {\n      dst.camera = new Camera();\n    }\n\n    dst.camera.setArmRotation(camPos.horizontal, camPos.vertical);\n    dst.camera.setArmLength(camPos.distance);\n  }\n\n  module.exports.STYLE = STYLE;\n  module.exports.setDefaults = setDefaults;\n  module.exports.setOptions = setOptions;\n  module.exports.setCameraPosition = setCameraPosition;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  // Only load hammer.js when in a browser environment\n  // (loading hammer.js in a node.js environment gives errors)\n  if (typeof window !== 'undefined') {\n    var propagating = __webpack_require__(23);\n    var Hammer = window['Hammer'] || __webpack_require__(24);\n    module.exports = propagating(Hammer, {\n      preventDefault: 'mouse'\n    });\n  } else {\n    module.exports = function () {\n      throw Error('hammer.js is only available in a browser, not in node.js.');\n    };\n  }\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n  var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n  (function (factory) {\n    if (true) {\n      // AMD. Register as an anonymous module.\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === 'object') {\n      // Node. Does not work with strict CommonJS, but\n      // only CommonJS-like environments that support module.exports,\n      // like Node.\n      module.exports = factory();\n    } else {\n      // Browser globals (root is window)\n      window.propagating = factory();\n    }\n  }(function () {\n    var _firstTarget = null; // singleton, will contain the target element where the touch event started\n\n    /**\n     * Extend an Hammer.js instance with event propagation.\n     *\n     * Features:\n     * - Events emitted by hammer will propagate in order from child to parent\n     *   elements.\n     * - Events are extended with a function `event.stopPropagation()` to stop\n     *   propagation to parent elements.\n     * - An option `preventDefault` to stop all default browser behavior.\n     *\n     * Usage:\n     *   var hammer = propagatingHammer(new Hammer(element));\n     *   var hammer = propagatingHammer(new Hammer(element), {preventDefault: true});\n     *\n     * @param {Hammer.Manager} hammer   An hammer instance.\n     * @param {Object} [options]        Available options:\n     *                                  - `preventDefault: true | false | 'mouse' | 'touch' | 'pen'`.\n     *                                    Enforce preventing the default browser behavior.\n     *                                    Cannot be set to `false`.\n     * @return {Hammer.Manager} Returns the same hammer instance with extended\n     *                          functionality\n     */\n    return function propagating(hammer, options) {\n      var _options = options || {\n        preventDefault: false\n      };\n\n      if (hammer.Manager) {\n        // This looks like the Hammer constructor.\n        // Overload the constructors with our own.\n        var Hammer = hammer;\n\n        var PropagatingHammer = function(element, options) {\n          var o = Object.create(_options);\n          if (options) Hammer.assign(o, options);\n          return propagating(new Hammer(element, o), o);\n        };\n        Hammer.assign(PropagatingHammer, Hammer);\n\n        PropagatingHammer.Manager = function (element, options) {\n          var o = Object.create(_options);\n          if (options) Hammer.assign(o, options);\n          return propagating(new Hammer.Manager(element, o), o);\n        };\n\n        return PropagatingHammer;\n      }\n\n      // create a wrapper object which will override the functions\n      // `on`, `off`, `destroy`, and `emit` of the hammer instance\n      var wrapper = Object.create(hammer);\n\n      // attach to DOM element\n      var element = hammer.element;\n\n      if(!element.hammer) element.hammer = [];\n      element.hammer.push(wrapper);\n\n      // register an event to catch the start of a gesture and store the\n      // target in a singleton\n      hammer.on('hammer.input', function (event) {\n        if (_options.preventDefault === true || (_options.preventDefault === event.pointerType)) {\n          event.preventDefault();\n        }\n        if (event.isFirst) {\n          _firstTarget = event.target;\n        }\n      });\n\n      /** @type {Object.<String, Array.<function>>} */\n      wrapper._handlers = {};\n\n      /**\n       * Register a handler for one or multiple events\n       * @param {String} events    A space separated string with events\n       * @param {function} handler A callback function, called as handler(event)\n       * @returns {Hammer.Manager} Returns the hammer instance\n       */\n      wrapper.on = function (events, handler) {\n        // register the handler\n        split(events).forEach(function (event) {\n          var _handlers = wrapper._handlers[event];\n          if (!_handlers) {\n            wrapper._handlers[event] = _handlers = [];\n\n            // register the static, propagated handler\n            hammer.on(event, propagatedHandler);\n          }\n          _handlers.push(handler);\n        });\n\n        return wrapper;\n      };\n\n      /**\n       * Unregister a handler for one or multiple events\n       * @param {String} events      A space separated string with events\n       * @param {function} [handler] Optional. The registered handler. If not\n       *                             provided, all handlers for given events\n       *                             are removed.\n       * @returns {Hammer.Manager}   Returns the hammer instance\n       */\n      wrapper.off = function (events, handler) {\n        // unregister the handler\n        split(events).forEach(function (event) {\n          var _handlers = wrapper._handlers[event];\n          if (_handlers) {\n            _handlers = handler ? _handlers.filter(function (h) {\n              return h !== handler;\n            }) : [];\n\n            if (_handlers.length > 0) {\n              wrapper._handlers[event] = _handlers;\n            }\n            else {\n              // remove static, propagated handler\n              hammer.off(event, propagatedHandler);\n              delete wrapper._handlers[event];\n            }\n          }\n        });\n\n        return wrapper;\n      };\n\n      /**\n       * Emit to the event listeners\n       * @param {string} eventType\n       * @param {Event} event\n       */\n      wrapper.emit = function(eventType, event) {\n        _firstTarget = event.target;\n        hammer.emit(eventType, event);\n      };\n\n      wrapper.destroy = function () {\n        // Detach from DOM element\n        var hammers = hammer.element.hammer;\n        var idx = hammers.indexOf(wrapper);\n        if(idx !== -1) hammers.splice(idx,1);\n        if(!hammers.length) delete hammer.element.hammer;\n\n        // clear all handlers\n        wrapper._handlers = {};\n\n        // call original hammer destroy\n        hammer.destroy();\n      };\n\n      // split a string with space separated words\n      function split(events) {\n        return events.match(/[^ ]+/g);\n      }\n\n      /**\n       * A static event handler, applying event propagation.\n       * @param {Object} event\n       */\n      function propagatedHandler(event) {\n        // let only a single hammer instance handle this event\n        if (event.type !== 'hammer.input') {\n          // it is possible that the same srcEvent is used with multiple hammer events,\n          // we keep track on which events are handled in an object _handled\n          if (!event.srcEvent._handled) {\n            event.srcEvent._handled = {};\n          }\n\n          if (event.srcEvent._handled[event.type]) {\n            return;\n          }\n          else {\n            event.srcEvent._handled[event.type] = true;\n          }\n        }\n\n        // attach a stopPropagation function to the event\n        var stopped = false;\n        event.stopPropagation = function () {\n          stopped = true;\n        };\n\n        //wrap the srcEvent's stopPropagation to also stop hammer propagation:\n        var srcStop = event.srcEvent.stopPropagation.bind(event.srcEvent);\n        if(typeof srcStop == \"function\") {\n          event.srcEvent.stopPropagation = function(){\n            srcStop();\n            event.stopPropagation();\n          }\n        }\n\n        // attach firstTarget property to the event\n        event.firstTarget = _firstTarget;\n\n        // propagate over all elements (until stopped)\n        var elem = _firstTarget;\n        while (elem && !stopped) {\n          var elemHammer = elem.hammer;\n          if(elemHammer){\n            var _handlers;\n            for(var k = 0; k < elemHammer.length; k++){\n              _handlers = elemHammer[k]._handlers[event.type];\n              if(_handlers) for (var i = 0; i < _handlers.length && !stopped; i++) {\n                _handlers[i](event);\n              }\n            }\n          }\n          elem = elem.parentNode;\n        }\n      }\n\n      return wrapper;\n    };\n  }));\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n  var __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.7 - 2016-04-22\n   * http://hammerjs.github.io/\n   *\n   * Copyright (c) 2016 Jorik Tangelder;\n   * Licensed under the MIT license */\n  (function(window, document, exportName, undefined) {\n    'use strict';\n\n  var VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n  var TEST_ELEMENT = document.createElement('div');\n\n  var TYPE_FUNCTION = 'function';\n\n  var round = Math.round;\n  var abs = Math.abs;\n  var now = Date.now;\n\n  /**\n   * set a timeout with a given scope\n   * @param {Function} fn\n   * @param {Number} timeout\n   * @param {Object} context\n   * @returns {number}\n   */\n  function setTimeoutContext(fn, timeout, context) {\n      return setTimeout(bindFn(fn, context), timeout);\n  }\n\n  /**\n   * if the argument is an array, we want to execute the fn on each entry\n   * if it aint an array we don't want to do a thing.\n   * this is used by all the methods that accept a single and array argument.\n   * @param {*|Array} arg\n   * @param {String} fn\n   * @param {Object} [context]\n   * @returns {Boolean}\n   */\n  function invokeArrayArg(arg, fn, context) {\n      if (Array.isArray(arg)) {\n          each(arg, context[fn], context);\n          return true;\n      }\n      return false;\n  }\n\n  /**\n   * walk objects and arrays\n   * @param {Object} obj\n   * @param {Function} iterator\n   * @param {Object} context\n   */\n  function each(obj, iterator, context) {\n      var i;\n\n      if (!obj) {\n          return;\n      }\n\n      if (obj.forEach) {\n          obj.forEach(iterator, context);\n      } else if (obj.length !== undefined) {\n          i = 0;\n          while (i < obj.length) {\n              iterator.call(context, obj[i], i, obj);\n              i++;\n          }\n      } else {\n          for (i in obj) {\n              obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n          }\n      }\n  }\n\n  /**\n   * wrap a method with a deprecation warning and stack trace\n   * @param {Function} method\n   * @param {String} name\n   * @param {String} message\n   * @returns {Function} A new function wrapping the supplied method.\n   */\n  function deprecate(method, name, message) {\n      var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n      return function() {\n          var e = new Error('get-stack-trace');\n          var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n              .replace(/^\\s+at\\s+/gm, '')\n              .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n          var log = window.console && (window.console.warn || window.console.log);\n          if (log) {\n              log.call(window.console, deprecationMessage, stack);\n          }\n          return method.apply(this, arguments);\n      };\n  }\n\n  /**\n   * extend object.\n   * means that properties in dest will be overwritten by the ones in src.\n   * @param {Object} target\n   * @param {...Object} objects_to_assign\n   * @returns {Object} target\n   */\n  var assign;\n  if (typeof Object.assign !== 'function') {\n      assign = function assign(target) {\n          if (target === undefined || target === null) {\n              throw new TypeError('Cannot convert undefined or null to object');\n          }\n\n          var output = Object(target);\n          for (var index = 1; index < arguments.length; index++) {\n              var source = arguments[index];\n              if (source !== undefined && source !== null) {\n                  for (var nextKey in source) {\n                      if (source.hasOwnProperty(nextKey)) {\n                          output[nextKey] = source[nextKey];\n                      }\n                  }\n              }\n          }\n          return output;\n      };\n  } else {\n      assign = Object.assign;\n  }\n\n  /**\n   * extend object.\n   * means that properties in dest will be overwritten by the ones in src.\n   * @param {Object} dest\n   * @param {Object} src\n   * @param {Boolean} [merge=false]\n   * @returns {Object} dest\n   */\n  var extend = deprecate(function extend(dest, src, merge) {\n      var keys = Object.keys(src);\n      var i = 0;\n      while (i < keys.length) {\n          if (!merge || (merge && dest[keys[i]] === undefined)) {\n              dest[keys[i]] = src[keys[i]];\n          }\n          i++;\n      }\n      return dest;\n  }, 'extend', 'Use `assign`.');\n\n  /**\n   * merge the values from src in the dest.\n   * means that properties that exist in dest will not be overwritten by src\n   * @param {Object} dest\n   * @param {Object} src\n   * @returns {Object} dest\n   */\n  var merge = deprecate(function merge(dest, src) {\n      return extend(dest, src, true);\n  }, 'merge', 'Use `assign`.');\n\n  /**\n   * simple class inheritance\n   * @param {Function} child\n   * @param {Function} base\n   * @param {Object} [properties]\n   */\n  function inherit(child, base, properties) {\n      var baseP = base.prototype,\n          childP;\n\n      childP = child.prototype = Object.create(baseP);\n      childP.constructor = child;\n      childP._super = baseP;\n\n      if (properties) {\n          assign(childP, properties);\n      }\n  }\n\n  /**\n   * simple function bind\n   * @param {Function} fn\n   * @param {Object} context\n   * @returns {Function}\n   */\n  function bindFn(fn, context) {\n      return function boundFn() {\n          return fn.apply(context, arguments);\n      };\n  }\n\n  /**\n   * let a boolean value also be a function that must return a boolean\n   * this first item in args will be used as the context\n   * @param {Boolean|Function} val\n   * @param {Array} [args]\n   * @returns {Boolean}\n   */\n  function boolOrFn(val, args) {\n      if (typeof val == TYPE_FUNCTION) {\n          return val.apply(args ? args[0] || undefined : undefined, args);\n      }\n      return val;\n  }\n\n  /**\n   * use the val2 when val1 is undefined\n   * @param {*} val1\n   * @param {*} val2\n   * @returns {*}\n   */\n  function ifUndefined(val1, val2) {\n      return (val1 === undefined) ? val2 : val1;\n  }\n\n  /**\n   * addEventListener with multiple events at once\n   * @param {EventTarget} target\n   * @param {String} types\n   * @param {Function} handler\n   */\n  function addEventListeners(target, types, handler) {\n      each(splitStr(types), function(type) {\n          target.addEventListener(type, handler, false);\n      });\n  }\n\n  /**\n   * removeEventListener with multiple events at once\n   * @param {EventTarget} target\n   * @param {String} types\n   * @param {Function} handler\n   */\n  function removeEventListeners(target, types, handler) {\n      each(splitStr(types), function(type) {\n          target.removeEventListener(type, handler, false);\n      });\n  }\n\n  /**\n   * find if a node is in the given parent\n   * @method hasParent\n   * @param {HTMLElement} node\n   * @param {HTMLElement} parent\n   * @return {Boolean} found\n   */\n  function hasParent(node, parent) {\n      while (node) {\n          if (node == parent) {\n              return true;\n          }\n          node = node.parentNode;\n      }\n      return false;\n  }\n\n  /**\n   * small indexOf wrapper\n   * @param {String} str\n   * @param {String} find\n   * @returns {Boolean} found\n   */\n  function inStr(str, find) {\n      return str.indexOf(find) > -1;\n  }\n\n  /**\n   * split string on whitespace\n   * @param {String} str\n   * @returns {Array} words\n   */\n  function splitStr(str) {\n      return str.trim().split(/\\s+/g);\n  }\n\n  /**\n   * find if a array contains the object using indexOf or a simple polyFill\n   * @param {Array} src\n   * @param {String} find\n   * @param {String} [findByKey]\n   * @return {Boolean|Number} false when not found, or the index\n   */\n  function inArray(src, find, findByKey) {\n      if (src.indexOf && !findByKey) {\n          return src.indexOf(find);\n      } else {\n          var i = 0;\n          while (i < src.length) {\n              if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                  return i;\n              }\n              i++;\n          }\n          return -1;\n      }\n  }\n\n  /**\n   * convert array-like objects to real arrays\n   * @param {Object} obj\n   * @returns {Array}\n   */\n  function toArray(obj) {\n      return Array.prototype.slice.call(obj, 0);\n  }\n\n  /**\n   * unique array with objects based on a key (like 'id') or just by the array's value\n   * @param {Array} src [{id:1},{id:2},{id:1}]\n   * @param {String} [key]\n   * @param {Boolean} [sort=False]\n   * @returns {Array} [{id:1},{id:2}]\n   */\n  function uniqueArray(src, key, sort) {\n      var results = [];\n      var values = [];\n      var i = 0;\n\n      while (i < src.length) {\n          var val = key ? src[i][key] : src[i];\n          if (inArray(values, val) < 0) {\n              results.push(src[i]);\n          }\n          values[i] = val;\n          i++;\n      }\n\n      if (sort) {\n          if (!key) {\n              results = results.sort();\n          } else {\n              results = results.sort(function sortUniqueArray(a, b) {\n                  return a[key] > b[key];\n              });\n          }\n      }\n\n      return results;\n  }\n\n  /**\n   * get the prefixed property\n   * @param {Object} obj\n   * @param {String} property\n   * @returns {String|Undefined} prefixed\n   */\n  function prefixed(obj, property) {\n      var prefix, prop;\n      var camelProp = property[0].toUpperCase() + property.slice(1);\n\n      var i = 0;\n      while (i < VENDOR_PREFIXES.length) {\n          prefix = VENDOR_PREFIXES[i];\n          prop = (prefix) ? prefix + camelProp : property;\n\n          if (prop in obj) {\n              return prop;\n          }\n          i++;\n      }\n      return undefined;\n  }\n\n  /**\n   * get a unique id\n   * @returns {number} uniqueId\n   */\n  var _uniqueId = 1;\n  function uniqueId() {\n      return _uniqueId++;\n  }\n\n  /**\n   * get the window object of an element\n   * @param {HTMLElement} element\n   * @returns {DocumentView|Window}\n   */\n  function getWindowForElement(element) {\n      var doc = element.ownerDocument || element;\n      return (doc.defaultView || doc.parentWindow || window);\n  }\n\n  var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\n  var SUPPORT_TOUCH = ('ontouchstart' in window);\n  var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\n  var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\n  var INPUT_TYPE_TOUCH = 'touch';\n  var INPUT_TYPE_PEN = 'pen';\n  var INPUT_TYPE_MOUSE = 'mouse';\n  var INPUT_TYPE_KINECT = 'kinect';\n\n  var COMPUTE_INTERVAL = 25;\n\n  var INPUT_START = 1;\n  var INPUT_MOVE = 2;\n  var INPUT_END = 4;\n  var INPUT_CANCEL = 8;\n\n  var DIRECTION_NONE = 1;\n  var DIRECTION_LEFT = 2;\n  var DIRECTION_RIGHT = 4;\n  var DIRECTION_UP = 8;\n  var DIRECTION_DOWN = 16;\n\n  var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n  var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n  var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\n  var PROPS_XY = ['x', 'y'];\n  var PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n  /**\n   * create new input type manager\n   * @param {Manager} manager\n   * @param {Function} callback\n   * @returns {Input}\n   * @constructor\n   */\n  function Input(manager, callback) {\n      var self = this;\n      this.manager = manager;\n      this.callback = callback;\n      this.element = manager.element;\n      this.target = manager.options.inputTarget;\n\n      // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n      // so when disabled the input events are completely bypassed.\n      this.domHandler = function(ev) {\n          if (boolOrFn(manager.options.enable, [manager])) {\n              self.handler(ev);\n          }\n      };\n\n      this.init();\n\n  }\n\n  Input.prototype = {\n      /**\n       * should handle the inputEvent data and trigger the callback\n       * @virtual\n       */\n      handler: function() { },\n\n      /**\n       * bind the events\n       */\n      init: function() {\n          this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n          this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n          this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n      },\n\n      /**\n       * unbind the events\n       */\n      destroy: function() {\n          this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n          this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n          this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n      }\n  };\n\n  /**\n   * create new input type manager\n   * called by the Manager constructor\n   * @param {Hammer} manager\n   * @returns {Input}\n   */\n  function createInputInstance(manager) {\n      var Type;\n      var inputClass = manager.options.inputClass;\n\n      if (inputClass) {\n          Type = inputClass;\n      } else if (SUPPORT_POINTER_EVENTS) {\n          Type = PointerEventInput;\n      } else if (SUPPORT_ONLY_TOUCH) {\n          Type = TouchInput;\n      } else if (!SUPPORT_TOUCH) {\n          Type = MouseInput;\n      } else {\n          Type = TouchMouseInput;\n      }\n      return new (Type)(manager, inputHandler);\n  }\n\n  /**\n   * handle input events\n   * @param {Manager} manager\n   * @param {String} eventType\n   * @param {Object} input\n   */\n  function inputHandler(manager, eventType, input) {\n      var pointersLen = input.pointers.length;\n      var changedPointersLen = input.changedPointers.length;\n      var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n      var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n      input.isFirst = !!isFirst;\n      input.isFinal = !!isFinal;\n\n      if (isFirst) {\n          manager.session = {};\n      }\n\n      // source event is the normalized value of the domEvents\n      // like 'touchstart, mouseup, pointerdown'\n      input.eventType = eventType;\n\n      // compute scale, rotation etc\n      computeInputData(manager, input);\n\n      // emit secret event\n      manager.emit('hammer.input', input);\n\n      manager.recognize(input);\n      manager.session.prevInput = input;\n  }\n\n  /**\n   * extend the data with some usable properties like scale, rotate, velocity etc\n   * @param {Object} manager\n   * @param {Object} input\n   */\n  function computeInputData(manager, input) {\n      var session = manager.session;\n      var pointers = input.pointers;\n      var pointersLength = pointers.length;\n\n      // store the first input to calculate the distance and direction\n      if (!session.firstInput) {\n          session.firstInput = simpleCloneInputData(input);\n      }\n\n      // to compute scale and rotation we need to store the multiple touches\n      if (pointersLength > 1 && !session.firstMultiple) {\n          session.firstMultiple = simpleCloneInputData(input);\n      } else if (pointersLength === 1) {\n          session.firstMultiple = false;\n      }\n\n      var firstInput = session.firstInput;\n      var firstMultiple = session.firstMultiple;\n      var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n      var center = input.center = getCenter(pointers);\n      input.timeStamp = now();\n      input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n      input.angle = getAngle(offsetCenter, center);\n      input.distance = getDistance(offsetCenter, center);\n\n      computeDeltaXY(session, input);\n      input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n      var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n      input.overallVelocityX = overallVelocity.x;\n      input.overallVelocityY = overallVelocity.y;\n      input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n      input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n      input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n      input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n          session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n      computeIntervalInputData(session, input);\n\n      // find the correct target\n      var target = manager.element;\n      if (hasParent(input.srcEvent.target, target)) {\n          target = input.srcEvent.target;\n      }\n      input.target = target;\n  }\n\n  function computeDeltaXY(session, input) {\n      var center = input.center;\n      var offset = session.offsetDelta || {};\n      var prevDelta = session.prevDelta || {};\n      var prevInput = session.prevInput || {};\n\n      if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n          prevDelta = session.prevDelta = {\n              x: prevInput.deltaX || 0,\n              y: prevInput.deltaY || 0\n          };\n\n          offset = session.offsetDelta = {\n              x: center.x,\n              y: center.y\n          };\n      }\n\n      input.deltaX = prevDelta.x + (center.x - offset.x);\n      input.deltaY = prevDelta.y + (center.y - offset.y);\n  }\n\n  /**\n   * velocity is calculated every x ms\n   * @param {Object} session\n   * @param {Object} input\n   */\n  function computeIntervalInputData(session, input) {\n      var last = session.lastInterval || input,\n          deltaTime = input.timeStamp - last.timeStamp,\n          velocity, velocityX, velocityY, direction;\n\n      if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n          var deltaX = input.deltaX - last.deltaX;\n          var deltaY = input.deltaY - last.deltaY;\n\n          var v = getVelocity(deltaTime, deltaX, deltaY);\n          velocityX = v.x;\n          velocityY = v.y;\n          velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n          direction = getDirection(deltaX, deltaY);\n\n          session.lastInterval = input;\n      } else {\n          // use latest velocity info if it doesn't overtake a minimum period\n          velocity = last.velocity;\n          velocityX = last.velocityX;\n          velocityY = last.velocityY;\n          direction = last.direction;\n      }\n\n      input.velocity = velocity;\n      input.velocityX = velocityX;\n      input.velocityY = velocityY;\n      input.direction = direction;\n  }\n\n  /**\n   * create a simple clone from the input used for storage of firstInput and firstMultiple\n   * @param {Object} input\n   * @returns {Object} clonedInputData\n   */\n  function simpleCloneInputData(input) {\n      // make a simple copy of the pointers because we will get a reference if we don't\n      // we only need clientXY for the calculations\n      var pointers = [];\n      var i = 0;\n      while (i < input.pointers.length) {\n          pointers[i] = {\n              clientX: round(input.pointers[i].clientX),\n              clientY: round(input.pointers[i].clientY)\n          };\n          i++;\n      }\n\n      return {\n          timeStamp: now(),\n          pointers: pointers,\n          center: getCenter(pointers),\n          deltaX: input.deltaX,\n          deltaY: input.deltaY\n      };\n  }\n\n  /**\n   * get the center of all the pointers\n   * @param {Array} pointers\n   * @return {Object} center contains `x` and `y` properties\n   */\n  function getCenter(pointers) {\n      var pointersLength = pointers.length;\n\n      // no need to loop when only one touch\n      if (pointersLength === 1) {\n          return {\n              x: round(pointers[0].clientX),\n              y: round(pointers[0].clientY)\n          };\n      }\n\n      var x = 0, y = 0, i = 0;\n      while (i < pointersLength) {\n          x += pointers[i].clientX;\n          y += pointers[i].clientY;\n          i++;\n      }\n\n      return {\n          x: round(x / pointersLength),\n          y: round(y / pointersLength)\n      };\n  }\n\n  /**\n   * calculate the velocity between two points. unit is in px per ms.\n   * @param {Number} deltaTime\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Object} velocity `x` and `y`\n   */\n  function getVelocity(deltaTime, x, y) {\n      return {\n          x: x / deltaTime || 0,\n          y: y / deltaTime || 0\n      };\n  }\n\n  /**\n   * get the direction between two points\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Number} direction\n   */\n  function getDirection(x, y) {\n      if (x === y) {\n          return DIRECTION_NONE;\n      }\n\n      if (abs(x) >= abs(y)) {\n          return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n      }\n      return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n  }\n\n  /**\n   * calculate the absolute distance between two points\n   * @param {Object} p1 {x, y}\n   * @param {Object} p2 {x, y}\n   * @param {Array} [props] containing x and y keys\n   * @return {Number} distance\n   */\n  function getDistance(p1, p2, props) {\n      if (!props) {\n          props = PROPS_XY;\n      }\n      var x = p2[props[0]] - p1[props[0]],\n          y = p2[props[1]] - p1[props[1]];\n\n      return Math.sqrt((x * x) + (y * y));\n  }\n\n  /**\n   * calculate the angle between two coordinates\n   * @param {Object} p1\n   * @param {Object} p2\n   * @param {Array} [props] containing x and y keys\n   * @return {Number} angle\n   */\n  function getAngle(p1, p2, props) {\n      if (!props) {\n          props = PROPS_XY;\n      }\n      var x = p2[props[0]] - p1[props[0]],\n          y = p2[props[1]] - p1[props[1]];\n      return Math.atan2(y, x) * 180 / Math.PI;\n  }\n\n  /**\n   * calculate the rotation degrees between two pointersets\n   * @param {Array} start array of pointers\n   * @param {Array} end array of pointers\n   * @return {Number} rotation\n   */\n  function getRotation(start, end) {\n      return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n  }\n\n  /**\n   * calculate the scale factor between two pointersets\n   * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n   * @param {Array} start array of pointers\n   * @param {Array} end array of pointers\n   * @return {Number} scale\n   */\n  function getScale(start, end) {\n      return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n  }\n\n  var MOUSE_INPUT_MAP = {\n      mousedown: INPUT_START,\n      mousemove: INPUT_MOVE,\n      mouseup: INPUT_END\n  };\n\n  var MOUSE_ELEMENT_EVENTS = 'mousedown';\n  var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n  /**\n   * Mouse events input\n   * @constructor\n   * @extends Input\n   */\n  function MouseInput() {\n      this.evEl = MOUSE_ELEMENT_EVENTS;\n      this.evWin = MOUSE_WINDOW_EVENTS;\n\n      this.pressed = false; // mousedown state\n\n      Input.apply(this, arguments);\n  }\n\n  inherit(MouseInput, Input, {\n      /**\n       * handle mouse events\n       * @param {Object} ev\n       */\n      handler: function MEhandler(ev) {\n          var eventType = MOUSE_INPUT_MAP[ev.type];\n\n          // on start we want to have the left mouse button down\n          if (eventType & INPUT_START && ev.button === 0) {\n              this.pressed = true;\n          }\n\n          if (eventType & INPUT_MOVE && ev.which !== 1) {\n              eventType = INPUT_END;\n          }\n\n          // mouse must be down\n          if (!this.pressed) {\n              return;\n          }\n\n          if (eventType & INPUT_END) {\n              this.pressed = false;\n          }\n\n          this.callback(this.manager, eventType, {\n              pointers: [ev],\n              changedPointers: [ev],\n              pointerType: INPUT_TYPE_MOUSE,\n              srcEvent: ev\n          });\n      }\n  });\n\n  var POINTER_INPUT_MAP = {\n      pointerdown: INPUT_START,\n      pointermove: INPUT_MOVE,\n      pointerup: INPUT_END,\n      pointercancel: INPUT_CANCEL,\n      pointerout: INPUT_CANCEL\n  };\n\n  // in IE10 the pointer types is defined as an enum\n  var IE10_POINTER_TYPE_ENUM = {\n      2: INPUT_TYPE_TOUCH,\n      3: INPUT_TYPE_PEN,\n      4: INPUT_TYPE_MOUSE,\n      5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n  };\n\n  var POINTER_ELEMENT_EVENTS = 'pointerdown';\n  var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n  // IE10 has prefixed support, and case-sensitive\n  if (window.MSPointerEvent && !window.PointerEvent) {\n      POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n      POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n  }\n\n  /**\n   * Pointer events input\n   * @constructor\n   * @extends Input\n   */\n  function PointerEventInput() {\n      this.evEl = POINTER_ELEMENT_EVENTS;\n      this.evWin = POINTER_WINDOW_EVENTS;\n\n      Input.apply(this, arguments);\n\n      this.store = (this.manager.session.pointerEvents = []);\n  }\n\n  inherit(PointerEventInput, Input, {\n      /**\n       * handle mouse events\n       * @param {Object} ev\n       */\n      handler: function PEhandler(ev) {\n          var store = this.store;\n          var removePointer = false;\n\n          var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n          var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n          var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n          var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n          // get index of the event in the store\n          var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n          // start and mouse must be down\n          if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n              if (storeIndex < 0) {\n                  store.push(ev);\n                  storeIndex = store.length - 1;\n              }\n          } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n              removePointer = true;\n          }\n\n          // it not found, so the pointer hasn't been down (so it's probably a hover)\n          if (storeIndex < 0) {\n              return;\n          }\n\n          // update the event in the store\n          store[storeIndex] = ev;\n\n          this.callback(this.manager, eventType, {\n              pointers: store,\n              changedPointers: [ev],\n              pointerType: pointerType,\n              srcEvent: ev\n          });\n\n          if (removePointer) {\n              // remove from the store\n              store.splice(storeIndex, 1);\n          }\n      }\n  });\n\n  var SINGLE_TOUCH_INPUT_MAP = {\n      touchstart: INPUT_START,\n      touchmove: INPUT_MOVE,\n      touchend: INPUT_END,\n      touchcancel: INPUT_CANCEL\n  };\n\n  var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\n  var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n  /**\n   * Touch events input\n   * @constructor\n   * @extends Input\n   */\n  function SingleTouchInput() {\n      this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n      this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n      this.started = false;\n\n      Input.apply(this, arguments);\n  }\n\n  inherit(SingleTouchInput, Input, {\n      handler: function TEhandler(ev) {\n          var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n          // should we handle the touch events?\n          if (type === INPUT_START) {\n              this.started = true;\n          }\n\n          if (!this.started) {\n              return;\n          }\n\n          var touches = normalizeSingleTouches.call(this, ev, type);\n\n          // when done, reset the started state\n          if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n              this.started = false;\n          }\n\n          this.callback(this.manager, type, {\n              pointers: touches[0],\n              changedPointers: touches[1],\n              pointerType: INPUT_TYPE_TOUCH,\n              srcEvent: ev\n          });\n      }\n  });\n\n  /**\n   * @this {TouchInput}\n   * @param {Object} ev\n   * @param {Number} type flag\n   * @returns {undefined|Array} [all, changed]\n   */\n  function normalizeSingleTouches(ev, type) {\n      var all = toArray(ev.touches);\n      var changed = toArray(ev.changedTouches);\n\n      if (type & (INPUT_END | INPUT_CANCEL)) {\n          all = uniqueArray(all.concat(changed), 'identifier', true);\n      }\n\n      return [all, changed];\n  }\n\n  var TOUCH_INPUT_MAP = {\n      touchstart: INPUT_START,\n      touchmove: INPUT_MOVE,\n      touchend: INPUT_END,\n      touchcancel: INPUT_CANCEL\n  };\n\n  var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n  /**\n   * Multi-user touch events input\n   * @constructor\n   * @extends Input\n   */\n  function TouchInput() {\n      this.evTarget = TOUCH_TARGET_EVENTS;\n      this.targetIds = {};\n\n      Input.apply(this, arguments);\n  }\n\n  inherit(TouchInput, Input, {\n      handler: function MTEhandler(ev) {\n          var type = TOUCH_INPUT_MAP[ev.type];\n          var touches = getTouches.call(this, ev, type);\n          if (!touches) {\n              return;\n          }\n\n          this.callback(this.manager, type, {\n              pointers: touches[0],\n              changedPointers: touches[1],\n              pointerType: INPUT_TYPE_TOUCH,\n              srcEvent: ev\n          });\n      }\n  });\n\n  /**\n   * @this {TouchInput}\n   * @param {Object} ev\n   * @param {Number} type flag\n   * @returns {undefined|Array} [all, changed]\n   */\n  function getTouches(ev, type) {\n      var allTouches = toArray(ev.touches);\n      var targetIds = this.targetIds;\n\n      // when there is only one touch, the process can be simplified\n      if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n          targetIds[allTouches[0].identifier] = true;\n          return [allTouches, allTouches];\n      }\n\n      var i,\n          targetTouches,\n          changedTouches = toArray(ev.changedTouches),\n          changedTargetTouches = [],\n          target = this.target;\n\n      // get target touches from touches\n      targetTouches = allTouches.filter(function(touch) {\n          return hasParent(touch.target, target);\n      });\n\n      // collect touches\n      if (type === INPUT_START) {\n          i = 0;\n          while (i < targetTouches.length) {\n              targetIds[targetTouches[i].identifier] = true;\n              i++;\n          }\n      }\n\n      // filter changed touches to only contain touches that exist in the collected target ids\n      i = 0;\n      while (i < changedTouches.length) {\n          if (targetIds[changedTouches[i].identifier]) {\n              changedTargetTouches.push(changedTouches[i]);\n          }\n\n          // cleanup removed touches\n          if (type & (INPUT_END | INPUT_CANCEL)) {\n              delete targetIds[changedTouches[i].identifier];\n          }\n          i++;\n      }\n\n      if (!changedTargetTouches.length) {\n          return;\n      }\n\n      return [\n          // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n          uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n          changedTargetTouches\n      ];\n  }\n\n  /**\n   * Combined touch and mouse input\n   *\n   * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n   * This because touch devices also emit mouse events while doing a touch.\n   *\n   * @constructor\n   * @extends Input\n   */\n\n  var DEDUP_TIMEOUT = 2500;\n  var DEDUP_DISTANCE = 25;\n\n  function TouchMouseInput() {\n      Input.apply(this, arguments);\n\n      var handler = bindFn(this.handler, this);\n      this.touch = new TouchInput(this.manager, handler);\n      this.mouse = new MouseInput(this.manager, handler);\n\n      this.primaryTouch = null;\n      this.lastTouches = [];\n  }\n\n  inherit(TouchMouseInput, Input, {\n      /**\n       * handle mouse and touch events\n       * @param {Hammer} manager\n       * @param {String} inputEvent\n       * @param {Object} inputData\n       */\n      handler: function TMEhandler(manager, inputEvent, inputData) {\n          var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n              isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n          if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n              return;\n          }\n\n          // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n          if (isTouch) {\n              recordTouches.call(this, inputEvent, inputData);\n          } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n              return;\n          }\n\n          this.callback(manager, inputEvent, inputData);\n      },\n\n      /**\n       * remove the event listeners\n       */\n      destroy: function destroy() {\n          this.touch.destroy();\n          this.mouse.destroy();\n      }\n  });\n\n  function recordTouches(eventType, eventData) {\n      if (eventType & INPUT_START) {\n          this.primaryTouch = eventData.changedPointers[0].identifier;\n          setLastTouch.call(this, eventData);\n      } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n          setLastTouch.call(this, eventData);\n      }\n  }\n\n  function setLastTouch(eventData) {\n      var touch = eventData.changedPointers[0];\n\n      if (touch.identifier === this.primaryTouch) {\n          var lastTouch = {x: touch.clientX, y: touch.clientY};\n          this.lastTouches.push(lastTouch);\n          var lts = this.lastTouches;\n          var removeLastTouch = function() {\n              var i = lts.indexOf(lastTouch);\n              if (i > -1) {\n                  lts.splice(i, 1);\n              }\n          };\n          setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n      }\n  }\n\n  function isSyntheticEvent(eventData) {\n      var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n      for (var i = 0; i < this.lastTouches.length; i++) {\n          var t = this.lastTouches[i];\n          var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n          if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n              return true;\n          }\n      }\n      return false;\n  }\n\n  var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\n  var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n  // magical touchAction value\n  var TOUCH_ACTION_COMPUTE = 'compute';\n  var TOUCH_ACTION_AUTO = 'auto';\n  var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n  var TOUCH_ACTION_NONE = 'none';\n  var TOUCH_ACTION_PAN_X = 'pan-x';\n  var TOUCH_ACTION_PAN_Y = 'pan-y';\n  var TOUCH_ACTION_MAP = getTouchActionProps();\n\n  /**\n   * Touch Action\n   * sets the touchAction property or uses the js alternative\n   * @param {Manager} manager\n   * @param {String} value\n   * @constructor\n   */\n  function TouchAction(manager, value) {\n      this.manager = manager;\n      this.set(value);\n  }\n\n  TouchAction.prototype = {\n      /**\n       * set the touchAction value on the element or enable the polyfill\n       * @param {String} value\n       */\n      set: function(value) {\n          // find out the touch-action by the event handlers\n          if (value == TOUCH_ACTION_COMPUTE) {\n              value = this.compute();\n          }\n\n          if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n              this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n          }\n          this.actions = value.toLowerCase().trim();\n      },\n\n      /**\n       * just re-set the touchAction value\n       */\n      update: function() {\n          this.set(this.manager.options.touchAction);\n      },\n\n      /**\n       * compute the value for the touchAction property based on the recognizer's settings\n       * @returns {String} value\n       */\n      compute: function() {\n          var actions = [];\n          each(this.manager.recognizers, function(recognizer) {\n              if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                  actions = actions.concat(recognizer.getTouchAction());\n              }\n          });\n          return cleanTouchActions(actions.join(' '));\n      },\n\n      /**\n       * this method is called on each input cycle and provides the preventing of the browser behavior\n       * @param {Object} input\n       */\n      preventDefaults: function(input) {\n          var srcEvent = input.srcEvent;\n          var direction = input.offsetDirection;\n\n          // if the touch action did prevented once this session\n          if (this.manager.session.prevented) {\n              srcEvent.preventDefault();\n              return;\n          }\n\n          var actions = this.actions;\n          var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n          var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n          var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n          if (hasNone) {\n              //do not prevent defaults if this is a tap gesture\n\n              var isTapPointer = input.pointers.length === 1;\n              var isTapMovement = input.distance < 2;\n              var isTapTouchTime = input.deltaTime < 250;\n\n              if (isTapPointer && isTapMovement && isTapTouchTime) {\n                  return;\n              }\n          }\n\n          if (hasPanX && hasPanY) {\n              // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n              return;\n          }\n\n          if (hasNone ||\n              (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n              (hasPanX && direction & DIRECTION_VERTICAL)) {\n              return this.preventSrc(srcEvent);\n          }\n      },\n\n      /**\n       * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n       * @param {Object} srcEvent\n       */\n      preventSrc: function(srcEvent) {\n          this.manager.session.prevented = true;\n          srcEvent.preventDefault();\n      }\n  };\n\n  /**\n   * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n   * @param {String} actions\n   * @returns {*}\n   */\n  function cleanTouchActions(actions) {\n      // none\n      if (inStr(actions, TOUCH_ACTION_NONE)) {\n          return TOUCH_ACTION_NONE;\n      }\n\n      var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n      var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n      // if both pan-x and pan-y are set (different recognizers\n      // for different directions, e.g. horizontal pan but vertical swipe?)\n      // we need none (as otherwise with pan-x pan-y combined none of these\n      // recognizers will work, since the browser would handle all panning\n      if (hasPanX && hasPanY) {\n          return TOUCH_ACTION_NONE;\n      }\n\n      // pan-x OR pan-y\n      if (hasPanX || hasPanY) {\n          return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n      }\n\n      // manipulation\n      if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n          return TOUCH_ACTION_MANIPULATION;\n      }\n\n      return TOUCH_ACTION_AUTO;\n  }\n\n  function getTouchActionProps() {\n      if (!NATIVE_TOUCH_ACTION) {\n          return false;\n      }\n      var touchMap = {};\n      var cssSupports = window.CSS && window.CSS.supports;\n      ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n          // If css.supports is not supported but there is native touch-action assume it supports\n          // all values. This is the case for IE 10 and 11.\n          touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n      });\n      return touchMap;\n  }\n\n  /**\n   * Recognizer flow explained; *\n   * All recognizers have the initial state of POSSIBLE when a input session starts.\n   * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n   * Example session for mouse-input: mousedown -> mousemove -> mouseup\n   *\n   * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n   * which determines with state it should be.\n   *\n   * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n   * POSSIBLE to give it another change on the next cycle.\n   *\n   *               Possible\n   *                  |\n   *            +-----+---------------+\n   *            |                     |\n   *      +-----+-----+               |\n   *      |           |               |\n   *   Failed      Cancelled          |\n   *                          +-------+------+\n   *                          |              |\n   *                      Recognized       Began\n   *                                         |\n   *                                      Changed\n   *                                         |\n   *                                  Ended/Recognized\n   */\n  var STATE_POSSIBLE = 1;\n  var STATE_BEGAN = 2;\n  var STATE_CHANGED = 4;\n  var STATE_ENDED = 8;\n  var STATE_RECOGNIZED = STATE_ENDED;\n  var STATE_CANCELLED = 16;\n  var STATE_FAILED = 32;\n\n  /**\n   * Recognizer\n   * Every recognizer needs to extend from this class.\n   * @constructor\n   * @param {Object} options\n   */\n  function Recognizer(options) {\n      this.options = assign({}, this.defaults, options || {});\n\n      this.id = uniqueId();\n\n      this.manager = null;\n\n      // default is enable true\n      this.options.enable = ifUndefined(this.options.enable, true);\n\n      this.state = STATE_POSSIBLE;\n\n      this.simultaneous = {};\n      this.requireFail = [];\n  }\n\n  Recognizer.prototype = {\n      /**\n       * @virtual\n       * @type {Object}\n       */\n      defaults: {},\n\n      /**\n       * set options\n       * @param {Object} options\n       * @return {Recognizer}\n       */\n      set: function(options) {\n          assign(this.options, options);\n\n          // also update the touchAction, in case something changed about the directions/enabled state\n          this.manager && this.manager.touchAction.update();\n          return this;\n      },\n\n      /**\n       * recognize simultaneous with an other recognizer.\n       * @param {Recognizer} otherRecognizer\n       * @returns {Recognizer} this\n       */\n      recognizeWith: function(otherRecognizer) {\n          if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n              return this;\n          }\n\n          var simultaneous = this.simultaneous;\n          otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n          if (!simultaneous[otherRecognizer.id]) {\n              simultaneous[otherRecognizer.id] = otherRecognizer;\n              otherRecognizer.recognizeWith(this);\n          }\n          return this;\n      },\n\n      /**\n       * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n       * @param {Recognizer} otherRecognizer\n       * @returns {Recognizer} this\n       */\n      dropRecognizeWith: function(otherRecognizer) {\n          if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n              return this;\n          }\n\n          otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n          delete this.simultaneous[otherRecognizer.id];\n          return this;\n      },\n\n      /**\n       * recognizer can only run when an other is failing\n       * @param {Recognizer} otherRecognizer\n       * @returns {Recognizer} this\n       */\n      requireFailure: function(otherRecognizer) {\n          if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n              return this;\n          }\n\n          var requireFail = this.requireFail;\n          otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n          if (inArray(requireFail, otherRecognizer) === -1) {\n              requireFail.push(otherRecognizer);\n              otherRecognizer.requireFailure(this);\n          }\n          return this;\n      },\n\n      /**\n       * drop the requireFailure link. it does not remove the link on the other recognizer.\n       * @param {Recognizer} otherRecognizer\n       * @returns {Recognizer} this\n       */\n      dropRequireFailure: function(otherRecognizer) {\n          if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n              return this;\n          }\n\n          otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n          var index = inArray(this.requireFail, otherRecognizer);\n          if (index > -1) {\n              this.requireFail.splice(index, 1);\n          }\n          return this;\n      },\n\n      /**\n       * has require failures boolean\n       * @returns {boolean}\n       */\n      hasRequireFailures: function() {\n          return this.requireFail.length > 0;\n      },\n\n      /**\n       * if the recognizer can recognize simultaneous with an other recognizer\n       * @param {Recognizer} otherRecognizer\n       * @returns {Boolean}\n       */\n      canRecognizeWith: function(otherRecognizer) {\n          return !!this.simultaneous[otherRecognizer.id];\n      },\n\n      /**\n       * You should use `tryEmit` instead of `emit` directly to check\n       * that all the needed recognizers has failed before emitting.\n       * @param {Object} input\n       */\n      emit: function(input) {\n          var self = this;\n          var state = this.state;\n\n          function emit(event) {\n              self.manager.emit(event, input);\n          }\n\n          // 'panstart' and 'panmove'\n          if (state < STATE_ENDED) {\n              emit(self.options.event + stateStr(state));\n          }\n\n          emit(self.options.event); // simple 'eventName' events\n\n          if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n              emit(input.additionalEvent);\n          }\n\n          // panend and pancancel\n          if (state >= STATE_ENDED) {\n              emit(self.options.event + stateStr(state));\n          }\n      },\n\n      /**\n       * Check that all the require failure recognizers has failed,\n       * if true, it emits a gesture event,\n       * otherwise, setup the state to FAILED.\n       * @param {Object} input\n       */\n      tryEmit: function(input) {\n          if (this.canEmit()) {\n              return this.emit(input);\n          }\n          // it's failing anyway\n          this.state = STATE_FAILED;\n      },\n\n      /**\n       * can we emit?\n       * @returns {boolean}\n       */\n      canEmit: function() {\n          var i = 0;\n          while (i < this.requireFail.length) {\n              if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                  return false;\n              }\n              i++;\n          }\n          return true;\n      },\n\n      /**\n       * update the recognizer\n       * @param {Object} inputData\n       */\n      recognize: function(inputData) {\n          // make a new copy of the inputData\n          // so we can change the inputData without messing up the other recognizers\n          var inputDataClone = assign({}, inputData);\n\n          // is is enabled and allow recognizing?\n          if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n              this.reset();\n              this.state = STATE_FAILED;\n              return;\n          }\n\n          // reset when we've reached the end\n          if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n              this.state = STATE_POSSIBLE;\n          }\n\n          this.state = this.process(inputDataClone);\n\n          // the recognizer has recognized a gesture\n          // so trigger an event\n          if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n              this.tryEmit(inputDataClone);\n          }\n      },\n\n      /**\n       * return the state of the recognizer\n       * the actual recognizing happens in this method\n       * @virtual\n       * @param {Object} inputData\n       * @returns {Const} STATE\n       */\n      process: function(inputData) { }, // jshint ignore:line\n\n      /**\n       * return the preferred touch-action\n       * @virtual\n       * @returns {Array}\n       */\n      getTouchAction: function() { },\n\n      /**\n       * called when the gesture isn't allowed to recognize\n       * like when another is being recognized or it is disabled\n       * @virtual\n       */\n      reset: function() { }\n  };\n\n  /**\n   * get a usable string, used as event postfix\n   * @param {Const} state\n   * @returns {String} state\n   */\n  function stateStr(state) {\n      if (state & STATE_CANCELLED) {\n          return 'cancel';\n      } else if (state & STATE_ENDED) {\n          return 'end';\n      } else if (state & STATE_CHANGED) {\n          return 'move';\n      } else if (state & STATE_BEGAN) {\n          return 'start';\n      }\n      return '';\n  }\n\n  /**\n   * direction cons to string\n   * @param {Const} direction\n   * @returns {String}\n   */\n  function directionStr(direction) {\n      if (direction == DIRECTION_DOWN) {\n          return 'down';\n      } else if (direction == DIRECTION_UP) {\n          return 'up';\n      } else if (direction == DIRECTION_LEFT) {\n          return 'left';\n      } else if (direction == DIRECTION_RIGHT) {\n          return 'right';\n      }\n      return '';\n  }\n\n  /**\n   * get a recognizer by name if it is bound to a manager\n   * @param {Recognizer|String} otherRecognizer\n   * @param {Recognizer} recognizer\n   * @returns {Recognizer}\n   */\n  function getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n      var manager = recognizer.manager;\n      if (manager) {\n          return manager.get(otherRecognizer);\n      }\n      return otherRecognizer;\n  }\n\n  /**\n   * This recognizer is just used as a base for the simple attribute recognizers.\n   * @constructor\n   * @extends Recognizer\n   */\n  function AttrRecognizer() {\n      Recognizer.apply(this, arguments);\n  }\n\n  inherit(AttrRecognizer, Recognizer, {\n      /**\n       * @namespace\n       * @memberof AttrRecognizer\n       */\n      defaults: {\n          /**\n           * @type {Number}\n           * @default 1\n           */\n          pointers: 1\n      },\n\n      /**\n       * Used to check if it the recognizer receives valid input, like input.distance > 10.\n       * @memberof AttrRecognizer\n       * @param {Object} input\n       * @returns {Boolean} recognized\n       */\n      attrTest: function(input) {\n          var optionPointers = this.options.pointers;\n          return optionPointers === 0 || input.pointers.length === optionPointers;\n      },\n\n      /**\n       * Process the input and return the state for the recognizer\n       * @memberof AttrRecognizer\n       * @param {Object} input\n       * @returns {*} State\n       */\n      process: function(input) {\n          var state = this.state;\n          var eventType = input.eventType;\n\n          var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n          var isValid = this.attrTest(input);\n\n          // on cancel input and we've recognized before, return STATE_CANCELLED\n          if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n              return state | STATE_CANCELLED;\n          } else if (isRecognized || isValid) {\n              if (eventType & INPUT_END) {\n                  return state | STATE_ENDED;\n              } else if (!(state & STATE_BEGAN)) {\n                  return STATE_BEGAN;\n              }\n              return state | STATE_CHANGED;\n          }\n          return STATE_FAILED;\n      }\n  });\n\n  /**\n   * Pan\n   * Recognized when the pointer is down and moved in the allowed direction.\n   * @constructor\n   * @extends AttrRecognizer\n   */\n  function PanRecognizer() {\n      AttrRecognizer.apply(this, arguments);\n\n      this.pX = null;\n      this.pY = null;\n  }\n\n  inherit(PanRecognizer, AttrRecognizer, {\n      /**\n       * @namespace\n       * @memberof PanRecognizer\n       */\n      defaults: {\n          event: 'pan',\n          threshold: 10,\n          pointers: 1,\n          direction: DIRECTION_ALL\n      },\n\n      getTouchAction: function() {\n          var direction = this.options.direction;\n          var actions = [];\n          if (direction & DIRECTION_HORIZONTAL) {\n              actions.push(TOUCH_ACTION_PAN_Y);\n          }\n          if (direction & DIRECTION_VERTICAL) {\n              actions.push(TOUCH_ACTION_PAN_X);\n          }\n          return actions;\n      },\n\n      directionTest: function(input) {\n          var options = this.options;\n          var hasMoved = true;\n          var distance = input.distance;\n          var direction = input.direction;\n          var x = input.deltaX;\n          var y = input.deltaY;\n\n          // lock to axis?\n          if (!(direction & options.direction)) {\n              if (options.direction & DIRECTION_HORIZONTAL) {\n                  direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                  hasMoved = x != this.pX;\n                  distance = Math.abs(input.deltaX);\n              } else {\n                  direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                  hasMoved = y != this.pY;\n                  distance = Math.abs(input.deltaY);\n              }\n          }\n          input.direction = direction;\n          return hasMoved && distance > options.threshold && direction & options.direction;\n      },\n\n      attrTest: function(input) {\n          return AttrRecognizer.prototype.attrTest.call(this, input) &&\n              (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n      },\n\n      emit: function(input) {\n\n          this.pX = input.deltaX;\n          this.pY = input.deltaY;\n\n          var direction = directionStr(input.direction);\n\n          if (direction) {\n              input.additionalEvent = this.options.event + direction;\n          }\n          this._super.emit.call(this, input);\n      }\n  });\n\n  /**\n   * Pinch\n   * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n   * @constructor\n   * @extends AttrRecognizer\n   */\n  function PinchRecognizer() {\n      AttrRecognizer.apply(this, arguments);\n  }\n\n  inherit(PinchRecognizer, AttrRecognizer, {\n      /**\n       * @namespace\n       * @memberof PinchRecognizer\n       */\n      defaults: {\n          event: 'pinch',\n          threshold: 0,\n          pointers: 2\n      },\n\n      getTouchAction: function() {\n          return [TOUCH_ACTION_NONE];\n      },\n\n      attrTest: function(input) {\n          return this._super.attrTest.call(this, input) &&\n              (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n      },\n\n      emit: function(input) {\n          if (input.scale !== 1) {\n              var inOut = input.scale < 1 ? 'in' : 'out';\n              input.additionalEvent = this.options.event + inOut;\n          }\n          this._super.emit.call(this, input);\n      }\n  });\n\n  /**\n   * Press\n   * Recognized when the pointer is down for x ms without any movement.\n   * @constructor\n   * @extends Recognizer\n   */\n  function PressRecognizer() {\n      Recognizer.apply(this, arguments);\n\n      this._timer = null;\n      this._input = null;\n  }\n\n  inherit(PressRecognizer, Recognizer, {\n      /**\n       * @namespace\n       * @memberof PressRecognizer\n       */\n      defaults: {\n          event: 'press',\n          pointers: 1,\n          time: 251, // minimal time of the pointer to be pressed\n          threshold: 9 // a minimal movement is ok, but keep it low\n      },\n\n      getTouchAction: function() {\n          return [TOUCH_ACTION_AUTO];\n      },\n\n      process: function(input) {\n          var options = this.options;\n          var validPointers = input.pointers.length === options.pointers;\n          var validMovement = input.distance < options.threshold;\n          var validTime = input.deltaTime > options.time;\n\n          this._input = input;\n\n          // we only allow little movement\n          // and we've reached an end event, so a tap is possible\n          if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n              this.reset();\n          } else if (input.eventType & INPUT_START) {\n              this.reset();\n              this._timer = setTimeoutContext(function() {\n                  this.state = STATE_RECOGNIZED;\n                  this.tryEmit();\n              }, options.time, this);\n          } else if (input.eventType & INPUT_END) {\n              return STATE_RECOGNIZED;\n          }\n          return STATE_FAILED;\n      },\n\n      reset: function() {\n          clearTimeout(this._timer);\n      },\n\n      emit: function(input) {\n          if (this.state !== STATE_RECOGNIZED) {\n              return;\n          }\n\n          if (input && (input.eventType & INPUT_END)) {\n              this.manager.emit(this.options.event + 'up', input);\n          } else {\n              this._input.timeStamp = now();\n              this.manager.emit(this.options.event, this._input);\n          }\n      }\n  });\n\n  /**\n   * Rotate\n   * Recognized when two or more pointer are moving in a circular motion.\n   * @constructor\n   * @extends AttrRecognizer\n   */\n  function RotateRecognizer() {\n      AttrRecognizer.apply(this, arguments);\n  }\n\n  inherit(RotateRecognizer, AttrRecognizer, {\n      /**\n       * @namespace\n       * @memberof RotateRecognizer\n       */\n      defaults: {\n          event: 'rotate',\n          threshold: 0,\n          pointers: 2\n      },\n\n      getTouchAction: function() {\n          return [TOUCH_ACTION_NONE];\n      },\n\n      attrTest: function(input) {\n          return this._super.attrTest.call(this, input) &&\n              (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n      }\n  });\n\n  /**\n   * Swipe\n   * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n   * @constructor\n   * @extends AttrRecognizer\n   */\n  function SwipeRecognizer() {\n      AttrRecognizer.apply(this, arguments);\n  }\n\n  inherit(SwipeRecognizer, AttrRecognizer, {\n      /**\n       * @namespace\n       * @memberof SwipeRecognizer\n       */\n      defaults: {\n          event: 'swipe',\n          threshold: 10,\n          velocity: 0.3,\n          direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n          pointers: 1\n      },\n\n      getTouchAction: function() {\n          return PanRecognizer.prototype.getTouchAction.call(this);\n      },\n\n      attrTest: function(input) {\n          var direction = this.options.direction;\n          var velocity;\n\n          if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n              velocity = input.overallVelocity;\n          } else if (direction & DIRECTION_HORIZONTAL) {\n              velocity = input.overallVelocityX;\n          } else if (direction & DIRECTION_VERTICAL) {\n              velocity = input.overallVelocityY;\n          }\n\n          return this._super.attrTest.call(this, input) &&\n              direction & input.offsetDirection &&\n              input.distance > this.options.threshold &&\n              input.maxPointers == this.options.pointers &&\n              abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n      },\n\n      emit: function(input) {\n          var direction = directionStr(input.offsetDirection);\n          if (direction) {\n              this.manager.emit(this.options.event + direction, input);\n          }\n\n          this.manager.emit(this.options.event, input);\n      }\n  });\n\n  /**\n   * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n   * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n   * a single tap.\n   *\n   * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n   * multi-taps being recognized.\n   * @constructor\n   * @extends Recognizer\n   */\n  function TapRecognizer() {\n      Recognizer.apply(this, arguments);\n\n      // previous time and center,\n      // used for tap counting\n      this.pTime = false;\n      this.pCenter = false;\n\n      this._timer = null;\n      this._input = null;\n      this.count = 0;\n  }\n\n  inherit(TapRecognizer, Recognizer, {\n      /**\n       * @namespace\n       * @memberof PinchRecognizer\n       */\n      defaults: {\n          event: 'tap',\n          pointers: 1,\n          taps: 1,\n          interval: 300, // max time between the multi-tap taps\n          time: 250, // max time of the pointer to be down (like finger on the screen)\n          threshold: 9, // a minimal movement is ok, but keep it low\n          posThreshold: 10 // a multi-tap can be a bit off the initial position\n      },\n\n      getTouchAction: function() {\n          return [TOUCH_ACTION_MANIPULATION];\n      },\n\n      process: function(input) {\n          var options = this.options;\n\n          var validPointers = input.pointers.length === options.pointers;\n          var validMovement = input.distance < options.threshold;\n          var validTouchTime = input.deltaTime < options.time;\n\n          this.reset();\n\n          if ((input.eventType & INPUT_START) && (this.count === 0)) {\n              return this.failTimeout();\n          }\n\n          // we only allow little movement\n          // and we've reached an end event, so a tap is possible\n          if (validMovement && validTouchTime && validPointers) {\n              if (input.eventType != INPUT_END) {\n                  return this.failTimeout();\n              }\n\n              var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n              var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n              this.pTime = input.timeStamp;\n              this.pCenter = input.center;\n\n              if (!validMultiTap || !validInterval) {\n                  this.count = 1;\n              } else {\n                  this.count += 1;\n              }\n\n              this._input = input;\n\n              // if tap count matches we have recognized it,\n              // else it has began recognizing...\n              var tapCount = this.count % options.taps;\n              if (tapCount === 0) {\n                  // no failing requirements, immediately trigger the tap event\n                  // or wait as long as the multitap interval to trigger\n                  if (!this.hasRequireFailures()) {\n                      return STATE_RECOGNIZED;\n                  } else {\n                      this._timer = setTimeoutContext(function() {\n                          this.state = STATE_RECOGNIZED;\n                          this.tryEmit();\n                      }, options.interval, this);\n                      return STATE_BEGAN;\n                  }\n              }\n          }\n          return STATE_FAILED;\n      },\n\n      failTimeout: function() {\n          this._timer = setTimeoutContext(function() {\n              this.state = STATE_FAILED;\n          }, this.options.interval, this);\n          return STATE_FAILED;\n      },\n\n      reset: function() {\n          clearTimeout(this._timer);\n      },\n\n      emit: function() {\n          if (this.state == STATE_RECOGNIZED) {\n              this._input.tapCount = this.count;\n              this.manager.emit(this.options.event, this._input);\n          }\n      }\n  });\n\n  /**\n   * Simple way to create a manager with a default set of recognizers.\n   * @param {HTMLElement} element\n   * @param {Object} [options]\n   * @constructor\n   */\n  function Hammer(element, options) {\n      options = options || {};\n      options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n      return new Manager(element, options);\n  }\n\n  /**\n   * @const {string}\n   */\n  Hammer.VERSION = '2.0.7';\n\n  /**\n   * default settings\n   * @namespace\n   */\n  Hammer.defaults = {\n      /**\n       * set if DOM events are being triggered.\n       * But this is slower and unused by simple implementations, so disabled by default.\n       * @type {Boolean}\n       * @default false\n       */\n      domEvents: false,\n\n      /**\n       * The value for the touchAction property/fallback.\n       * When set to `compute` it will magically set the correct value based on the added recognizers.\n       * @type {String}\n       * @default compute\n       */\n      touchAction: TOUCH_ACTION_COMPUTE,\n\n      /**\n       * @type {Boolean}\n       * @default true\n       */\n      enable: true,\n\n      /**\n       * EXPERIMENTAL FEATURE -- can be removed/changed\n       * Change the parent input target element.\n       * If Null, then it is being set the to main element.\n       * @type {Null|EventTarget}\n       * @default null\n       */\n      inputTarget: null,\n\n      /**\n       * force an input class\n       * @type {Null|Function}\n       * @default null\n       */\n      inputClass: null,\n\n      /**\n       * Default recognizer setup when calling `Hammer()`\n       * When creating a new Manager these will be skipped.\n       * @type {Array}\n       */\n      preset: [\n          // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n          [RotateRecognizer, {enable: false}],\n          [PinchRecognizer, {enable: false}, ['rotate']],\n          [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n          [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n          [TapRecognizer],\n          [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n          [PressRecognizer]\n      ],\n\n      /**\n       * Some CSS properties can be used to improve the working of Hammer.\n       * Add them to this method and they will be set when creating a new Manager.\n       * @namespace\n       */\n      cssProps: {\n          /**\n           * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n           * @type {String}\n           * @default 'none'\n           */\n          userSelect: 'none',\n\n          /**\n           * Disable the Windows Phone grippers when pressing an element.\n           * @type {String}\n           * @default 'none'\n           */\n          touchSelect: 'none',\n\n          /**\n           * Disables the default callout shown when you touch and hold a touch target.\n           * On iOS, when you touch and hold a touch target such as a link, Safari displays\n           * a callout containing information about the link. This property allows you to disable that callout.\n           * @type {String}\n           * @default 'none'\n           */\n          touchCallout: 'none',\n\n          /**\n           * Specifies whether zooming is enabled. Used by IE10>\n           * @type {String}\n           * @default 'none'\n           */\n          contentZooming: 'none',\n\n          /**\n           * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n           * @type {String}\n           * @default 'none'\n           */\n          userDrag: 'none',\n\n          /**\n           * Overrides the highlight color shown when the user taps a link or a JavaScript\n           * clickable element in iOS. This property obeys the alpha value, if specified.\n           * @type {String}\n           * @default 'rgba(0,0,0,0)'\n           */\n          tapHighlightColor: 'rgba(0,0,0,0)'\n      }\n  };\n\n  var STOP = 1;\n  var FORCED_STOP = 2;\n\n  /**\n   * Manager\n   * @param {HTMLElement} element\n   * @param {Object} [options]\n   * @constructor\n   */\n  function Manager(element, options) {\n      this.options = assign({}, Hammer.defaults, options || {});\n\n      this.options.inputTarget = this.options.inputTarget || element;\n\n      this.handlers = {};\n      this.session = {};\n      this.recognizers = [];\n      this.oldCssProps = {};\n\n      this.element = element;\n      this.input = createInputInstance(this);\n      this.touchAction = new TouchAction(this, this.options.touchAction);\n\n      toggleCssProps(this, true);\n\n      each(this.options.recognizers, function(item) {\n          var recognizer = this.add(new (item[0])(item[1]));\n          item[2] && recognizer.recognizeWith(item[2]);\n          item[3] && recognizer.requireFailure(item[3]);\n      }, this);\n  }\n\n  Manager.prototype = {\n      /**\n       * set options\n       * @param {Object} options\n       * @returns {Manager}\n       */\n      set: function(options) {\n          assign(this.options, options);\n\n          // Options that need a little more setup\n          if (options.touchAction) {\n              this.touchAction.update();\n          }\n          if (options.inputTarget) {\n              // Clean up existing event listeners and reinitialize\n              this.input.destroy();\n              this.input.target = options.inputTarget;\n              this.input.init();\n          }\n          return this;\n      },\n\n      /**\n       * stop recognizing for this session.\n       * This session will be discarded, when a new [input]start event is fired.\n       * When forced, the recognizer cycle is stopped immediately.\n       * @param {Boolean} [force]\n       */\n      stop: function(force) {\n          this.session.stopped = force ? FORCED_STOP : STOP;\n      },\n\n      /**\n       * run the recognizers!\n       * called by the inputHandler function on every movement of the pointers (touches)\n       * it walks through all the recognizers and tries to detect the gesture that is being made\n       * @param {Object} inputData\n       */\n      recognize: function(inputData) {\n          var session = this.session;\n          if (session.stopped) {\n              return;\n          }\n\n          // run the touch-action polyfill\n          this.touchAction.preventDefaults(inputData);\n\n          var recognizer;\n          var recognizers = this.recognizers;\n\n          // this holds the recognizer that is being recognized.\n          // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n          // if no recognizer is detecting a thing, it is set to `null`\n          var curRecognizer = session.curRecognizer;\n\n          // reset when the last recognizer is recognized\n          // or when we're in a new session\n          if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n              curRecognizer = session.curRecognizer = null;\n          }\n\n          var i = 0;\n          while (i < recognizers.length) {\n              recognizer = recognizers[i];\n\n              // find out if we are allowed try to recognize the input for this one.\n              // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n              // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n              //      that is being recognized.\n              // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n              //      this can be setup with the `recognizeWith()` method on the recognizer.\n              if (session.stopped !== FORCED_STOP && ( // 1\n                      !curRecognizer || recognizer == curRecognizer || // 2\n                      recognizer.canRecognizeWith(curRecognizer))) { // 3\n                  recognizer.recognize(inputData);\n              } else {\n                  recognizer.reset();\n              }\n\n              // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n              // current active recognizer. but only if we don't already have an active recognizer\n              if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                  curRecognizer = session.curRecognizer = recognizer;\n              }\n              i++;\n          }\n      },\n\n      /**\n       * get a recognizer by its event name.\n       * @param {Recognizer|String} recognizer\n       * @returns {Recognizer|Null}\n       */\n      get: function(recognizer) {\n          if (recognizer instanceof Recognizer) {\n              return recognizer;\n          }\n\n          var recognizers = this.recognizers;\n          for (var i = 0; i < recognizers.length; i++) {\n              if (recognizers[i].options.event == recognizer) {\n                  return recognizers[i];\n              }\n          }\n          return null;\n      },\n\n      /**\n       * add a recognizer to the manager\n       * existing recognizers with the same event name will be removed\n       * @param {Recognizer} recognizer\n       * @returns {Recognizer|Manager}\n       */\n      add: function(recognizer) {\n          if (invokeArrayArg(recognizer, 'add', this)) {\n              return this;\n          }\n\n          // remove existing\n          var existing = this.get(recognizer.options.event);\n          if (existing) {\n              this.remove(existing);\n          }\n\n          this.recognizers.push(recognizer);\n          recognizer.manager = this;\n\n          this.touchAction.update();\n          return recognizer;\n      },\n\n      /**\n       * remove a recognizer by name or instance\n       * @param {Recognizer|String} recognizer\n       * @returns {Manager}\n       */\n      remove: function(recognizer) {\n          if (invokeArrayArg(recognizer, 'remove', this)) {\n              return this;\n          }\n\n          recognizer = this.get(recognizer);\n\n          // let's make sure this recognizer exists\n          if (recognizer) {\n              var recognizers = this.recognizers;\n              var index = inArray(recognizers, recognizer);\n\n              if (index !== -1) {\n                  recognizers.splice(index, 1);\n                  this.touchAction.update();\n              }\n          }\n\n          return this;\n      },\n\n      /**\n       * bind event\n       * @param {String} events\n       * @param {Function} handler\n       * @returns {EventEmitter} this\n       */\n      on: function(events, handler) {\n          if (events === undefined) {\n              return;\n          }\n          if (handler === undefined) {\n              return;\n          }\n\n          var handlers = this.handlers;\n          each(splitStr(events), function(event) {\n              handlers[event] = handlers[event] || [];\n              handlers[event].push(handler);\n          });\n          return this;\n      },\n\n      /**\n       * unbind event, leave emit blank to remove all handlers\n       * @param {String} events\n       * @param {Function} [handler]\n       * @returns {EventEmitter} this\n       */\n      off: function(events, handler) {\n          if (events === undefined) {\n              return;\n          }\n\n          var handlers = this.handlers;\n          each(splitStr(events), function(event) {\n              if (!handler) {\n                  delete handlers[event];\n              } else {\n                  handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n              }\n          });\n          return this;\n      },\n\n      /**\n       * emit event to the listeners\n       * @param {String} event\n       * @param {Object} data\n       */\n      emit: function(event, data) {\n          // we also want to trigger dom events\n          if (this.options.domEvents) {\n              triggerDomEvent(event, data);\n          }\n\n          // no handlers, so skip it all\n          var handlers = this.handlers[event] && this.handlers[event].slice();\n          if (!handlers || !handlers.length) {\n              return;\n          }\n\n          data.type = event;\n          data.preventDefault = function() {\n              data.srcEvent.preventDefault();\n          };\n\n          var i = 0;\n          while (i < handlers.length) {\n              handlers[i](data);\n              i++;\n          }\n      },\n\n      /**\n       * destroy the manager and unbinds all events\n       * it doesn't unbind dom events, that is the user own responsibility\n       */\n      destroy: function() {\n          this.element && toggleCssProps(this, false);\n\n          this.handlers = {};\n          this.session = {};\n          this.input.destroy();\n          this.element = null;\n      }\n  };\n\n  /**\n   * add/remove the css properties as defined in manager.options.cssProps\n   * @param {Manager} manager\n   * @param {Boolean} add\n   */\n  function toggleCssProps(manager, add) {\n      var element = manager.element;\n      if (!element.style) {\n          return;\n      }\n      var prop;\n      each(manager.options.cssProps, function(value, name) {\n          prop = prefixed(element.style, name);\n          if (add) {\n              manager.oldCssProps[prop] = element.style[prop];\n              element.style[prop] = value;\n          } else {\n              element.style[prop] = manager.oldCssProps[prop] || '';\n          }\n      });\n      if (!add) {\n          manager.oldCssProps = {};\n      }\n  }\n\n  /**\n   * trigger dom event\n   * @param {String} event\n   * @param {Object} data\n   */\n  function triggerDomEvent(event, data) {\n      var gestureEvent = document.createEvent('Event');\n      gestureEvent.initEvent(event, true, true);\n      gestureEvent.gesture = data;\n      data.target.dispatchEvent(gestureEvent);\n  }\n\n  assign(Hammer, {\n      INPUT_START: INPUT_START,\n      INPUT_MOVE: INPUT_MOVE,\n      INPUT_END: INPUT_END,\n      INPUT_CANCEL: INPUT_CANCEL,\n\n      STATE_POSSIBLE: STATE_POSSIBLE,\n      STATE_BEGAN: STATE_BEGAN,\n      STATE_CHANGED: STATE_CHANGED,\n      STATE_ENDED: STATE_ENDED,\n      STATE_RECOGNIZED: STATE_RECOGNIZED,\n      STATE_CANCELLED: STATE_CANCELLED,\n      STATE_FAILED: STATE_FAILED,\n\n      DIRECTION_NONE: DIRECTION_NONE,\n      DIRECTION_LEFT: DIRECTION_LEFT,\n      DIRECTION_RIGHT: DIRECTION_RIGHT,\n      DIRECTION_UP: DIRECTION_UP,\n      DIRECTION_DOWN: DIRECTION_DOWN,\n      DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n      DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n      DIRECTION_ALL: DIRECTION_ALL,\n\n      Manager: Manager,\n      Input: Input,\n      TouchAction: TouchAction,\n\n      TouchInput: TouchInput,\n      MouseInput: MouseInput,\n      PointerEventInput: PointerEventInput,\n      TouchMouseInput: TouchMouseInput,\n      SingleTouchInput: SingleTouchInput,\n\n      Recognizer: Recognizer,\n      AttrRecognizer: AttrRecognizer,\n      Tap: TapRecognizer,\n      Pan: PanRecognizer,\n      Swipe: SwipeRecognizer,\n      Pinch: PinchRecognizer,\n      Rotate: RotateRecognizer,\n      Press: PressRecognizer,\n\n      on: addEventListeners,\n      off: removeEventListeners,\n      each: each,\n      merge: merge,\n      extend: extend,\n      assign: assign,\n      inherit: inherit,\n      bindFn: bindFn,\n      prefixed: prefixed\n  });\n\n  // this prevents errors when Hammer is loaded in the presence of an AMD\n  //  style loader but by script tag, not by the loader.\n  var freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\n  freeGlobal.Hammer = Hammer;\n\n  if (true) {\n      !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n          return Hammer;\n      }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof module != 'undefined' && module.exports) {\n      module.exports = Hammer;\n  } else {\n      window[exportName] = Hammer;\n  }\n\n  })(window, document, 'Hammer');\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n  var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\r\n  /**\r\n   * Created by Alex on 11/6/2014.\r\n   */\r\n\r\n  // https://github.com/umdjs/umd/blob/master/returnExports.js#L40-L60\r\n  // if the module has no dependencies, the above pattern can be simplified to\r\n  (function (root, factory) {\r\n    if (true) {\r\n      // AMD. Register as an anonymous module.\r\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    } else if (typeof exports === 'object') {\r\n      // Node. Does not work with strict CommonJS, but\r\n      // only CommonJS-like environments that support module.exports,\r\n      // like Node.\r\n      module.exports = factory();\r\n    } else {\r\n      // Browser globals (root is window)\r\n      root.keycharm = factory();\r\n    }\r\n  }(this, function () {\r\n\r\n    function keycharm(options) {\r\n      var preventDefault = options && options.preventDefault || false;\r\n\r\n      var container = options && options.container || window;\r\n\r\n      var _exportFunctions = {};\r\n      var _bound = {keydown:{}, keyup:{}};\r\n      var _keys = {};\r\n      var i;\r\n\r\n      // a - z\r\n      for (i = 97; i <= 122; i++) {_keys[String.fromCharCode(i)] = {code:65 + (i - 97), shift: false};}\r\n      // A - Z\r\n      for (i = 65; i <= 90; i++) {_keys[String.fromCharCode(i)] = {code:i, shift: true};}\r\n      // 0 - 9\r\n      for (i = 0;  i <= 9;   i++) {_keys['' + i] = {code:48 + i, shift: false};}\r\n      // F1 - F12\r\n      for (i = 1;  i <= 12;   i++) {_keys['F' + i] = {code:111 + i, shift: false};}\r\n      // num0 - num9\r\n      for (i = 0;  i <= 9;   i++) {_keys['num' + i] = {code:96 + i, shift: false};}\r\n\r\n      // numpad misc\r\n      _keys['num*'] = {code:106, shift: false};\r\n      _keys['num+'] = {code:107, shift: false};\r\n      _keys['num-'] = {code:109, shift: false};\r\n      _keys['num/'] = {code:111, shift: false};\r\n      _keys['num.'] = {code:110, shift: false};\r\n      // arrows\r\n      _keys['left']  = {code:37, shift: false};\r\n      _keys['up']    = {code:38, shift: false};\r\n      _keys['right'] = {code:39, shift: false};\r\n      _keys['down']  = {code:40, shift: false};\r\n      // extra keys\r\n      _keys['space'] = {code:32, shift: false};\r\n      _keys['enter'] = {code:13, shift: false};\r\n      _keys['shift'] = {code:16, shift: undefined};\r\n      _keys['esc']   = {code:27, shift: false};\r\n      _keys['backspace'] = {code:8, shift: false};\r\n      _keys['tab']       = {code:9, shift: false};\r\n      _keys['ctrl']      = {code:17, shift: false};\r\n      _keys['alt']       = {code:18, shift: false};\r\n      _keys['delete']    = {code:46, shift: false};\r\n      _keys['pageup']    = {code:33, shift: false};\r\n      _keys['pagedown']  = {code:34, shift: false};\r\n      // symbols\r\n      _keys['=']     = {code:187, shift: false};\r\n      _keys['-']     = {code:189, shift: false};\r\n      _keys[']']     = {code:221, shift: false};\r\n      _keys['[']     = {code:219, shift: false};\r\n\r\n\r\n\r\n      var down = function(event) {handleEvent(event,'keydown');};\r\n      var up = function(event) {handleEvent(event,'keyup');};\r\n\r\n      // handle the actualy bound key with the event\r\n      var handleEvent = function(event,type) {\r\n        if (_bound[type][event.keyCode] !== undefined) {\r\n          var bound = _bound[type][event.keyCode];\r\n          for (var i = 0; i < bound.length; i++) {\r\n            if (bound[i].shift === undefined) {\r\n              bound[i].fn(event);\r\n            }\r\n            else if (bound[i].shift == true && event.shiftKey == true) {\r\n              bound[i].fn(event);\r\n            }\r\n            else if (bound[i].shift == false && event.shiftKey == false) {\r\n              bound[i].fn(event);\r\n            }\r\n          }\r\n\r\n          if (preventDefault == true) {\r\n            event.preventDefault();\r\n          }\r\n        }\r\n      };\r\n\r\n      // bind a key to a callback\r\n      _exportFunctions.bind = function(key, callback, type) {\r\n        if (type === undefined) {\r\n          type = 'keydown';\r\n        }\r\n        if (_keys[key] === undefined) {\r\n          throw new Error(\"unsupported key: \" + key);\r\n        }\r\n        if (_bound[type][_keys[key].code] === undefined) {\r\n          _bound[type][_keys[key].code] = [];\r\n        }\r\n        _bound[type][_keys[key].code].push({fn:callback, shift:_keys[key].shift});\r\n      };\r\n\r\n\r\n      // bind all keys to a call back (demo purposes)\r\n      _exportFunctions.bindAll = function(callback, type) {\r\n        if (type === undefined) {\r\n          type = 'keydown';\r\n        }\r\n        for (var key in _keys) {\r\n          if (_keys.hasOwnProperty(key)) {\r\n            _exportFunctions.bind(key,callback,type);\r\n          }\r\n        }\r\n      };\r\n\r\n      // get the key label from an event\r\n      _exportFunctions.getKey = function(event) {\r\n        for (var key in _keys) {\r\n          if (_keys.hasOwnProperty(key)) {\r\n            if (event.shiftKey == true && _keys[key].shift == true && event.keyCode == _keys[key].code) {\r\n              return key;\r\n            }\r\n            else if (event.shiftKey == false && _keys[key].shift == false && event.keyCode == _keys[key].code) {\r\n              return key;\r\n            }\r\n            else if (event.keyCode == _keys[key].code && key == 'shift') {\r\n              return key;\r\n            }\r\n          }\r\n        }\r\n        return \"unknown key, currently not supported\";\r\n      };\r\n\r\n      // unbind either a specific callback from a key or all of them (by leaving callback undefined)\r\n      _exportFunctions.unbind = function(key, callback, type) {\r\n        if (type === undefined) {\r\n          type = 'keydown';\r\n        }\r\n        if (_keys[key] === undefined) {\r\n          throw new Error(\"unsupported key: \" + key);\r\n        }\r\n        if (callback !== undefined) {\r\n          var newBindings = [];\r\n          var bound = _bound[type][_keys[key].code];\r\n          if (bound !== undefined) {\r\n            for (var i = 0; i < bound.length; i++) {\r\n              if (!(bound[i].fn == callback && bound[i].shift == _keys[key].shift)) {\r\n                newBindings.push(_bound[type][_keys[key].code][i]);\r\n              }\r\n            }\r\n          }\r\n          _bound[type][_keys[key].code] = newBindings;\r\n        }\r\n        else {\r\n          _bound[type][_keys[key].code] = [];\r\n        }\r\n      };\r\n\r\n      // reset all bound variables.\r\n      _exportFunctions.reset = function() {\r\n        _bound = {keydown:{}, keyup:{}};\r\n      };\r\n\r\n      // unbind all listeners and reset all variables.\r\n      _exportFunctions.destroy = function() {\r\n        _bound = {keydown:{}, keyup:{}};\r\n        container.removeEventListener('keydown', down, true);\r\n        container.removeEventListener('keyup', up, true);\r\n      };\r\n\r\n      // create listeners.\r\n      container.addEventListener('keydown',down,true);\r\n      container.addEventListener('keyup',up,true);\r\n\r\n      // return the public functions.\r\n      return _exportFunctions;\r\n    }\r\n\r\n    return keycharm;\r\n  }));\r\n\r\n\r\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  // utils\n  exports.util = __webpack_require__(1);\n  exports.DOMutil = __webpack_require__(8);\n\n  // data\n  exports.DataSet = __webpack_require__(9);\n  exports.DataView = __webpack_require__(11);\n  exports.Queue = __webpack_require__(10);\n\n  // Timeline\n  exports.Timeline = __webpack_require__(27);\n  exports.Graph2d = __webpack_require__(52);\n  exports.timeline = {\n    Core: __webpack_require__(35),\n    DateUtil: __webpack_require__(34),\n    Range: __webpack_require__(32),\n    stack: __webpack_require__(39),\n    TimeStep: __webpack_require__(37),\n\n    components: {\n      items: {\n        Item: __webpack_require__(41),\n        BackgroundItem: __webpack_require__(45),\n        BoxItem: __webpack_require__(43),\n        PointItem: __webpack_require__(44),\n        RangeItem: __webpack_require__(40)\n      },\n\n      BackgroundGroup: __webpack_require__(42),\n      Component: __webpack_require__(33),\n      CurrentTime: __webpack_require__(50),\n      CustomTime: __webpack_require__(48),\n      DataAxis: __webpack_require__(54),\n      DataScale: __webpack_require__(55),\n      GraphGroup: __webpack_require__(56),\n      Group: __webpack_require__(38),\n      ItemSet: __webpack_require__(36),\n      Legend: __webpack_require__(60),\n      LineGraph: __webpack_require__(53),\n      TimeAxis: __webpack_require__(46)\n    }\n  };\n\n  // bundled external libraries\n  exports.moment = __webpack_require__(2);\n  exports.Hammer = __webpack_require__(22);\n  exports.keycharm = __webpack_require__(25);\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var _Configurator = __webpack_require__(28);\n\n  var _Configurator2 = _interopRequireDefault(_Configurator);\n\n  var _Validator = __webpack_require__(31);\n\n  var _Validator2 = _interopRequireDefault(_Validator);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var Emitter = __webpack_require__(13);\n  var Hammer = __webpack_require__(22);\n  var moment = __webpack_require__(2);\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(9);\n  var DataView = __webpack_require__(11);\n  var Range = __webpack_require__(32);\n  var Core = __webpack_require__(35);\n  var TimeAxis = __webpack_require__(46);\n  var CurrentTime = __webpack_require__(50);\n  var CustomTime = __webpack_require__(48);\n  var ItemSet = __webpack_require__(36);\n\n  var printStyle = __webpack_require__(31).printStyle;\n  var allOptions = __webpack_require__(51).allOptions;\n  var configureOptions = __webpack_require__(51).configureOptions;\n\n  /**\n   * Create a timeline visualization\n   * @param {HTMLElement} container\n   * @param {vis.DataSet | vis.DataView | Array} [items]\n   * @param {vis.DataSet | vis.DataView | Array} [groups]\n   * @param {Object} [options]  See Timeline.setOptions for the available options.\n   * @constructor\n   * @extends Core\n   */\n  function Timeline(container, items, groups, options) {\n\n    if (!(this instanceof Timeline)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    // if the third element is options, the forth is groups (optionally);\n    if (!(Array.isArray(groups) || groups instanceof DataSet || groups instanceof DataView) && groups instanceof Object) {\n      var forthArgument = options;\n      options = groups;\n      groups = forthArgument;\n    }\n\n    var me = this;\n    this.defaultOptions = {\n      start: null,\n      end: null,\n      autoResize: true,\n      orientation: {\n        axis: 'bottom', // axis orientation: 'bottom', 'top', or 'both'\n        item: 'bottom' // not relevant\n      },\n      moment: moment,\n      width: null,\n      height: null,\n      maxHeight: null,\n      minHeight: null\n    };\n    this.options = util.deepExtend({}, this.defaultOptions);\n\n    // Create the DOM, props, and emitter\n    this._create(container);\n\n    if (!options || options && typeof options.rtl == \"undefined\") {\n      var directionFromDom,\n          domNode = this.dom.root;\n      while (!directionFromDom && domNode) {\n        directionFromDom = window.getComputedStyle(domNode, null).direction;\n        domNode = domNode.parentElement;\n      }\n      this.options.rtl = directionFromDom && directionFromDom.toLowerCase() == \"rtl\";\n    } else {\n      this.options.rtl = options.rtl;\n    }\n\n    // all components listed here will be repainted automatically\n    this.components = [];\n\n    this.body = {\n      dom: this.dom,\n      domProps: this.props,\n      emitter: {\n        on: this.on.bind(this),\n        off: this.off.bind(this),\n        emit: this.emit.bind(this)\n      },\n      hiddenDates: [],\n      util: {\n        getScale: function getScale() {\n          return me.timeAxis.step.scale;\n        },\n        getStep: function getStep() {\n          return me.timeAxis.step.step;\n        },\n\n        toScreen: me._toScreen.bind(me),\n        toGlobalScreen: me._toGlobalScreen.bind(me), // this refers to the root.width\n        toTime: me._toTime.bind(me),\n        toGlobalTime: me._toGlobalTime.bind(me)\n      }\n    };\n\n    // range\n    this.range = new Range(this.body, this.options);\n    this.components.push(this.range);\n    this.body.range = this.range;\n\n    // time axis\n    this.timeAxis = new TimeAxis(this.body, this.options);\n    this.timeAxis2 = null; // used in case of orientation option 'both'\n    this.components.push(this.timeAxis);\n\n    // current time bar\n    this.currentTime = new CurrentTime(this.body, this.options);\n    this.components.push(this.currentTime);\n\n    // item set\n    this.itemSet = new ItemSet(this.body, this.options);\n    this.components.push(this.itemSet);\n\n    this.itemsData = null; // DataSet\n    this.groupsData = null; // DataSet\n\n    this.on('tap', function (event) {\n      me.emit('click', me.getEventProperties(event));\n    });\n    this.on('doubletap', function (event) {\n      me.emit('doubleClick', me.getEventProperties(event));\n    });\n    this.dom.root.oncontextmenu = function (event) {\n      me.emit('contextmenu', me.getEventProperties(event));\n    };\n\n    //Single time autoscale/fit\n    this.fitDone = false;\n    this.on('changed', function () {\n      if (this.itemsData == null) return;\n      if (!me.fitDone) {\n        me.fitDone = true;\n        if (me.options.start != undefined || me.options.end != undefined) {\n          if (me.options.start == undefined || me.options.end == undefined) {\n            var range = me.getItemRange();\n          }\n\n          var start = me.options.start != undefined ? me.options.start : range.min;\n          var end = me.options.end != undefined ? me.options.end : range.max;\n\n          me.setWindow(start, end, { animation: false });\n        } else {\n          me.fit({ animation: false });\n        }\n      }\n    });\n\n    // apply options\n    if (options) {\n      this.setOptions(options);\n    }\n\n    // IMPORTANT: THIS HAPPENS BEFORE SET ITEMS!\n    if (groups) {\n      this.setGroups(groups);\n    }\n\n    // create itemset\n    if (items) {\n      this.setItems(items);\n    }\n\n    // draw for the first time\n    this._redraw();\n  }\n\n  // Extend the functionality from Core\n  Timeline.prototype = new Core();\n\n  /**\n   * Load a configurator\n   * @return {Object}\n   * @private\n   */\n  Timeline.prototype._createConfigurator = function () {\n    return new _Configurator2.default(this, this.dom.container, configureOptions);\n  };\n\n  /**\n   * Force a redraw. The size of all items will be recalculated.\n   * Can be useful to manually redraw when option autoResize=false and the window\n   * has been resized, or when the items CSS has been changed.\n   *\n   * Note: this function will be overridden on construction with a trottled version\n   */\n  Timeline.prototype.redraw = function () {\n    this.itemSet && this.itemSet.markDirty({ refreshItems: true });\n    this._redraw();\n  };\n\n  Timeline.prototype.setOptions = function (options) {\n    // validate options\n    var errorFound = _Validator2.default.validate(options, allOptions);\n\n    if (errorFound === true) {\n      console.log('%cErrors have been found in the supplied options object.', printStyle);\n    }\n    Core.prototype.setOptions.call(this, options);\n\n    if ('type' in options) {\n      if (options.type !== this.options.type) {\n        this.options.type = options.type;\n\n        // force recreation of all items\n        var itemsData = this.itemsData;\n        if (itemsData) {\n          var selection = this.getSelection();\n          this.setItems(null); // remove all\n          this.setItems(itemsData); // add all\n          this.setSelection(selection); // restore selection\n        }\n      }\n    }\n  };\n\n  /**\n   * Set items\n   * @param {vis.DataSet | Array | null} items\n   */\n  Timeline.prototype.setItems = function (items) {\n    // convert to type DataSet when needed\n    var newDataSet;\n    if (!items) {\n      newDataSet = null;\n    } else if (items instanceof DataSet || items instanceof DataView) {\n      newDataSet = items;\n    } else {\n      // turn an array into a dataset\n      newDataSet = new DataSet(items, {\n        type: {\n          start: 'Date',\n          end: 'Date'\n        }\n      });\n    }\n\n    // set items\n    this.itemsData = newDataSet;\n    this.itemSet && this.itemSet.setItems(newDataSet);\n  };\n\n  /**\n   * Set groups\n   * @param {vis.DataSet | Array} groups\n   */\n  Timeline.prototype.setGroups = function (groups) {\n    // convert to type DataSet when needed\n    var newDataSet;\n    if (!groups) {\n      newDataSet = null;\n    } else if (groups instanceof DataSet || groups instanceof DataView) {\n      newDataSet = groups;\n    } else {\n      // turn an array into a dataset\n      newDataSet = new DataSet(groups);\n    }\n\n    this.groupsData = newDataSet;\n    this.itemSet.setGroups(newDataSet);\n  };\n\n  /**\n   * Set both items and groups in one go\n   * @param {{items: Array | vis.DataSet, groups: Array | vis.DataSet}} data\n   */\n  Timeline.prototype.setData = function (data) {\n    if (data && data.groups) {\n      this.setGroups(data.groups);\n    }\n\n    if (data && data.items) {\n      this.setItems(data.items);\n    }\n  };\n\n  /**\n   * Set selected items by their id. Replaces the current selection\n   * Unknown id's are silently ignored.\n   * @param {string[] | string} [ids]  An array with zero or more id's of the items to be\n   *                                selected. If ids is an empty array, all items will be\n   *                                unselected.\n   * @param {Object} [options]      Available options:\n   *                                `focus: boolean`\n   *                                    If true, focus will be set to the selected item(s)\n   *                                `animation: boolean | {duration: number, easingFunction: string}`\n   *                                    If true (default), the range is animated\n   *                                    smoothly to the new window. An object can be\n   *                                    provided to specify duration and easing function.\n   *                                    Default duration is 500 ms, and default easing\n   *                                    function is 'easeInOutQuad'.\n   *                                    Only applicable when option focus is true.\n   */\n  Timeline.prototype.setSelection = function (ids, options) {\n    this.itemSet && this.itemSet.setSelection(ids);\n\n    if (options && options.focus) {\n      this.focus(ids, options);\n    }\n  };\n\n  /**\n   * Get the selected items by their id\n   * @return {Array} ids  The ids of the selected items\n   */\n  Timeline.prototype.getSelection = function () {\n    return this.itemSet && this.itemSet.getSelection() || [];\n  };\n\n  /**\n   * Adjust the visible window such that the selected item (or multiple items)\n   * are centered on screen.\n   * @param {String | String[]} id     An item id or array with item ids\n   * @param {Object} [options]      Available options:\n   *                                `animation: boolean | {duration: number, easingFunction: string}`\n   *                                    If true (default), the range is animated\n   *                                    smoothly to the new window. An object can be\n   *                                    provided to specify duration and easing function.\n   *                                    Default duration is 500 ms, and default easing\n   *                                    function is 'easeInOutQuad'.\n   */\n  Timeline.prototype.focus = function (id, options) {\n    if (!this.itemsData || id == undefined) return;\n\n    var ids = Array.isArray(id) ? id : [id];\n\n    // get the specified item(s)\n    var itemsData = this.itemsData.getDataSet().get(ids, {\n      type: {\n        start: 'Date',\n        end: 'Date'\n      }\n    });\n\n    // calculate minimum start and maximum end of specified items\n    var start = null;\n    var end = null;\n    itemsData.forEach(function (itemData) {\n      var s = itemData.start.valueOf();\n      var e = 'end' in itemData ? itemData.end.valueOf() : itemData.start.valueOf();\n\n      if (start === null || s < start) {\n        start = s;\n      }\n\n      if (end === null || e > end) {\n        end = e;\n      }\n    });\n\n    if (start !== null && end !== null) {\n      // calculate the new middle and interval for the window\n      var middle = (start + end) / 2;\n      var interval = Math.max(this.range.end - this.range.start, (end - start) * 1.1);\n\n      var animation = options && options.animation !== undefined ? options.animation : true;\n      this.range.setRange(middle - interval / 2, middle + interval / 2, animation);\n    }\n  };\n\n  /**\n   * Set Timeline window such that it fits all items\n   * @param {Object} [options]  Available options:\n   *                                `animation: boolean | {duration: number, easingFunction: string}`\n   *                                    If true (default), the range is animated\n   *                                    smoothly to the new window. An object can be\n   *                                    provided to specify duration and easing function.\n   *                                    Default duration is 500 ms, and default easing\n   *                                    function is 'easeInOutQuad'.\n   */\n  Timeline.prototype.fit = function (options) {\n    var animation = options && options.animation !== undefined ? options.animation : true;\n    var range;\n\n    var dataset = this.itemsData && this.itemsData.getDataSet();\n    if (dataset.length === 1 && dataset.get()[0].end === undefined) {\n      // a single item -> don't fit, just show a range around the item from -4 to +3 days\n      range = this.getDataRange();\n      this.moveTo(range.min.valueOf(), { animation: animation });\n    } else {\n      // exactly fit the items (plus a small margin)\n      range = this.getItemRange();\n      this.range.setRange(range.min, range.max, animation);\n    }\n  };\n\n  /**\n   * Determine the range of the items, taking into account their actual width\n   * and a margin of 10 pixels on both sides.\n   * @return {{min: Date | null, max: Date | null}}\n   */\n  Timeline.prototype.getItemRange = function () {\n    var _this = this;\n\n    // get a rough approximation for the range based on the items start and end dates\n    var range = this.getDataRange();\n    var min = range.min !== null ? range.min.valueOf() : null;\n    var max = range.max !== null ? range.max.valueOf() : null;\n    var minItem = null;\n    var maxItem = null;\n\n    if (min != null && max != null) {\n      var interval;\n      var factor;\n      var lhs;\n      var rhs;\n      var delta;\n\n      (function () {\n        var getStart = function getStart(item) {\n          return util.convert(item.data.start, 'Date').valueOf();\n        };\n\n        var getEnd = function getEnd(item) {\n          var end = item.data.end != undefined ? item.data.end : item.data.start;\n          return util.convert(end, 'Date').valueOf();\n        };\n\n        // calculate the date of the left side and right side of the items given\n\n\n        interval = max - min; // ms\n\n        if (interval <= 0) {\n          interval = 10;\n        }\n        factor = interval / _this.props.center.width;\n        util.forEach(_this.itemSet.items, function (item) {\n          item.show();\n          item.repositionX();\n\n          var start = getStart(item);\n          var end = getEnd(item);\n\n          if (this.options.rtl) {\n            var startSide = start - (item.getWidthRight() + 10) * factor;\n            var endSide = end + (item.getWidthLeft() + 10) * factor;\n          } else {\n            var startSide = start - (item.getWidthLeft() + 10) * factor;\n            var endSide = end + (item.getWidthRight() + 10) * factor;\n          }\n\n          if (startSide < min) {\n            min = startSide;\n            minItem = item;\n          }\n          if (endSide > max) {\n            max = endSide;\n            maxItem = item;\n          }\n        }.bind(_this));\n\n        if (minItem && maxItem) {\n          lhs = minItem.getWidthLeft() + 10;\n          rhs = maxItem.getWidthRight() + 10;\n          delta = _this.props.center.width - lhs - rhs; // px\n\n          if (delta > 0) {\n            if (_this.options.rtl) {\n              min = getStart(minItem) - rhs * interval / delta; // ms\n              max = getEnd(maxItem) + lhs * interval / delta; // ms\n            } else {\n              min = getStart(minItem) - lhs * interval / delta; // ms\n              max = getEnd(maxItem) + rhs * interval / delta; // ms\n            }\n          }\n        }\n      })();\n    }\n\n    return {\n      min: min != null ? new Date(min) : null,\n      max: max != null ? new Date(max) : null\n    };\n  };\n\n  /**\n   * Calculate the data range of the items start and end dates\n   * @returns {{min: Date | null, max: Date | null}}\n   */\n  Timeline.prototype.getDataRange = function () {\n    var min = null;\n    var max = null;\n\n    var dataset = this.itemsData && this.itemsData.getDataSet();\n    if (dataset) {\n      dataset.forEach(function (item) {\n        var start = util.convert(item.start, 'Date').valueOf();\n        var end = util.convert(item.end != undefined ? item.end : item.start, 'Date').valueOf();\n        if (min === null || start < min) {\n          min = start;\n        }\n        if (max === null || end > max) {\n          max = end;\n        }\n      });\n    }\n\n    return {\n      min: min != null ? new Date(min) : null,\n      max: max != null ? new Date(max) : null\n    };\n  };\n\n  /**\n   * Generate Timeline related information from an event\n   * @param {Event} event\n   * @return {Object} An object with related information, like on which area\n   *                  The event happened, whether clicked on an item, etc.\n   */\n  Timeline.prototype.getEventProperties = function (event) {\n    var clientX = event.center ? event.center.x : event.clientX;\n    var clientY = event.center ? event.center.y : event.clientY;\n    if (this.options.rtl) {\n      var x = util.getAbsoluteRight(this.dom.centerContainer) - clientX;\n    } else {\n      var x = clientX - util.getAbsoluteLeft(this.dom.centerContainer);\n    }\n    var y = clientY - util.getAbsoluteTop(this.dom.centerContainer);\n\n    var item = this.itemSet.itemFromTarget(event);\n    var group = this.itemSet.groupFromTarget(event);\n    var customTime = CustomTime.customTimeFromTarget(event);\n\n    var snap = this.itemSet.options.snap || null;\n    var scale = this.body.util.getScale();\n    var step = this.body.util.getStep();\n    var time = this._toTime(x);\n    var snappedTime = snap ? snap(time, scale, step) : time;\n\n    var element = util.getTarget(event);\n    var what = null;\n    if (item != null) {\n      what = 'item';\n    } else if (customTime != null) {\n      what = 'custom-time';\n    } else if (util.hasParent(element, this.timeAxis.dom.foreground)) {\n      what = 'axis';\n    } else if (this.timeAxis2 && util.hasParent(element, this.timeAxis2.dom.foreground)) {\n      what = 'axis';\n    } else if (util.hasParent(element, this.itemSet.dom.labelSet)) {\n      what = 'group-label';\n    } else if (util.hasParent(element, this.currentTime.bar)) {\n      what = 'current-time';\n    } else if (util.hasParent(element, this.dom.center)) {\n      what = 'background';\n    }\n\n    return {\n      event: event,\n      item: item ? item.id : null,\n      group: group ? group.groupId : null,\n      what: what,\n      pageX: event.srcEvent ? event.srcEvent.pageX : event.pageX,\n      pageY: event.srcEvent ? event.srcEvent.pageY : event.pageY,\n      x: x,\n      y: y,\n      time: time,\n      snappedTime: snappedTime\n    };\n  };\n\n  module.exports = Timeline;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _ColorPicker = __webpack_require__(29);\n\n  var _ColorPicker2 = _interopRequireDefault(_ColorPicker);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n\n  /**\n   * The way this works is for all properties of this.possible options, you can supply the property name in any form to list the options.\n   * Boolean options are recognised as Boolean\n   * Number options should be written as array: [default value, min value, max value, stepsize]\n   * Colors should be written as array: ['color', '#ffffff']\n   * Strings with should be written as array: [option1, option2, option3, ..]\n   *\n   * The options are matched with their counterparts in each of the modules and the values used in the configuration are\n   *\n   * @param parentModule        | the location where parentModule.setOptions() can be called\n   * @param defaultContainer    | the default container of the module\n   * @param configureOptions    | the fully configured and predefined options set found in allOptions.js\n   * @param pixelRatio          | canvas pixel ratio\n   */\n  var Configurator = function () {\n    function Configurator(parentModule, defaultContainer, configureOptions) {\n      var pixelRatio = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n      _classCallCheck(this, Configurator);\n\n      this.parent = parentModule;\n      this.changedOptions = [];\n      this.container = defaultContainer;\n      this.allowCreation = false;\n\n      this.options = {};\n      this.initialized = false;\n      this.popupCounter = 0;\n      this.defaultOptions = {\n        enabled: false,\n        filter: true,\n        container: undefined,\n        showButton: true\n      };\n      util.extend(this.options, this.defaultOptions);\n\n      this.configureOptions = configureOptions;\n      this.moduleOptions = {};\n      this.domElements = [];\n      this.popupDiv = {};\n      this.popupLimit = 5;\n      this.popupHistory = {};\n      this.colorPicker = new _ColorPicker2.default(pixelRatio);\n      this.wrapper = undefined;\n    }\n\n    /**\n     * refresh all options.\n     * Because all modules parse their options by themselves, we just use their options. We copy them here.\n     *\n     * @param options\n     */\n\n\n    _createClass(Configurator, [{\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          // reset the popup history because the indices may have been changed.\n          this.popupHistory = {};\n          this._removePopup();\n\n          var enabled = true;\n          if (typeof options === 'string') {\n            this.options.filter = options;\n          } else if (options instanceof Array) {\n            this.options.filter = options.join();\n          } else if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            if (options.container !== undefined) {\n              this.options.container = options.container;\n            }\n            if (options.filter !== undefined) {\n              this.options.filter = options.filter;\n            }\n            if (options.showButton !== undefined) {\n              this.options.showButton = options.showButton;\n            }\n            if (options.enabled !== undefined) {\n              enabled = options.enabled;\n            }\n          } else if (typeof options === 'boolean') {\n            this.options.filter = true;\n            enabled = options;\n          } else if (typeof options === 'function') {\n            this.options.filter = options;\n            enabled = true;\n          }\n          if (this.options.filter === false) {\n            enabled = false;\n          }\n\n          this.options.enabled = enabled;\n        }\n        this._clean();\n      }\n    }, {\n      key: 'setModuleOptions',\n      value: function setModuleOptions(moduleOptions) {\n        this.moduleOptions = moduleOptions;\n        if (this.options.enabled === true) {\n          this._clean();\n          if (this.options.container !== undefined) {\n            this.container = this.options.container;\n          }\n          this._create();\n        }\n      }\n\n      /**\n       * Create all DOM elements\n       * @private\n       */\n\n    }, {\n      key: '_create',\n      value: function _create() {\n        var _this = this;\n\n        this._clean();\n        this.changedOptions = [];\n\n        var filter = this.options.filter;\n        var counter = 0;\n        var show = false;\n        for (var option in this.configureOptions) {\n          if (this.configureOptions.hasOwnProperty(option)) {\n            this.allowCreation = false;\n            show = false;\n            if (typeof filter === 'function') {\n              show = filter(option, []);\n              show = show || this._handleObject(this.configureOptions[option], [option], true);\n            } else if (filter === true || filter.indexOf(option) !== -1) {\n              show = true;\n            }\n\n            if (show !== false) {\n              this.allowCreation = true;\n\n              // linebreak between categories\n              if (counter > 0) {\n                this._makeItem([]);\n              }\n              // a header for the category\n              this._makeHeader(option);\n\n              // get the sub options\n              this._handleObject(this.configureOptions[option], [option]);\n            }\n            counter++;\n          }\n        }\n\n        if (this.options.showButton === true) {\n          (function () {\n            var generateButton = document.createElement('div');\n            generateButton.className = 'vis-configuration vis-config-button';\n            generateButton.innerHTML = 'generate options';\n            generateButton.onclick = function () {\n              _this._printOptions();\n            };\n            generateButton.onmouseover = function () {\n              generateButton.className = 'vis-configuration vis-config-button hover';\n            };\n            generateButton.onmouseout = function () {\n              generateButton.className = 'vis-configuration vis-config-button';\n            };\n\n            _this.optionsContainer = document.createElement('div');\n            _this.optionsContainer.className = 'vis-configuration vis-config-option-container';\n\n            _this.domElements.push(_this.optionsContainer);\n            _this.domElements.push(generateButton);\n          })();\n        }\n\n        this._push();\n        //~ this.colorPicker.insertTo(this.container);\n      }\n\n      /**\n       * draw all DOM elements on the screen\n       * @private\n       */\n\n    }, {\n      key: '_push',\n      value: function _push() {\n        this.wrapper = document.createElement('div');\n        this.wrapper.className = 'vis-configuration-wrapper';\n        this.container.appendChild(this.wrapper);\n        for (var i = 0; i < this.domElements.length; i++) {\n          this.wrapper.appendChild(this.domElements[i]);\n        }\n\n        this._showPopupIfNeeded();\n      }\n\n      /**\n       * delete all DOM elements\n       * @private\n       */\n\n    }, {\n      key: '_clean',\n      value: function _clean() {\n        for (var i = 0; i < this.domElements.length; i++) {\n          this.wrapper.removeChild(this.domElements[i]);\n        }\n\n        if (this.wrapper !== undefined) {\n          this.container.removeChild(this.wrapper);\n          this.wrapper = undefined;\n        }\n        this.domElements = [];\n\n        this._removePopup();\n      }\n\n      /**\n       * get the value from the actualOptions if it exists\n       * @param {array} path    | where to look for the actual option\n       * @returns {*}\n       * @private\n       */\n\n    }, {\n      key: '_getValue',\n      value: function _getValue(path) {\n        var base = this.moduleOptions;\n        for (var i = 0; i < path.length; i++) {\n          if (base[path[i]] !== undefined) {\n            base = base[path[i]];\n          } else {\n            base = undefined;\n            break;\n          }\n        }\n        return base;\n      }\n\n      /**\n       * all option elements are wrapped in an item\n       * @param path\n       * @param domElements\n       * @private\n       */\n\n    }, {\n      key: '_makeItem',\n      value: function _makeItem(path) {\n        var _arguments = arguments,\n            _this2 = this;\n\n        if (this.allowCreation === true) {\n          var _len, domElements, _key;\n\n          var _ret2 = function () {\n            var item = document.createElement('div');\n            item.className = 'vis-configuration vis-config-item vis-config-s' + path.length;\n\n            for (_len = _arguments.length, domElements = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              domElements[_key - 1] = _arguments[_key];\n            }\n\n            domElements.forEach(function (element) {\n              item.appendChild(element);\n            });\n            _this2.domElements.push(item);\n            return {\n              v: _this2.domElements.length\n            };\n          }();\n\n          if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n        }\n        return 0;\n      }\n\n      /**\n       * header for major subjects\n       * @param name\n       * @private\n       */\n\n    }, {\n      key: '_makeHeader',\n      value: function _makeHeader(name) {\n        var div = document.createElement('div');\n        div.className = 'vis-configuration vis-config-header';\n        div.innerHTML = name;\n        this._makeItem([], div);\n      }\n\n      /**\n       * make a label, if it is an object label, it gets different styling.\n       * @param name\n       * @param path\n       * @param objectLabel\n       * @returns {HTMLElement}\n       * @private\n       */\n\n    }, {\n      key: '_makeLabel',\n      value: function _makeLabel(name, path) {\n        var objectLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        var div = document.createElement('div');\n        div.className = 'vis-configuration vis-config-label vis-config-s' + path.length;\n        if (objectLabel === true) {\n          div.innerHTML = '<i><b>' + name + ':</b></i>';\n        } else {\n          div.innerHTML = name + ':';\n        }\n        return div;\n      }\n\n      /**\n       * make a dropdown list for multiple possible string optoins\n       * @param arr\n       * @param value\n       * @param path\n       * @private\n       */\n\n    }, {\n      key: '_makeDropdown',\n      value: function _makeDropdown(arr, value, path) {\n        var select = document.createElement('select');\n        select.className = 'vis-configuration vis-config-select';\n        var selectedValue = 0;\n        if (value !== undefined) {\n          if (arr.indexOf(value) !== -1) {\n            selectedValue = arr.indexOf(value);\n          }\n        }\n\n        for (var i = 0; i < arr.length; i++) {\n          var option = document.createElement('option');\n          option.value = arr[i];\n          if (i === selectedValue) {\n            option.selected = 'selected';\n          }\n          option.innerHTML = arr[i];\n          select.appendChild(option);\n        }\n\n        var me = this;\n        select.onchange = function () {\n          me._update(this.value, path);\n        };\n\n        var label = this._makeLabel(path[path.length - 1], path);\n        this._makeItem(path, label, select);\n      }\n\n      /**\n       * make a range object for numeric options\n       * @param arr\n       * @param value\n       * @param path\n       * @private\n       */\n\n    }, {\n      key: '_makeRange',\n      value: function _makeRange(arr, value, path) {\n        var defaultValue = arr[0];\n        var min = arr[1];\n        var max = arr[2];\n        var step = arr[3];\n        var range = document.createElement('input');\n        range.className = 'vis-configuration vis-config-range';\n        try {\n          range.type = 'range'; // not supported on IE9\n          range.min = min;\n          range.max = max;\n        } catch (err) {}\n        range.step = step;\n\n        // set up the popup settings in case they are needed.\n        var popupString = '';\n        var popupValue = 0;\n\n        if (value !== undefined) {\n          var factor = 1.20;\n          if (value < 0 && value * factor < min) {\n            range.min = Math.ceil(value * factor);\n            popupValue = range.min;\n            popupString = 'range increased';\n          } else if (value / factor < min) {\n            range.min = Math.ceil(value / factor);\n            popupValue = range.min;\n            popupString = 'range increased';\n          }\n          if (value * factor > max && max !== 1) {\n            range.max = Math.ceil(value * factor);\n            popupValue = range.max;\n            popupString = 'range increased';\n          }\n          range.value = value;\n        } else {\n          range.value = defaultValue;\n        }\n\n        var input = document.createElement('input');\n        input.className = 'vis-configuration vis-config-rangeinput';\n        input.value = range.value;\n\n        var me = this;\n        range.onchange = function () {\n          input.value = this.value;me._update(Number(this.value), path);\n        };\n        range.oninput = function () {\n          input.value = this.value;\n        };\n\n        var label = this._makeLabel(path[path.length - 1], path);\n        var itemIndex = this._makeItem(path, label, range, input);\n\n        // if a popup is needed AND it has not been shown for this value, show it.\n        if (popupString !== '' && this.popupHistory[itemIndex] !== popupValue) {\n          this.popupHistory[itemIndex] = popupValue;\n          this._setupPopup(popupString, itemIndex);\n        }\n      }\n\n      /**\n       * prepare the popup\n       * @param string\n       * @param index\n       * @private\n       */\n\n    }, {\n      key: '_setupPopup',\n      value: function _setupPopup(string, index) {\n        var _this3 = this;\n\n        if (this.initialized === true && this.allowCreation === true && this.popupCounter < this.popupLimit) {\n          var div = document.createElement(\"div\");\n          div.id = \"vis-configuration-popup\";\n          div.className = \"vis-configuration-popup\";\n          div.innerHTML = string;\n          div.onclick = function () {\n            _this3._removePopup();\n          };\n          this.popupCounter += 1;\n          this.popupDiv = { html: div, index: index };\n        }\n      }\n\n      /**\n       * remove the popup from the dom\n       * @private\n       */\n\n    }, {\n      key: '_removePopup',\n      value: function _removePopup() {\n        if (this.popupDiv.html !== undefined) {\n          this.popupDiv.html.parentNode.removeChild(this.popupDiv.html);\n          clearTimeout(this.popupDiv.hideTimeout);\n          clearTimeout(this.popupDiv.deleteTimeout);\n          this.popupDiv = {};\n        }\n      }\n\n      /**\n       * Show the popup if it is needed.\n       * @private\n       */\n\n    }, {\n      key: '_showPopupIfNeeded',\n      value: function _showPopupIfNeeded() {\n        var _this4 = this;\n\n        if (this.popupDiv.html !== undefined) {\n          var correspondingElement = this.domElements[this.popupDiv.index];\n          var rect = correspondingElement.getBoundingClientRect();\n          this.popupDiv.html.style.left = rect.left + \"px\";\n          this.popupDiv.html.style.top = rect.top - 30 + \"px\"; // 30 is the height;\n          document.body.appendChild(this.popupDiv.html);\n          this.popupDiv.hideTimeout = setTimeout(function () {\n            _this4.popupDiv.html.style.opacity = 0;\n          }, 1500);\n          this.popupDiv.deleteTimeout = setTimeout(function () {\n            _this4._removePopup();\n          }, 1800);\n        }\n      }\n\n      /**\n       * make a checkbox for boolean options.\n       * @param defaultValue\n       * @param value\n       * @param path\n       * @private\n       */\n\n    }, {\n      key: '_makeCheckbox',\n      value: function _makeCheckbox(defaultValue, value, path) {\n        var checkbox = document.createElement('input');\n        checkbox.type = 'checkbox';\n        checkbox.className = 'vis-configuration vis-config-checkbox';\n        checkbox.checked = defaultValue;\n        if (value !== undefined) {\n          checkbox.checked = value;\n          if (value !== defaultValue) {\n            if ((typeof defaultValue === 'undefined' ? 'undefined' : _typeof(defaultValue)) === 'object') {\n              if (value !== defaultValue.enabled) {\n                this.changedOptions.push({ path: path, value: value });\n              }\n            } else {\n              this.changedOptions.push({ path: path, value: value });\n            }\n          }\n        }\n\n        var me = this;\n        checkbox.onchange = function () {\n          me._update(this.checked, path);\n        };\n\n        var label = this._makeLabel(path[path.length - 1], path);\n        this._makeItem(path, label, checkbox);\n      }\n\n      /**\n       * make a text input field for string options.\n       * @param defaultValue\n       * @param value\n       * @param path\n       * @private\n       */\n\n    }, {\n      key: '_makeTextInput',\n      value: function _makeTextInput(defaultValue, value, path) {\n        var checkbox = document.createElement('input');\n        checkbox.type = 'text';\n        checkbox.className = 'vis-configuration vis-config-text';\n        checkbox.value = value;\n        if (value !== defaultValue) {\n          this.changedOptions.push({ path: path, value: value });\n        }\n\n        var me = this;\n        checkbox.onchange = function () {\n          me._update(this.value, path);\n        };\n\n        var label = this._makeLabel(path[path.length - 1], path);\n        this._makeItem(path, label, checkbox);\n      }\n\n      /**\n       * make a color field with a color picker for color fields\n       * @param arr\n       * @param value\n       * @param path\n       * @private\n       */\n\n    }, {\n      key: '_makeColorField',\n      value: function _makeColorField(arr, value, path) {\n        var _this5 = this;\n\n        var defaultColor = arr[1];\n        var div = document.createElement('div');\n        value = value === undefined ? defaultColor : value;\n\n        if (value !== 'none') {\n          div.className = 'vis-configuration vis-config-colorBlock';\n          div.style.backgroundColor = value;\n        } else {\n          div.className = 'vis-configuration vis-config-colorBlock none';\n        }\n\n        value = value === undefined ? defaultColor : value;\n        div.onclick = function () {\n          _this5._showColorPicker(value, div, path);\n        };\n\n        var label = this._makeLabel(path[path.length - 1], path);\n        this._makeItem(path, label, div);\n      }\n\n      /**\n       * used by the color buttons to call the color picker.\n       * @param event\n       * @param value\n       * @param div\n       * @param path\n       * @private\n       */\n\n    }, {\n      key: '_showColorPicker',\n      value: function _showColorPicker(value, div, path) {\n        var _this6 = this;\n\n        // clear the callback from this div\n        div.onclick = function () {};\n\n        this.colorPicker.insertTo(div);\n        this.colorPicker.show();\n\n        this.colorPicker.setColor(value);\n        this.colorPicker.setUpdateCallback(function (color) {\n          var colorString = 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\n          div.style.backgroundColor = colorString;\n          _this6._update(colorString, path);\n        });\n\n        // on close of the colorpicker, restore the callback.\n        this.colorPicker.setCloseCallback(function () {\n          div.onclick = function () {\n            _this6._showColorPicker(value, div, path);\n          };\n        });\n      }\n\n      /**\n       * parse an object and draw the correct items\n       * @param obj\n       * @param path\n       * @private\n       */\n\n    }, {\n      key: '_handleObject',\n      value: function _handleObject(obj) {\n        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        var checkOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        var show = false;\n        var filter = this.options.filter;\n        var visibleInSet = false;\n        for (var subObj in obj) {\n          if (obj.hasOwnProperty(subObj)) {\n            show = true;\n            var item = obj[subObj];\n            var newPath = util.copyAndExtendArray(path, subObj);\n            if (typeof filter === 'function') {\n              show = filter(subObj, path);\n\n              // if needed we must go deeper into the object.\n              if (show === false) {\n                if (!(item instanceof Array) && typeof item !== 'string' && typeof item !== 'boolean' && item instanceof Object) {\n                  this.allowCreation = false;\n                  show = this._handleObject(item, newPath, true);\n                  this.allowCreation = checkOnly === false;\n                }\n              }\n            }\n\n            if (show !== false) {\n              visibleInSet = true;\n              var value = this._getValue(newPath);\n\n              if (item instanceof Array) {\n                this._handleArray(item, value, newPath);\n              } else if (typeof item === 'string') {\n                this._makeTextInput(item, value, newPath);\n              } else if (typeof item === 'boolean') {\n                this._makeCheckbox(item, value, newPath);\n              } else if (item instanceof Object) {\n                // collapse the physics options that are not enabled\n                var draw = true;\n                if (path.indexOf('physics') !== -1) {\n                  if (this.moduleOptions.physics.solver !== subObj) {\n                    draw = false;\n                  }\n                }\n\n                if (draw === true) {\n                  // initially collapse options with an disabled enabled option.\n                  if (item.enabled !== undefined) {\n                    var enabledPath = util.copyAndExtendArray(newPath, 'enabled');\n                    var enabledValue = this._getValue(enabledPath);\n                    if (enabledValue === true) {\n                      var label = this._makeLabel(subObj, newPath, true);\n                      this._makeItem(newPath, label);\n                      visibleInSet = this._handleObject(item, newPath) || visibleInSet;\n                    } else {\n                      this._makeCheckbox(item, enabledValue, newPath);\n                    }\n                  } else {\n                    var _label = this._makeLabel(subObj, newPath, true);\n                    this._makeItem(newPath, _label);\n                    visibleInSet = this._handleObject(item, newPath) || visibleInSet;\n                  }\n                }\n              } else {\n                console.error('dont know how to handle', item, subObj, newPath);\n              }\n            }\n          }\n        }\n        return visibleInSet;\n      }\n\n      /**\n       * handle the array type of option\n       * @param optionName\n       * @param arr\n       * @param value\n       * @param path\n       * @private\n       */\n\n    }, {\n      key: '_handleArray',\n      value: function _handleArray(arr, value, path) {\n        if (typeof arr[0] === 'string' && arr[0] === 'color') {\n          this._makeColorField(arr, value, path);\n          if (arr[1] !== value) {\n            this.changedOptions.push({ path: path, value: value });\n          }\n        } else if (typeof arr[0] === 'string') {\n          this._makeDropdown(arr, value, path);\n          if (arr[0] !== value) {\n            this.changedOptions.push({ path: path, value: value });\n          }\n        } else if (typeof arr[0] === 'number') {\n          this._makeRange(arr, value, path);\n          if (arr[0] !== value) {\n            this.changedOptions.push({ path: path, value: Number(value) });\n          }\n        }\n      }\n\n      /**\n       * called to update the network with the new settings.\n       * @param value\n       * @param path\n       * @private\n       */\n\n    }, {\n      key: '_update',\n      value: function _update(value, path) {\n        var options = this._constructOptions(value, path);\n\n        if (this.parent.body && this.parent.body.emitter && this.parent.body.emitter.emit) {\n          this.parent.body.emitter.emit(\"configChange\", options);\n        }\n        this.initialized = true;\n        this.parent.setOptions(options);\n      }\n    }, {\n      key: '_constructOptions',\n      value: function _constructOptions(value, path) {\n        var optionsObj = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n        var pointer = optionsObj;\n\n        // when dropdown boxes can be string or boolean, we typecast it into correct types\n        value = value === 'true' ? true : value;\n        value = value === 'false' ? false : value;\n\n        for (var i = 0; i < path.length; i++) {\n          if (path[i] !== 'global') {\n            if (pointer[path[i]] === undefined) {\n              pointer[path[i]] = {};\n            }\n            if (i !== path.length - 1) {\n              pointer = pointer[path[i]];\n            } else {\n              pointer[path[i]] = value;\n            }\n          }\n        }\n        return optionsObj;\n      }\n    }, {\n      key: '_printOptions',\n      value: function _printOptions() {\n        var options = this.getOptions();\n        this.optionsContainer.innerHTML = '<pre>var options = ' + JSON.stringify(options, null, 2) + '</pre>';\n      }\n    }, {\n      key: 'getOptions',\n      value: function getOptions() {\n        var options = {};\n        for (var i = 0; i < this.changedOptions.length; i++) {\n          this._constructOptions(this.changedOptions[i].value, this.changedOptions[i].path, options);\n        }\n        return options;\n      }\n    }]);\n\n    return Configurator;\n  }();\n\n  exports.default = Configurator;\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var Hammer = __webpack_require__(22);\n  var hammerUtil = __webpack_require__(30);\n  var util = __webpack_require__(1);\n\n  var ColorPicker = function () {\n    function ColorPicker() {\n      var pixelRatio = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n      _classCallCheck(this, ColorPicker);\n\n      this.pixelRatio = pixelRatio;\n      this.generated = false;\n      this.centerCoordinates = { x: 289 / 2, y: 289 / 2 };\n      this.r = 289 * 0.49;\n      this.color = { r: 255, g: 255, b: 255, a: 1.0 };\n      this.hueCircle = undefined;\n      this.initialColor = { r: 255, g: 255, b: 255, a: 1.0 };\n      this.previousColor = undefined;\n      this.applied = false;\n\n      // bound by\n      this.updateCallback = function () {};\n      this.closeCallback = function () {};\n\n      // create all DOM elements\n      this._create();\n    }\n\n    /**\n     * this inserts the colorPicker into a div from the DOM\n     * @param container\n     */\n\n\n    _createClass(ColorPicker, [{\n      key: 'insertTo',\n      value: function insertTo(container) {\n        if (this.hammer !== undefined) {\n          this.hammer.destroy();\n          this.hammer = undefined;\n        }\n        this.container = container;\n        this.container.appendChild(this.frame);\n        this._bindHammer();\n\n        this._setSize();\n      }\n\n      /**\n       * the callback is executed on apply and save. Bind it to the application\n       * @param callback\n       */\n\n    }, {\n      key: 'setUpdateCallback',\n      value: function setUpdateCallback(callback) {\n        if (typeof callback === 'function') {\n          this.updateCallback = callback;\n        } else {\n          throw new Error(\"Function attempted to set as colorPicker update callback is not a function.\");\n        }\n      }\n\n      /**\n       * the callback is executed on apply and save. Bind it to the application\n       * @param callback\n       */\n\n    }, {\n      key: 'setCloseCallback',\n      value: function setCloseCallback(callback) {\n        if (typeof callback === 'function') {\n          this.closeCallback = callback;\n        } else {\n          throw new Error(\"Function attempted to set as colorPicker closing callback is not a function.\");\n        }\n      }\n    }, {\n      key: '_isColorString',\n      value: function _isColorString(color) {\n        var htmlColors = { black: '#000000', navy: '#000080', darkblue: '#00008B', mediumblue: '#0000CD', blue: '#0000FF', darkgreen: '#006400', green: '#008000', teal: '#008080', darkcyan: '#008B8B', deepskyblue: '#00BFFF', darkturquoise: '#00CED1', mediumspringgreen: '#00FA9A', lime: '#00FF00', springgreen: '#00FF7F', aqua: '#00FFFF', cyan: '#00FFFF', midnightblue: '#191970', dodgerblue: '#1E90FF', lightseagreen: '#20B2AA', forestgreen: '#228B22', seagreen: '#2E8B57', darkslategray: '#2F4F4F', limegreen: '#32CD32', mediumseagreen: '#3CB371', turquoise: '#40E0D0', royalblue: '#4169E1', steelblue: '#4682B4', darkslateblue: '#483D8B', mediumturquoise: '#48D1CC', indigo: '#4B0082', darkolivegreen: '#556B2F', cadetblue: '#5F9EA0', cornflowerblue: '#6495ED', mediumaquamarine: '#66CDAA', dimgray: '#696969', slateblue: '#6A5ACD', olivedrab: '#6B8E23', slategray: '#708090', lightslategray: '#778899', mediumslateblue: '#7B68EE', lawngreen: '#7CFC00', chartreuse: '#7FFF00', aquamarine: '#7FFFD4', maroon: '#800000', purple: '#800080', olive: '#808000', gray: '#808080', skyblue: '#87CEEB', lightskyblue: '#87CEFA', blueviolet: '#8A2BE2', darkred: '#8B0000', darkmagenta: '#8B008B', saddlebrown: '#8B4513', darkseagreen: '#8FBC8F', lightgreen: '#90EE90', mediumpurple: '#9370D8', darkviolet: '#9400D3', palegreen: '#98FB98', darkorchid: '#9932CC', yellowgreen: '#9ACD32', sienna: '#A0522D', brown: '#A52A2A', darkgray: '#A9A9A9', lightblue: '#ADD8E6', greenyellow: '#ADFF2F', paleturquoise: '#AFEEEE', lightsteelblue: '#B0C4DE', powderblue: '#B0E0E6', firebrick: '#B22222', darkgoldenrod: '#B8860B', mediumorchid: '#BA55D3', rosybrown: '#BC8F8F', darkkhaki: '#BDB76B', silver: '#C0C0C0', mediumvioletred: '#C71585', indianred: '#CD5C5C', peru: '#CD853F', chocolate: '#D2691E', tan: '#D2B48C', lightgrey: '#D3D3D3', palevioletred: '#D87093', thistle: '#D8BFD8', orchid: '#DA70D6', goldenrod: '#DAA520', crimson: '#DC143C', gainsboro: '#DCDCDC', plum: '#DDA0DD', burlywood: '#DEB887', lightcyan: '#E0FFFF', lavender: '#E6E6FA', darksalmon: '#E9967A', violet: '#EE82EE', palegoldenrod: '#EEE8AA', lightcoral: '#F08080', khaki: '#F0E68C', aliceblue: '#F0F8FF', honeydew: '#F0FFF0', azure: '#F0FFFF', sandybrown: '#F4A460', wheat: '#F5DEB3', beige: '#F5F5DC', whitesmoke: '#F5F5F5', mintcream: '#F5FFFA', ghostwhite: '#F8F8FF', salmon: '#FA8072', antiquewhite: '#FAEBD7', linen: '#FAF0E6', lightgoldenrodyellow: '#FAFAD2', oldlace: '#FDF5E6', red: '#FF0000', fuchsia: '#FF00FF', magenta: '#FF00FF', deeppink: '#FF1493', orangered: '#FF4500', tomato: '#FF6347', hotpink: '#FF69B4', coral: '#FF7F50', darkorange: '#FF8C00', lightsalmon: '#FFA07A', orange: '#FFA500', lightpink: '#FFB6C1', pink: '#FFC0CB', gold: '#FFD700', peachpuff: '#FFDAB9', navajowhite: '#FFDEAD', moccasin: '#FFE4B5', bisque: '#FFE4C4', mistyrose: '#FFE4E1', blanchedalmond: '#FFEBCD', papayawhip: '#FFEFD5', lavenderblush: '#FFF0F5', seashell: '#FFF5EE', cornsilk: '#FFF8DC', lemonchiffon: '#FFFACD', floralwhite: '#FFFAF0', snow: '#FFFAFA', yellow: '#FFFF00', lightyellow: '#FFFFE0', ivory: '#FFFFF0', white: '#FFFFFF' };\n        if (typeof color === 'string') {\n          return htmlColors[color];\n        }\n      }\n\n      /**\n       * Set the color of the colorPicker\n       * Supported formats:\n       * 'red'                   --> HTML color string\n       * '#ffffff'               --> hex string\n       * 'rbg(255,255,255)'      --> rgb string\n       * 'rgba(255,255,255,1.0)' --> rgba string\n       * {r:255,g:255,b:255}     --> rgb object\n       * {r:255,g:255,b:255,a:1.0} --> rgba object\n       * @param color\n       * @param setInitial\n       */\n\n    }, {\n      key: 'setColor',\n      value: function setColor(color) {\n        var setInitial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        if (color === 'none') {\n          return;\n        }\n\n        var rgba = void 0;\n\n        // if a html color shorthand is used, convert to hex\n        var htmlColor = this._isColorString(color);\n        if (htmlColor !== undefined) {\n          color = htmlColor;\n        }\n\n        // check format\n        if (util.isString(color) === true) {\n          if (util.isValidRGB(color) === true) {\n            var rgbaArray = color.substr(4).substr(0, color.length - 5).split(',');\n            rgba = { r: rgbaArray[0], g: rgbaArray[1], b: rgbaArray[2], a: 1.0 };\n          } else if (util.isValidRGBA(color) === true) {\n            var _rgbaArray = color.substr(5).substr(0, color.length - 6).split(',');\n            rgba = { r: _rgbaArray[0], g: _rgbaArray[1], b: _rgbaArray[2], a: _rgbaArray[3] };\n          } else if (util.isValidHex(color) === true) {\n            var rgbObj = util.hexToRGB(color);\n            rgba = { r: rgbObj.r, g: rgbObj.g, b: rgbObj.b, a: 1.0 };\n          }\n        } else {\n          if (color instanceof Object) {\n            if (color.r !== undefined && color.g !== undefined && color.b !== undefined) {\n              var alpha = color.a !== undefined ? color.a : '1.0';\n              rgba = { r: color.r, g: color.g, b: color.b, a: alpha };\n            }\n          }\n        }\n\n        // set color\n        if (rgba === undefined) {\n          throw new Error(\"Unknown color passed to the colorPicker. Supported are strings: rgb, hex, rgba. Object: rgb ({r:r,g:g,b:b,[a:a]}). Supplied: \" + JSON.stringify(color));\n        } else {\n          this._setColor(rgba, setInitial);\n        }\n      }\n\n      /**\n       * this shows the color picker.\n       * The hue circle is constructed once and stored.\n       */\n\n    }, {\n      key: 'show',\n      value: function show() {\n        if (this.closeCallback !== undefined) {\n          this.closeCallback();\n          this.closeCallback = undefined;\n        }\n\n        this.applied = false;\n        this.frame.style.display = 'block';\n        this._generateHueCircle();\n      }\n\n      // ------------------------------------------ PRIVATE ----------------------------- //\n\n      /**\n       * Hide the picker. Is called by the cancel button.\n       * Optional boolean to store the previous color for easy access later on.\n       * @param storePrevious\n       * @private\n       */\n\n    }, {\n      key: '_hide',\n      value: function _hide() {\n        var _this = this;\n\n        var storePrevious = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n        // store the previous color for next time;\n        if (storePrevious === true) {\n          this.previousColor = util.extend({}, this.color);\n        }\n\n        if (this.applied === true) {\n          this.updateCallback(this.initialColor);\n        }\n\n        this.frame.style.display = 'none';\n\n        // call the closing callback, restoring the onclick method.\n        // this is in a setTimeout because it will trigger the show again before the click is done.\n        setTimeout(function () {\n          if (_this.closeCallback !== undefined) {\n            _this.closeCallback();\n            _this.closeCallback = undefined;\n          }\n        }, 0);\n      }\n\n      /**\n       * bound to the save button. Saves and hides.\n       * @private\n       */\n\n    }, {\n      key: '_save',\n      value: function _save() {\n        this.updateCallback(this.color);\n        this.applied = false;\n        this._hide();\n      }\n\n      /**\n       * Bound to apply button. Saves but does not close. Is undone by the cancel button.\n       * @private\n       */\n\n    }, {\n      key: '_apply',\n      value: function _apply() {\n        this.applied = true;\n        this.updateCallback(this.color);\n        this._updatePicker(this.color);\n      }\n\n      /**\n       * load the color from the previous session.\n       * @private\n       */\n\n    }, {\n      key: '_loadLast',\n      value: function _loadLast() {\n        if (this.previousColor !== undefined) {\n          this.setColor(this.previousColor, false);\n        } else {\n          alert(\"There is no last color to load...\");\n        }\n      }\n\n      /**\n       * set the color, place the picker\n       * @param rgba\n       * @param setInitial\n       * @private\n       */\n\n    }, {\n      key: '_setColor',\n      value: function _setColor(rgba) {\n        var setInitial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        // store the initial color\n        if (setInitial === true) {\n          this.initialColor = util.extend({}, rgba);\n        }\n\n        this.color = rgba;\n        var hsv = util.RGBToHSV(rgba.r, rgba.g, rgba.b);\n\n        var angleConvert = 2 * Math.PI;\n        var radius = this.r * hsv.s;\n        var x = this.centerCoordinates.x + radius * Math.sin(angleConvert * hsv.h);\n        var y = this.centerCoordinates.y + radius * Math.cos(angleConvert * hsv.h);\n\n        this.colorPickerSelector.style.left = x - 0.5 * this.colorPickerSelector.clientWidth + 'px';\n        this.colorPickerSelector.style.top = y - 0.5 * this.colorPickerSelector.clientHeight + 'px';\n\n        this._updatePicker(rgba);\n      }\n\n      /**\n       * bound to opacity control\n       * @param value\n       * @private\n       */\n\n    }, {\n      key: '_setOpacity',\n      value: function _setOpacity(value) {\n        this.color.a = value / 100;\n        this._updatePicker(this.color);\n      }\n\n      /**\n       * bound to brightness control\n       * @param value\n       * @private\n       */\n\n    }, {\n      key: '_setBrightness',\n      value: function _setBrightness(value) {\n        var hsv = util.RGBToHSV(this.color.r, this.color.g, this.color.b);\n        hsv.v = value / 100;\n        var rgba = util.HSVToRGB(hsv.h, hsv.s, hsv.v);\n        rgba['a'] = this.color.a;\n        this.color = rgba;\n        this._updatePicker();\n      }\n\n      /**\n       * update the color picker. A black circle overlays the hue circle to mimic the brightness decreasing.\n       * @param rgba\n       * @private\n       */\n\n    }, {\n      key: '_updatePicker',\n      value: function _updatePicker() {\n        var rgba = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.color;\n\n        var hsv = util.RGBToHSV(rgba.r, rgba.g, rgba.b);\n        var ctx = this.colorPickerCanvas.getContext('2d');\n        if (this.pixelRation === undefined) {\n          this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1);\n        }\n        ctx.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\n\n        // clear the canvas\n        var w = this.colorPickerCanvas.clientWidth;\n        var h = this.colorPickerCanvas.clientHeight;\n        ctx.clearRect(0, 0, w, h);\n\n        ctx.putImageData(this.hueCircle, 0, 0);\n        ctx.fillStyle = 'rgba(0,0,0,' + (1 - hsv.v) + ')';\n        ctx.circle(this.centerCoordinates.x, this.centerCoordinates.y, this.r);\n        ctx.fill();\n\n        this.brightnessRange.value = 100 * hsv.v;\n        this.opacityRange.value = 100 * rgba.a;\n\n        this.initialColorDiv.style.backgroundColor = 'rgba(' + this.initialColor.r + ',' + this.initialColor.g + ',' + this.initialColor.b + ',' + this.initialColor.a + ')';\n        this.newColorDiv.style.backgroundColor = 'rgba(' + this.color.r + ',' + this.color.g + ',' + this.color.b + ',' + this.color.a + ')';\n      }\n\n      /**\n       * used by create to set the size of the canvas.\n       * @private\n       */\n\n    }, {\n      key: '_setSize',\n      value: function _setSize() {\n        this.colorPickerCanvas.style.width = '100%';\n        this.colorPickerCanvas.style.height = '100%';\n\n        this.colorPickerCanvas.width = 289 * this.pixelRatio;\n        this.colorPickerCanvas.height = 289 * this.pixelRatio;\n      }\n\n      /**\n       * create all dom elements\n       * TODO: cleanup, lots of similar dom elements\n       * @private\n       */\n\n    }, {\n      key: '_create',\n      value: function _create() {\n        this.frame = document.createElement('div');\n        this.frame.className = 'vis-color-picker';\n\n        this.colorPickerDiv = document.createElement('div');\n        this.colorPickerSelector = document.createElement('div');\n        this.colorPickerSelector.className = 'vis-selector';\n        this.colorPickerDiv.appendChild(this.colorPickerSelector);\n\n        this.colorPickerCanvas = document.createElement('canvas');\n        this.colorPickerDiv.appendChild(this.colorPickerCanvas);\n\n        if (!this.colorPickerCanvas.getContext) {\n          var noCanvas = document.createElement('DIV');\n          noCanvas.style.color = 'red';\n          noCanvas.style.fontWeight = 'bold';\n          noCanvas.style.padding = '10px';\n          noCanvas.innerHTML = 'Error: your browser does not support HTML canvas';\n          this.colorPickerCanvas.appendChild(noCanvas);\n        } else {\n          var ctx = this.colorPickerCanvas.getContext(\"2d\");\n          this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1);\n\n          this.colorPickerCanvas.getContext(\"2d\").setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\n        }\n\n        this.colorPickerDiv.className = 'vis-color';\n\n        this.opacityDiv = document.createElement('div');\n        this.opacityDiv.className = 'vis-opacity';\n\n        this.brightnessDiv = document.createElement('div');\n        this.brightnessDiv.className = 'vis-brightness';\n\n        this.arrowDiv = document.createElement('div');\n        this.arrowDiv.className = 'vis-arrow';\n\n        this.opacityRange = document.createElement('input');\n        try {\n          this.opacityRange.type = 'range'; // Not supported on IE9\n          this.opacityRange.min = '0';\n          this.opacityRange.max = '100';\n        } catch (err) {}\n        this.opacityRange.value = '100';\n        this.opacityRange.className = 'vis-range';\n\n        this.brightnessRange = document.createElement('input');\n        try {\n          this.brightnessRange.type = 'range'; // Not supported on IE9\n          this.brightnessRange.min = '0';\n          this.brightnessRange.max = '100';\n        } catch (err) {}\n        this.brightnessRange.value = '100';\n        this.brightnessRange.className = 'vis-range';\n\n        this.opacityDiv.appendChild(this.opacityRange);\n        this.brightnessDiv.appendChild(this.brightnessRange);\n\n        var me = this;\n        this.opacityRange.onchange = function () {\n          me._setOpacity(this.value);\n        };\n        this.opacityRange.oninput = function () {\n          me._setOpacity(this.value);\n        };\n        this.brightnessRange.onchange = function () {\n          me._setBrightness(this.value);\n        };\n        this.brightnessRange.oninput = function () {\n          me._setBrightness(this.value);\n        };\n\n        this.brightnessLabel = document.createElement(\"div\");\n        this.brightnessLabel.className = \"vis-label vis-brightness\";\n        this.brightnessLabel.innerHTML = 'brightness:';\n\n        this.opacityLabel = document.createElement(\"div\");\n        this.opacityLabel.className = \"vis-label vis-opacity\";\n        this.opacityLabel.innerHTML = 'opacity:';\n\n        this.newColorDiv = document.createElement(\"div\");\n        this.newColorDiv.className = \"vis-new-color\";\n        this.newColorDiv.innerHTML = 'new';\n\n        this.initialColorDiv = document.createElement(\"div\");\n        this.initialColorDiv.className = \"vis-initial-color\";\n        this.initialColorDiv.innerHTML = 'initial';\n\n        this.cancelButton = document.createElement(\"div\");\n        this.cancelButton.className = \"vis-button vis-cancel\";\n        this.cancelButton.innerHTML = 'cancel';\n        this.cancelButton.onclick = this._hide.bind(this, false);\n\n        this.applyButton = document.createElement(\"div\");\n        this.applyButton.className = \"vis-button vis-apply\";\n        this.applyButton.innerHTML = 'apply';\n        this.applyButton.onclick = this._apply.bind(this);\n\n        this.saveButton = document.createElement(\"div\");\n        this.saveButton.className = \"vis-button vis-save\";\n        this.saveButton.innerHTML = 'save';\n        this.saveButton.onclick = this._save.bind(this);\n\n        this.loadButton = document.createElement(\"div\");\n        this.loadButton.className = \"vis-button vis-load\";\n        this.loadButton.innerHTML = 'load last';\n        this.loadButton.onclick = this._loadLast.bind(this);\n\n        this.frame.appendChild(this.colorPickerDiv);\n        this.frame.appendChild(this.arrowDiv);\n        this.frame.appendChild(this.brightnessLabel);\n        this.frame.appendChild(this.brightnessDiv);\n        this.frame.appendChild(this.opacityLabel);\n        this.frame.appendChild(this.opacityDiv);\n        this.frame.appendChild(this.newColorDiv);\n        this.frame.appendChild(this.initialColorDiv);\n\n        this.frame.appendChild(this.cancelButton);\n        this.frame.appendChild(this.applyButton);\n        this.frame.appendChild(this.saveButton);\n        this.frame.appendChild(this.loadButton);\n      }\n\n      /**\n       * bind hammer to the color picker\n       * @private\n       */\n\n    }, {\n      key: '_bindHammer',\n      value: function _bindHammer() {\n        var _this2 = this;\n\n        this.drag = {};\n        this.pinch = {};\n        this.hammer = new Hammer(this.colorPickerCanvas);\n        this.hammer.get('pinch').set({ enable: true });\n\n        hammerUtil.onTouch(this.hammer, function (event) {\n          _this2._moveSelector(event);\n        });\n        this.hammer.on('tap', function (event) {\n          _this2._moveSelector(event);\n        });\n        this.hammer.on('panstart', function (event) {\n          _this2._moveSelector(event);\n        });\n        this.hammer.on('panmove', function (event) {\n          _this2._moveSelector(event);\n        });\n        this.hammer.on('panend', function (event) {\n          _this2._moveSelector(event);\n        });\n      }\n\n      /**\n       * generate the hue circle. This is relatively heavy (200ms) and is done only once on the first time it is shown.\n       * @private\n       */\n\n    }, {\n      key: '_generateHueCircle',\n      value: function _generateHueCircle() {\n        if (this.generated === false) {\n          var ctx = this.colorPickerCanvas.getContext('2d');\n          if (this.pixelRation === undefined) {\n            this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1);\n          }\n          ctx.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\n\n          // clear the canvas\n          var w = this.colorPickerCanvas.clientWidth;\n          var h = this.colorPickerCanvas.clientHeight;\n          ctx.clearRect(0, 0, w, h);\n\n          // draw hue circle\n          var x = void 0,\n              y = void 0,\n              hue = void 0,\n              sat = void 0;\n          this.centerCoordinates = { x: w * 0.5, y: h * 0.5 };\n          this.r = 0.49 * w;\n          var angleConvert = 2 * Math.PI / 360;\n          var hfac = 1 / 360;\n          var sfac = 1 / this.r;\n          var rgb = void 0;\n          for (hue = 0; hue < 360; hue++) {\n            for (sat = 0; sat < this.r; sat++) {\n              x = this.centerCoordinates.x + sat * Math.sin(angleConvert * hue);\n              y = this.centerCoordinates.y + sat * Math.cos(angleConvert * hue);\n              rgb = util.HSVToRGB(hue * hfac, sat * sfac, 1);\n              ctx.fillStyle = 'rgb(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ')';\n              ctx.fillRect(x - 0.5, y - 0.5, 2, 2);\n            }\n          }\n          ctx.strokeStyle = 'rgba(0,0,0,1)';\n          ctx.circle(this.centerCoordinates.x, this.centerCoordinates.y, this.r);\n          ctx.stroke();\n\n          this.hueCircle = ctx.getImageData(0, 0, w, h);\n        }\n        this.generated = true;\n      }\n\n      /**\n       * move the selector. This is called by hammer functions.\n       *\n       * @param event\n       * @private\n       */\n\n    }, {\n      key: '_moveSelector',\n      value: function _moveSelector(event) {\n        var rect = this.colorPickerDiv.getBoundingClientRect();\n        var left = event.center.x - rect.left;\n        var top = event.center.y - rect.top;\n\n        var centerY = 0.5 * this.colorPickerDiv.clientHeight;\n        var centerX = 0.5 * this.colorPickerDiv.clientWidth;\n\n        var x = left - centerX;\n        var y = top - centerY;\n\n        var angle = Math.atan2(x, y);\n        var radius = 0.98 * Math.min(Math.sqrt(x * x + y * y), centerX);\n\n        var newTop = Math.cos(angle) * radius + centerY;\n        var newLeft = Math.sin(angle) * radius + centerX;\n\n        this.colorPickerSelector.style.top = newTop - 0.5 * this.colorPickerSelector.clientHeight + 'px';\n        this.colorPickerSelector.style.left = newLeft - 0.5 * this.colorPickerSelector.clientWidth + 'px';\n\n        // set color\n        var h = angle / (2 * Math.PI);\n        h = h < 0 ? h + 1 : h;\n        var s = radius / this.r;\n        var hsv = util.RGBToHSV(this.color.r, this.color.g, this.color.b);\n        hsv.h = h;\n        hsv.s = s;\n        var rgba = util.HSVToRGB(hsv.h, hsv.s, hsv.v);\n        rgba['a'] = this.color.a;\n        this.color = rgba;\n\n        // update previews\n        this.initialColorDiv.style.backgroundColor = 'rgba(' + this.initialColor.r + ',' + this.initialColor.g + ',' + this.initialColor.b + ',' + this.initialColor.a + ')';\n        this.newColorDiv.style.backgroundColor = 'rgba(' + this.color.r + ',' + this.color.g + ',' + this.color.b + ',' + this.color.a + ')';\n      }\n    }]);\n\n    return ColorPicker;\n  }();\n\n  exports.default = ColorPicker;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var Hammer = __webpack_require__(22);\n\n  /**\n   * Register a touch event, taking place before a gesture\n   * @param {Hammer} hammer       A hammer instance\n   * @param {function} callback   Callback, called as callback(event)\n   */\n  exports.onTouch = function (hammer, callback) {\n    callback.inputHandler = function (event) {\n      if (event.isFirst) {\n        callback(event);\n      }\n    };\n\n    hammer.on('hammer.input', callback.inputHandler);\n  };\n\n  /**\n   * Register a release event, taking place after a gesture\n   * @param {Hammer} hammer       A hammer instance\n   * @param {function} callback   Callback, called as callback(event)\n   */\n  exports.onRelease = function (hammer, callback) {\n    callback.inputHandler = function (event) {\n      if (event.isFinal) {\n        callback(event);\n      }\n    };\n\n    return hammer.on('hammer.input', callback.inputHandler);\n  };\n\n  /**\n   * Unregister a touch event, taking place before a gesture\n   * @param {Hammer} hammer       A hammer instance\n   * @param {function} callback   Callback, called as callback(event)\n   */\n  exports.offTouch = function (hammer, callback) {\n    hammer.off('hammer.input', callback.inputHandler);\n  };\n\n  /**\n   * Unregister a release event, taking place before a gesture\n   * @param {Hammer} hammer       A hammer instance\n   * @param {function} callback   Callback, called as callback(event)\n   */\n  exports.offRelease = exports.offTouch;\n\n  /**\n   * Hack the PinchRecognizer such that it doesn't prevent default behavior\n   * for vertical panning.\n   *\n   * Yeah ... this is quite a hack ... see https://github.com/hammerjs/hammer.js/issues/932\n   *\n   * @param {Hammer.Pinch} pinchRecognizer\n   * @return {Hammer.Pinch} returns the pinchRecognizer\n   */\n  exports.disablePreventDefaultVertically = function (pinchRecognizer) {\n    var TOUCH_ACTION_PAN_Y = 'pan-y';\n\n    pinchRecognizer.getTouchAction = function () {\n      // default method returns [TOUCH_ACTION_NONE]\n      return [TOUCH_ACTION_PAN_Y];\n    };\n\n    return pinchRecognizer;\n  };\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n\n  var errorFound = false;\n  var allOptions = void 0;\n  var printStyle = 'background: #FFeeee; color: #dd0000';\n  /**\n   *  Used to validate options.\n   */\n\n  var Validator = function () {\n    function Validator() {\n      _classCallCheck(this, Validator);\n    }\n\n    /**\n     * Main function to be called\n     * @param options\n     * @param subObject\n     * @returns {boolean}\n     */\n\n\n    _createClass(Validator, null, [{\n      key: 'validate',\n      value: function validate(options, referenceOptions, subObject) {\n        errorFound = false;\n        allOptions = referenceOptions;\n        var usedOptions = referenceOptions;\n        if (subObject !== undefined) {\n          usedOptions = referenceOptions[subObject];\n        }\n        Validator.parse(options, usedOptions, []);\n        return errorFound;\n      }\n\n      /**\n       * Will traverse an object recursively and check every value\n       * @param options\n       * @param referenceOptions\n       * @param path\n       */\n\n    }, {\n      key: 'parse',\n      value: function parse(options, referenceOptions, path) {\n        for (var option in options) {\n          if (options.hasOwnProperty(option)) {\n            Validator.check(option, options, referenceOptions, path);\n          }\n        }\n      }\n\n      /**\n       * Check every value. If the value is an object, call the parse function on that object.\n       * @param option\n       * @param options\n       * @param referenceOptions\n       * @param path\n       */\n\n    }, {\n      key: 'check',\n      value: function check(option, options, referenceOptions, path) {\n        if (referenceOptions[option] === undefined && referenceOptions.__any__ === undefined) {\n          Validator.getSuggestion(option, referenceOptions, path);\n        } else if (referenceOptions[option] === undefined && referenceOptions.__any__ !== undefined) {\n          // __any__ is a wildcard. Any value is accepted and will be further analysed by reference.\n          if (Validator.getType(options[option]) === 'object' && referenceOptions['__any__'].__type__ !== undefined) {\n            // if the any subgroup is not a predefined object int he configurator we do not look deeper into the object.\n            Validator.checkFields(option, options, referenceOptions, '__any__', referenceOptions['__any__'].__type__, path);\n          } else {\n            Validator.checkFields(option, options, referenceOptions, '__any__', referenceOptions['__any__'], path);\n          }\n        } else {\n          // Since all options in the reference are objects, we can check whether they are supposed to be object to look for the __type__ field.\n          if (referenceOptions[option].__type__ !== undefined) {\n            // if this should be an object, we check if the correct type has been supplied to account for shorthand options.\n            Validator.checkFields(option, options, referenceOptions, option, referenceOptions[option].__type__, path);\n          } else {\n            Validator.checkFields(option, options, referenceOptions, option, referenceOptions[option], path);\n          }\n        }\n      }\n\n      /**\n       *\n       * @param {String}  option     | the option property\n       * @param {Object}  options    | The supplied options object\n       * @param {Object}  referenceOptions    | The reference options containing all options and their allowed formats\n       * @param {String}  referenceOption     | Usually this is the same as option, except when handling an __any__ tag.\n       * @param {String}  refOptionType       | This is the type object from the reference options\n       * @param {Array}   path      | where in the object is the option\n       */\n\n    }, {\n      key: 'checkFields',\n      value: function checkFields(option, options, referenceOptions, referenceOption, refOptionObj, path) {\n        var optionType = Validator.getType(options[option]);\n        var refOptionType = refOptionObj[optionType];\n        if (refOptionType !== undefined) {\n          // if the type is correct, we check if it is supposed to be one of a few select values\n          if (Validator.getType(refOptionType) === 'array') {\n            if (refOptionType.indexOf(options[option]) === -1) {\n              console.log('%cInvalid option detected in \"' + option + '\".' + ' Allowed values are:' + Validator.print(refOptionType) + ' not \"' + options[option] + '\". ' + Validator.printLocation(path, option), printStyle);\n              errorFound = true;\n            } else if (optionType === 'object' && referenceOption !== \"__any__\") {\n              path = util.copyAndExtendArray(path, option);\n              Validator.parse(options[option], referenceOptions[referenceOption], path);\n            }\n          } else if (optionType === 'object' && referenceOption !== \"__any__\") {\n            path = util.copyAndExtendArray(path, option);\n            Validator.parse(options[option], referenceOptions[referenceOption], path);\n          }\n        } else if (refOptionObj['any'] === undefined) {\n          // type of the field is incorrect and the field cannot be any\n          console.log('%cInvalid type received for \"' + option + '\". Expected: ' + Validator.print(Object.keys(refOptionObj)) + '. Received [' + optionType + '] \"' + options[option] + '\"' + Validator.printLocation(path, option), printStyle);\n          errorFound = true;\n        }\n      }\n    }, {\n      key: 'getType',\n      value: function getType(object) {\n        var type = typeof object === 'undefined' ? 'undefined' : _typeof(object);\n\n        if (type === 'object') {\n          if (object === null) {\n            return 'null';\n          }\n          if (object instanceof Boolean) {\n            return 'boolean';\n          }\n          if (object instanceof Number) {\n            return 'number';\n          }\n          if (object instanceof String) {\n            return 'string';\n          }\n          if (Array.isArray(object)) {\n            return 'array';\n          }\n          if (object instanceof Date) {\n            return 'date';\n          }\n          if (object.nodeType !== undefined) {\n            return 'dom';\n          }\n          if (object._isAMomentObject === true) {\n            return 'moment';\n          }\n          return 'object';\n        } else if (type === 'number') {\n          return 'number';\n        } else if (type === 'boolean') {\n          return 'boolean';\n        } else if (type === 'string') {\n          return 'string';\n        } else if (type === undefined) {\n          return 'undefined';\n        }\n        return type;\n      }\n    }, {\n      key: 'getSuggestion',\n      value: function getSuggestion(option, options, path) {\n        var localSearch = Validator.findInOptions(option, options, path, false);\n        var globalSearch = Validator.findInOptions(option, allOptions, [], true);\n\n        var localSearchThreshold = 8;\n        var globalSearchThreshold = 4;\n\n        if (localSearch.indexMatch !== undefined) {\n          console.log('%cUnknown option detected: \"' + option + '\" in ' + Validator.printLocation(localSearch.path, option, '') + 'Perhaps it was incomplete? Did you mean: \"' + localSearch.indexMatch + '\"?\\n\\n', printStyle);\n        } else if (globalSearch.distance <= globalSearchThreshold && localSearch.distance > globalSearch.distance) {\n          console.log('%cUnknown option detected: \"' + option + '\" in ' + Validator.printLocation(localSearch.path, option, '') + 'Perhaps it was misplaced? Matching option found at: ' + Validator.printLocation(globalSearch.path, globalSearch.closestMatch, ''), printStyle);\n        } else if (localSearch.distance <= localSearchThreshold) {\n          console.log('%cUnknown option detected: \"' + option + '\". Did you mean \"' + localSearch.closestMatch + '\"?' + Validator.printLocation(localSearch.path, option), printStyle);\n        } else {\n          console.log('%cUnknown option detected: \"' + option + '\". Did you mean one of these: ' + Validator.print(Object.keys(options)) + Validator.printLocation(path, option), printStyle);\n        }\n\n        errorFound = true;\n      }\n\n      /**\n       * traverse the options in search for a match.\n       * @param option\n       * @param options\n       * @param path\n       * @param recursive\n       * @returns {{closestMatch: string, path: Array, distance: number}}\n       */\n\n    }, {\n      key: 'findInOptions',\n      value: function findInOptions(option, options, path) {\n        var recursive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        var min = 1e9;\n        var closestMatch = '';\n        var closestMatchPath = [];\n        var lowerCaseOption = option.toLowerCase();\n        var indexMatch = undefined;\n        for (var op in options) {\n          var distance = void 0;\n          if (options[op].__type__ !== undefined && recursive === true) {\n            var result = Validator.findInOptions(option, options[op], util.copyAndExtendArray(path, op));\n            if (min > result.distance) {\n              closestMatch = result.closestMatch;\n              closestMatchPath = result.path;\n              min = result.distance;\n              indexMatch = result.indexMatch;\n            }\n          } else {\n            if (op.toLowerCase().indexOf(lowerCaseOption) !== -1) {\n              indexMatch = op;\n            }\n            distance = Validator.levenshteinDistance(option, op);\n            if (min > distance) {\n              closestMatch = op;\n              closestMatchPath = util.copyArray(path);\n              min = distance;\n            }\n          }\n        }\n        return { closestMatch: closestMatch, path: closestMatchPath, distance: min, indexMatch: indexMatch };\n      }\n    }, {\n      key: 'printLocation',\n      value: function printLocation(path, option) {\n        var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Problem value found at: \\n';\n\n        var str = '\\n\\n' + prefix + 'options = {\\n';\n        for (var i = 0; i < path.length; i++) {\n          for (var j = 0; j < i + 1; j++) {\n            str += '  ';\n          }\n          str += path[i] + ': {\\n';\n        }\n        for (var _j = 0; _j < path.length + 1; _j++) {\n          str += '  ';\n        }\n        str += option + '\\n';\n        for (var _i = 0; _i < path.length + 1; _i++) {\n          for (var _j2 = 0; _j2 < path.length - _i; _j2++) {\n            str += '  ';\n          }\n          str += '}\\n';\n        }\n        return str + '\\n\\n';\n      }\n    }, {\n      key: 'print',\n      value: function print(options) {\n        return JSON.stringify(options).replace(/(\\\")|(\\[)|(\\])|(,\"__type__\")/g, \"\").replace(/(\\,)/g, ', ');\n      }\n\n      // Compute the edit distance between the two given strings\n      // http://en.wikibooks.org/wiki/Algorithm_Implementation/Strings/Levenshtein_distance#JavaScript\n      /*\n       Copyright (c) 2011 Andrei Mackenzie\n        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n       */\n\n    }, {\n      key: 'levenshteinDistance',\n      value: function levenshteinDistance(a, b) {\n        if (a.length === 0) return b.length;\n        if (b.length === 0) return a.length;\n\n        var matrix = [];\n\n        // increment along the first column of each row\n        var i;\n        for (i = 0; i <= b.length; i++) {\n          matrix[i] = [i];\n        }\n\n        // increment each column in the first row\n        var j;\n        for (j = 0; j <= a.length; j++) {\n          matrix[0][j] = j;\n        }\n\n        // Fill in the rest of the matrix\n        for (i = 1; i <= b.length; i++) {\n          for (j = 1; j <= a.length; j++) {\n            if (b.charAt(i - 1) == a.charAt(j - 1)) {\n              matrix[i][j] = matrix[i - 1][j - 1];\n            } else {\n              matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, // substitution\n              Math.min(matrix[i][j - 1] + 1, // insertion\n              matrix[i - 1][j] + 1)); // deletion\n            }\n          }\n        }\n\n        return matrix[b.length][a.length];\n      }\n    }]);\n\n    return Validator;\n  }();\n\n  exports.default = Validator;\n  exports.printStyle = printStyle;\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  var util = __webpack_require__(1);\n  var hammerUtil = __webpack_require__(30);\n  var moment = __webpack_require__(2);\n  var Component = __webpack_require__(33);\n  var DateUtil = __webpack_require__(34);\n\n  /**\n   * @constructor Range\n   * A Range controls a numeric range with a start and end value.\n   * The Range adjusts the range based on mouse events or programmatic changes,\n   * and triggers events when the range is changing or has been changed.\n   * @param {{dom: Object, domProps: Object, emitter: Emitter}} body\n   * @param {Object} [options]    See description at Range.setOptions\n   */\n  function Range(body, options) {\n    var now = moment().hours(0).minutes(0).seconds(0).milliseconds(0);\n    this.start = now.clone().add(-3, 'days').valueOf(); // Number\n    this.end = now.clone().add(4, 'days').valueOf(); // Number\n\n    this.body = body;\n    this.deltaDifference = 0;\n    this.scaleOffset = 0;\n    this.startToFront = false;\n    this.endToFront = true;\n\n    // default options\n    this.defaultOptions = {\n      rtl: false,\n      start: null,\n      end: null,\n      moment: moment,\n      direction: 'horizontal', // 'horizontal' or 'vertical'\n      moveable: true,\n      zoomable: true,\n      min: null,\n      max: null,\n      zoomMin: 10, // milliseconds\n      zoomMax: 1000 * 60 * 60 * 24 * 365 * 10000 // milliseconds\n    };\n    this.options = util.extend({}, this.defaultOptions);\n    this.props = {\n      touch: {}\n    };\n    this.animationTimer = null;\n\n    // drag listeners for dragging\n    this.body.emitter.on('panstart', this._onDragStart.bind(this));\n    this.body.emitter.on('panmove', this._onDrag.bind(this));\n    this.body.emitter.on('panend', this._onDragEnd.bind(this));\n\n    // mouse wheel for zooming\n    this.body.emitter.on('mousewheel', this._onMouseWheel.bind(this));\n\n    // pinch to zoom\n    this.body.emitter.on('touch', this._onTouch.bind(this));\n    this.body.emitter.on('pinch', this._onPinch.bind(this));\n\n    this.setOptions(options);\n  }\n\n  Range.prototype = new Component();\n\n  /**\n   * Set options for the range controller\n   * @param {Object} options      Available options:\n   *                              {Number | Date | String} start  Start date for the range\n   *                              {Number | Date | String} end    End date for the range\n   *                              {Number} min    Minimum value for start\n   *                              {Number} max    Maximum value for end\n   *                              {Number} zoomMin    Set a minimum value for\n   *                                                  (end - start).\n   *                              {Number} zoomMax    Set a maximum value for\n   *                                                  (end - start).\n   *                              {Boolean} moveable Enable moving of the range\n   *                                                 by dragging. True by default\n   *                              {Boolean} zoomable Enable zooming of the range\n   *                                                 by pinching/scrolling. True by default\n   */\n  Range.prototype.setOptions = function (options) {\n    if (options) {\n      // copy the options that we know\n      var fields = ['direction', 'min', 'max', 'zoomMin', 'zoomMax', 'moveable', 'zoomable', 'moment', 'activate', 'hiddenDates', 'zoomKey', 'rtl', 'horizontalScroll'];\n      util.selectiveExtend(fields, this.options, options);\n\n      if ('start' in options || 'end' in options) {\n        // apply a new range. both start and end are optional\n        this.setRange(options.start, options.end);\n      }\n    }\n  };\n\n  /**\n   * Test whether direction has a valid value\n   * @param {String} direction    'horizontal' or 'vertical'\n   */\n  function validateDirection(direction) {\n    if (direction != 'horizontal' && direction != 'vertical') {\n      throw new TypeError('Unknown direction \"' + direction + '\". ' + 'Choose \"horizontal\" or \"vertical\".');\n    }\n  }\n\n  /**\n   * Set a new start and end range\n   * @param {Date | Number | String} [start]\n   * @param {Date | Number | String} [end]\n   * @param {boolean | {duration: number, easingFunction: string}} [animation=false]\n   *                                    If true (default), the range is animated\n   *                                    smoothly to the new window. An object can be\n   *                                    provided to specify duration and easing function.\n   *                                    Default duration is 500 ms, and default easing\n   *                                    function is 'easeInOutQuad'.\n   * @param {Boolean} [byUser=false]\n   *\n   */\n  Range.prototype.setRange = function (start, end, animation, byUser) {\n    if (byUser !== true) {\n      byUser = false;\n    }\n    var finalStart = start != undefined ? util.convert(start, 'Date').valueOf() : null;\n    var finalEnd = end != undefined ? util.convert(end, 'Date').valueOf() : null;\n    this._cancelAnimation();\n\n    if (animation) {\n      // true or an Object\n      var me = this;\n      var initStart = this.start;\n      var initEnd = this.end;\n      var duration = (typeof animation === 'undefined' ? 'undefined' : _typeof(animation)) === 'object' && 'duration' in animation ? animation.duration : 500;\n      var easingName = (typeof animation === 'undefined' ? 'undefined' : _typeof(animation)) === 'object' && 'easingFunction' in animation ? animation.easingFunction : 'easeInOutQuad';\n      var easingFunction = util.easingFunctions[easingName];\n      if (!easingFunction) {\n        throw new Error('Unknown easing function ' + JSON.stringify(easingName) + '. ' + 'Choose from: ' + Object.keys(util.easingFunctions).join(', '));\n      }\n\n      var initTime = new Date().valueOf();\n      var anyChanged = false;\n\n      var next = function next() {\n        if (!me.props.touch.dragging) {\n          var now = new Date().valueOf();\n          var time = now - initTime;\n          var ease = easingFunction(time / duration);\n          var done = time > duration;\n          var s = done || finalStart === null ? finalStart : initStart + (finalStart - initStart) * ease;\n          var e = done || finalEnd === null ? finalEnd : initEnd + (finalEnd - initEnd) * ease;\n\n          changed = me._applyRange(s, e);\n          DateUtil.updateHiddenDates(me.options.moment, me.body, me.options.hiddenDates);\n          anyChanged = anyChanged || changed;\n          if (changed) {\n            me.body.emitter.emit('rangechange', { start: new Date(me.start), end: new Date(me.end), byUser: byUser });\n          }\n\n          if (done) {\n            if (anyChanged) {\n              me.body.emitter.emit('rangechanged', { start: new Date(me.start), end: new Date(me.end), byUser: byUser });\n            }\n          } else {\n            // animate with as high as possible frame rate, leave 20 ms in between\n            // each to prevent the browser from blocking\n            me.animationTimer = setTimeout(next, 20);\n          }\n        }\n      };\n\n      return next();\n    } else {\n      var changed = this._applyRange(finalStart, finalEnd);\n      DateUtil.updateHiddenDates(this.options.moment, this.body, this.options.hiddenDates);\n      if (changed) {\n        var params = { start: new Date(this.start), end: new Date(this.end), byUser: byUser };\n        this.body.emitter.emit('rangechange', params);\n        this.body.emitter.emit('rangechanged', params);\n      }\n    }\n  };\n\n  /**\n   * Stop an animation\n   * @private\n   */\n  Range.prototype._cancelAnimation = function () {\n    if (this.animationTimer) {\n      clearTimeout(this.animationTimer);\n      this.animationTimer = null;\n    }\n  };\n\n  /**\n   * Set a new start and end range. This method is the same as setRange, but\n   * does not trigger a range change and range changed event, and it returns\n   * true when the range is changed\n   * @param {Number} [start]\n   * @param {Number} [end]\n   * @return {Boolean} changed\n   * @private\n   */\n  Range.prototype._applyRange = function (start, end) {\n    var newStart = start != null ? util.convert(start, 'Date').valueOf() : this.start,\n        newEnd = end != null ? util.convert(end, 'Date').valueOf() : this.end,\n        max = this.options.max != null ? util.convert(this.options.max, 'Date').valueOf() : null,\n        min = this.options.min != null ? util.convert(this.options.min, 'Date').valueOf() : null,\n        diff;\n\n    // check for valid number\n    if (isNaN(newStart) || newStart === null) {\n      throw new Error('Invalid start \"' + start + '\"');\n    }\n    if (isNaN(newEnd) || newEnd === null) {\n      throw new Error('Invalid end \"' + end + '\"');\n    }\n\n    // prevent start < end\n    if (newEnd < newStart) {\n      newEnd = newStart;\n    }\n\n    // prevent start < min\n    if (min !== null) {\n      if (newStart < min) {\n        diff = min - newStart;\n        newStart += diff;\n        newEnd += diff;\n\n        // prevent end > max\n        if (max != null) {\n          if (newEnd > max) {\n            newEnd = max;\n          }\n        }\n      }\n    }\n\n    // prevent end > max\n    if (max !== null) {\n      if (newEnd > max) {\n        diff = newEnd - max;\n        newStart -= diff;\n        newEnd -= diff;\n\n        // prevent start < min\n        if (min != null) {\n          if (newStart < min) {\n            newStart = min;\n          }\n        }\n      }\n    }\n\n    // prevent (end-start) < zoomMin\n    if (this.options.zoomMin !== null) {\n      var zoomMin = parseFloat(this.options.zoomMin);\n      if (zoomMin < 0) {\n        zoomMin = 0;\n      }\n      if (newEnd - newStart < zoomMin) {\n        if (this.end - this.start === zoomMin && newStart > this.start && newEnd < this.end) {\n          // ignore this action, we are already zoomed to the minimum\n          newStart = this.start;\n          newEnd = this.end;\n        } else {\n          // zoom to the minimum\n          diff = zoomMin - (newEnd - newStart);\n          newStart -= diff / 2;\n          newEnd += diff / 2;\n        }\n      }\n    }\n\n    // prevent (end-start) > zoomMax\n    if (this.options.zoomMax !== null) {\n      var zoomMax = parseFloat(this.options.zoomMax);\n      if (zoomMax < 0) {\n        zoomMax = 0;\n      }\n\n      if (newEnd - newStart > zoomMax) {\n        if (this.end - this.start === zoomMax && newStart < this.start && newEnd > this.end) {\n          // ignore this action, we are already zoomed to the maximum\n          newStart = this.start;\n          newEnd = this.end;\n        } else {\n          // zoom to the maximum\n          diff = newEnd - newStart - zoomMax;\n          newStart += diff / 2;\n          newEnd -= diff / 2;\n        }\n      }\n    }\n\n    var changed = this.start != newStart || this.end != newEnd;\n\n    // if the new range does NOT overlap with the old range, emit checkRangedItems to avoid not showing ranged items (ranged meaning has end time, not necessarily of type Range)\n    if (!(newStart >= this.start && newStart <= this.end || newEnd >= this.start && newEnd <= this.end) && !(this.start >= newStart && this.start <= newEnd || this.end >= newStart && this.end <= newEnd)) {\n      this.body.emitter.emit('checkRangedItems');\n    }\n\n    this.start = newStart;\n    this.end = newEnd;\n    return changed;\n  };\n\n  /**\n   * Retrieve the current range.\n   * @return {Object} An object with start and end properties\n   */\n  Range.prototype.getRange = function () {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  /**\n   * Calculate the conversion offset and scale for current range, based on\n   * the provided width\n   * @param {Number} width\n   * @returns {{offset: number, scale: number}} conversion\n   */\n  Range.prototype.conversion = function (width, totalHidden) {\n    return Range.conversion(this.start, this.end, width, totalHidden);\n  };\n\n  /**\n   * Static method to calculate the conversion offset and scale for a range,\n   * based on the provided start, end, and width\n   * @param {Number} start\n   * @param {Number} end\n   * @param {Number} width\n   * @returns {{offset: number, scale: number}} conversion\n   */\n  Range.conversion = function (start, end, width, totalHidden) {\n    if (totalHidden === undefined) {\n      totalHidden = 0;\n    }\n    if (width != 0 && end - start != 0) {\n      return {\n        offset: start,\n        scale: width / (end - start - totalHidden)\n      };\n    } else {\n      return {\n        offset: 0,\n        scale: 1\n      };\n    }\n  };\n\n  /**\n   * Start dragging horizontally or vertically\n   * @param {Event} event\n   * @private\n   */\n  Range.prototype._onDragStart = function (event) {\n    this.deltaDifference = 0;\n    this.previousDelta = 0;\n\n    // only allow dragging when configured as movable\n    if (!this.options.moveable) return;\n\n    // only start dragging when the mouse is inside the current range\n    if (!this._isInsideRange(event)) return;\n\n    // refuse to drag when we where pinching to prevent the timeline make a jump\n    // when releasing the fingers in opposite order from the touch screen\n    if (!this.props.touch.allowDragging) return;\n\n    this.props.touch.start = this.start;\n    this.props.touch.end = this.end;\n    this.props.touch.dragging = true;\n\n    if (this.body.dom.root) {\n      this.body.dom.root.style.cursor = 'move';\n    }\n  };\n\n  /**\n   * Perform dragging operation\n   * @param {Event} event\n   * @private\n   */\n  Range.prototype._onDrag = function (event) {\n    if (!event) return;\n\n    if (!this.props.touch.dragging) return;\n\n    // only allow dragging when configured as movable\n    if (!this.options.moveable) return;\n\n    // TODO: this may be redundant in hammerjs2\n    // refuse to drag when we where pinching to prevent the timeline make a jump\n    // when releasing the fingers in opposite order from the touch screen\n    if (!this.props.touch.allowDragging) return;\n\n    var direction = this.options.direction;\n    validateDirection(direction);\n    var delta = direction == 'horizontal' ? event.deltaX : event.deltaY;\n    delta -= this.deltaDifference;\n    var interval = this.props.touch.end - this.props.touch.start;\n\n    // normalize dragging speed if cutout is in between.\n    var duration = DateUtil.getHiddenDurationBetween(this.body.hiddenDates, this.start, this.end);\n    interval -= duration;\n\n    var width = direction == 'horizontal' ? this.body.domProps.center.width : this.body.domProps.center.height;\n\n    if (this.options.rtl) {\n      var diffRange = delta / width * interval;\n    } else {\n      var diffRange = -delta / width * interval;\n    }\n\n    var newStart = this.props.touch.start + diffRange;\n    var newEnd = this.props.touch.end + diffRange;\n\n    // snapping times away from hidden zones\n    var safeStart = DateUtil.snapAwayFromHidden(this.body.hiddenDates, newStart, this.previousDelta - delta, true);\n    var safeEnd = DateUtil.snapAwayFromHidden(this.body.hiddenDates, newEnd, this.previousDelta - delta, true);\n    if (safeStart != newStart || safeEnd != newEnd) {\n      this.deltaDifference += delta;\n      this.props.touch.start = safeStart;\n      this.props.touch.end = safeEnd;\n      this._onDrag(event);\n      return;\n    }\n\n    this.previousDelta = delta;\n    this._applyRange(newStart, newEnd);\n\n    var startDate = new Date(this.start);\n    var endDate = new Date(this.end);\n\n    // fire a rangechange event\n    this.body.emitter.emit('rangechange', {\n      start: startDate,\n      end: endDate,\n      byUser: true\n    });\n\n    // fire a panmove event\n    this.body.emitter.emit('panmove');\n  };\n\n  /**\n   * Stop dragging operation\n   * @param {event} event\n   * @private\n   */\n  Range.prototype._onDragEnd = function (event) {\n    if (!this.props.touch.dragging) return;\n\n    // only allow dragging when configured as movable\n    if (!this.options.moveable) return;\n\n    // TODO: this may be redundant in hammerjs2\n    // refuse to drag when we where pinching to prevent the timeline make a jump\n    // when releasing the fingers in opposite order from the touch screen\n    if (!this.props.touch.allowDragging) return;\n\n    this.props.touch.dragging = false;\n    if (this.body.dom.root) {\n      this.body.dom.root.style.cursor = 'auto';\n    }\n\n    // fire a rangechanged event\n    this.body.emitter.emit('rangechanged', {\n      start: new Date(this.start),\n      end: new Date(this.end),\n      byUser: true\n    });\n  };\n\n  /**\n   * Event handler for mouse wheel event, used to zoom\n   * Code from http://adomas.org/javascript-mouse-wheel/\n   * @param {Event} event\n   * @private\n   */\n  Range.prototype._onMouseWheel = function (event) {\n    // Prevent default actions caused by mouse wheel\n    // (else the page and timeline both zoom and scroll)\n    event.preventDefault();\n\n    // retrieve delta\n    var delta = 0;\n    if (event.wheelDelta) {\n      /* IE/Opera. */\n      delta = event.wheelDelta / 120;\n    } else if (event.detail) {\n      /* Mozilla case. */\n      // In Mozilla, sign of delta is different than in IE.\n      // Also, delta is multiple of 3.\n      delta = -event.detail / 3;\n    }\n\n    // don't allow zoom when the according key is pressed and the zoomKey option or not zoomable but movable\n    if (this.options.zoomKey && !event[this.options.zoomKey] && this.options.zoomable || !this.options.zoomable && this.options.moveable) {\n      if (this.options.horizontalScroll) {\n        // calculate a single scroll jump relative to the range scale\n        var diff = delta * (this.end - this.start) / 20;\n        // calculate new start and end\n        var newStart = this.start - diff;\n        var newEnd = this.end - diff;\n\n        this.setRange(newStart, newEnd);\n      }\n      return;\n    }\n\n    // only allow zooming when configured as zoomable and moveable\n    if (!(this.options.zoomable && this.options.moveable)) return;\n\n    // only zoom when the mouse is inside the current range\n    if (!this._isInsideRange(event)) return;\n\n    // If delta is nonzero, handle it.\n    // Basically, delta is now positive if wheel was scrolled up,\n    // and negative, if wheel was scrolled down.\n    if (delta) {\n      // perform the zoom action. Delta is normally 1 or -1\n\n      // adjust a negative delta such that zooming in with delta 0.1\n      // equals zooming out with a delta -0.1\n      var scale;\n      if (delta < 0) {\n        scale = 1 - delta / 5;\n      } else {\n        scale = 1 / (1 + delta / 5);\n      }\n\n      // calculate center, the date to zoom around\n      var pointer = this.getPointer({ x: event.clientX, y: event.clientY }, this.body.dom.center);\n      var pointerDate = this._pointerToDate(pointer);\n\n      this.zoom(scale, pointerDate, delta);\n    }\n  };\n\n  /**\n   * Start of a touch gesture\n   * @private\n   */\n  Range.prototype._onTouch = function (event) {\n    this.props.touch.start = this.start;\n    this.props.touch.end = this.end;\n    this.props.touch.allowDragging = true;\n    this.props.touch.center = null;\n    this.scaleOffset = 0;\n    this.deltaDifference = 0;\n  };\n\n  /**\n   * Handle pinch event\n   * @param {Event} event\n   * @private\n   */\n  Range.prototype._onPinch = function (event) {\n    // only allow zooming when configured as zoomable and moveable\n    if (!(this.options.zoomable && this.options.moveable)) return;\n\n    this.props.touch.allowDragging = false;\n\n    if (!this.props.touch.center) {\n      this.props.touch.center = this.getPointer(event.center, this.body.dom.center);\n    }\n\n    var scale = 1 / (event.scale + this.scaleOffset);\n    var centerDate = this._pointerToDate(this.props.touch.center);\n\n    var hiddenDuration = DateUtil.getHiddenDurationBetween(this.body.hiddenDates, this.start, this.end);\n    var hiddenDurationBefore = DateUtil.getHiddenDurationBefore(this.options.moment, this.body.hiddenDates, this, centerDate);\n    var hiddenDurationAfter = hiddenDuration - hiddenDurationBefore;\n\n    // calculate new start and end\n    var newStart = centerDate - hiddenDurationBefore + (this.props.touch.start - (centerDate - hiddenDurationBefore)) * scale;\n    var newEnd = centerDate + hiddenDurationAfter + (this.props.touch.end - (centerDate + hiddenDurationAfter)) * scale;\n\n    // snapping times away from hidden zones\n    this.startToFront = 1 - scale <= 0; // used to do the right auto correction with periodic hidden times\n    this.endToFront = scale - 1 <= 0; // used to do the right auto correction with periodic hidden times\n\n    var safeStart = DateUtil.snapAwayFromHidden(this.body.hiddenDates, newStart, 1 - scale, true);\n    var safeEnd = DateUtil.snapAwayFromHidden(this.body.hiddenDates, newEnd, scale - 1, true);\n    if (safeStart != newStart || safeEnd != newEnd) {\n      this.props.touch.start = safeStart;\n      this.props.touch.end = safeEnd;\n      this.scaleOffset = 1 - event.scale;\n      newStart = safeStart;\n      newEnd = safeEnd;\n    }\n\n    this.setRange(newStart, newEnd, false, true);\n\n    this.startToFront = false; // revert to default\n    this.endToFront = true; // revert to default\n  };\n\n  /**\n   * Test whether the mouse from a mouse event is inside the visible window,\n   * between the current start and end date\n   * @param {Object} event\n   * @return {boolean} Returns true when inside the visible window\n   * @private\n   */\n  Range.prototype._isInsideRange = function (event) {\n    // calculate the time where the mouse is, check whether inside\n    // and no scroll action should happen.\n    var clientX = event.center ? event.center.x : event.clientX;\n    if (this.options.rtl) {\n      var x = clientX - util.getAbsoluteLeft(this.body.dom.centerContainer);\n    } else {\n      var x = util.getAbsoluteRight(this.body.dom.centerContainer) - clientX;\n    }\n    var time = this.body.util.toTime(x);\n\n    return time >= this.start && time <= this.end;\n  };\n\n  /**\n   * Helper function to calculate the center date for zooming\n   * @param {{x: Number, y: Number}} pointer\n   * @return {number} date\n   * @private\n   */\n  Range.prototype._pointerToDate = function (pointer) {\n    var conversion;\n    var direction = this.options.direction;\n\n    validateDirection(direction);\n\n    if (direction == 'horizontal') {\n      return this.body.util.toTime(pointer.x).valueOf();\n    } else {\n      var height = this.body.domProps.center.height;\n      conversion = this.conversion(height);\n      return pointer.y / conversion.scale + conversion.offset;\n    }\n  };\n\n  /**\n   * Get the pointer location relative to the location of the dom element\n   * @param {{x: Number, y: Number}} touch\n   * @param {Element} element   HTML DOM element\n   * @return {{x: Number, y: Number}} pointer\n   * @private\n   */\n  Range.prototype.getPointer = function (touch, element) {\n    if (this.options.rtl) {\n      return {\n        x: util.getAbsoluteRight(element) - touch.x,\n        y: touch.y - util.getAbsoluteTop(element)\n      };\n    } else {\n      return {\n        x: touch.x - util.getAbsoluteLeft(element),\n        y: touch.y - util.getAbsoluteTop(element)\n      };\n    }\n  };\n\n  /**\n   * Zoom the range the given scale in or out. Start and end date will\n   * be adjusted, and the timeline will be redrawn. You can optionally give a\n   * date around which to zoom.\n   * For example, try scale = 0.9 or 1.1\n   * @param {Number} scale      Scaling factor. Values above 1 will zoom out,\n   *                            values below 1 will zoom in.\n   * @param {Number} [center]   Value representing a date around which will\n   *                            be zoomed.\n   */\n  Range.prototype.zoom = function (scale, center, delta) {\n    // if centerDate is not provided, take it half between start Date and end Date\n    if (center == null) {\n      center = (this.start + this.end) / 2;\n    }\n\n    var hiddenDuration = DateUtil.getHiddenDurationBetween(this.body.hiddenDates, this.start, this.end);\n    var hiddenDurationBefore = DateUtil.getHiddenDurationBefore(this.options.moment, this.body.hiddenDates, this, center);\n    var hiddenDurationAfter = hiddenDuration - hiddenDurationBefore;\n\n    // calculate new start and end\n    var newStart = center - hiddenDurationBefore + (this.start - (center - hiddenDurationBefore)) * scale;\n    var newEnd = center + hiddenDurationAfter + (this.end - (center + hiddenDurationAfter)) * scale;\n\n    // snapping times away from hidden zones\n    this.startToFront = delta > 0 ? false : true; // used to do the right autocorrection with periodic hidden times\n    this.endToFront = -delta > 0 ? false : true; // used to do the right autocorrection with periodic hidden times\n    var safeStart = DateUtil.snapAwayFromHidden(this.body.hiddenDates, newStart, delta, true);\n    var safeEnd = DateUtil.snapAwayFromHidden(this.body.hiddenDates, newEnd, -delta, true);\n    if (safeStart != newStart || safeEnd != newEnd) {\n      newStart = safeStart;\n      newEnd = safeEnd;\n    }\n\n    this.setRange(newStart, newEnd, false, true);\n\n    this.startToFront = false; // revert to default\n    this.endToFront = true; // revert to default\n  };\n\n  /**\n   * Move the range with a given delta to the left or right. Start and end\n   * value will be adjusted. For example, try delta = 0.1 or -0.1\n   * @param {Number}  delta     Moving amount. Positive value will move right,\n   *                            negative value will move left\n   */\n  Range.prototype.move = function (delta) {\n    // zoom start Date and end Date relative to the centerDate\n    var diff = this.end - this.start;\n\n    // apply new values\n    var newStart = this.start + diff * delta;\n    var newEnd = this.end + diff * delta;\n\n    // TODO: reckon with min and max range\n\n    this.start = newStart;\n    this.end = newEnd;\n  };\n\n  /**\n   * Move the range to a new center point\n   * @param {Number} moveTo      New center point of the range\n   */\n  Range.prototype.moveTo = function (moveTo) {\n    var center = (this.start + this.end) / 2;\n\n    var diff = center - moveTo;\n\n    // calculate new start and end\n    var newStart = this.start - diff;\n    var newEnd = this.end - diff;\n\n    this.setRange(newStart, newEnd);\n  };\n\n  module.exports = Range;\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var util = __webpack_require__(1);\n\n  /**\n   * Prototype for visual components\n   * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} [body]\n   * @param {Object} [options]\n   */\n  function Component(body, options) {\n    this.options = null;\n    this.props = null;\n  }\n\n  /**\n   * Set options for the component. The new options will be merged into the\n   * current options.\n   * @param {Object} options\n   */\n  Component.prototype.setOptions = function (options) {\n    if (options) {\n      util.extend(this.options, options);\n    }\n  };\n\n  /**\n   * Repaint the component\n   * @return {boolean} Returns true if the component is resized\n   */\n  Component.prototype.redraw = function () {\n    // should be implemented by the component\n    return false;\n  };\n\n  /**\n   * Destroy the component. Cleanup DOM and event listeners\n   */\n  Component.prototype.destroy = function () {\n    // should be implemented by the component\n  };\n\n  /**\n   * Test whether the component is resized since the last time _isResized() was\n   * called.\n   * @return {Boolean} Returns true if the component is resized\n   * @protected\n   */\n  Component.prototype._isResized = function () {\n    var resized = this.props._previousWidth !== this.props.width || this.props._previousHeight !== this.props.height;\n\n    this.props._previousWidth = this.props.width;\n    this.props._previousHeight = this.props.height;\n\n    return resized;\n  };\n\n  module.exports = Component;\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n  \"use strict\";\n\n  /**\n   * used in Core to convert the options into a volatile variable\n   * \n   * @param {function} moment\n   * @param {Object} body\n   * @param {Array | Object} hiddenDates\n   */\n  exports.convertHiddenOptions = function (moment, body, hiddenDates) {\n    if (hiddenDates && !Array.isArray(hiddenDates)) {\n      return exports.convertHiddenOptions(moment, body, [hiddenDates]);\n    }\n\n    body.hiddenDates = [];\n    if (hiddenDates) {\n      if (Array.isArray(hiddenDates) == true) {\n        for (var i = 0; i < hiddenDates.length; i++) {\n          if (hiddenDates[i].repeat === undefined) {\n            var dateItem = {};\n            dateItem.start = moment(hiddenDates[i].start).toDate().valueOf();\n            dateItem.end = moment(hiddenDates[i].end).toDate().valueOf();\n            body.hiddenDates.push(dateItem);\n          }\n        }\n        body.hiddenDates.sort(function (a, b) {\n          return a.start - b.start;\n        }); // sort by start time\n      }\n    }\n  };\n\n  /**\n   * create new entrees for the repeating hidden dates\n   * @param {function} moment\n   * @param {Object} body\n   * @param {Array | Object} hiddenDates\n   */\n  exports.updateHiddenDates = function (moment, body, hiddenDates) {\n    if (hiddenDates && !Array.isArray(hiddenDates)) {\n      return exports.updateHiddenDates(moment, body, [hiddenDates]);\n    }\n\n    if (hiddenDates && body.domProps.centerContainer.width !== undefined) {\n      exports.convertHiddenOptions(moment, body, hiddenDates);\n\n      var start = moment(body.range.start);\n      var end = moment(body.range.end);\n\n      var totalRange = body.range.end - body.range.start;\n      var pixelTime = totalRange / body.domProps.centerContainer.width;\n\n      for (var i = 0; i < hiddenDates.length; i++) {\n        if (hiddenDates[i].repeat !== undefined) {\n          var startDate = moment(hiddenDates[i].start);\n          var endDate = moment(hiddenDates[i].end);\n\n          if (startDate._d == \"Invalid Date\") {\n            throw new Error(\"Supplied start date is not valid: \" + hiddenDates[i].start);\n          }\n          if (endDate._d == \"Invalid Date\") {\n            throw new Error(\"Supplied end date is not valid: \" + hiddenDates[i].end);\n          }\n\n          var duration = endDate - startDate;\n          if (duration >= 4 * pixelTime) {\n\n            var offset = 0;\n            var runUntil = end.clone();\n            switch (hiddenDates[i].repeat) {\n              case \"daily\":\n                // case of time\n                if (startDate.day() != endDate.day()) {\n                  offset = 1;\n                }\n                startDate.dayOfYear(start.dayOfYear());\n                startDate.year(start.year());\n                startDate.subtract(7, 'days');\n\n                endDate.dayOfYear(start.dayOfYear());\n                endDate.year(start.year());\n                endDate.subtract(7 - offset, 'days');\n\n                runUntil.add(1, 'weeks');\n                break;\n              case \"weekly\":\n                var dayOffset = endDate.diff(startDate, 'days');\n                var day = startDate.day();\n\n                // set the start date to the range.start\n                startDate.date(start.date());\n                startDate.month(start.month());\n                startDate.year(start.year());\n                endDate = startDate.clone();\n\n                // force\n                startDate.day(day);\n                endDate.day(day);\n                endDate.add(dayOffset, 'days');\n\n                startDate.subtract(1, 'weeks');\n                endDate.subtract(1, 'weeks');\n\n                runUntil.add(1, 'weeks');\n                break;\n              case \"monthly\":\n                if (startDate.month() != endDate.month()) {\n                  offset = 1;\n                }\n                startDate.month(start.month());\n                startDate.year(start.year());\n                startDate.subtract(1, 'months');\n\n                endDate.month(start.month());\n                endDate.year(start.year());\n                endDate.subtract(1, 'months');\n                endDate.add(offset, 'months');\n\n                runUntil.add(1, 'months');\n                break;\n              case \"yearly\":\n                if (startDate.year() != endDate.year()) {\n                  offset = 1;\n                }\n                startDate.year(start.year());\n                startDate.subtract(1, 'years');\n                endDate.year(start.year());\n                endDate.subtract(1, 'years');\n                endDate.add(offset, 'years');\n\n                runUntil.add(1, 'years');\n                break;\n              default:\n                console.log(\"Wrong repeat format, allowed are: daily, weekly, monthly, yearly. Given:\", hiddenDates[i].repeat);\n                return;\n            }\n            while (startDate < runUntil) {\n              body.hiddenDates.push({ start: startDate.valueOf(), end: endDate.valueOf() });\n              switch (hiddenDates[i].repeat) {\n                case \"daily\":\n                  startDate.add(1, 'days');\n                  endDate.add(1, 'days');\n                  break;\n                case \"weekly\":\n                  startDate.add(1, 'weeks');\n                  endDate.add(1, 'weeks');\n                  break;\n                case \"monthly\":\n                  startDate.add(1, 'months');\n                  endDate.add(1, 'months');\n                  break;\n                case \"yearly\":\n                  startDate.add(1, 'y');\n                  endDate.add(1, 'y');\n                  break;\n                default:\n                  console.log(\"Wrong repeat format, allowed are: daily, weekly, monthly, yearly. Given:\", hiddenDates[i].repeat);\n                  return;\n              }\n            }\n            body.hiddenDates.push({ start: startDate.valueOf(), end: endDate.valueOf() });\n          }\n        }\n      }\n      // remove duplicates, merge where possible\n      exports.removeDuplicates(body);\n      // ensure the new positions are not on hidden dates\n      var startHidden = exports.isHidden(body.range.start, body.hiddenDates);\n      var endHidden = exports.isHidden(body.range.end, body.hiddenDates);\n      var rangeStart = body.range.start;\n      var rangeEnd = body.range.end;\n      if (startHidden.hidden == true) {\n        rangeStart = body.range.startToFront == true ? startHidden.startDate - 1 : startHidden.endDate + 1;\n      }\n      if (endHidden.hidden == true) {\n        rangeEnd = body.range.endToFront == true ? endHidden.startDate - 1 : endHidden.endDate + 1;\n      }\n      if (startHidden.hidden == true || endHidden.hidden == true) {\n        body.range._applyRange(rangeStart, rangeEnd);\n      }\n    }\n  };\n\n  /**\n   * remove duplicates from the hidden dates list. Duplicates are evil. They mess everything up.\n   * Scales with N^2\n   * @param body\n   */\n  exports.removeDuplicates = function (body) {\n    var hiddenDates = body.hiddenDates;\n    var safeDates = [];\n    for (var i = 0; i < hiddenDates.length; i++) {\n      for (var j = 0; j < hiddenDates.length; j++) {\n        if (i != j && hiddenDates[j].remove != true && hiddenDates[i].remove != true) {\n          // j inside i\n          if (hiddenDates[j].start >= hiddenDates[i].start && hiddenDates[j].end <= hiddenDates[i].end) {\n            hiddenDates[j].remove = true;\n          }\n          // j start inside i\n          else if (hiddenDates[j].start >= hiddenDates[i].start && hiddenDates[j].start <= hiddenDates[i].end) {\n              hiddenDates[i].end = hiddenDates[j].end;\n              hiddenDates[j].remove = true;\n            }\n            // j end inside i\n            else if (hiddenDates[j].end >= hiddenDates[i].start && hiddenDates[j].end <= hiddenDates[i].end) {\n                hiddenDates[i].start = hiddenDates[j].start;\n                hiddenDates[j].remove = true;\n              }\n        }\n      }\n    }\n\n    for (var i = 0; i < hiddenDates.length; i++) {\n      if (hiddenDates[i].remove !== true) {\n        safeDates.push(hiddenDates[i]);\n      }\n    }\n\n    body.hiddenDates = safeDates;\n    body.hiddenDates.sort(function (a, b) {\n      return a.start - b.start;\n    }); // sort by start time\n  };\n\n  exports.printDates = function (dates) {\n    for (var i = 0; i < dates.length; i++) {\n      console.log(i, new Date(dates[i].start), new Date(dates[i].end), dates[i].start, dates[i].end, dates[i].remove);\n    }\n  };\n\n  /**\n   * Used in TimeStep to avoid the hidden times.\n   * @param {function} moment\n   * @param {TimeStep} timeStep\n   * @param previousTime\n   */\n  exports.stepOverHiddenDates = function (moment, timeStep, previousTime) {\n    var stepInHidden = false;\n    var currentValue = timeStep.current.valueOf();\n    for (var i = 0; i < timeStep.hiddenDates.length; i++) {\n      var startDate = timeStep.hiddenDates[i].start;\n      var endDate = timeStep.hiddenDates[i].end;\n      if (currentValue >= startDate && currentValue < endDate) {\n        stepInHidden = true;\n        break;\n      }\n    }\n\n    if (stepInHidden == true && currentValue < timeStep._end.valueOf() && currentValue != previousTime) {\n      var prevValue = moment(previousTime);\n      var newValue = moment(endDate);\n      //check if the next step should be major\n      if (prevValue.year() != newValue.year()) {\n        timeStep.switchedYear = true;\n      } else if (prevValue.month() != newValue.month()) {\n        timeStep.switchedMonth = true;\n      } else if (prevValue.dayOfYear() != newValue.dayOfYear()) {\n        timeStep.switchedDay = true;\n      }\n\n      timeStep.current = newValue;\n    }\n  };\n\n  ///**\n  // * Used in TimeStep to avoid the hidden times.\n  // * @param timeStep\n  // * @param previousTime\n  // */\n  //exports.checkFirstStep = function(timeStep) {\n  //  var stepInHidden = false;\n  //  var currentValue = timeStep.current.valueOf();\n  //  for (var i = 0; i < timeStep.hiddenDates.length; i++) {\n  //    var startDate = timeStep.hiddenDates[i].start;\n  //    var endDate = timeStep.hiddenDates[i].end;\n  //    if (currentValue >= startDate && currentValue < endDate) {\n  //      stepInHidden = true;\n  //      break;\n  //    }\n  //  }\n  //\n  //  if (stepInHidden == true && currentValue <= timeStep._end.valueOf()) {\n  //    var newValue = moment(endDate);\n  //    timeStep.current = newValue.toDate();\n  //  }\n  //};\n\n  /**\n   * replaces the Core toScreen methods\n   * @param Core\n   * @param time\n   * @param width\n   * @returns {number}\n   */\n  exports.toScreen = function (Core, time, width) {\n    if (Core.body.hiddenDates.length == 0) {\n      var conversion = Core.range.conversion(width);\n      return (time.valueOf() - conversion.offset) * conversion.scale;\n    } else {\n      var hidden = exports.isHidden(time, Core.body.hiddenDates);\n      if (hidden.hidden == true) {\n        time = hidden.startDate;\n      }\n\n      var duration = exports.getHiddenDurationBetween(Core.body.hiddenDates, Core.range.start, Core.range.end);\n      if (time < Core.range.start) {\n        var conversion = Core.range.conversion(width, duration);\n        var hiddenBeforeStart = exports.getHiddenDurationBeforeStart(Core.body.hiddenDates, time, conversion.offset);\n        time = Core.options.moment(time).toDate().valueOf();\n        time = time + hiddenBeforeStart;\n        return -(conversion.offset - time.valueOf()) * conversion.scale;\n      } else if (time > Core.range.end) {\n        var rangeAfterEnd = { start: Core.range.start, end: time };\n        time = exports.correctTimeForHidden(Core.options.moment, Core.body.hiddenDates, rangeAfterEnd, time);\n        var conversion = Core.range.conversion(width, duration);\n        return (time.valueOf() - conversion.offset) * conversion.scale;\n      } else {\n        time = exports.correctTimeForHidden(Core.options.moment, Core.body.hiddenDates, Core.range, time);\n        var conversion = Core.range.conversion(width, duration);\n        return (time.valueOf() - conversion.offset) * conversion.scale;\n      }\n    }\n  };\n\n  /**\n   * Replaces the core toTime methods\n   * @param body\n   * @param range\n   * @param x\n   * @param width\n   * @returns {Date}\n   */\n  exports.toTime = function (Core, x, width) {\n    if (Core.body.hiddenDates.length == 0) {\n      var conversion = Core.range.conversion(width);\n      return new Date(x / conversion.scale + conversion.offset);\n    } else {\n      var hiddenDuration = exports.getHiddenDurationBetween(Core.body.hiddenDates, Core.range.start, Core.range.end);\n      var totalDuration = Core.range.end - Core.range.start - hiddenDuration;\n      var partialDuration = totalDuration * x / width;\n      var accumulatedHiddenDuration = exports.getAccumulatedHiddenDuration(Core.body.hiddenDates, Core.range, partialDuration);\n\n      var newTime = new Date(accumulatedHiddenDuration + partialDuration + Core.range.start);\n      return newTime;\n    }\n  };\n\n  /**\n   * Support function\n   *\n   * @param hiddenDates\n   * @param range\n   * @returns {number}\n   */\n  exports.getHiddenDurationBetween = function (hiddenDates, start, end) {\n    var duration = 0;\n    for (var i = 0; i < hiddenDates.length; i++) {\n      var startDate = hiddenDates[i].start;\n      var endDate = hiddenDates[i].end;\n      // if time after the cutout, and the\n      if (startDate >= start && endDate < end) {\n        duration += endDate - startDate;\n      }\n    }\n    return duration;\n  };\n\n  /**\n     * Support function\n     *\n     * @param hiddenDates\n     * @param start\n     * @param end\n     * @returns {number}\n     */\n  exports.getHiddenDurationBeforeStart = function (hiddenDates, start, end) {\n    var duration = 0;\n    for (var i = 0; i < hiddenDates.length; i++) {\n      var startDate = hiddenDates[i].start;\n      var endDate = hiddenDates[i].end;\n\n      if (startDate >= start && endDate <= end) {\n        duration += endDate - startDate;\n      }\n    }\n    return duration;\n  };\n\n  /**\n   * Support function\n   * @param moment\n   * @param hiddenDates\n   * @param range\n   * @param time\n   * @returns {{duration: number, time: *, offset: number}}\n   */\n  exports.correctTimeForHidden = function (moment, hiddenDates, range, time) {\n    time = moment(time).toDate().valueOf();\n    time -= exports.getHiddenDurationBefore(moment, hiddenDates, range, time);\n    return time;\n  };\n\n  exports.getHiddenDurationBefore = function (moment, hiddenDates, range, time) {\n    var timeOffset = 0;\n    time = moment(time).toDate().valueOf();\n\n    for (var i = 0; i < hiddenDates.length; i++) {\n      var startDate = hiddenDates[i].start;\n      var endDate = hiddenDates[i].end;\n      // if time after the cutout, and the\n      if (startDate >= range.start && endDate < range.end) {\n        if (time >= endDate) {\n          timeOffset += endDate - startDate;\n        }\n      }\n    }\n    return timeOffset;\n  };\n\n  /**\n   * sum the duration from start to finish, including the hidden duration,\n   * until the required amount has been reached, return the accumulated hidden duration\n   * @param hiddenDates\n   * @param range\n   * @param time\n   * @returns {{duration: number, time: *, offset: number}}\n   */\n  exports.getAccumulatedHiddenDuration = function (hiddenDates, range, requiredDuration) {\n    var hiddenDuration = 0;\n    var duration = 0;\n    var previousPoint = range.start;\n    //exports.printDates(hiddenDates)\n    for (var i = 0; i < hiddenDates.length; i++) {\n      var startDate = hiddenDates[i].start;\n      var endDate = hiddenDates[i].end;\n      // if time after the cutout, and the\n      if (startDate >= range.start && endDate < range.end) {\n        duration += startDate - previousPoint;\n        previousPoint = endDate;\n        if (duration >= requiredDuration) {\n          break;\n        } else {\n          hiddenDuration += endDate - startDate;\n        }\n      }\n    }\n\n    return hiddenDuration;\n  };\n\n  /**\n   * used to step over to either side of a hidden block. Correction is disabled on tablets, might be set to true\n   * @param hiddenDates\n   * @param time\n   * @param direction\n   * @param correctionEnabled\n   * @returns {*}\n   */\n  exports.snapAwayFromHidden = function (hiddenDates, time, direction, correctionEnabled) {\n    var isHidden = exports.isHidden(time, hiddenDates);\n    if (isHidden.hidden == true) {\n      if (direction < 0) {\n        if (correctionEnabled == true) {\n          return isHidden.startDate - (isHidden.endDate - time) - 1;\n        } else {\n          return isHidden.startDate - 1;\n        }\n      } else {\n        if (correctionEnabled == true) {\n          return isHidden.endDate + (time - isHidden.startDate) + 1;\n        } else {\n          return isHidden.endDate + 1;\n        }\n      }\n    } else {\n      return time;\n    }\n  };\n\n  /**\n   * Check if a time is hidden\n   *\n   * @param time\n   * @param hiddenDates\n   * @returns {{hidden: boolean, startDate: Window.start, endDate: *}}\n   */\n  exports.isHidden = function (time, hiddenDates) {\n    for (var i = 0; i < hiddenDates.length; i++) {\n      var startDate = hiddenDates[i].start;\n      var endDate = hiddenDates[i].end;\n\n      if (time >= startDate && time < endDate) {\n        // if the start is entering a hidden zone\n        return { hidden: true, startDate: startDate, endDate: endDate };\n        break;\n      }\n    }\n    return { hidden: false, startDate: startDate, endDate: endDate };\n  };\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  var Emitter = __webpack_require__(13);\n  var Hammer = __webpack_require__(22);\n  var hammerUtil = __webpack_require__(30);\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(9);\n  var DataView = __webpack_require__(11);\n  var Range = __webpack_require__(32);\n  var ItemSet = __webpack_require__(36);\n  var TimeAxis = __webpack_require__(46);\n  var Activator = __webpack_require__(47);\n  var DateUtil = __webpack_require__(34);\n  var CustomTime = __webpack_require__(48);\n\n  /**\n   * Create a timeline visualization\n   * @constructor\n   */\n  function Core() {}\n\n  // turn Core into an event emitter\n  Emitter(Core.prototype);\n\n  /**\n   * Create the main DOM for the Core: a root panel containing left, right,\n   * top, bottom, content, and background panel.\n   * @param {Element} container  The container element where the Core will\n   *                             be attached.\n   * @protected\n   */\n  Core.prototype._create = function (container) {\n    this.dom = {};\n\n    this.dom.container = container;\n\n    this.dom.root = document.createElement('div');\n    this.dom.background = document.createElement('div');\n    this.dom.backgroundVertical = document.createElement('div');\n    this.dom.backgroundHorizontal = document.createElement('div');\n    this.dom.centerContainer = document.createElement('div');\n    this.dom.leftContainer = document.createElement('div');\n    this.dom.rightContainer = document.createElement('div');\n    this.dom.center = document.createElement('div');\n    this.dom.left = document.createElement('div');\n    this.dom.right = document.createElement('div');\n    this.dom.top = document.createElement('div');\n    this.dom.bottom = document.createElement('div');\n    this.dom.shadowTop = document.createElement('div');\n    this.dom.shadowBottom = document.createElement('div');\n    this.dom.shadowTopLeft = document.createElement('div');\n    this.dom.shadowBottomLeft = document.createElement('div');\n    this.dom.shadowTopRight = document.createElement('div');\n    this.dom.shadowBottomRight = document.createElement('div');\n\n    this.dom.root.className = 'vis-timeline';\n    this.dom.background.className = 'vis-panel vis-background';\n    this.dom.backgroundVertical.className = 'vis-panel vis-background vis-vertical';\n    this.dom.backgroundHorizontal.className = 'vis-panel vis-background vis-horizontal';\n    this.dom.centerContainer.className = 'vis-panel vis-center';\n    this.dom.leftContainer.className = 'vis-panel vis-left';\n    this.dom.rightContainer.className = 'vis-panel vis-right';\n    this.dom.top.className = 'vis-panel vis-top';\n    this.dom.bottom.className = 'vis-panel vis-bottom';\n    this.dom.left.className = 'vis-content';\n    this.dom.center.className = 'vis-content';\n    this.dom.right.className = 'vis-content';\n    this.dom.shadowTop.className = 'vis-shadow vis-top';\n    this.dom.shadowBottom.className = 'vis-shadow vis-bottom';\n    this.dom.shadowTopLeft.className = 'vis-shadow vis-top';\n    this.dom.shadowBottomLeft.className = 'vis-shadow vis-bottom';\n    this.dom.shadowTopRight.className = 'vis-shadow vis-top';\n    this.dom.shadowBottomRight.className = 'vis-shadow vis-bottom';\n\n    this.dom.root.appendChild(this.dom.background);\n    this.dom.root.appendChild(this.dom.backgroundVertical);\n    this.dom.root.appendChild(this.dom.backgroundHorizontal);\n    this.dom.root.appendChild(this.dom.centerContainer);\n    this.dom.root.appendChild(this.dom.leftContainer);\n    this.dom.root.appendChild(this.dom.rightContainer);\n    this.dom.root.appendChild(this.dom.top);\n    this.dom.root.appendChild(this.dom.bottom);\n\n    this.dom.centerContainer.appendChild(this.dom.center);\n    this.dom.leftContainer.appendChild(this.dom.left);\n    this.dom.rightContainer.appendChild(this.dom.right);\n    this.dom.centerContainer.appendChild(this.dom.shadowTop);\n    this.dom.centerContainer.appendChild(this.dom.shadowBottom);\n    this.dom.leftContainer.appendChild(this.dom.shadowTopLeft);\n    this.dom.leftContainer.appendChild(this.dom.shadowBottomLeft);\n    this.dom.rightContainer.appendChild(this.dom.shadowTopRight);\n    this.dom.rightContainer.appendChild(this.dom.shadowBottomRight);\n\n    // size properties of each of the panels\n    this.props = {\n      root: {},\n      background: {},\n      centerContainer: {},\n      leftContainer: {},\n      rightContainer: {},\n      center: {},\n      left: {},\n      right: {},\n      top: {},\n      bottom: {},\n      border: {},\n      scrollTop: 0,\n      scrollTopMin: 0\n    };\n\n    this.on('rangechange', function () {\n      if (this.initialDrawDone === true) {\n        this._redraw();\n      }\n    }.bind(this));\n    this.on('touch', this._onTouch.bind(this));\n    this.on('panmove', this._onDrag.bind(this));\n\n    var me = this;\n    this.on('_change', function (properties) {\n      if (properties && properties.queue == true) {\n        // redraw once on next tick\n        if (!me._redrawTimer) {\n          me._redrawTimer = setTimeout(function () {\n            me._redrawTimer = null;\n            me._redraw();\n          }, 0);\n        }\n      } else {\n        // redraw immediately\n        me._redraw();\n      }\n    });\n\n    // create event listeners for all interesting events, these events will be\n    // emitted via emitter\n    this.hammer = new Hammer(this.dom.root);\n    var pinchRecognizer = this.hammer.get('pinch').set({ enable: true });\n    hammerUtil.disablePreventDefaultVertically(pinchRecognizer);\n    this.hammer.get('pan').set({ threshold: 5, direction: Hammer.DIRECTION_HORIZONTAL });\n    this.listeners = {};\n\n    var events = ['tap', 'doubletap', 'press', 'pinch', 'pan', 'panstart', 'panmove', 'panend'\n    // TODO: cleanup\n    //'touch', 'pinch',\n    //'tap', 'doubletap', 'hold',\n    //'dragstart', 'drag', 'dragend',\n    //'mousewheel', 'DOMMouseScroll' // DOMMouseScroll is needed for Firefox\n    ];\n    events.forEach(function (type) {\n      var listener = function listener(event) {\n        if (me.isActive()) {\n          me.emit(type, event);\n        }\n      };\n      me.hammer.on(type, listener);\n      me.listeners[type] = listener;\n    });\n\n    // emulate a touch event (emitted before the start of a pan, pinch, tap, or press)\n    hammerUtil.onTouch(this.hammer, function (event) {\n      me.emit('touch', event);\n    }.bind(this));\n\n    // emulate a release event (emitted after a pan, pinch, tap, or press)\n    hammerUtil.onRelease(this.hammer, function (event) {\n      me.emit('release', event);\n    }.bind(this));\n\n    function onMouseWheel(event) {\n      if (this.isActive()) {\n        this.emit('mousewheel', event);\n      }\n\n      // prevent scrolling when zoomKey defined or activated\n      if (!this.options.zoomKey || event[this.options.zoomKey]) return;\n\n      // prevent scrolling vertically when horizontalScroll is true\n      if (this.options.horizontalScroll) return;\n\n      var delta = 0;\n      if (event.wheelDelta) {\n        /* IE/Opera. */\n        delta = event.wheelDelta / 120;\n      } else if (event.detail) {\n        /* Mozilla case. */\n        // In Mozilla, sign of delta is different than in IE.\n        // Also, delta is multiple of 3.\n        delta = -event.detail / 3;\n      }\n\n      var current = this.props.scrollTop;\n      var adjusted = current + delta * 120;\n\n      if (this.isActive()) {\n        this._setScrollTop(adjusted);\n        if (this.options.verticalScroll) {\n          this.dom.left.parentNode.scrollTop = -adjusted;\n          this.dom.right.parentNode.scrollTop = -adjusted;\n        }\n        this._redraw();\n        this.emit('scroll', event);\n      }\n\n      // Prevent default actions caused by mouse wheel\n      // (else the page and timeline both scroll)\n      event.preventDefault();\n    }\n\n    if (this.dom.centerContainer.addEventListener) {\n      // IE9, Chrome, Safari, Opera\n      this.dom.centerContainer.addEventListener(\"mousewheel\", onMouseWheel.bind(this), false);\n      // Firefox\n      this.dom.centerContainer.addEventListener(\"DOMMouseScroll\", onMouseWheel.bind(this), false);\n    } else {\n      // IE 6/7/8\n      this.dom.centerContainer.attachEvent(\"onmousewheel\", onMouseWheel.bind(this));\n    }\n\n    function onMouseScrollSide(event) {\n      if (!me.options.verticalScroll) return;\n      event.preventDefault();\n      if (me.isActive()) {\n        var adjusted = -event.target.scrollTop;\n        me._setScrollTop(adjusted);\n        me._redraw();\n        me.emit('scrollSide', event);\n      }\n    }\n\n    this.dom.left.parentNode.addEventListener('scroll', onMouseScrollSide.bind(this));\n    this.dom.right.parentNode.addEventListener('scroll', onMouseScrollSide.bind(this));\n\n    var itemAddedToTimeline = false;\n\n    function handleDragOver(event) {\n      if (event.preventDefault) {\n        event.preventDefault(); // Necessary. Allows us to drop.\n      }\n\n      // make sure your target is a vis element\n      if (!event.target.className.includes('vis')) return;\n\n      // make sure only one item is added every time you're over the timeline\n      if (itemAddedToTimeline) return;\n\n      event.dataTransfer.dropEffect = 'move';\n      itemAddedToTimeline = true;\n      return false;\n    }\n\n    function handleDrop(event) {\n      // return when dropping non-vis items \n      try {\n        var itemData = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n        if (!itemData.content) return;\n      } catch (err) {\n        return false;\n      }\n\n      itemAddedToTimeline = false;\n      event.center = {\n        x: event.x,\n        y: event.y\n      };\n      me.itemSet._onAddItem(event);\n\n      return false;\n    }\n\n    this.dom.center.addEventListener('dragover', handleDragOver.bind(this), false);\n    this.dom.center.addEventListener('drop', handleDrop.bind(this), false);\n\n    this.customTimes = [];\n\n    // store state information needed for touch events\n    this.touch = {};\n\n    this.redrawCount = 0;\n    this.initialDrawDone = false;\n\n    // attach the root panel to the provided container\n    if (!container) throw new Error('No container provided');\n    container.appendChild(this.dom.root);\n  };\n\n  /**\n   * Set options. Options will be passed to all components loaded in the Timeline.\n   * @param {Object} [options]\n   *                           {String} orientation\n   *                              Vertical orientation for the Timeline,\n   *                              can be 'bottom' (default) or 'top'.\n   *                           {String | Number} width\n   *                              Width for the timeline, a number in pixels or\n   *                              a css string like '1000px' or '75%'. '100%' by default.\n   *                           {String | Number} height\n   *                              Fixed height for the Timeline, a number in pixels or\n   *                              a css string like '400px' or '75%'. If undefined,\n   *                              The Timeline will automatically size such that\n   *                              its contents fit.\n   *                           {String | Number} minHeight\n   *                              Minimum height for the Timeline, a number in pixels or\n   *                              a css string like '400px' or '75%'.\n   *                           {String | Number} maxHeight\n   *                              Maximum height for the Timeline, a number in pixels or\n   *                              a css string like '400px' or '75%'.\n   *                           {Number | Date | String} start\n   *                              Start date for the visible window\n   *                           {Number | Date | String} end\n   *                              End date for the visible window\n   */\n  Core.prototype.setOptions = function (options) {\n    if (options) {\n      // copy the known options\n      var fields = ['width', 'height', 'minHeight', 'maxHeight', 'autoResize', 'start', 'end', 'clickToUse', 'dataAttributes', 'hiddenDates', 'locale', 'locales', 'moment', 'rtl', 'zoomKey', 'horizontalScroll', 'verticalScroll'];\n      util.selectiveExtend(fields, this.options, options);\n\n      if (this.options.rtl) {\n        this.dom.container.style.direction = \"rtl\";\n        this.dom.backgroundVertical.className = 'vis-panel vis-background vis-vertical-rtl';\n      }\n\n      if (this.options.verticalScroll) {\n        if (this.options.rtl) {\n          this.dom.rightContainer.className = 'vis-panel vis-right vis-vertical-scroll';\n        } else {\n          this.dom.leftContainer.className = 'vis-panel vis-left vis-vertical-scroll';\n        }\n      }\n\n      this.options.orientation = { item: undefined, axis: undefined };\n      if ('orientation' in options) {\n        if (typeof options.orientation === 'string') {\n          this.options.orientation = {\n            item: options.orientation,\n            axis: options.orientation\n          };\n        } else if (_typeof(options.orientation) === 'object') {\n          if ('item' in options.orientation) {\n            this.options.orientation.item = options.orientation.item;\n          }\n          if ('axis' in options.orientation) {\n            this.options.orientation.axis = options.orientation.axis;\n          }\n        }\n      }\n\n      if (this.options.orientation.axis === 'both') {\n        if (!this.timeAxis2) {\n          var timeAxis2 = this.timeAxis2 = new TimeAxis(this.body);\n          timeAxis2.setOptions = function (options) {\n            var _options = options ? util.extend({}, options) : {};\n            _options.orientation = 'top'; // override the orientation option, always top\n            TimeAxis.prototype.setOptions.call(timeAxis2, _options);\n          };\n          this.components.push(timeAxis2);\n        }\n      } else {\n        if (this.timeAxis2) {\n          var index = this.components.indexOf(this.timeAxis2);\n          if (index !== -1) {\n            this.components.splice(index, 1);\n          }\n          this.timeAxis2.destroy();\n          this.timeAxis2 = null;\n        }\n      }\n\n      // if the graph2d's drawPoints is a function delegate the callback to the onRender property\n      if (typeof options.drawPoints == 'function') {\n        options.drawPoints = {\n          onRender: options.drawPoints\n        };\n      }\n\n      if ('hiddenDates' in this.options) {\n        DateUtil.convertHiddenOptions(this.options.moment, this.body, this.options.hiddenDates);\n      }\n\n      if ('clickToUse' in options) {\n        if (options.clickToUse) {\n          if (!this.activator) {\n            this.activator = new Activator(this.dom.root);\n          }\n        } else {\n          if (this.activator) {\n            this.activator.destroy();\n            delete this.activator;\n          }\n        }\n      }\n\n      if ('showCustomTime' in options) {\n        throw new Error('Option `showCustomTime` is deprecated. Create a custom time bar via timeline.addCustomTime(time [, id])');\n      }\n\n      // enable/disable autoResize\n      this._initAutoResize();\n    }\n\n    // propagate options to all components\n    this.components.forEach(function (component) {\n      return component.setOptions(options);\n    });\n\n    // enable/disable configure\n    if ('configure' in options) {\n      if (!this.configurator) {\n        this.configurator = this._createConfigurator();\n      }\n\n      this.configurator.setOptions(options.configure);\n\n      // collect the settings of all components, and pass them to the configuration system\n      var appliedOptions = util.deepExtend({}, this.options);\n      this.components.forEach(function (component) {\n        util.deepExtend(appliedOptions, component.options);\n      });\n      this.configurator.setModuleOptions({ global: appliedOptions });\n    }\n\n    // override redraw with a throttled version\n    if (!this._origRedraw) {\n      this._origRedraw = this._redraw.bind(this);\n      this._redraw = util.throttle(this._origRedraw);\n    } else {\n      // Not the initial run: redraw everything\n      this._redraw();\n    }\n  };\n\n  /**\n   * Returns true when the Timeline is active.\n   * @returns {boolean}\n   */\n  Core.prototype.isActive = function () {\n    return !this.activator || this.activator.active;\n  };\n\n  /**\n   * Destroy the Core, clean up all DOM elements and event listeners.\n   */\n  Core.prototype.destroy = function () {\n    // unbind datasets\n    this.setItems(null);\n    this.setGroups(null);\n\n    // remove all event listeners\n    this.off();\n\n    // stop checking for changed size\n    this._stopAutoResize();\n\n    // remove from DOM\n    if (this.dom.root.parentNode) {\n      this.dom.root.parentNode.removeChild(this.dom.root);\n    }\n    this.dom = null;\n\n    // remove Activator\n    if (this.activator) {\n      this.activator.destroy();\n      delete this.activator;\n    }\n\n    // cleanup hammer touch events\n    for (var event in this.listeners) {\n      if (this.listeners.hasOwnProperty(event)) {\n        delete this.listeners[event];\n      }\n    }\n    this.listeners = null;\n    this.hammer = null;\n\n    // give all components the opportunity to cleanup\n    this.components.forEach(function (component) {\n      return component.destroy();\n    });\n\n    this.body = null;\n  };\n\n  /**\n   * Set a custom time bar\n   * @param {Date} time\n   * @param {number} [id=undefined] Optional id of the custom time bar to be adjusted.\n   */\n  Core.prototype.setCustomTime = function (time, id) {\n    var customTimes = this.customTimes.filter(function (component) {\n      return id === component.options.id;\n    });\n\n    if (customTimes.length === 0) {\n      throw new Error('No custom time bar found with id ' + JSON.stringify(id));\n    }\n\n    if (customTimes.length > 0) {\n      customTimes[0].setCustomTime(time);\n    }\n  };\n\n  /**\n   * Retrieve the current custom time.\n   * @param {number} [id=undefined]    Id of the custom time bar.\n   * @return {Date | undefined} customTime\n   */\n  Core.prototype.getCustomTime = function (id) {\n    var customTimes = this.customTimes.filter(function (component) {\n      return component.options.id === id;\n    });\n\n    if (customTimes.length === 0) {\n      throw new Error('No custom time bar found with id ' + JSON.stringify(id));\n    }\n    return customTimes[0].getCustomTime();\n  };\n\n  /**\n   * Set a custom title for the custom time bar.\n   * @param {String} [title] Custom title\n   * @param {number} [id=undefined]    Id of the custom time bar.\n   */\n  Core.prototype.setCustomTimeTitle = function (title, id) {\n    var customTimes = this.customTimes.filter(function (component) {\n      return component.options.id === id;\n    });\n\n    if (customTimes.length === 0) {\n      throw new Error('No custom time bar found with id ' + JSON.stringify(id));\n    }\n    if (customTimes.length > 0) {\n      return customTimes[0].setCustomTitle(title);\n    }\n  };\n\n  /**\n   * Retrieve meta information from an event.\n   * Should be overridden by classes extending Core\n   * @param {Event} event\n   * @return {Object} An object with related information.\n   */\n  Core.prototype.getEventProperties = function (event) {\n    return { event: event };\n  };\n\n  /**\n   * Add custom vertical bar\n   * @param {Date | String | Number} [time]  A Date, unix timestamp, or\n   *                                         ISO date string. Time point where\n   *                                         the new bar should be placed.\n   *                                         If not provided, `new Date()` will\n   *                                         be used.\n   * @param {Number | String} [id=undefined] Id of the new bar. Optional\n   * @return {Number | String}               Returns the id of the new bar\n   */\n  Core.prototype.addCustomTime = function (time, id) {\n    var timestamp = time !== undefined ? util.convert(time, 'Date').valueOf() : new Date();\n\n    var exists = this.customTimes.some(function (customTime) {\n      return customTime.options.id === id;\n    });\n    if (exists) {\n      throw new Error('A custom time with id ' + JSON.stringify(id) + ' already exists');\n    }\n\n    var customTime = new CustomTime(this.body, util.extend({}, this.options, {\n      time: timestamp,\n      id: id\n    }));\n\n    this.customTimes.push(customTime);\n    this.components.push(customTime);\n    this._redraw();\n\n    return id;\n  };\n\n  /**\n   * Remove previously added custom bar\n   * @param {int} id ID of the custom bar to be removed\n   * @return {boolean} True if the bar exists and is removed, false otherwise\n   */\n  Core.prototype.removeCustomTime = function (id) {\n    var customTimes = this.customTimes.filter(function (bar) {\n      return bar.options.id === id;\n    });\n\n    if (customTimes.length === 0) {\n      throw new Error('No custom time bar found with id ' + JSON.stringify(id));\n    }\n\n    customTimes.forEach(function (customTime) {\n      this.customTimes.splice(this.customTimes.indexOf(customTime), 1);\n      this.components.splice(this.components.indexOf(customTime), 1);\n      customTime.destroy();\n    }.bind(this));\n  };\n\n  /**\n   * Get the id's of the currently visible items.\n   * @returns {Array} The ids of the visible items\n   */\n  Core.prototype.getVisibleItems = function () {\n    return this.itemSet && this.itemSet.getVisibleItems() || [];\n  };\n\n  /**\n   * Set Core window such that it fits all items\n   * @param {Object} [options]  Available options:\n   *                                `animation: boolean | {duration: number, easingFunction: string}`\n   *                                    If true (default), the range is animated\n   *                                    smoothly to the new window. An object can be\n   *                                    provided to specify duration and easing function.\n   *                                    Default duration is 500 ms, and default easing\n   *                                    function is 'easeInOutQuad'.\n   */\n  Core.prototype.fit = function (options) {\n    var range = this.getDataRange();\n\n    // skip range set if there is no min and max date\n    if (range.min === null && range.max === null) {\n      return;\n    }\n\n    // apply a margin of 1% left and right of the data\n    var interval = range.max - range.min;\n    var min = new Date(range.min.valueOf() - interval * 0.01);\n    var max = new Date(range.max.valueOf() + interval * 0.01);\n    var animation = options && options.animation !== undefined ? options.animation : true;\n    this.range.setRange(min, max, animation);\n  };\n\n  /**\n   * Calculate the data range of the items start and end dates\n   * @returns {{min: Date | null, max: Date | null}}\n   * @protected\n   */\n  Core.prototype.getDataRange = function () {\n    // must be implemented by Timeline and Graph2d\n    throw new Error('Cannot invoke abstract method getDataRange');\n  };\n\n  /**\n   * Set the visible window. Both parameters are optional, you can change only\n   * start or only end. Syntax:\n   *\n   *     TimeLine.setWindow(start, end)\n   *     TimeLine.setWindow(start, end, options)\n   *     TimeLine.setWindow(range)\n   *\n   * Where start and end can be a Date, number, or string, and range is an\n   * object with properties start and end.\n   *\n   * @param {Date | Number | String | Object} [start] Start date of visible window\n   * @param {Date | Number | String} [end]            End date of visible window\n   * @param {Object} [options]  Available options:\n   *                                `animation: boolean | {duration: number, easingFunction: string}`\n   *                                    If true (default), the range is animated\n   *                                    smoothly to the new window. An object can be\n   *                                    provided to specify duration and easing function.\n   *                                    Default duration is 500 ms, and default easing\n   *                                    function is 'easeInOutQuad'.\n   */\n  Core.prototype.setWindow = function (start, end, options) {\n    var animation;\n    if (arguments.length == 1) {\n      var range = arguments[0];\n      animation = range.animation !== undefined ? range.animation : true;\n      this.range.setRange(range.start, range.end, animation);\n    } else {\n      animation = options && options.animation !== undefined ? options.animation : true;\n      this.range.setRange(start, end, animation);\n    }\n  };\n\n  /**\n   * Move the window such that given time is centered on screen.\n   * @param {Date | Number | String} time\n   * @param {Object} [options]  Available options:\n   *                                `animation: boolean | {duration: number, easingFunction: string}`\n   *                                    If true (default), the range is animated\n   *                                    smoothly to the new window. An object can be\n   *                                    provided to specify duration and easing function.\n   *                                    Default duration is 500 ms, and default easing\n   *                                    function is 'easeInOutQuad'.\n   */\n  Core.prototype.moveTo = function (time, options) {\n    var interval = this.range.end - this.range.start;\n    var t = util.convert(time, 'Date').valueOf();\n\n    var start = t - interval / 2;\n    var end = t + interval / 2;\n    var animation = options && options.animation !== undefined ? options.animation : true;\n\n    this.range.setRange(start, end, animation);\n  };\n\n  /**\n   * Get the visible window\n   * @return {{start: Date, end: Date}}   Visible range\n   */\n  Core.prototype.getWindow = function () {\n    var range = this.range.getRange();\n    return {\n      start: new Date(range.start),\n      end: new Date(range.end)\n    };\n  };\n\n  /**\n   * Zoom in the window such that given time is centered on screen.\n   * @param {Number} percentage - must be between [0..1]\n   */\n  Core.prototype.zoomIn = function (percentage) {\n    if (!percentage || percentage < 0 || percentage > 1) return;\n    var range = this.getWindow();\n    var start = range.start.valueOf();\n    var end = range.end.valueOf();\n    var interval = end - start;\n    var newInterval = interval / (1 + percentage);\n    var distance = (interval - newInterval) / 2;\n    var newStart = start + distance;\n    var newEnd = end - distance;\n\n    this.setWindow({\n      start: newStart,\n      end: newEnd\n    });\n  };\n\n  /**\n   * Zoom out the window such that given time is centered on screen.\n   * @param {Number} percentage - must be between [0..1]\n   */\n  Core.prototype.zoomOut = function (percentage) {\n    if (!percentage || percentage < 0 || percentage > 1) return;\n    var range = this.getWindow();\n    var start = range.start.valueOf();\n    var end = range.end.valueOf();\n    var interval = end - start;\n    var newStart = start - interval * percentage / 2;\n    var newEnd = end + interval * percentage / 2;\n\n    this.setWindow({\n      start: newStart,\n      end: newEnd\n    });\n  };\n\n  /**\n   * Force a redraw. Can be overridden by implementations of Core\n   *\n   * Note: this function will be overridden on construction with a trottled version\n   */\n  Core.prototype.redraw = function () {\n    this._redraw();\n  };\n\n  /**\n   * Redraw for internal use. Redraws all components. See also the public\n   * method redraw.\n   * @protected\n   */\n  Core.prototype._redraw = function () {\n    this.redrawCount++;\n    var resized = false;\n    var options = this.options;\n    var props = this.props;\n    var dom = this.dom;\n\n    if (!dom || !dom.container || dom.root.offsetWidth == 0) return; // when destroyed, or invisible\n\n    DateUtil.updateHiddenDates(this.options.moment, this.body, this.options.hiddenDates);\n\n    // update class names\n    if (options.orientation == 'top') {\n      util.addClassName(dom.root, 'vis-top');\n      util.removeClassName(dom.root, 'vis-bottom');\n    } else {\n      util.removeClassName(dom.root, 'vis-top');\n      util.addClassName(dom.root, 'vis-bottom');\n    }\n\n    // update root width and height options\n    dom.root.style.maxHeight = util.option.asSize(options.maxHeight, '');\n    dom.root.style.minHeight = util.option.asSize(options.minHeight, '');\n    dom.root.style.width = util.option.asSize(options.width, '');\n\n    // calculate border widths\n    props.border.left = (dom.centerContainer.offsetWidth - dom.centerContainer.clientWidth) / 2;\n    props.border.right = props.border.left;\n    props.border.top = (dom.centerContainer.offsetHeight - dom.centerContainer.clientHeight) / 2;\n    props.border.bottom = props.border.top;\n    var borderRootHeight = dom.root.offsetHeight - dom.root.clientHeight;\n    var borderRootWidth = dom.root.offsetWidth - dom.root.clientWidth;\n\n    // workaround for a bug in IE: the clientWidth of an element with\n    // a height:0px and overflow:hidden is not calculated and always has value 0\n    if (dom.centerContainer.clientHeight === 0) {\n      props.border.left = props.border.top;\n      props.border.right = props.border.left;\n    }\n    if (dom.root.clientHeight === 0) {\n      borderRootWidth = borderRootHeight;\n    }\n\n    // calculate the heights. If any of the side panels is empty, we set the height to\n    // minus the border width, such that the border will be invisible\n    props.center.height = dom.center.offsetHeight;\n    props.left.height = dom.left.offsetHeight;\n    props.right.height = dom.right.offsetHeight;\n    props.top.height = dom.top.clientHeight || -props.border.top;\n    props.bottom.height = dom.bottom.clientHeight || -props.border.bottom;\n\n    // TODO: compensate borders when any of the panels is empty.\n\n    // apply auto height\n    // TODO: only calculate autoHeight when needed (else we cause an extra reflow/repaint of the DOM)\n    var contentHeight = Math.max(props.left.height, props.center.height, props.right.height);\n    var autoHeight = props.top.height + contentHeight + props.bottom.height + borderRootHeight + props.border.top + props.border.bottom;\n    dom.root.style.height = util.option.asSize(options.height, autoHeight + 'px');\n\n    // calculate heights of the content panels\n    props.root.height = dom.root.offsetHeight;\n    props.background.height = props.root.height - borderRootHeight;\n    var containerHeight = props.root.height - props.top.height - props.bottom.height - borderRootHeight;\n    props.centerContainer.height = containerHeight;\n    props.leftContainer.height = containerHeight;\n    props.rightContainer.height = props.leftContainer.height;\n\n    // calculate the widths of the panels\n    props.root.width = dom.root.offsetWidth;\n    props.background.width = props.root.width - borderRootWidth;\n\n    if (!this.initialDrawDone) {\n      props.scrollbarWidth = util.getScrollBarWidth();\n    }\n\n    if (this.options.verticalScroll) {\n      if (this.options.rtl) {\n        props.left.width = dom.leftContainer.clientWidth || -props.border.left;\n        props.right.width = dom.rightContainer.clientWidth + props.scrollbarWidth || -props.border.right;\n      } else {\n        props.left.width = dom.leftContainer.clientWidth + props.scrollbarWidth || -props.border.left;\n        props.right.width = dom.rightContainer.clientWidth || -props.border.right;\n      }\n    } else {\n      props.left.width = dom.leftContainer.clientWidth || -props.border.left;\n      props.right.width = dom.rightContainer.clientWidth || -props.border.right;\n    }\n\n    props.leftContainer.width = props.left.width;\n    props.rightContainer.width = props.right.width;\n    var centerWidth = props.root.width - props.left.width - props.right.width - borderRootWidth;\n    props.center.width = centerWidth;\n    props.centerContainer.width = centerWidth;\n    props.top.width = centerWidth;\n    props.bottom.width = centerWidth;\n\n    // resize the panels\n    dom.background.style.height = props.background.height + 'px';\n    dom.backgroundVertical.style.height = props.background.height + 'px';\n    dom.backgroundHorizontal.style.height = props.centerContainer.height + 'px';\n    dom.centerContainer.style.height = props.centerContainer.height + 'px';\n    dom.leftContainer.style.height = props.leftContainer.height + 'px';\n    dom.rightContainer.style.height = props.rightContainer.height + 'px';\n\n    dom.background.style.width = props.background.width + 'px';\n    dom.backgroundVertical.style.width = props.centerContainer.width + 'px';\n    dom.backgroundHorizontal.style.width = props.background.width + 'px';\n    dom.centerContainer.style.width = props.center.width + 'px';\n    dom.top.style.width = props.top.width + 'px';\n    dom.bottom.style.width = props.bottom.width + 'px';\n\n    // reposition the panels\n    dom.background.style.left = '0';\n    dom.background.style.top = '0';\n    dom.backgroundVertical.style.left = props.left.width + props.border.left + 'px';\n    dom.backgroundVertical.style.top = '0';\n    dom.backgroundHorizontal.style.left = '0';\n    dom.backgroundHorizontal.style.top = props.top.height + 'px';\n    dom.centerContainer.style.left = props.left.width + 'px';\n    dom.centerContainer.style.top = props.top.height + 'px';\n    dom.leftContainer.style.left = '0';\n    dom.leftContainer.style.top = props.top.height + 'px';\n    dom.rightContainer.style.left = props.left.width + props.center.width + 'px';\n    dom.rightContainer.style.top = props.top.height + 'px';\n    dom.top.style.left = props.left.width + 'px';\n    dom.top.style.top = '0';\n    dom.bottom.style.left = props.left.width + 'px';\n    dom.bottom.style.top = props.top.height + props.centerContainer.height + 'px';\n\n    // update the scrollTop, feasible range for the offset can be changed\n    // when the height of the Core or of the contents of the center changed\n    var offset = this._updateScrollTop();\n\n    // reposition the scrollable contents\n    if (options.orientation.item != 'top') {\n      offset += Math.max(this.props.centerContainer.height - this.props.center.height - this.props.border.top - this.props.border.bottom, 0);\n    }\n    dom.center.style.left = '0';\n    dom.center.style.top = offset + 'px';\n    dom.left.style.left = '0';\n    dom.right.style.left = '0';\n\n    // show shadows when vertical scrolling is available\n    var visibilityTop = this.props.scrollTop == 0 ? 'hidden' : '';\n    var visibilityBottom = this.props.scrollTop == this.props.scrollTopMin ? 'hidden' : '';\n    dom.shadowTop.style.visibility = visibilityTop;\n    dom.shadowBottom.style.visibility = visibilityBottom;\n    dom.shadowTopLeft.style.visibility = visibilityTop;\n    dom.shadowBottomLeft.style.visibility = visibilityBottom;\n    dom.shadowTopRight.style.visibility = visibilityTop;\n    dom.shadowBottomRight.style.visibility = visibilityBottom;\n\n    if (this.options.verticalScroll) {\n      dom.shadowTopRight.style.visibility = \"hidden\";\n      dom.shadowBottomRight.style.visibility = \"hidden\";\n      dom.shadowTopLeft.style.visibility = \"hidden\";\n      dom.shadowBottomLeft.style.visibility = \"hidden\";\n    } else {\n      dom.left.style.top = offset + 'px';\n      dom.right.style.top = offset + 'px';\n    }\n\n    // enable/disable vertical panning\n    var contentsOverflow = this.props.center.height > this.props.centerContainer.height;\n    this.hammer.get('pan').set({\n      direction: contentsOverflow ? Hammer.DIRECTION_ALL : Hammer.DIRECTION_HORIZONTAL\n    });\n\n    // redraw all components\n    this.components.forEach(function (component) {\n      resized = component.redraw() || resized;\n    });\n    var MAX_REDRAW = 5;\n    if (resized) {\n      if (this.redrawCount < MAX_REDRAW) {\n        this.body.emitter.emit('_change');\n        return;\n      } else {\n        console.log('WARNING: infinite loop in redraw?');\n      }\n    } else {\n      this.redrawCount = 0;\n    }\n\n    this.initialDrawDone = true;\n\n    //Emit public 'changed' event for UI updates, see issue #1592\n    this.body.emitter.emit(\"changed\");\n  };\n\n  // TODO: deprecated since version 1.1.0, remove some day\n  Core.prototype.repaint = function () {\n    throw new Error('Function repaint is deprecated. Use redraw instead.');\n  };\n\n  /**\n   * Set a current time. This can be used for example to ensure that a client's\n   * time is synchronized with a shared server time.\n   * Only applicable when option `showCurrentTime` is true.\n   * @param {Date | String | Number} time     A Date, unix timestamp, or\n   *                                          ISO date string.\n   */\n  Core.prototype.setCurrentTime = function (time) {\n    if (!this.currentTime) {\n      throw new Error('Option showCurrentTime must be true');\n    }\n\n    this.currentTime.setCurrentTime(time);\n  };\n\n  /**\n   * Get the current time.\n   * Only applicable when option `showCurrentTime` is true.\n   * @return {Date} Returns the current time.\n   */\n  Core.prototype.getCurrentTime = function () {\n    if (!this.currentTime) {\n      throw new Error('Option showCurrentTime must be true');\n    }\n\n    return this.currentTime.getCurrentTime();\n  };\n\n  /**\n   * Convert a position on screen (pixels) to a datetime\n   * @param {int}     x    Position on the screen in pixels\n   * @return {Date}   time The datetime the corresponds with given position x\n   * @protected\n   */\n  // TODO: move this function to Range\n  Core.prototype._toTime = function (x) {\n    return DateUtil.toTime(this, x, this.props.center.width);\n  };\n\n  /**\n   * Convert a position on the global screen (pixels) to a datetime\n   * @param {int}     x    Position on the screen in pixels\n   * @return {Date}   time The datetime the corresponds with given position x\n   * @protected\n   */\n  // TODO: move this function to Range\n  Core.prototype._toGlobalTime = function (x) {\n    return DateUtil.toTime(this, x, this.props.root.width);\n    //var conversion = this.range.conversion(this.props.root.width);\n    //return new Date(x / conversion.scale + conversion.offset);\n  };\n\n  /**\n   * Convert a datetime (Date object) into a position on the screen\n   * @param {Date}   time A date\n   * @return {int}   x    The position on the screen in pixels which corresponds\n   *                      with the given date.\n   * @protected\n   */\n  // TODO: move this function to Range\n  Core.prototype._toScreen = function (time) {\n    return DateUtil.toScreen(this, time, this.props.center.width);\n  };\n\n  /**\n   * Convert a datetime (Date object) into a position on the root\n   * This is used to get the pixel density estimate for the screen, not the center panel\n   * @param {Date}   time A date\n   * @return {int}   x    The position on root in pixels which corresponds\n   *                      with the given date.\n   * @protected\n   */\n  // TODO: move this function to Range\n  Core.prototype._toGlobalScreen = function (time) {\n    return DateUtil.toScreen(this, time, this.props.root.width);\n    //var conversion = this.range.conversion(this.props.root.width);\n    //return (time.valueOf() - conversion.offset) * conversion.scale;\n  };\n\n  /**\n   * Initialize watching when option autoResize is true\n   * @private\n   */\n  Core.prototype._initAutoResize = function () {\n    if (this.options.autoResize == true) {\n      this._startAutoResize();\n    } else {\n      this._stopAutoResize();\n    }\n  };\n\n  /**\n   * Watch for changes in the size of the container. On resize, the Panel will\n   * automatically redraw itself.\n   * @private\n   */\n  Core.prototype._startAutoResize = function () {\n    var me = this;\n\n    this._stopAutoResize();\n\n    this._onResize = function () {\n      if (me.options.autoResize != true) {\n        // stop watching when the option autoResize is changed to false\n        me._stopAutoResize();\n        return;\n      }\n\n      if (me.dom.root) {\n        // check whether the frame is resized\n        // Note: we compare offsetWidth here, not clientWidth. For some reason,\n        // IE does not restore the clientWidth from 0 to the actual width after\n        // changing the timeline's container display style from none to visible\n        if (me.dom.root.offsetWidth != me.props.lastWidth || me.dom.root.offsetHeight != me.props.lastHeight) {\n          me.props.lastWidth = me.dom.root.offsetWidth;\n          me.props.lastHeight = me.dom.root.offsetHeight;\n\n          me.body.emitter.emit('_change');\n        }\n      }\n    };\n\n    // add event listener to window resize\n    util.addEventListener(window, 'resize', this._onResize);\n\n    //Prevent initial unnecessary redraw\n    if (me.dom.root) {\n      me.props.lastWidth = me.dom.root.offsetWidth;\n      me.props.lastHeight = me.dom.root.offsetHeight;\n    }\n\n    this.watchTimer = setInterval(this._onResize, 1000);\n  };\n\n  /**\n   * Stop watching for a resize of the frame.\n   * @private\n   */\n  Core.prototype._stopAutoResize = function () {\n    if (this.watchTimer) {\n      clearInterval(this.watchTimer);\n      this.watchTimer = undefined;\n    }\n\n    // remove event listener on window.resize\n    if (this._onResize) {\n      util.removeEventListener(window, 'resize', this._onResize);\n      this._onResize = null;\n    }\n  };\n\n  /**\n   * Start moving the timeline vertically\n   * @param {Event} event\n   * @private\n   */\n  Core.prototype._onTouch = function (event) {\n    this.touch.allowDragging = true;\n    this.touch.initialScrollTop = this.props.scrollTop;\n  };\n\n  /**\n   * Start moving the timeline vertically\n   * @param {Event} event\n   * @private\n   */\n  Core.prototype._onPinch = function (event) {\n    this.touch.allowDragging = false;\n  };\n\n  /**\n   * Move the timeline vertically\n   * @param {Event} event\n   * @private\n   */\n  Core.prototype._onDrag = function (event) {\n    if (!event) return;\n    // refuse to drag when we where pinching to prevent the timeline make a jump\n    // when releasing the fingers in opposite order from the touch screen\n    if (!this.touch.allowDragging) return;\n\n    var delta = event.deltaY;\n\n    var oldScrollTop = this._getScrollTop();\n    var newScrollTop = this._setScrollTop(this.touch.initialScrollTop + delta);\n\n    if (this.options.verticalScroll) {\n      this.dom.left.parentNode.scrollTop = -this.props.scrollTop;\n      this.dom.right.parentNode.scrollTop = -this.props.scrollTop;\n    }\n\n    if (newScrollTop != oldScrollTop) {\n      this.emit(\"verticalDrag\");\n    }\n  };\n\n  /**\n   * Apply a scrollTop\n   * @param {Number} scrollTop\n   * @returns {Number} scrollTop  Returns the applied scrollTop\n   * @private\n   */\n  Core.prototype._setScrollTop = function (scrollTop) {\n    this.props.scrollTop = scrollTop;\n    this._updateScrollTop();\n    return this.props.scrollTop;\n  };\n\n  /**\n   * Update the current scrollTop when the height of  the containers has been changed\n   * @returns {Number} scrollTop  Returns the applied scrollTop\n   * @private\n   */\n  Core.prototype._updateScrollTop = function () {\n    // recalculate the scrollTopMin\n    var scrollTopMin = Math.min(this.props.centerContainer.height - this.props.center.height, 0); // is negative or zero\n    if (scrollTopMin != this.props.scrollTopMin) {\n      // in case of bottom orientation, change the scrollTop such that the contents\n      // do not move relative to the time axis at the bottom\n      if (this.options.orientation.item != 'top') {\n        this.props.scrollTop += scrollTopMin - this.props.scrollTopMin;\n      }\n      this.props.scrollTopMin = scrollTopMin;\n    }\n\n    // limit the scrollTop to the feasible scroll range\n    if (this.props.scrollTop > 0) this.props.scrollTop = 0;\n    if (this.props.scrollTop < scrollTopMin) this.props.scrollTop = scrollTopMin;\n\n    return this.props.scrollTop;\n  };\n\n  /**\n   * Get the current scrollTop\n   * @returns {number} scrollTop\n   * @private\n   */\n  Core.prototype._getScrollTop = function () {\n    return this.props.scrollTop;\n  };\n\n  /**\n   * Load a configurator\n   * @return {Object}\n   * @private\n   */\n  Core.prototype._createConfigurator = function () {\n    throw new Error('Cannot invoke abstract method _createConfigurator');\n  };\n\n  module.exports = Core;\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  var Hammer = __webpack_require__(22);\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(9);\n  var DataView = __webpack_require__(11);\n  var TimeStep = __webpack_require__(37);\n  var Component = __webpack_require__(33);\n  var Group = __webpack_require__(38);\n  var BackgroundGroup = __webpack_require__(42);\n  var BoxItem = __webpack_require__(43);\n  var PointItem = __webpack_require__(44);\n  var RangeItem = __webpack_require__(40);\n  var BackgroundItem = __webpack_require__(45);\n\n  var UNGROUPED = '__ungrouped__'; // reserved group id for ungrouped items\n  var BACKGROUND = '__background__'; // reserved group id for background items without group\n\n  /**\n   * An ItemSet holds a set of items and ranges which can be displayed in a\n   * range. The width is determined by the parent of the ItemSet, and the height\n   * is determined by the size of the items.\n   * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} body\n   * @param {Object} [options]      See ItemSet.setOptions for the available options.\n   * @constructor ItemSet\n   * @extends Component\n   */\n  function ItemSet(body, options) {\n    this.body = body;\n    this.defaultOptions = {\n      type: null, // 'box', 'point', 'range', 'background'\n      orientation: {\n        item: 'bottom' // item orientation: 'top' or 'bottom'\n      },\n      align: 'auto', // alignment of box items\n      stack: true,\n      groupOrderSwap: function groupOrderSwap(fromGroup, toGroup, groups) {\n        var targetOrder = toGroup.order;\n        toGroup.order = fromGroup.order;\n        fromGroup.order = targetOrder;\n      },\n      groupOrder: 'order',\n\n      selectable: true,\n      multiselect: false,\n      itemsAlwaysDraggable: false,\n\n      editable: {\n        updateTime: false,\n        updateGroup: false,\n        add: false,\n        remove: false\n      },\n\n      groupEditable: {\n        order: false,\n        add: false,\n        remove: false\n      },\n\n      snap: TimeStep.snap,\n\n      onAdd: function onAdd(item, callback) {\n        callback(item);\n      },\n      onUpdate: function onUpdate(item, callback) {\n        callback(item);\n      },\n      onMove: function onMove(item, callback) {\n        callback(item);\n      },\n      onRemove: function onRemove(item, callback) {\n        callback(item);\n      },\n      onMoving: function onMoving(item, callback) {\n        callback(item);\n      },\n      onAddGroup: function onAddGroup(item, callback) {\n        callback(item);\n      },\n      onMoveGroup: function onMoveGroup(item, callback) {\n        callback(item);\n      },\n      onRemoveGroup: function onRemoveGroup(item, callback) {\n        callback(item);\n      },\n\n      margin: {\n        item: {\n          horizontal: 10,\n          vertical: 10\n        },\n        axis: 20\n      },\n\n      tooltipOnItemUpdateTime: false\n    };\n\n    // options is shared by this ItemSet and all its items\n    this.options = util.extend({}, this.defaultOptions);\n    this.options.rtl = options.rtl;\n\n    // options for getting items from the DataSet with the correct type\n    this.itemOptions = {\n      type: { start: 'Date', end: 'Date' }\n    };\n\n    this.conversion = {\n      toScreen: body.util.toScreen,\n      toTime: body.util.toTime\n    };\n    this.dom = {};\n    this.props = {};\n    this.hammer = null;\n\n    var me = this;\n    this.itemsData = null; // DataSet\n    this.groupsData = null; // DataSet\n\n    // listeners for the DataSet of the items\n    this.itemListeners = {\n      'add': function add(event, params, senderId) {\n        me._onAdd(params.items);\n      },\n      'update': function update(event, params, senderId) {\n        me._onUpdate(params.items);\n      },\n      'remove': function remove(event, params, senderId) {\n        me._onRemove(params.items);\n      }\n    };\n\n    // listeners for the DataSet of the groups\n    this.groupListeners = {\n      'add': function add(event, params, senderId) {\n        me._onAddGroups(params.items);\n      },\n      'update': function update(event, params, senderId) {\n        me._onUpdateGroups(params.items);\n      },\n      'remove': function remove(event, params, senderId) {\n        me._onRemoveGroups(params.items);\n      }\n    };\n\n    this.items = {}; // object with an Item for every data item\n    this.groups = {}; // Group object for every group\n    this.groupIds = [];\n\n    this.selection = []; // list with the ids of all selected nodes\n    this.stackDirty = true; // if true, all items will be restacked on next redraw\n\n    this.touchParams = {}; // stores properties while dragging\n    this.groupTouchParams = {};\n    // create the HTML DOM\n\n    this._create();\n\n    this.setOptions(options);\n  }\n\n  ItemSet.prototype = new Component();\n\n  // available item types will be registered here\n  ItemSet.types = {\n    background: BackgroundItem,\n    box: BoxItem,\n    range: RangeItem,\n    point: PointItem\n  };\n\n  /**\n   * Create the HTML DOM for the ItemSet\n   */\n  ItemSet.prototype._create = function () {\n    var frame = document.createElement('div');\n    frame.className = 'vis-itemset';\n    frame['timeline-itemset'] = this;\n    this.dom.frame = frame;\n\n    // create background panel\n    var background = document.createElement('div');\n    background.className = 'vis-background';\n    frame.appendChild(background);\n    this.dom.background = background;\n\n    // create foreground panel\n    var foreground = document.createElement('div');\n    foreground.className = 'vis-foreground';\n    frame.appendChild(foreground);\n    this.dom.foreground = foreground;\n\n    // create axis panel\n    var axis = document.createElement('div');\n    axis.className = 'vis-axis';\n    this.dom.axis = axis;\n\n    // create labelset\n    var labelSet = document.createElement('div');\n    labelSet.className = 'vis-labelset';\n    this.dom.labelSet = labelSet;\n\n    // create ungrouped Group\n    this._updateUngrouped();\n\n    // create background Group\n    var backgroundGroup = new BackgroundGroup(BACKGROUND, null, this);\n    backgroundGroup.show();\n    this.groups[BACKGROUND] = backgroundGroup;\n\n    // attach event listeners\n    // Note: we bind to the centerContainer for the case where the height\n    //       of the center container is larger than of the ItemSet, so we\n    //       can click in the empty area to create a new item or deselect an item.\n    this.hammer = new Hammer(this.body.dom.centerContainer);\n\n    // drag items when selected\n    this.hammer.on('hammer.input', function (event) {\n      if (event.isFirst) {\n        this._onTouch(event);\n      }\n    }.bind(this));\n    this.hammer.on('panstart', this._onDragStart.bind(this));\n    this.hammer.on('panmove', this._onDrag.bind(this));\n    this.hammer.on('panend', this._onDragEnd.bind(this));\n    this.hammer.get('pan').set({ threshold: 5, direction: Hammer.DIRECTION_HORIZONTAL });\n\n    // single select (or unselect) when tapping an item\n    this.hammer.on('tap', this._onSelectItem.bind(this));\n\n    // multi select when holding mouse/touch, or on ctrl+click\n    this.hammer.on('press', this._onMultiSelectItem.bind(this));\n\n    // add item on doubletap\n    this.hammer.on('doubletap', this._onAddItem.bind(this));\n\n    if (this.options.rtl) {\n      this.groupHammer = new Hammer(this.body.dom.rightContainer);\n    } else {\n      this.groupHammer = new Hammer(this.body.dom.leftContainer);\n    }\n\n    this.groupHammer.on('panstart', this._onGroupDragStart.bind(this));\n    this.groupHammer.on('panmove', this._onGroupDrag.bind(this));\n    this.groupHammer.on('panend', this._onGroupDragEnd.bind(this));\n    this.groupHammer.get('pan').set({ threshold: 5, direction: Hammer.DIRECTION_HORIZONTAL });\n\n    this.body.dom.centerContainer.addEventListener('mouseover', this._onMouseOver.bind(this));\n    this.body.dom.centerContainer.addEventListener('mouseout', this._onMouseOut.bind(this));\n\n    // attach to the DOM\n    this.show();\n  };\n\n  /**\n   * Set options for the ItemSet. Existing options will be extended/overwritten.\n   * @param {Object} [options] The following options are available:\n   *                           {String} type\n   *                              Default type for the items. Choose from 'box'\n   *                              (default), 'point', 'range', or 'background'.\n   *                              The default style can be overwritten by\n   *                              individual items.\n   *                           {String} align\n   *                              Alignment for the items, only applicable for\n   *                              BoxItem. Choose 'center' (default), 'left', or\n   *                              'right'.\n   *                           {String} orientation.item\n   *                              Orientation of the item set. Choose 'top' or\n   *                              'bottom' (default).\n   *                           {Function} groupOrder\n   *                              A sorting function for ordering groups\n   *                           {Boolean} stack\n   *                              If true (default), items will be stacked on\n   *                              top of each other.\n   *                           {Number} margin.axis\n   *                              Margin between the axis and the items in pixels.\n   *                              Default is 20.\n   *                           {Number} margin.item.horizontal\n   *                              Horizontal margin between items in pixels.\n   *                              Default is 10.\n   *                           {Number} margin.item.vertical\n   *                              Vertical Margin between items in pixels.\n   *                              Default is 10.\n   *                           {Number} margin.item\n   *                              Margin between items in pixels in both horizontal\n   *                              and vertical direction. Default is 10.\n   *                           {Number} margin\n   *                              Set margin for both axis and items in pixels.\n   *                           {Boolean} selectable\n   *                              If true (default), items can be selected.\n   *                           {Boolean} multiselect\n   *                              If true, multiple items can be selected.\n   *                              False by default.\n   *                           {Boolean} editable\n   *                              Set all editable options to true or false\n   *                           {Boolean} editable.updateTime\n   *                              Allow dragging an item to an other moment in time\n   *                           {Boolean} editable.updateGroup\n   *                              Allow dragging an item to an other group\n   *                           {Boolean} editable.add\n   *                              Allow creating new items on double tap\n   *                           {Boolean} editable.remove\n   *                              Allow removing items by clicking the delete button\n   *                              top right of a selected item.\n   *                           {Function(item: Item, callback: Function)} onAdd\n   *                              Callback function triggered when an item is about to be added:\n   *                              when the user double taps an empty space in the Timeline.\n   *                           {Function(item: Item, callback: Function)} onUpdate\n   *                              Callback function fired when an item is about to be updated.\n   *                              This function typically has to show a dialog where the user\n   *                              change the item. If not implemented, nothing happens.\n   *                           {Function(item: Item, callback: Function)} onMove\n   *                              Fired when an item has been moved. If not implemented,\n   *                              the move action will be accepted.\n   *                           {Function(item: Item, callback: Function)} onRemove\n   *                              Fired when an item is about to be deleted.\n   *                              If not implemented, the item will be always removed.\n   */\n  ItemSet.prototype.setOptions = function (options) {\n    if (options) {\n      // copy all options that we know\n      var fields = ['type', 'rtl', 'align', 'order', 'stack', 'selectable', 'multiselect', 'itemsAlwaysDraggable', 'multiselectPerGroup', 'groupOrder', 'dataAttributes', 'template', 'groupTemplate', 'hide', 'snap', 'groupOrderSwap', 'tooltipOnItemUpdateTime'];\n      util.selectiveExtend(fields, this.options, options);\n\n      if ('orientation' in options) {\n        if (typeof options.orientation === 'string') {\n          this.options.orientation.item = options.orientation === 'top' ? 'top' : 'bottom';\n        } else if (_typeof(options.orientation) === 'object' && 'item' in options.orientation) {\n          this.options.orientation.item = options.orientation.item;\n        }\n      }\n\n      if ('margin' in options) {\n        if (typeof options.margin === 'number') {\n          this.options.margin.axis = options.margin;\n          this.options.margin.item.horizontal = options.margin;\n          this.options.margin.item.vertical = options.margin;\n        } else if (_typeof(options.margin) === 'object') {\n          util.selectiveExtend(['axis'], this.options.margin, options.margin);\n          if ('item' in options.margin) {\n            if (typeof options.margin.item === 'number') {\n              this.options.margin.item.horizontal = options.margin.item;\n              this.options.margin.item.vertical = options.margin.item;\n            } else if (_typeof(options.margin.item) === 'object') {\n              util.selectiveExtend(['horizontal', 'vertical'], this.options.margin.item, options.margin.item);\n            }\n          }\n        }\n      }\n\n      if ('editable' in options) {\n        if (typeof options.editable === 'boolean') {\n          this.options.editable.updateTime = options.editable;\n          this.options.editable.updateGroup = options.editable;\n          this.options.editable.add = options.editable;\n          this.options.editable.remove = options.editable;\n        } else if (_typeof(options.editable) === 'object') {\n          util.selectiveExtend(['updateTime', 'updateGroup', 'add', 'remove'], this.options.editable, options.editable);\n        }\n      }\n\n      if ('groupEditable' in options) {\n        if (typeof options.groupEditable === 'boolean') {\n          this.options.groupEditable.order = options.groupEditable;\n          this.options.groupEditable.add = options.groupEditable;\n          this.options.groupEditable.remove = options.groupEditable;\n        } else if (_typeof(options.groupEditable) === 'object') {\n          util.selectiveExtend(['order', 'add', 'remove'], this.options.groupEditable, options.groupEditable);\n        }\n      }\n\n      // callback functions\n      var addCallback = function (name) {\n        var fn = options[name];\n        if (fn) {\n          if (!(fn instanceof Function)) {\n            throw new Error('option ' + name + ' must be a function ' + name + '(item, callback)');\n          }\n          this.options[name] = fn;\n        }\n      }.bind(this);\n      ['onAdd', 'onUpdate', 'onRemove', 'onMove', 'onMoving', 'onAddGroup', 'onMoveGroup', 'onRemoveGroup'].forEach(addCallback);\n\n      // force the itemSet to refresh: options like orientation and margins may be changed\n      this.markDirty();\n    }\n  };\n\n  /**\n   * Mark the ItemSet dirty so it will refresh everything with next redraw.\n   * Optionally, all items can be marked as dirty and be refreshed.\n   * @param {{refreshItems: boolean}} [options]\n   */\n  ItemSet.prototype.markDirty = function (options) {\n    this.groupIds = [];\n    this.stackDirty = true;\n\n    if (options && options.refreshItems) {\n      util.forEach(this.items, function (item) {\n        item.dirty = true;\n        if (item.displayed) item.redraw();\n      });\n    }\n  };\n\n  /**\n   * Destroy the ItemSet\n   */\n  ItemSet.prototype.destroy = function () {\n    this.hide();\n    this.setItems(null);\n    this.setGroups(null);\n\n    this.hammer = null;\n\n    this.body = null;\n    this.conversion = null;\n  };\n\n  /**\n   * Hide the component from the DOM\n   */\n  ItemSet.prototype.hide = function () {\n    // remove the frame containing the items\n    if (this.dom.frame.parentNode) {\n      this.dom.frame.parentNode.removeChild(this.dom.frame);\n    }\n\n    // remove the axis with dots\n    if (this.dom.axis.parentNode) {\n      this.dom.axis.parentNode.removeChild(this.dom.axis);\n    }\n\n    // remove the labelset containing all group labels\n    if (this.dom.labelSet.parentNode) {\n      this.dom.labelSet.parentNode.removeChild(this.dom.labelSet);\n    }\n  };\n\n  /**\n   * Show the component in the DOM (when not already visible).\n   * @return {Boolean} changed\n   */\n  ItemSet.prototype.show = function () {\n    // show frame containing the items\n    if (!this.dom.frame.parentNode) {\n      this.body.dom.center.appendChild(this.dom.frame);\n    }\n\n    // show axis with dots\n    if (!this.dom.axis.parentNode) {\n      this.body.dom.backgroundVertical.appendChild(this.dom.axis);\n    }\n\n    // show labelset containing labels\n    if (!this.dom.labelSet.parentNode) {\n      if (this.options.rtl) {\n        this.body.dom.right.appendChild(this.dom.labelSet);\n      } else {\n        this.body.dom.left.appendChild(this.dom.labelSet);\n      }\n    }\n  };\n\n  /**\n   * Set selected items by their id. Replaces the current selection\n   * Unknown id's are silently ignored.\n   * @param {string[] | string} [ids] An array with zero or more id's of the items to be\n   *                                  selected, or a single item id. If ids is undefined\n   *                                  or an empty array, all items will be unselected.\n   */\n  ItemSet.prototype.setSelection = function (ids) {\n    var i, ii, id, item;\n\n    if (ids == undefined) ids = [];\n    if (!Array.isArray(ids)) ids = [ids];\n\n    // unselect currently selected items\n    for (i = 0, ii = this.selection.length; i < ii; i++) {\n      id = this.selection[i];\n      item = this.items[id];\n      if (item) item.unselect();\n    }\n\n    // select items\n    this.selection = [];\n    for (i = 0, ii = ids.length; i < ii; i++) {\n      id = ids[i];\n      item = this.items[id];\n      if (item) {\n        this.selection.push(id);\n        item.select();\n      }\n    }\n  };\n\n  /**\n   * Get the selected items by their id\n   * @return {Array} ids  The ids of the selected items\n   */\n  ItemSet.prototype.getSelection = function () {\n    return this.selection.concat([]);\n  };\n\n  /**\n   * Get the id's of the currently visible items.\n   * @returns {Array} The ids of the visible items\n   */\n  ItemSet.prototype.getVisibleItems = function () {\n    var range = this.body.range.getRange();\n\n    if (this.options.rtl) {\n      var right = this.body.util.toScreen(range.start);\n      var left = this.body.util.toScreen(range.end);\n    } else {\n      var left = this.body.util.toScreen(range.start);\n      var right = this.body.util.toScreen(range.end);\n    }\n\n    var ids = [];\n    for (var groupId in this.groups) {\n      if (this.groups.hasOwnProperty(groupId)) {\n        var group = this.groups[groupId];\n        var rawVisibleItems = group.visibleItems;\n\n        // filter the \"raw\" set with visibleItems into a set which is really\n        // visible by pixels\n        for (var i = 0; i < rawVisibleItems.length; i++) {\n          var item = rawVisibleItems[i];\n          // TODO: also check whether visible vertically\n          if (this.options.rtl) {\n            if (item.right < left && item.right + item.width > right) {\n              ids.push(item.id);\n            }\n          } else {\n            if (item.left < right && item.left + item.width > left) {\n              ids.push(item.id);\n            }\n          }\n        }\n      }\n    }\n\n    return ids;\n  };\n\n  /**\n   * Deselect a selected item\n   * @param {String | Number} id\n   * @private\n   */\n  ItemSet.prototype._deselect = function (id) {\n    var selection = this.selection;\n    for (var i = 0, ii = selection.length; i < ii; i++) {\n      if (selection[i] == id) {\n        // non-strict comparison!\n        selection.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  /**\n   * Repaint the component\n   * @return {boolean} Returns true if the component is resized\n   */\n  ItemSet.prototype.redraw = function () {\n    var margin = this.options.margin,\n        range = this.body.range,\n        asSize = util.option.asSize,\n        options = this.options,\n        orientation = options.orientation.item,\n        resized = false,\n        frame = this.dom.frame;\n\n    // recalculate absolute position (before redrawing groups)\n    this.props.top = this.body.domProps.top.height + this.body.domProps.border.top;\n\n    if (this.options.rtl) {\n      this.props.right = this.body.domProps.right.width + this.body.domProps.border.right;\n    } else {\n      this.props.left = this.body.domProps.left.width + this.body.domProps.border.left;\n    }\n\n    // update class name\n    frame.className = 'vis-itemset';\n\n    // reorder the groups (if needed)\n    resized = this._orderGroups() || resized;\n\n    // check whether zoomed (in that case we need to re-stack everything)\n    // TODO: would be nicer to get this as a trigger from Range\n    var visibleInterval = range.end - range.start;\n    var zoomed = visibleInterval != this.lastVisibleInterval || this.props.width != this.props.lastWidth;\n    if (zoomed) this.stackDirty = true;\n    this.lastVisibleInterval = visibleInterval;\n    this.props.lastWidth = this.props.width;\n\n    var restack = this.stackDirty;\n    var firstGroup = this._firstGroup();\n    var firstMargin = {\n      item: margin.item,\n      axis: margin.axis\n    };\n    var nonFirstMargin = {\n      item: margin.item,\n      axis: margin.item.vertical / 2\n    };\n    var height = 0;\n    var minHeight = margin.axis + margin.item.vertical;\n\n    // redraw the background group\n    this.groups[BACKGROUND].redraw(range, nonFirstMargin, restack);\n\n    // redraw all regular groups\n    util.forEach(this.groups, function (group) {\n      var groupMargin = group == firstGroup ? firstMargin : nonFirstMargin;\n      var groupResized = group.redraw(range, groupMargin, restack);\n      resized = groupResized || resized;\n      height += group.height;\n    });\n    height = Math.max(height, minHeight);\n    this.stackDirty = false;\n\n    // update frame height\n    frame.style.height = asSize(height);\n\n    // calculate actual size\n    this.props.width = frame.offsetWidth;\n    this.props.height = height;\n\n    // reposition axis\n    this.dom.axis.style.top = asSize(orientation == 'top' ? this.body.domProps.top.height + this.body.domProps.border.top : this.body.domProps.top.height + this.body.domProps.centerContainer.height);\n    if (this.options.rtl) {\n      this.dom.axis.style.right = '0';\n    } else {\n      this.dom.axis.style.left = '0';\n    }\n\n    // check if this component is resized\n    resized = this._isResized() || resized;\n\n    return resized;\n  };\n\n  /**\n   * Get the first group, aligned with the axis\n   * @return {Group | null} firstGroup\n   * @private\n   */\n  ItemSet.prototype._firstGroup = function () {\n    var firstGroupIndex = this.options.orientation.item == 'top' ? 0 : this.groupIds.length - 1;\n    var firstGroupId = this.groupIds[firstGroupIndex];\n    var firstGroup = this.groups[firstGroupId] || this.groups[UNGROUPED];\n\n    return firstGroup || null;\n  };\n\n  /**\n   * Create or delete the group holding all ungrouped items. This group is used when\n   * there are no groups specified.\n   * @protected\n   */\n  ItemSet.prototype._updateUngrouped = function () {\n    var ungrouped = this.groups[UNGROUPED];\n    var background = this.groups[BACKGROUND];\n    var item, itemId;\n\n    if (this.groupsData) {\n      // remove the group holding all ungrouped items\n      if (ungrouped) {\n        ungrouped.hide();\n        delete this.groups[UNGROUPED];\n\n        for (itemId in this.items) {\n          if (this.items.hasOwnProperty(itemId)) {\n            item = this.items[itemId];\n            item.parent && item.parent.remove(item);\n            var groupId = this._getGroupId(item.data);\n            var group = this.groups[groupId];\n            group && group.add(item) || item.hide();\n          }\n        }\n      }\n    } else {\n      // create a group holding all (unfiltered) items\n      if (!ungrouped) {\n        var id = null;\n        var data = null;\n        ungrouped = new Group(id, data, this);\n        this.groups[UNGROUPED] = ungrouped;\n\n        for (itemId in this.items) {\n          if (this.items.hasOwnProperty(itemId)) {\n            item = this.items[itemId];\n            ungrouped.add(item);\n          }\n        }\n\n        ungrouped.show();\n      }\n    }\n  };\n\n  /**\n   * Get the element for the labelset\n   * @return {HTMLElement} labelSet\n   */\n  ItemSet.prototype.getLabelSet = function () {\n    return this.dom.labelSet;\n  };\n\n  /**\n   * Set items\n   * @param {vis.DataSet | null} items\n   */\n  ItemSet.prototype.setItems = function (items) {\n    var me = this,\n        ids,\n        oldItemsData = this.itemsData;\n\n    // replace the dataset\n    if (!items) {\n      this.itemsData = null;\n    } else if (items instanceof DataSet || items instanceof DataView) {\n      this.itemsData = items;\n    } else {\n      throw new TypeError('Data must be an instance of DataSet or DataView');\n    }\n\n    if (oldItemsData) {\n      // unsubscribe from old dataset\n      util.forEach(this.itemListeners, function (callback, event) {\n        oldItemsData.off(event, callback);\n      });\n\n      // remove all drawn items\n      ids = oldItemsData.getIds();\n      this._onRemove(ids);\n    }\n\n    if (this.itemsData) {\n      // subscribe to new dataset\n      var id = this.id;\n      util.forEach(this.itemListeners, function (callback, event) {\n        me.itemsData.on(event, callback, id);\n      });\n\n      // add all new items\n      ids = this.itemsData.getIds();\n      this._onAdd(ids);\n\n      // update the group holding all ungrouped items\n      this._updateUngrouped();\n    }\n\n    this.body.emitter.emit('_change', { queue: true });\n  };\n\n  /**\n   * Get the current items\n   * @returns {vis.DataSet | null}\n   */\n  ItemSet.prototype.getItems = function () {\n    return this.itemsData;\n  };\n\n  /**\n   * Set groups\n   * @param {vis.DataSet} groups\n   */\n  ItemSet.prototype.setGroups = function (groups) {\n    var me = this,\n        ids;\n\n    // unsubscribe from current dataset\n    if (this.groupsData) {\n      util.forEach(this.groupListeners, function (callback, event) {\n        me.groupsData.off(event, callback);\n      });\n\n      // remove all drawn groups\n      ids = this.groupsData.getIds();\n      this.groupsData = null;\n      this._onRemoveGroups(ids); // note: this will cause a redraw\n    }\n\n    // replace the dataset\n    if (!groups) {\n      this.groupsData = null;\n    } else if (groups instanceof DataSet || groups instanceof DataView) {\n      this.groupsData = groups;\n    } else {\n      throw new TypeError('Data must be an instance of DataSet or DataView');\n    }\n\n    if (this.groupsData) {\n      // subscribe to new dataset\n      var id = this.id;\n      util.forEach(this.groupListeners, function (callback, event) {\n        me.groupsData.on(event, callback, id);\n      });\n\n      // draw all ms\n      ids = this.groupsData.getIds();\n      this._onAddGroups(ids);\n    }\n\n    // update the group holding all ungrouped items\n    this._updateUngrouped();\n\n    // update the order of all items in each group\n    this._order();\n\n    this.body.emitter.emit('_change', { queue: true });\n  };\n\n  /**\n   * Get the current groups\n   * @returns {vis.DataSet | null} groups\n   */\n  ItemSet.prototype.getGroups = function () {\n    return this.groupsData;\n  };\n\n  /**\n   * Remove an item by its id\n   * @param {String | Number} id\n   */\n  ItemSet.prototype.removeItem = function (id) {\n    var item = this.itemsData.get(id),\n        dataset = this.itemsData.getDataSet();\n\n    if (item) {\n      // confirm deletion\n      this.options.onRemove(item, function (item) {\n        if (item) {\n          // remove by id here, it is possible that an item has no id defined\n          // itself, so better not delete by the item itself\n          dataset.remove(id);\n        }\n      });\n    }\n  };\n\n  /**\n   * Get the time of an item based on it's data and options.type\n   * @param {Object} itemData\n   * @returns {string} Returns the type\n   * @private\n   */\n  ItemSet.prototype._getType = function (itemData) {\n    return itemData.type || this.options.type || (itemData.end ? 'range' : 'box');\n  };\n\n  /**\n   * Get the group id for an item\n   * @param {Object} itemData\n   * @returns {string} Returns the groupId\n   * @private\n   */\n  ItemSet.prototype._getGroupId = function (itemData) {\n    var type = this._getType(itemData);\n    if (type == 'background' && itemData.group == undefined) {\n      return BACKGROUND;\n    } else {\n      return this.groupsData ? itemData.group : UNGROUPED;\n    }\n  };\n\n  /**\n   * Handle updated items\n   * @param {Number[]} ids\n   * @protected\n   */\n  ItemSet.prototype._onUpdate = function (ids) {\n    var me = this;\n\n    ids.forEach(function (id) {\n      var itemData = me.itemsData.get(id, me.itemOptions);\n      var item = me.items[id];\n      var type = itemData ? me._getType(itemData) : null;\n\n      var constructor = ItemSet.types[type];\n      var selected;\n\n      if (item) {\n        // update item\n        if (!constructor || !(item instanceof constructor)) {\n          // item type has changed, delete the item and recreate it\n          selected = item.selected; // preserve selection of this item\n          me._removeItem(item);\n          item = null;\n        } else {\n          me._updateItem(item, itemData);\n        }\n      }\n\n      if (!item && itemData) {\n        // create item\n        if (constructor) {\n          item = new constructor(itemData, me.conversion, me.options);\n          item.id = id; // TODO: not so nice setting id afterwards\n          me._addItem(item);\n          if (selected) {\n            this.selection.push(id);\n            item.select();\n          }\n        } else if (type == 'rangeoverflow') {\n          // TODO: deprecated since version 2.1.0 (or 3.0.0?). cleanup some day\n          throw new TypeError('Item type \"rangeoverflow\" is deprecated. Use css styling instead: ' + '.vis-item.vis-range .vis-item-content {overflow: visible;}');\n        } else {\n          throw new TypeError('Unknown item type \"' + type + '\"');\n        }\n      }\n    }.bind(this));\n\n    this._order();\n    this.stackDirty = true; // force re-stacking of all items next redraw\n    this.body.emitter.emit('_change', { queue: true });\n  };\n\n  /**\n   * Handle added items\n   * @param {Number[]} ids\n   * @protected\n   */\n  ItemSet.prototype._onAdd = ItemSet.prototype._onUpdate;\n\n  /**\n   * Handle removed items\n   * @param {Number[]} ids\n   * @protected\n   */\n  ItemSet.prototype._onRemove = function (ids) {\n    var count = 0;\n    var me = this;\n    ids.forEach(function (id) {\n      var item = me.items[id];\n      if (item) {\n        count++;\n        me._removeItem(item);\n      }\n    });\n\n    if (count) {\n      // update order\n      this._order();\n      this.stackDirty = true; // force re-stacking of all items next redraw\n      this.body.emitter.emit('_change', { queue: true });\n    }\n  };\n\n  /**\n   * Update the order of item in all groups\n   * @private\n   */\n  ItemSet.prototype._order = function () {\n    // reorder the items in all groups\n    // TODO: optimization: only reorder groups affected by the changed items\n    util.forEach(this.groups, function (group) {\n      group.order();\n    });\n  };\n\n  /**\n   * Handle updated groups\n   * @param {Number[]} ids\n   * @private\n   */\n  ItemSet.prototype._onUpdateGroups = function (ids) {\n    this._onAddGroups(ids);\n  };\n\n  /**\n   * Handle changed groups (added or updated)\n   * @param {Number[]} ids\n   * @private\n   */\n  ItemSet.prototype._onAddGroups = function (ids) {\n    var me = this;\n\n    ids.forEach(function (id) {\n      var groupData = me.groupsData.get(id);\n      var group = me.groups[id];\n\n      if (!group) {\n        // check for reserved ids\n        if (id == UNGROUPED || id == BACKGROUND) {\n          throw new Error('Illegal group id. ' + id + ' is a reserved id.');\n        }\n\n        var groupOptions = Object.create(me.options);\n        util.extend(groupOptions, {\n          height: null\n        });\n\n        group = new Group(id, groupData, me);\n        me.groups[id] = group;\n\n        // add items with this groupId to the new group\n        for (var itemId in me.items) {\n          if (me.items.hasOwnProperty(itemId)) {\n            var item = me.items[itemId];\n            if (item.data.group == id) {\n              group.add(item);\n            }\n          }\n        }\n\n        group.order();\n        group.show();\n      } else {\n        // update group\n        group.setData(groupData);\n      }\n    });\n\n    this.body.emitter.emit('_change', { queue: true });\n  };\n\n  /**\n   * Handle removed groups\n   * @param {Number[]} ids\n   * @private\n   */\n  ItemSet.prototype._onRemoveGroups = function (ids) {\n    var groups = this.groups;\n    ids.forEach(function (id) {\n      var group = groups[id];\n\n      if (group) {\n        group.hide();\n        delete groups[id];\n      }\n    });\n\n    this.markDirty();\n\n    this.body.emitter.emit('_change', { queue: true });\n  };\n\n  /**\n   * Reorder the groups if needed\n   * @return {boolean} changed\n   * @private\n   */\n  ItemSet.prototype._orderGroups = function () {\n    if (this.groupsData) {\n      // reorder the groups\n      var groupIds = this.groupsData.getIds({\n        order: this.options.groupOrder\n      });\n\n      var changed = !util.equalArray(groupIds, this.groupIds);\n      if (changed) {\n        // hide all groups, removes them from the DOM\n        var groups = this.groups;\n        groupIds.forEach(function (groupId) {\n          groups[groupId].hide();\n        });\n\n        // show the groups again, attach them to the DOM in correct order\n        groupIds.forEach(function (groupId) {\n          groups[groupId].show();\n        });\n\n        this.groupIds = groupIds;\n      }\n\n      return changed;\n    } else {\n      return false;\n    }\n  };\n\n  /**\n   * Add a new item\n   * @param {Item} item\n   * @private\n   */\n  ItemSet.prototype._addItem = function (item) {\n    this.items[item.id] = item;\n\n    // add to group\n    var groupId = this._getGroupId(item.data);\n    var group = this.groups[groupId];\n    if (group) group.add(item);\n  };\n\n  /**\n   * Update an existing item\n   * @param {Item} item\n   * @param {Object} itemData\n   * @private\n   */\n  ItemSet.prototype._updateItem = function (item, itemData) {\n    var oldGroupId = item.data.group;\n    var oldSubGroupId = item.data.subgroup;\n\n    // update the items data (will redraw the item when displayed)\n    item.setData(itemData);\n\n    // update group\n    if (oldGroupId != item.data.group || oldSubGroupId != item.data.subgroup) {\n      var oldGroup = this.groups[oldGroupId];\n      if (oldGroup) oldGroup.remove(item);\n\n      var groupId = this._getGroupId(item.data);\n      var group = this.groups[groupId];\n      if (group) group.add(item);\n    }\n  };\n\n  /**\n   * Delete an item from the ItemSet: remove it from the DOM, from the map\n   * with items, and from the map with visible items, and from the selection\n   * @param {Item} item\n   * @private\n   */\n  ItemSet.prototype._removeItem = function (item) {\n    // remove from DOM\n    item.hide();\n\n    // remove from items\n    delete this.items[item.id];\n\n    // remove from selection\n    var index = this.selection.indexOf(item.id);\n    if (index != -1) this.selection.splice(index, 1);\n\n    // remove from group\n    item.parent && item.parent.remove(item);\n  };\n\n  /**\n   * Create an array containing all items being a range (having an end date)\n   * @param array\n   * @returns {Array}\n   * @private\n   */\n  ItemSet.prototype._constructByEndArray = function (array) {\n    var endArray = [];\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i] instanceof RangeItem) {\n        endArray.push(array[i]);\n      }\n    }\n    return endArray;\n  };\n\n  /**\n   * Register the clicked item on touch, before dragStart is initiated.\n   *\n   * dragStart is initiated from a mousemove event, AFTER the mouse/touch is\n   * already moving. Therefore, the mouse/touch can sometimes be above an other\n   * DOM element than the item itself.\n   *\n   * @param {Event} event\n   * @private\n   */\n  ItemSet.prototype._onTouch = function (event) {\n    // store the touched item, used in _onDragStart\n    this.touchParams.item = this.itemFromTarget(event);\n    this.touchParams.dragLeftItem = event.target.dragLeftItem || false;\n    this.touchParams.dragRightItem = event.target.dragRightItem || false;\n    this.touchParams.itemProps = null;\n  };\n\n  /**\n   * Given an group id, returns the index it has.\n   *\n   * @param {Number} groupID\n   * @private\n   */\n  ItemSet.prototype._getGroupIndex = function (groupId) {\n    for (var i = 0; i < this.groupIds.length; i++) {\n      if (groupId == this.groupIds[i]) return i;\n    }\n  };\n\n  /**\n   * Start dragging the selected events\n   * @param {Event} event\n   * @private\n   */\n  ItemSet.prototype._onDragStart = function (event) {\n    var item = this.touchParams.item || null;\n    var me = this;\n    var props;\n\n    if (item && (item.selected || this.options.itemsAlwaysDraggable)) {\n\n      if (!this.options.editable.updateTime && !this.options.editable.updateGroup && !item.editable) {\n        return;\n      }\n\n      // override options.editable\n      if (item.editable === false) {\n        return;\n      }\n\n      var dragLeftItem = this.touchParams.dragLeftItem;\n      var dragRightItem = this.touchParams.dragRightItem;\n      this.touchParams.itemIsDragging = true;\n\n      if (dragLeftItem) {\n        props = {\n          item: dragLeftItem,\n          initialX: event.center.x,\n          dragLeft: true,\n          data: this._cloneItemData(item.data)\n        };\n\n        this.touchParams.itemProps = [props];\n      } else if (dragRightItem) {\n        props = {\n          item: dragRightItem,\n          initialX: event.center.x,\n          dragRight: true,\n          data: this._cloneItemData(item.data)\n        };\n\n        this.touchParams.itemProps = [props];\n      } else {\n        this.touchParams.selectedItem = item;\n\n        var baseGroupIndex = this._getGroupIndex(item.data.group);\n\n        var itemsToDrag = this.options.itemsAlwaysDraggable && !item.selected ? [item.id] : this.getSelection();\n\n        this.touchParams.itemProps = itemsToDrag.map(function (id) {\n          var item = me.items[id];\n          var groupIndex = me._getGroupIndex(item.data.group);\n          return {\n            item: item,\n            initialX: event.center.x,\n            groupOffset: baseGroupIndex - groupIndex,\n            data: this._cloneItemData(item.data)\n          };\n        }.bind(this));\n      }\n\n      event.stopPropagation();\n    } else if (this.options.editable.add && (event.srcEvent.ctrlKey || event.srcEvent.metaKey)) {\n      // create a new range item when dragging with ctrl key down\n      this._onDragStartAddItem(event);\n    }\n  };\n\n  /**\n   * Start creating a new range item by dragging.\n   * @param {Event} event\n   * @private\n   */\n  ItemSet.prototype._onDragStartAddItem = function (event) {\n    var snap = this.options.snap || null;\n\n    if (this.options.rtl) {\n      var xAbs = util.getAbsoluteRight(this.dom.frame);\n      var x = xAbs - event.center.x + 10; // plus 10 to compensate for the drag starting as soon as you've moved 10px\n    } else {\n      var xAbs = util.getAbsoluteLeft(this.dom.frame);\n      var x = event.center.x - xAbs - 10; // minus 10 to compensate for the drag starting as soon as you've moved 10px\n    }\n\n    var time = this.body.util.toTime(x);\n    var scale = this.body.util.getScale();\n    var step = this.body.util.getStep();\n    var start = snap ? snap(time, scale, step) : time;\n    var end = start;\n\n    var itemData = {\n      type: 'range',\n      start: start,\n      end: end,\n      content: 'new item'\n    };\n\n    var id = util.randomUUID();\n    itemData[this.itemsData._fieldId] = id;\n\n    var group = this.groupFromTarget(event);\n    if (group) {\n      itemData.group = group.groupId;\n    }\n    var newItem = new RangeItem(itemData, this.conversion, this.options);\n    newItem.id = id; // TODO: not so nice setting id afterwards\n    newItem.data = this._cloneItemData(itemData);\n    this._addItem(newItem);\n\n    var props = {\n      item: newItem,\n      initialX: event.center.x,\n      data: newItem.data\n    };\n\n    if (this.options.rtl) {\n      props.dragLeft = true;\n    } else {\n      props.dragRight = true;\n    }\n    this.touchParams.itemProps = [props];\n\n    event.stopPropagation();\n  };\n\n  /**\n   * Drag selected items\n   * @param {Event} event\n   * @private\n   */\n  ItemSet.prototype._onDrag = function (event) {\n    if (this.touchParams.itemProps) {\n      event.stopPropagation();\n\n      var me = this;\n      var snap = this.options.snap || null;\n\n      if (this.options.rtl) {\n        var xOffset = this.body.dom.root.offsetLeft + this.body.domProps.right.width;\n      } else {\n        var xOffset = this.body.dom.root.offsetLeft + this.body.domProps.left.width;\n      }\n\n      var scale = this.body.util.getScale();\n      var step = this.body.util.getStep();\n\n      //only calculate the new group for the item that's actually dragged\n      var selectedItem = this.touchParams.selectedItem;\n      var updateGroupAllowed = me.options.editable.updateGroup;\n      var newGroupBase = null;\n      if (updateGroupAllowed && selectedItem) {\n        if (selectedItem.data.group != undefined) {\n          // drag from one group to another\n          var group = me.groupFromTarget(event);\n          if (group) {\n            //we know the offset for all items, so the new group for all items\n            //will be relative to this one.\n            newGroupBase = this._getGroupIndex(group.groupId);\n          }\n        }\n      }\n\n      // move\n      this.touchParams.itemProps.forEach(function (props) {\n        var current = me.body.util.toTime(event.center.x - xOffset);\n        var initial = me.body.util.toTime(props.initialX - xOffset);\n\n        if (this.options.rtl) {\n          var offset = -(current - initial); // ms\n        } else {\n          var offset = current - initial; // ms\n        }\n\n        var itemData = this._cloneItemData(props.item.data); // clone the data\n        if (props.item.editable === false) {\n          return;\n        }\n\n        var updateTimeAllowed = me.options.editable.updateTime || props.item.editable === true;\n        if (updateTimeAllowed) {\n          if (props.dragLeft) {\n            // drag left side of a range item\n            if (this.options.rtl) {\n              if (itemData.end != undefined) {\n                var initialEnd = util.convert(props.data.end, 'Date');\n                var end = new Date(initialEnd.valueOf() + offset);\n                // TODO: pass a Moment instead of a Date to snap(). (Breaking change)\n                itemData.end = snap ? snap(end, scale, step) : end;\n              }\n            } else {\n              if (itemData.start != undefined) {\n                var initialStart = util.convert(props.data.start, 'Date');\n                var start = new Date(initialStart.valueOf() + offset);\n                // TODO: pass a Moment instead of a Date to snap(). (Breaking change)\n                itemData.start = snap ? snap(start, scale, step) : start;\n              }\n            }\n          } else if (props.dragRight) {\n            // drag right side of a range item\n            if (this.options.rtl) {\n              if (itemData.start != undefined) {\n                var initialStart = util.convert(props.data.start, 'Date');\n                var start = new Date(initialStart.valueOf() + offset);\n                // TODO: pass a Moment instead of a Date to snap(). (Breaking change)\n                itemData.start = snap ? snap(start, scale, step) : start;\n              }\n            } else {\n              if (itemData.end != undefined) {\n                var initialEnd = util.convert(props.data.end, 'Date');\n                var end = new Date(initialEnd.valueOf() + offset);\n                // TODO: pass a Moment instead of a Date to snap(). (Breaking change)\n                itemData.end = snap ? snap(end, scale, step) : end;\n              }\n            }\n          } else {\n            // drag both start and end\n            if (itemData.start != undefined) {\n\n              var initialStart = util.convert(props.data.start, 'Date').valueOf();\n              var start = new Date(initialStart + offset);\n\n              if (itemData.end != undefined) {\n                var initialEnd = util.convert(props.data.end, 'Date');\n                var duration = initialEnd.valueOf() - initialStart.valueOf();\n\n                // TODO: pass a Moment instead of a Date to snap(). (Breaking change)\n                itemData.start = snap ? snap(start, scale, step) : start;\n                itemData.end = new Date(itemData.start.valueOf() + duration);\n              } else {\n                // TODO: pass a Moment instead of a Date to snap(). (Breaking change)\n                itemData.start = snap ? snap(start, scale, step) : start;\n              }\n            }\n          }\n        }\n\n        var updateGroupAllowed = me.options.editable.updateGroup || props.item.editable === true;\n\n        if (updateGroupAllowed && !props.dragLeft && !props.dragRight && newGroupBase != null) {\n          if (itemData.group != undefined) {\n            var newOffset = newGroupBase - props.groupOffset;\n\n            //make sure we stay in bounds\n            newOffset = Math.max(0, newOffset);\n            newOffset = Math.min(me.groupIds.length - 1, newOffset);\n\n            itemData.group = me.groupIds[newOffset];\n          }\n        }\n\n        // confirm moving the item\n        itemData = this._cloneItemData(itemData); // convert start and end to the correct type\n        me.options.onMoving(itemData, function (itemData) {\n          if (itemData) {\n            props.item.setData(this._cloneItemData(itemData, 'Date'));\n          }\n        }.bind(this));\n      }.bind(this));\n\n      this.stackDirty = true; // force re-stacking of all items next redraw\n      this.body.emitter.emit('_change');\n    }\n  };\n\n  /**\n   * Move an item to another group\n   * @param {Item} item\n   * @param {String | Number} groupId\n   * @private\n   */\n  ItemSet.prototype._moveToGroup = function (item, groupId) {\n    var group = this.groups[groupId];\n    if (group && group.groupId != item.data.group) {\n      var oldGroup = item.parent;\n      oldGroup.remove(item);\n      oldGroup.order();\n      group.add(item);\n      group.order();\n\n      item.data.group = group.groupId;\n    }\n  };\n\n  /**\n   * End of dragging selected items\n   * @param {Event} event\n   * @private\n   */\n  ItemSet.prototype._onDragEnd = function (event) {\n    if (this.touchParams.itemProps) {\n      event.stopPropagation();\n\n      var me = this;\n      var dataset = this.itemsData.getDataSet();\n      var itemProps = this.touchParams.itemProps;\n      this.touchParams.itemProps = null;\n      this.touchParams.itemIsDragging = false;\n\n      itemProps.forEach(function (props) {\n        var id = props.item.id;\n        var exists = me.itemsData.get(id, me.itemOptions) != null;\n\n        if (!exists) {\n          // add a new item\n          me.options.onAdd(props.item.data, function (itemData) {\n            me._removeItem(props.item); // remove temporary item\n            if (itemData) {\n              me.itemsData.getDataSet().add(itemData);\n            }\n\n            // force re-stacking of all items next redraw\n            me.stackDirty = true;\n            me.body.emitter.emit('_change');\n          });\n        } else {\n          // update existing item\n          var itemData = this._cloneItemData(props.item.data); // convert start and end to the correct type\n          me.options.onMove(itemData, function (itemData) {\n            if (itemData) {\n              // apply changes\n              itemData[dataset._fieldId] = id; // ensure the item contains its id (can be undefined)\n              dataset.update(itemData);\n            } else {\n              // restore original values\n              props.item.setData(props.data);\n\n              me.stackDirty = true; // force re-stacking of all items next redraw\n              me.body.emitter.emit('_change');\n            }\n          });\n        }\n      }.bind(this));\n    }\n  };\n\n  ItemSet.prototype._onGroupDragStart = function (event) {\n    if (this.options.groupEditable.order) {\n      this.groupTouchParams.group = this.groupFromTarget(event);\n\n      if (this.groupTouchParams.group) {\n        event.stopPropagation();\n\n        this.groupTouchParams.originalOrder = this.groupsData.getIds({\n          order: this.options.groupOrder\n        });\n      }\n    }\n  };\n\n  ItemSet.prototype._onGroupDrag = function (event) {\n    if (this.options.groupEditable.order && this.groupTouchParams.group) {\n      event.stopPropagation();\n\n      // drag from one group to another\n      var group = this.groupFromTarget(event);\n\n      // try to avoid toggling when groups differ in height\n      if (group && group.height != this.groupTouchParams.group.height) {\n        var movingUp = group.top < this.groupTouchParams.group.top;\n        var clientY = event.center ? event.center.y : event.clientY;\n        var targetGroupTop = util.getAbsoluteTop(group.dom.foreground);\n        var draggedGroupHeight = this.groupTouchParams.group.height;\n        if (movingUp) {\n          // skip swapping the groups when the dragged group is not below clientY afterwards\n          if (targetGroupTop + draggedGroupHeight < clientY) {\n            return;\n          }\n        } else {\n          var targetGroupHeight = group.height;\n          // skip swapping the groups when the dragged group is not below clientY afterwards\n          if (targetGroupTop + targetGroupHeight - draggedGroupHeight > clientY) {\n            return;\n          }\n        }\n      }\n\n      if (group && group != this.groupTouchParams.group) {\n        var groupsData = this.groupsData;\n        var targetGroup = groupsData.get(group.groupId);\n        var draggedGroup = groupsData.get(this.groupTouchParams.group.groupId);\n\n        // switch groups\n        if (draggedGroup && targetGroup) {\n          this.options.groupOrderSwap(draggedGroup, targetGroup, this.groupsData);\n          this.groupsData.update(draggedGroup);\n          this.groupsData.update(targetGroup);\n        }\n\n        // fetch current order of groups\n        var newOrder = this.groupsData.getIds({\n          order: this.options.groupOrder\n        });\n\n        // in case of changes since _onGroupDragStart\n        if (!util.equalArray(newOrder, this.groupTouchParams.originalOrder)) {\n          var groupsData = this.groupsData;\n          var origOrder = this.groupTouchParams.originalOrder;\n          var draggedId = this.groupTouchParams.group.groupId;\n          var numGroups = Math.min(origOrder.length, newOrder.length);\n          var curPos = 0;\n          var newOffset = 0;\n          var orgOffset = 0;\n          while (curPos < numGroups) {\n            // as long as the groups are where they should be step down along the groups order\n            while (curPos + newOffset < numGroups && curPos + orgOffset < numGroups && newOrder[curPos + newOffset] == origOrder[curPos + orgOffset]) {\n              curPos++;\n            }\n\n            // all ok\n            if (curPos + newOffset >= numGroups) {\n              break;\n            }\n\n            // not all ok\n            // if dragged group was move upwards everything below should have an offset\n            if (newOrder[curPos + newOffset] == draggedId) {\n              newOffset = 1;\n              continue;\n            }\n            // if dragged group was move downwards everything above should have an offset\n            else if (origOrder[curPos + orgOffset] == draggedId) {\n                orgOffset = 1;\n                continue;\n              }\n              // found a group (apart from dragged group) that has the wrong position -> switch with the \n              // group at the position where other one should be, fix index arrays and continue\n              else {\n                  var slippedPosition = newOrder.indexOf(origOrder[curPos + orgOffset]);\n                  var switchGroup = groupsData.get(newOrder[curPos + newOffset]);\n                  var shouldBeGroup = groupsData.get(origOrder[curPos + orgOffset]);\n                  this.options.groupOrderSwap(switchGroup, shouldBeGroup, groupsData);\n                  groupsData.update(switchGroup);\n                  groupsData.update(shouldBeGroup);\n\n                  var switchGroupId = newOrder[curPos + newOffset];\n                  newOrder[curPos + newOffset] = origOrder[curPos + orgOffset];\n                  newOrder[slippedPosition] = switchGroupId;\n\n                  curPos++;\n                }\n          }\n        }\n      }\n    }\n  };\n\n  ItemSet.prototype._onGroupDragEnd = function (event) {\n    if (this.options.groupEditable.order && this.groupTouchParams.group) {\n      event.stopPropagation();\n\n      // update existing group\n      var me = this;\n      var id = me.groupTouchParams.group.groupId;\n      var dataset = me.groupsData.getDataSet();\n      var groupData = util.extend({}, dataset.get(id)); // clone the data\n      me.options.onMoveGroup(groupData, function (groupData) {\n        if (groupData) {\n          // apply changes\n          groupData[dataset._fieldId] = id; // ensure the group contains its id (can be undefined)\n          dataset.update(groupData);\n        } else {\n\n          // fetch current order of groups\n          var newOrder = dataset.getIds({\n            order: me.options.groupOrder\n          });\n\n          // restore original order\n          if (!util.equalArray(newOrder, me.groupTouchParams.originalOrder)) {\n            var origOrder = me.groupTouchParams.originalOrder;\n            var numGroups = Math.min(origOrder.length, newOrder.length);\n            var curPos = 0;\n            while (curPos < numGroups) {\n              // as long as the groups are where they should be step down along the groups order\n              while (curPos < numGroups && newOrder[curPos] == origOrder[curPos]) {\n                curPos++;\n              }\n\n              // all ok\n              if (curPos >= numGroups) {\n                break;\n              }\n\n              // found a group that has the wrong position -> switch with the \n              // group at the position where other one should be, fix index arrays and continue\n              var slippedPosition = newOrder.indexOf(origOrder[curPos]);\n              var switchGroup = dataset.get(newOrder[curPos]);\n              var shouldBeGroup = dataset.get(origOrder[curPos]);\n              me.options.groupOrderSwap(switchGroup, shouldBeGroup, dataset);\n              groupsData.update(switchGroup);\n              groupsData.update(shouldBeGroup);\n\n              var switchGroupId = newOrder[curPos];\n              newOrder[curPos] = origOrder[curPos];\n              newOrder[slippedPosition] = switchGroupId;\n\n              curPos++;\n            }\n          }\n        }\n      });\n\n      me.body.emitter.emit('groupDragged', { groupId: id });\n    }\n  };\n\n  /**\n   * Handle selecting/deselecting an item when tapping it\n   * @param {Event} event\n   * @private\n   */\n  ItemSet.prototype._onSelectItem = function (event) {\n    if (!this.options.selectable) return;\n\n    var ctrlKey = event.srcEvent && (event.srcEvent.ctrlKey || event.srcEvent.metaKey);\n    var shiftKey = event.srcEvent && event.srcEvent.shiftKey;\n    if (ctrlKey || shiftKey) {\n      this._onMultiSelectItem(event);\n      return;\n    }\n\n    var oldSelection = this.getSelection();\n\n    var item = this.itemFromTarget(event);\n    var selection = item ? [item.id] : [];\n    this.setSelection(selection);\n\n    var newSelection = this.getSelection();\n\n    // emit a select event,\n    // except when old selection is empty and new selection is still empty\n    if (newSelection.length > 0 || oldSelection.length > 0) {\n      this.body.emitter.emit('select', {\n        items: newSelection,\n        event: event\n      });\n    }\n  };\n\n  /**\n   * Handle hovering an item\n   * @param {Event} event\n   * @private\n   */\n  ItemSet.prototype._onMouseOver = function (event) {\n    var item = this.itemFromTarget(event);\n    if (!item) return;\n    this.body.emitter.emit('itemover', {\n      item: item.id,\n      event: event\n    });\n  };\n  ItemSet.prototype._onMouseOut = function (event) {\n    var item = this.itemFromTarget(event);\n    if (!item) return;\n    this.body.emitter.emit('itemout', {\n      item: item.id,\n      event: event\n    });\n  };\n\n  /**\n   * Handle creation and updates of an item on double tap\n   * @param event\n   * @private\n   */\n  ItemSet.prototype._onAddItem = function (event) {\n    if (!this.options.selectable) return;\n    if (!this.options.editable.add) return;\n\n    var me = this;\n    var snap = this.options.snap || null;\n    var item = this.itemFromTarget(event);\n\n    if (item) {\n      // update item\n\n      // execute async handler to update the item (or cancel it)\n      var itemData = me.itemsData.get(item.id); // get a clone of the data from the dataset\n      this.options.onUpdate(itemData, function (itemData) {\n        if (itemData) {\n          me.itemsData.getDataSet().update(itemData);\n        }\n      });\n    } else {\n      // add item\n      if (this.options.rtl) {\n        var xAbs = util.getAbsoluteRight(this.dom.frame);\n        var x = xAbs - event.center.x;\n      } else {\n        var xAbs = util.getAbsoluteLeft(this.dom.frame);\n        var x = event.center.x - xAbs;\n      }\n      // var xAbs = util.getAbsoluteLeft(this.dom.frame);\n      // var x = event.center.x - xAbs;\n      var start = this.body.util.toTime(x);\n      var scale = this.body.util.getScale();\n      var step = this.body.util.getStep();\n\n      var newItemData = {\n        start: snap ? snap(start, scale, step) : start,\n        content: 'new item'\n      };\n\n      if (event.type == 'drop') {\n        var itemData = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n        newItemData.content = itemData.content; // content is required \n        newItemData.type = itemData.type || 'box';\n        newItemData[this.itemsData._fieldId] = itemData.id || util.randomUUID();\n\n        if (itemData.type == 'range' || itemData.end && itemData.start) {\n\n          if (!itemData.end) {\n            var end = this.body.util.toTime(x + this.props.width / 5);\n            newItemData.end = snap ? snap(end, scale, step) : end;\n          } else {\n            newItemData.end = new Date(newItemData.start._i).getTime() + new Date(itemData.end).getTime() - new Date(itemData.start).getTime();\n          }\n        }\n      } else {\n        newItemData[this.itemsData._fieldId] = util.randomUUID();\n\n        // when default type is a range, add a default end date to the new item\n        if (this.options.type === 'range') {\n          var end = this.body.util.toTime(x + this.props.width / 5);\n          newItemData.end = snap ? snap(end, scale, step) : end;\n        }\n      }\n\n      var group = this.groupFromTarget(event);\n      if (group) {\n        newItemData.group = group.groupId;\n      }\n\n      // execute async handler to customize (or cancel) adding an item\n      newItemData = this._cloneItemData(newItemData); // convert start and end to the correct type\n      this.options.onAdd(newItemData, function (item) {\n        if (item) {\n          me.itemsData.getDataSet().add(item);\n          if (event.type == 'drop') {\n            me.setSelection([item.id]);\n          }\n          // TODO: need to trigger a redraw?\n        }\n      });\n    }\n  };\n\n  /**\n   * Handle selecting/deselecting multiple items when holding an item\n   * @param {Event} event\n   * @private\n   */\n  ItemSet.prototype._onMultiSelectItem = function (event) {\n    if (!this.options.selectable) return;\n\n    var item = this.itemFromTarget(event);\n\n    if (item) {\n      // multi select items (if allowed)\n\n      var selection = this.options.multiselect ? this.getSelection() // take current selection\n      : []; // deselect current selection\n\n      var shiftKey = event.srcEvent && event.srcEvent.shiftKey || false;\n\n      if (shiftKey && this.options.multiselect) {\n        // select all items between the old selection and the tapped item\n        var itemGroup = this.itemsData.get(item.id).group;\n\n        // when filtering get the group of the last selected item\n        var lastSelectedGroup = undefined;\n        if (this.options.multiselectPerGroup) {\n          if (selection.length > 0) {\n            lastSelectedGroup = this.itemsData.get(selection[0]).group;\n          }\n        }\n\n        // determine the selection range\n        if (!this.options.multiselectPerGroup || lastSelectedGroup == undefined || lastSelectedGroup == itemGroup) {\n          selection.push(item.id);\n        }\n        var range = ItemSet._getItemRange(this.itemsData.get(selection, this.itemOptions));\n\n        if (!this.options.multiselectPerGroup || lastSelectedGroup == itemGroup) {\n          // select all items within the selection range\n          selection = [];\n          for (var id in this.items) {\n            if (this.items.hasOwnProperty(id)) {\n              var _item = this.items[id];\n              var start = _item.data.start;\n              var end = _item.data.end !== undefined ? _item.data.end : start;\n\n              if (start >= range.min && end <= range.max && (!this.options.multiselectPerGroup || lastSelectedGroup == this.itemsData.get(_item.id).group) && !(_item instanceof BackgroundItem)) {\n                selection.push(_item.id); // do not use id but item.id, id itself is stringified\n              }\n            }\n          }\n        }\n      } else {\n        // add/remove this item from the current selection\n        var index = selection.indexOf(item.id);\n        if (index == -1) {\n          // item is not yet selected -> select it\n          selection.push(item.id);\n        } else {\n          // item is already selected -> deselect it\n          selection.splice(index, 1);\n        }\n      }\n\n      this.setSelection(selection);\n\n      this.body.emitter.emit('select', {\n        items: this.getSelection(),\n        event: event\n      });\n    }\n  };\n\n  /**\n   * Calculate the time range of a list of items\n   * @param {Array.<Object>} itemsData\n   * @return {{min: Date, max: Date}} Returns the range of the provided items\n   * @private\n   */\n  ItemSet._getItemRange = function (itemsData) {\n    var max = null;\n    var min = null;\n\n    itemsData.forEach(function (data) {\n      if (min == null || data.start < min) {\n        min = data.start;\n      }\n\n      if (data.end != undefined) {\n        if (max == null || data.end > max) {\n          max = data.end;\n        }\n      } else {\n        if (max == null || data.start > max) {\n          max = data.start;\n        }\n      }\n    });\n\n    return {\n      min: min,\n      max: max\n    };\n  };\n\n  /**\n   * Find an item from an event target:\n   * searches for the attribute 'timeline-item' in the event target's element tree\n   * @param {Event} event\n   * @return {Item | null} item\n   */\n  ItemSet.prototype.itemFromTarget = function (event) {\n    var target = event.target;\n    while (target) {\n      if (target.hasOwnProperty('timeline-item')) {\n        return target['timeline-item'];\n      }\n      target = target.parentNode;\n    }\n\n    return null;\n  };\n\n  /**\n   * Find the Group from an event target:\n   * searches for the attribute 'timeline-group' in the event target's element tree\n   * @param {Event} event\n   * @return {Group | null} group\n   */\n  ItemSet.prototype.groupFromTarget = function (event) {\n    var clientY = event.center ? event.center.y : event.clientY;\n    for (var i = 0; i < this.groupIds.length; i++) {\n      var groupId = this.groupIds[i];\n      var group = this.groups[groupId];\n      var foreground = group.dom.foreground;\n      var top = util.getAbsoluteTop(foreground);\n      if (clientY > top && clientY < top + foreground.offsetHeight) {\n        return group;\n      }\n\n      if (this.options.orientation.item === 'top') {\n        if (i === this.groupIds.length - 1 && clientY > top) {\n          return group;\n        }\n      } else {\n        if (i === 0 && clientY < top + foreground.offset) {\n          return group;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Find the ItemSet from an event target:\n   * searches for the attribute 'timeline-itemset' in the event target's element tree\n   * @param {Event} event\n   * @return {ItemSet | null} item\n   */\n  ItemSet.itemSetFromTarget = function (event) {\n    var target = event.target;\n    while (target) {\n      if (target.hasOwnProperty('timeline-itemset')) {\n        return target['timeline-itemset'];\n      }\n      target = target.parentNode;\n    }\n\n    return null;\n  };\n\n  /**\n   * Clone the data of an item, and \"normalize\" it: convert the start and end date\n   * to the type (Date, Moment, ...) configured in the DataSet. If not configured,\n   * start and end are converted to Date.\n   * @param {Object} itemData, typically `item.data`\n   * @param {string} [type]  Optional Date type. If not provided, the type from the DataSet is taken\n   * @return {Object} The cloned object\n   * @private\n   */\n  ItemSet.prototype._cloneItemData = function (itemData, type) {\n    var clone = util.extend({}, itemData);\n\n    if (!type) {\n      // convert start and end date to the type (Date, Moment, ...) configured in the DataSet\n      type = this.itemsData.getDataSet()._options.type;\n    }\n\n    if (clone.start != undefined) {\n      clone.start = util.convert(clone.start, type && type.start || 'Date');\n    }\n    if (clone.end != undefined) {\n      clone.end = util.convert(clone.end, type && type.end || 'Date');\n    }\n\n    return clone;\n  };\n\n  module.exports = ItemSet;\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var moment = __webpack_require__(2);\n  var DateUtil = __webpack_require__(34);\n  var util = __webpack_require__(1);\n\n  /**\n   * @constructor  TimeStep\n   * The class TimeStep is an iterator for dates. You provide a start date and an\n   * end date. The class itself determines the best scale (step size) based on the\n   * provided start Date, end Date, and minimumStep.\n   *\n   * If minimumStep is provided, the step size is chosen as close as possible\n   * to the minimumStep but larger than minimumStep. If minimumStep is not\n   * provided, the scale is set to 1 DAY.\n   * The minimumStep should correspond with the onscreen size of about 6 characters\n   *\n   * Alternatively, you can set a scale by hand.\n   * After creation, you can initialize the class by executing first(). Then you\n   * can iterate from the start date to the end date via next(). You can check if\n   * the end date is reached with the function hasNext(). After each step, you can\n   * retrieve the current date via getCurrent().\n   * The TimeStep has scales ranging from milliseconds, seconds, minutes, hours,\n   * days, to years.\n   *\n   * Version: 1.2\n   *\n   * @param {Date} [start]         The start date, for example new Date(2010, 9, 21)\n   *                               or new Date(2010, 9, 21, 23, 45, 00)\n   * @param {Date} [end]           The end date\n   * @param {Number} [minimumStep] Optional. Minimum step size in milliseconds\n   */\n  function TimeStep(start, end, minimumStep, hiddenDates) {\n    this.moment = moment;\n\n    // variables\n    this.current = this.moment();\n    this._start = this.moment();\n    this._end = this.moment();\n\n    this.autoScale = true;\n    this.scale = 'day';\n    this.step = 1;\n\n    // initialize the range\n    this.setRange(start, end, minimumStep);\n\n    // hidden Dates options\n    this.switchedDay = false;\n    this.switchedMonth = false;\n    this.switchedYear = false;\n    if (Array.isArray(hiddenDates)) {\n      this.hiddenDates = hiddenDates;\n    } else if (hiddenDates != undefined) {\n      this.hiddenDates = [hiddenDates];\n    } else {\n      this.hiddenDates = [];\n    }\n\n    this.format = TimeStep.FORMAT; // default formatting\n  }\n\n  // Time formatting\n  TimeStep.FORMAT = {\n    minorLabels: {\n      millisecond: 'SSS',\n      second: 's',\n      minute: 'HH:mm',\n      hour: 'HH:mm',\n      weekday: 'ddd D',\n      day: 'D',\n      month: 'MMM',\n      year: 'YYYY'\n    },\n    majorLabels: {\n      millisecond: 'HH:mm:ss',\n      second: 'D MMMM HH:mm',\n      minute: 'ddd D MMMM',\n      hour: 'ddd D MMMM',\n      weekday: 'MMMM YYYY',\n      day: 'MMMM YYYY',\n      month: 'YYYY',\n      year: ''\n    }\n  };\n\n  /**\n   * Set custom constructor function for moment. Can be used to set dates\n   * to UTC or to set a utcOffset.\n   * @param {function} moment\n   */\n  TimeStep.prototype.setMoment = function (moment) {\n    this.moment = moment;\n\n    // update the date properties, can have a new utcOffset\n    this.current = this.moment(this.current.valueOf());\n    this._start = this.moment(this._start.valueOf());\n    this._end = this.moment(this._end.valueOf());\n  };\n\n  /**\n   * Set custom formatting for the minor an major labels of the TimeStep.\n   * Both `minorLabels` and `majorLabels` are an Object with properties:\n   * 'millisecond', 'second', 'minute', 'hour', 'weekday', 'day', 'month', 'year'.\n   * @param {{minorLabels: Object, majorLabels: Object}} format\n   */\n  TimeStep.prototype.setFormat = function (format) {\n    var defaultFormat = util.deepExtend({}, TimeStep.FORMAT);\n    this.format = util.deepExtend(defaultFormat, format);\n  };\n\n  /**\n   * Set a new range\n   * If minimumStep is provided, the step size is chosen as close as possible\n   * to the minimumStep but larger than minimumStep. If minimumStep is not\n   * provided, the scale is set to 1 DAY.\n   * The minimumStep should correspond with the onscreen size of about 6 characters\n   * @param {Date} [start]      The start date and time.\n   * @param {Date} [end]        The end date and time.\n   * @param {int} [minimumStep] Optional. Minimum step size in milliseconds\n   */\n  TimeStep.prototype.setRange = function (start, end, minimumStep) {\n    if (!(start instanceof Date) || !(end instanceof Date)) {\n      throw \"No legal start or end date in method setRange\";\n    }\n\n    this._start = start != undefined ? this.moment(start.valueOf()) : new Date();\n    this._end = end != undefined ? this.moment(end.valueOf()) : new Date();\n\n    if (this.autoScale) {\n      this.setMinimumStep(minimumStep);\n    }\n  };\n\n  /**\n   * Set the range iterator to the start date.\n   */\n  TimeStep.prototype.start = function () {\n    this.current = this._start.clone();\n    this.roundToMinor();\n  };\n\n  /**\n   * Round the current date to the first minor date value\n   * This must be executed once when the current date is set to start Date\n   */\n  TimeStep.prototype.roundToMinor = function () {\n    // round to floor\n    // IMPORTANT: we have no breaks in this switch! (this is no bug)\n    // noinspection FallThroughInSwitchStatementJS\n    switch (this.scale) {\n      case 'year':\n        this.current.year(this.step * Math.floor(this.current.year() / this.step));\n        this.current.month(0);\n      case 'month':\n        this.current.date(1);\n      case 'day': // intentional fall through\n      case 'weekday':\n        this.current.hours(0);\n      case 'hour':\n        this.current.minutes(0);\n      case 'minute':\n        this.current.seconds(0);\n      case 'second':\n        this.current.milliseconds(0);\n      //case 'millisecond': // nothing to do for milliseconds\n    }\n\n    if (this.step != 1) {\n      // round down to the first minor value that is a multiple of the current step size\n      switch (this.scale) {\n        case 'millisecond':\n          this.current.subtract(this.current.milliseconds() % this.step, 'milliseconds');break;\n        case 'second':\n          this.current.subtract(this.current.seconds() % this.step, 'seconds');break;\n        case 'minute':\n          this.current.subtract(this.current.minutes() % this.step, 'minutes');break;\n        case 'hour':\n          this.current.subtract(this.current.hours() % this.step, 'hours');break;\n        case 'weekday': // intentional fall through\n        case 'day':\n          this.current.subtract((this.current.date() - 1) % this.step, 'day');break;\n        case 'month':\n          this.current.subtract(this.current.month() % this.step, 'month');break;\n        case 'year':\n          this.current.subtract(this.current.year() % this.step, 'year');break;\n        default:\n          break;\n      }\n    }\n  };\n\n  /**\n   * Check if the there is a next step\n   * @return {boolean}  true if the current date has not passed the end date\n   */\n  TimeStep.prototype.hasNext = function () {\n    return this.current.valueOf() <= this._end.valueOf();\n  };\n\n  /**\n   * Do the next step\n   */\n  TimeStep.prototype.next = function () {\n    var prev = this.current.valueOf();\n\n    // Two cases, needed to prevent issues with switching daylight savings\n    // (end of March and end of October)\n    if (this.current.month() < 6) {\n      switch (this.scale) {\n        case 'millisecond':\n          this.current.add(this.step, 'millisecond');break;\n        case 'second':\n          this.current.add(this.step, 'second');break;\n        case 'minute':\n          this.current.add(this.step, 'minute');break;\n        case 'hour':\n          this.current.add(this.step, 'hour');\n          // in case of skipping an hour for daylight savings, adjust the hour again (else you get: 0h 5h 9h ... instead of 0h 4h 8h ...)\n          // TODO: is this still needed now we use the function of moment.js?\n          this.current.subtract(this.current.hours() % this.step, 'hour');\n          break;\n        case 'weekday': // intentional fall through\n        case 'day':\n          this.current.add(this.step, 'day');break;\n        case 'month':\n          this.current.add(this.step, 'month');break;\n        case 'year':\n          this.current.add(this.step, 'year');break;\n        default:\n          break;\n      }\n    } else {\n      switch (this.scale) {\n        case 'millisecond':\n          this.current.add(this.step, 'millisecond');break;\n        case 'second':\n          this.current.add(this.step, 'second');break;\n        case 'minute':\n          this.current.add(this.step, 'minute');break;\n        case 'hour':\n          this.current.add(this.step, 'hour');break;\n        case 'weekday': // intentional fall through\n        case 'day':\n          this.current.add(this.step, 'day');break;\n        case 'month':\n          this.current.add(this.step, 'month');break;\n        case 'year':\n          this.current.add(this.step, 'year');break;\n        default:\n          break;\n      }\n    }\n\n    if (this.step != 1) {\n      // round down to the correct major value\n      switch (this.scale) {\n        case 'millisecond':\n          if (this.current.milliseconds() < this.step) this.current.milliseconds(0);break;\n        case 'second':\n          if (this.current.seconds() < this.step) this.current.seconds(0);break;\n        case 'minute':\n          if (this.current.minutes() < this.step) this.current.minutes(0);break;\n        case 'hour':\n          if (this.current.hours() < this.step) this.current.hours(0);break;\n        case 'weekday': // intentional fall through\n        case 'day':\n          if (this.current.date() < this.step + 1) this.current.date(1);break;\n        case 'month':\n          if (this.current.month() < this.step) this.current.month(0);break;\n        case 'year':\n          break; // nothing to do for year\n        default:\n          break;\n      }\n    }\n\n    // safety mechanism: if current time is still unchanged, move to the end\n    if (this.current.valueOf() == prev) {\n      this.current = this._end.clone();\n    }\n\n    // Reset switches for year, month and day. Will get set to true where appropriate in DateUtil.stepOverHiddenDates\n    this.switchedDay = false;\n    this.switchedMonth = false;\n    this.switchedYear = false;\n\n    DateUtil.stepOverHiddenDates(this.moment, this, prev);\n  };\n\n  /**\n   * Get the current datetime\n   * @return {Moment}  current The current date\n   */\n  TimeStep.prototype.getCurrent = function () {\n    return this.current;\n  };\n\n  /**\n   * Set a custom scale. Autoscaling will be disabled.\n   * For example setScale('minute', 5) will result\n   * in minor steps of 5 minutes, and major steps of an hour.\n   *\n   * @param {{scale: string, step: number}} params\n   *                               An object containing two properties:\n   *                               - A string 'scale'. Choose from 'millisecond', 'second',\n   *                                 'minute', 'hour', 'weekday', 'day', 'month', 'year'.\n   *                               - A number 'step'. A step size, by default 1.\n   *                                 Choose for example 1, 2, 5, or 10.\n   */\n  TimeStep.prototype.setScale = function (params) {\n    if (params && typeof params.scale == 'string') {\n      this.scale = params.scale;\n      this.step = params.step > 0 ? params.step : 1;\n      this.autoScale = false;\n    }\n  };\n\n  /**\n   * Enable or disable autoscaling\n   * @param {boolean} enable  If true, autoascaling is set true\n   */\n  TimeStep.prototype.setAutoScale = function (enable) {\n    this.autoScale = enable;\n  };\n\n  /**\n   * Automatically determine the scale that bests fits the provided minimum step\n   * @param {Number} [minimumStep]  The minimum step size in milliseconds\n   */\n  TimeStep.prototype.setMinimumStep = function (minimumStep) {\n    if (minimumStep == undefined) {\n      return;\n    }\n\n    //var b = asc + ds;\n\n    var stepYear = 1000 * 60 * 60 * 24 * 30 * 12;\n    var stepMonth = 1000 * 60 * 60 * 24 * 30;\n    var stepDay = 1000 * 60 * 60 * 24;\n    var stepHour = 1000 * 60 * 60;\n    var stepMinute = 1000 * 60;\n    var stepSecond = 1000;\n    var stepMillisecond = 1;\n\n    // find the smallest step that is larger than the provided minimumStep\n    if (stepYear * 1000 > minimumStep) {\n      this.scale = 'year';this.step = 1000;\n    }\n    if (stepYear * 500 > minimumStep) {\n      this.scale = 'year';this.step = 500;\n    }\n    if (stepYear * 100 > minimumStep) {\n      this.scale = 'year';this.step = 100;\n    }\n    if (stepYear * 50 > minimumStep) {\n      this.scale = 'year';this.step = 50;\n    }\n    if (stepYear * 10 > minimumStep) {\n      this.scale = 'year';this.step = 10;\n    }\n    if (stepYear * 5 > minimumStep) {\n      this.scale = 'year';this.step = 5;\n    }\n    if (stepYear > minimumStep) {\n      this.scale = 'year';this.step = 1;\n    }\n    if (stepMonth * 3 > minimumStep) {\n      this.scale = 'month';this.step = 3;\n    }\n    if (stepMonth > minimumStep) {\n      this.scale = 'month';this.step = 1;\n    }\n    if (stepDay * 5 > minimumStep) {\n      this.scale = 'day';this.step = 5;\n    }\n    if (stepDay * 2 > minimumStep) {\n      this.scale = 'day';this.step = 2;\n    }\n    if (stepDay > minimumStep) {\n      this.scale = 'day';this.step = 1;\n    }\n    if (stepDay / 2 > minimumStep) {\n      this.scale = 'weekday';this.step = 1;\n    }\n    if (stepHour * 4 > minimumStep) {\n      this.scale = 'hour';this.step = 4;\n    }\n    if (stepHour > minimumStep) {\n      this.scale = 'hour';this.step = 1;\n    }\n    if (stepMinute * 15 > minimumStep) {\n      this.scale = 'minute';this.step = 15;\n    }\n    if (stepMinute * 10 > minimumStep) {\n      this.scale = 'minute';this.step = 10;\n    }\n    if (stepMinute * 5 > minimumStep) {\n      this.scale = 'minute';this.step = 5;\n    }\n    if (stepMinute > minimumStep) {\n      this.scale = 'minute';this.step = 1;\n    }\n    if (stepSecond * 15 > minimumStep) {\n      this.scale = 'second';this.step = 15;\n    }\n    if (stepSecond * 10 > minimumStep) {\n      this.scale = 'second';this.step = 10;\n    }\n    if (stepSecond * 5 > minimumStep) {\n      this.scale = 'second';this.step = 5;\n    }\n    if (stepSecond > minimumStep) {\n      this.scale = 'second';this.step = 1;\n    }\n    if (stepMillisecond * 200 > minimumStep) {\n      this.scale = 'millisecond';this.step = 200;\n    }\n    if (stepMillisecond * 100 > minimumStep) {\n      this.scale = 'millisecond';this.step = 100;\n    }\n    if (stepMillisecond * 50 > minimumStep) {\n      this.scale = 'millisecond';this.step = 50;\n    }\n    if (stepMillisecond * 10 > minimumStep) {\n      this.scale = 'millisecond';this.step = 10;\n    }\n    if (stepMillisecond * 5 > minimumStep) {\n      this.scale = 'millisecond';this.step = 5;\n    }\n    if (stepMillisecond > minimumStep) {\n      this.scale = 'millisecond';this.step = 1;\n    }\n  };\n\n  /**\n   * Snap a date to a rounded value.\n   * The snap intervals are dependent on the current scale and step.\n   * Static function\n   * @param {Date} date    the date to be snapped.\n   * @param {string} scale Current scale, can be 'millisecond', 'second',\n   *                       'minute', 'hour', 'weekday, 'day', 'month', 'year'.\n   * @param {number} step  Current step (1, 2, 4, 5, ...\n   * @return {Date} snappedDate\n   */\n  TimeStep.snap = function (date, scale, step) {\n    var clone = moment(date);\n\n    if (scale == 'year') {\n      var year = clone.year() + Math.round(clone.month() / 12);\n      clone.year(Math.round(year / step) * step);\n      clone.month(0);\n      clone.date(0);\n      clone.hours(0);\n      clone.minutes(0);\n      clone.seconds(0);\n      clone.milliseconds(0);\n    } else if (scale == 'month') {\n      if (clone.date() > 15) {\n        clone.date(1);\n        clone.add(1, 'month');\n        // important: first set Date to 1, after that change the month.\n      } else {\n        clone.date(1);\n      }\n\n      clone.hours(0);\n      clone.minutes(0);\n      clone.seconds(0);\n      clone.milliseconds(0);\n    } else if (scale == 'day') {\n      //noinspection FallthroughInSwitchStatementJS\n      switch (step) {\n        case 5:\n        case 2:\n          clone.hours(Math.round(clone.hours() / 24) * 24);break;\n        default:\n          clone.hours(Math.round(clone.hours() / 12) * 12);break;\n      }\n      clone.minutes(0);\n      clone.seconds(0);\n      clone.milliseconds(0);\n    } else if (scale == 'weekday') {\n      //noinspection FallthroughInSwitchStatementJS\n      switch (step) {\n        case 5:\n        case 2:\n          clone.hours(Math.round(clone.hours() / 12) * 12);break;\n        default:\n          clone.hours(Math.round(clone.hours() / 6) * 6);break;\n      }\n      clone.minutes(0);\n      clone.seconds(0);\n      clone.milliseconds(0);\n    } else if (scale == 'hour') {\n      switch (step) {\n        case 4:\n          clone.minutes(Math.round(clone.minutes() / 60) * 60);break;\n        default:\n          clone.minutes(Math.round(clone.minutes() / 30) * 30);break;\n      }\n      clone.seconds(0);\n      clone.milliseconds(0);\n    } else if (scale == 'minute') {\n      //noinspection FallthroughInSwitchStatementJS\n      switch (step) {\n        case 15:\n        case 10:\n          clone.minutes(Math.round(clone.minutes() / 5) * 5);\n          clone.seconds(0);\n          break;\n        case 5:\n          clone.seconds(Math.round(clone.seconds() / 60) * 60);break;\n        default:\n          clone.seconds(Math.round(clone.seconds() / 30) * 30);break;\n      }\n      clone.milliseconds(0);\n    } else if (scale == 'second') {\n      //noinspection FallthroughInSwitchStatementJS\n      switch (step) {\n        case 15:\n        case 10:\n          clone.seconds(Math.round(clone.seconds() / 5) * 5);\n          clone.milliseconds(0);\n          break;\n        case 5:\n          clone.milliseconds(Math.round(clone.milliseconds() / 1000) * 1000);break;\n        default:\n          clone.milliseconds(Math.round(clone.milliseconds() / 500) * 500);break;\n      }\n    } else if (scale == 'millisecond') {\n      var _step = step > 5 ? step / 2 : 1;\n      clone.milliseconds(Math.round(clone.milliseconds() / _step) * _step);\n    }\n\n    return clone;\n  };\n\n  /**\n   * Check if the current value is a major value (for example when the step\n   * is DAY, a major value is each first day of the MONTH)\n   * @return {boolean} true if current date is major, else false.\n   */\n  TimeStep.prototype.isMajor = function () {\n    if (this.switchedYear == true) {\n      switch (this.scale) {\n        case 'year':\n        case 'month':\n        case 'weekday':\n        case 'day':\n        case 'hour':\n        case 'minute':\n        case 'second':\n        case 'millisecond':\n          return true;\n        default:\n          return false;\n      }\n    } else if (this.switchedMonth == true) {\n      switch (this.scale) {\n        case 'weekday':\n        case 'day':\n        case 'hour':\n        case 'minute':\n        case 'second':\n        case 'millisecond':\n          return true;\n        default:\n          return false;\n      }\n    } else if (this.switchedDay == true) {\n      switch (this.scale) {\n        case 'millisecond':\n        case 'second':\n        case 'minute':\n        case 'hour':\n          return true;\n        default:\n          return false;\n      }\n    }\n\n    var date = this.moment(this.current);\n    switch (this.scale) {\n      case 'millisecond':\n        return date.milliseconds() == 0;\n      case 'second':\n        return date.seconds() == 0;\n      case 'minute':\n        return date.hours() == 0 && date.minutes() == 0;\n      case 'hour':\n        return date.hours() == 0;\n      case 'weekday': // intentional fall through\n      case 'day':\n        return date.date() == 1;\n      case 'month':\n        return date.month() == 0;\n      case 'year':\n        return false;\n      default:\n        return false;\n    }\n  };\n\n  /**\n   * Returns formatted text for the minor axislabel, depending on the current\n   * date and the scale. For example when scale is MINUTE, the current time is\n   * formatted as \"hh:mm\".\n   * @param {Date} [date] custom date. if not provided, current date is taken\n   */\n  TimeStep.prototype.getLabelMinor = function (date) {\n    if (date == undefined) {\n      date = this.current;\n    }\n\n    if (typeof this.format.minorLabels === \"function\") {\n      return this.format.minorLabels(date, this.scale, this.step);\n    }\n\n    var format = this.format.minorLabels[this.scale];\n    return format && format.length > 0 ? this.moment(date).format(format) : '';\n  };\n\n  /**\n   * Returns formatted text for the major axis label, depending on the current\n   * date and the scale. For example when scale is MINUTE, the major scale is\n   * hours, and the hour will be formatted as \"hh\".\n   * @param {Date} [date] custom date. if not provided, current date is taken\n   */\n  TimeStep.prototype.getLabelMajor = function (date) {\n    if (date == undefined) {\n      date = this.current;\n    }\n\n    if (typeof this.format.majorLabels === \"function\") {\n      return this.format.majorLabels(date, this.scale, this.step);\n    }\n\n    var format = this.format.majorLabels[this.scale];\n    return format && format.length > 0 ? this.moment(date).format(format) : '';\n  };\n\n  TimeStep.prototype.getClassName = function () {\n    var _moment = this.moment;\n    var m = this.moment(this.current);\n    var current = m.locale ? m.locale('en') : m.lang('en'); // old versions of moment have .lang() function\n    var step = this.step;\n\n    function even(value) {\n      return value / step % 2 == 0 ? ' vis-even' : ' vis-odd';\n    }\n\n    function today(date) {\n      if (date.isSame(new Date(), 'day')) {\n        return ' vis-today';\n      }\n      if (date.isSame(_moment().add(1, 'day'), 'day')) {\n        return ' vis-tomorrow';\n      }\n      if (date.isSame(_moment().add(-1, 'day'), 'day')) {\n        return ' vis-yesterday';\n      }\n      return '';\n    }\n\n    function currentWeek(date) {\n      return date.isSame(new Date(), 'week') ? ' vis-current-week' : '';\n    }\n\n    function currentMonth(date) {\n      return date.isSame(new Date(), 'month') ? ' vis-current-month' : '';\n    }\n\n    function currentYear(date) {\n      return date.isSame(new Date(), 'year') ? ' vis-current-year' : '';\n    }\n\n    switch (this.scale) {\n      case 'millisecond':\n        return today(current) + even(current.milliseconds()).trim();\n\n      case 'second':\n        return today(current) + even(current.seconds()).trim();\n\n      case 'minute':\n        return today(current) + even(current.minutes()).trim();\n\n      case 'hour':\n        return 'vis-h' + current.hours() + (this.step == 4 ? '-h' + (current.hours() + 4) : '') + today(current) + even(current.hours());\n\n      case 'weekday':\n        return 'vis-' + current.format('dddd').toLowerCase() + today(current) + currentWeek(current) + even(current.date());\n\n      case 'day':\n        return 'vis-day' + current.date() + ' vis-' + current.format('MMMM').toLowerCase() + today(current) + currentMonth(current) + this.step <= 2 ? today(current) : '' + this.step <= 2 ? ' vis-' + current.format('dddd').toLowerCase() : '' + even(current.date() - 1);\n\n      case 'month':\n        return 'vis-' + current.format('MMMM').toLowerCase() + currentMonth(current) + even(current.month());\n\n      case 'year':\n        var year = current.year();\n        return 'vis-year' + year + currentYear(current) + even(year);\n\n      default:\n        return '';\n    }\n  };\n\n  module.exports = TimeStep;\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var util = __webpack_require__(1);\n  var stack = __webpack_require__(39);\n  var RangeItem = __webpack_require__(40);\n\n  /**\n   * @constructor Group\n   * @param {Number | String} groupId\n   * @param {Object} data\n   * @param {ItemSet} itemSet\n   */\n  function Group(groupId, data, itemSet) {\n    this.groupId = groupId;\n    this.subgroups = {};\n    this.subgroupIndex = 0;\n    this.subgroupOrderer = data && data.subgroupOrder;\n    this.itemSet = itemSet;\n    this.isVisible = null;\n\n    this.dom = {};\n    this.props = {\n      label: {\n        width: 0,\n        height: 0\n      }\n    };\n    this.className = null;\n\n    this.items = {}; // items filtered by groupId of this group\n    this.visibleItems = []; // items currently visible in window\n    this.orderedItems = {\n      byStart: [],\n      byEnd: []\n    };\n    this.checkRangedItems = false; // needed to refresh the ranged items if the window is programatically changed with NO overlap.\n    var me = this;\n    this.itemSet.body.emitter.on(\"checkRangedItems\", function () {\n      me.checkRangedItems = true;\n    });\n\n    this._create();\n\n    this.setData(data);\n  }\n\n  /**\n   * Create DOM elements for the group\n   * @private\n   */\n  Group.prototype._create = function () {\n    var label = document.createElement('div');\n    if (this.itemSet.options.groupEditable.order) {\n      label.className = 'vis-label draggable';\n    } else {\n      label.className = 'vis-label';\n    }\n    this.dom.label = label;\n\n    var inner = document.createElement('div');\n    inner.className = 'vis-inner';\n    label.appendChild(inner);\n    this.dom.inner = inner;\n\n    var foreground = document.createElement('div');\n    foreground.className = 'vis-group';\n    foreground['timeline-group'] = this;\n    this.dom.foreground = foreground;\n\n    this.dom.background = document.createElement('div');\n    this.dom.background.className = 'vis-group';\n\n    this.dom.axis = document.createElement('div');\n    this.dom.axis.className = 'vis-group';\n\n    // create a hidden marker to detect when the Timelines container is attached\n    // to the DOM, or the style of a parent of the Timeline is changed from\n    // display:none is changed to visible.\n    this.dom.marker = document.createElement('div');\n    this.dom.marker.style.visibility = 'hidden';\n    this.dom.marker.innerHTML = '?';\n    this.dom.background.appendChild(this.dom.marker);\n  };\n\n  /**\n   * Set the group data for this group\n   * @param {Object} data   Group data, can contain properties content and className\n   */\n  Group.prototype.setData = function (data) {\n    // update contents\n    var content;\n    var templateFunction;\n\n    if (this.itemSet.options && this.itemSet.options.groupTemplate) {\n      templateFunction = this.itemSet.options.groupTemplate.bind(this);\n      content = templateFunction(data, this.dom.inner);\n    } else {\n      content = data && data.content;\n    }\n\n    if (content instanceof Element) {\n      this.dom.inner.appendChild(content);\n      while (this.dom.inner.firstChild) {\n        this.dom.inner.removeChild(this.dom.inner.firstChild);\n      }\n      this.dom.inner.appendChild(content);\n    } else if (content instanceof Object) {\n      templateFunction(data, this.dom.inner);\n    } else if (content !== undefined && content !== null) {\n      this.dom.inner.innerHTML = content;\n    } else {\n      this.dom.inner.innerHTML = this.groupId || ''; // groupId can be null\n    }\n\n    // update title\n    this.dom.label.title = data && data.title || '';\n\n    if (!this.dom.inner.firstChild) {\n      util.addClassName(this.dom.inner, 'vis-hidden');\n    } else {\n      util.removeClassName(this.dom.inner, 'vis-hidden');\n    }\n\n    // update className\n    var className = data && data.className || null;\n    if (className != this.className) {\n      if (this.className) {\n        util.removeClassName(this.dom.label, this.className);\n        util.removeClassName(this.dom.foreground, this.className);\n        util.removeClassName(this.dom.background, this.className);\n        util.removeClassName(this.dom.axis, this.className);\n      }\n      util.addClassName(this.dom.label, className);\n      util.addClassName(this.dom.foreground, className);\n      util.addClassName(this.dom.background, className);\n      util.addClassName(this.dom.axis, className);\n      this.className = className;\n    }\n\n    // update style\n    if (this.style) {\n      util.removeCssText(this.dom.label, this.style);\n      this.style = null;\n    }\n    if (data && data.style) {\n      util.addCssText(this.dom.label, data.style);\n      this.style = data.style;\n    }\n  };\n\n  /**\n   * Get the width of the group label\n   * @return {number} width\n   */\n  Group.prototype.getLabelWidth = function () {\n    return this.props.label.width;\n  };\n\n  /**\n   * Repaint this group\n   * @param {{start: number, end: number}} range\n   * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin\n   * @param {boolean} [restack=false]  Force restacking of all items\n   * @return {boolean} Returns true if the group is resized\n   */\n  Group.prototype.redraw = function (range, margin, restack) {\n    var resized = false;\n\n    // force recalculation of the height of the items when the marker height changed\n    // (due to the Timeline being attached to the DOM or changed from display:none to visible)\n    var markerHeight = this.dom.marker.clientHeight;\n    if (markerHeight != this.lastMarkerHeight) {\n      this.lastMarkerHeight = markerHeight;\n\n      util.forEach(this.items, function (item) {\n        item.dirty = true;\n        if (item.displayed) item.redraw();\n      });\n\n      restack = true;\n    }\n\n    // recalculate the height of the subgroups\n    this._calculateSubGroupHeights();\n\n    this.isVisible = this._isGroupVisible(range, margin);\n\n    // calculate actual size and position\n    var foreground = this.dom.foreground;\n    this.top = foreground.offsetTop;\n    this.right = foreground.offsetLeft;\n    this.width = foreground.offsetWidth;\n\n    this.isVisible = this._isGroupVisible(range, margin);\n    // reposition visible items vertically\n    if (typeof this.itemSet.options.order === 'function') {\n      // a custom order function\n\n      if (restack) {\n        // brute force restack of all items\n\n        // show all items\n        var me = this;\n        var limitSize = false;\n        util.forEach(this.items, function (item) {\n          if (!item.displayed) {\n            item.redraw();\n            me.visibleItems.push(item);\n          }\n          item.repositionX(limitSize);\n        });\n\n        // order all items and force a restacking\n        var customOrderedItems = this.orderedItems.byStart.slice().sort(function (a, b) {\n          return me.itemSet.options.order(a.data, b.data);\n        });\n        stack.stack(customOrderedItems, margin, true /* restack=true */);\n      }\n\n      this.visibleItems = this._updateVisibleItems(this.orderedItems, this.visibleItems, range);\n    } else {\n      // no custom order function, lazy stacking\n\n      this.visibleItems = this._updateVisibleItems(this.orderedItems, this.visibleItems, range);\n      if (this.itemSet.options.stack) {\n        // TODO: ugly way to access options...\n        stack.stack(this.visibleItems, margin, restack);\n      } else {\n        // no stacking\n        stack.nostack(this.visibleItems, margin, this.subgroups);\n      }\n    }\n\n    if (!this.isVisible && this.height) {\n      return resized = false;\n    }\n\n    // recalculate the height of the group\n    var height = this._calculateHeight(margin);\n\n    // calculate actual size and position\n    var foreground = this.dom.foreground;\n    this.top = foreground.offsetTop;\n    this.right = foreground.offsetLeft;\n    this.width = foreground.offsetWidth;\n    resized = util.updateProperty(this, 'height', height) || resized;\n    // recalculate size of label\n    resized = util.updateProperty(this.props.label, 'width', this.dom.inner.clientWidth) || resized;\n    resized = util.updateProperty(this.props.label, 'height', this.dom.inner.clientHeight) || resized;\n\n    // apply new height\n    this.dom.background.style.height = height + 'px';\n    this.dom.foreground.style.height = height + 'px';\n    this.dom.label.style.height = height + 'px';\n\n    // update vertical position of items after they are re-stacked and the height of the group is calculated\n    for (var i = 0, ii = this.visibleItems.length; i < ii; i++) {\n      var item = this.visibleItems[i];\n      item.repositionY(margin);\n    }\n\n    return resized;\n  };\n\n  /**\n   * recalculate the height of the subgroups\n   * @private\n   */\n  Group.prototype._calculateSubGroupHeights = function () {\n    if (Object.keys(this.subgroups).length > 0) {\n      var me = this;\n\n      this.resetSubgroups();\n\n      util.forEach(this.visibleItems, function (item) {\n        if (item.data.subgroup !== undefined) {\n          me.subgroups[item.data.subgroup].height = Math.max(me.subgroups[item.data.subgroup].height, item.height);\n          me.subgroups[item.data.subgroup].visible = true;\n        }\n      });\n    }\n  };\n\n  /**\n   * check if group is visible\n   * @private\n    */\n  Group.prototype._isGroupVisible = function (range, margin) {\n    var isVisible = this.top <= range.body.domProps.centerContainer.height - range.body.domProps.scrollTop + margin.axis && this.top + this.height + margin.axis >= -range.body.domProps.scrollTop;\n    return isVisible;\n  };\n\n  /**\n   * recalculate the height of the group\n   * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin\n   * @returns {number} Returns the height\n   * @private\n   */\n  Group.prototype._calculateHeight = function (margin) {\n    // recalculate the height of the group\n    var height;\n    var visibleItems = this.visibleItems;\n    if (visibleItems.length > 0) {\n      var min = visibleItems[0].top;\n      var max = visibleItems[0].top + visibleItems[0].height;\n      util.forEach(visibleItems, function (item) {\n        min = Math.min(min, item.top);\n        max = Math.max(max, item.top + item.height);\n      });\n      if (min > margin.axis) {\n        // there is an empty gap between the lowest item and the axis\n        var offset = min - margin.axis;\n        max -= offset;\n        util.forEach(visibleItems, function (item) {\n          item.top -= offset;\n        });\n      }\n      height = max + margin.item.vertical / 2;\n    } else {\n      height = 0;\n    }\n    height = Math.max(height, this.props.label.height);\n\n    return height;\n  };\n\n  /**\n   * Show this group: attach to the DOM\n   */\n  Group.prototype.show = function () {\n    if (!this.dom.label.parentNode) {\n      this.itemSet.dom.labelSet.appendChild(this.dom.label);\n    }\n\n    if (!this.dom.foreground.parentNode) {\n      this.itemSet.dom.foreground.appendChild(this.dom.foreground);\n    }\n\n    if (!this.dom.background.parentNode) {\n      this.itemSet.dom.background.appendChild(this.dom.background);\n    }\n\n    if (!this.dom.axis.parentNode) {\n      this.itemSet.dom.axis.appendChild(this.dom.axis);\n    }\n  };\n\n  /**\n   * Hide this group: remove from the DOM\n   */\n  Group.prototype.hide = function () {\n    var label = this.dom.label;\n    if (label.parentNode) {\n      label.parentNode.removeChild(label);\n    }\n\n    var foreground = this.dom.foreground;\n    if (foreground.parentNode) {\n      foreground.parentNode.removeChild(foreground);\n    }\n\n    var background = this.dom.background;\n    if (background.parentNode) {\n      background.parentNode.removeChild(background);\n    }\n\n    var axis = this.dom.axis;\n    if (axis.parentNode) {\n      axis.parentNode.removeChild(axis);\n    }\n  };\n\n  /**\n   * Add an item to the group\n   * @param {Item} item\n   */\n  Group.prototype.add = function (item) {\n    this.items[item.id] = item;\n    item.setParent(this);\n\n    // add to\n    if (item.data.subgroup !== undefined) {\n      if (this.subgroups[item.data.subgroup] === undefined) {\n        this.subgroups[item.data.subgroup] = { height: 0, visible: false, index: this.subgroupIndex, items: [] };\n        this.subgroupIndex++;\n      }\n      this.subgroups[item.data.subgroup].items.push(item);\n    }\n    this.orderSubgroups();\n\n    if (this.visibleItems.indexOf(item) == -1) {\n      var range = this.itemSet.body.range; // TODO: not nice accessing the range like this\n      this._checkIfVisible(item, this.visibleItems, range);\n    }\n  };\n\n  Group.prototype.orderSubgroups = function () {\n    if (this.subgroupOrderer !== undefined) {\n      var sortArray = [];\n      if (typeof this.subgroupOrderer == 'string') {\n        for (var subgroup in this.subgroups) {\n          sortArray.push({ subgroup: subgroup, sortField: this.subgroups[subgroup].items[0].data[this.subgroupOrderer] });\n        }\n        sortArray.sort(function (a, b) {\n          return a.sortField - b.sortField;\n        });\n      } else if (typeof this.subgroupOrderer == 'function') {\n        for (var subgroup in this.subgroups) {\n          sortArray.push(this.subgroups[subgroup].items[0].data);\n        }\n        sortArray.sort(this.subgroupOrderer);\n      }\n\n      if (sortArray.length > 0) {\n        for (var i = 0; i < sortArray.length; i++) {\n          this.subgroups[sortArray[i].subgroup].index = i;\n        }\n      }\n    }\n  };\n\n  Group.prototype.resetSubgroups = function () {\n    for (var subgroup in this.subgroups) {\n      if (this.subgroups.hasOwnProperty(subgroup)) {\n        this.subgroups[subgroup].visible = false;\n      }\n    }\n  };\n\n  /**\n   * Remove an item from the group\n   * @param {Item} item\n   */\n  Group.prototype.remove = function (item) {\n    delete this.items[item.id];\n    item.setParent(null);\n\n    // remove from visible items\n    var index = this.visibleItems.indexOf(item);\n    if (index != -1) this.visibleItems.splice(index, 1);\n\n    if (item.data.subgroup !== undefined) {\n      var subgroup = this.subgroups[item.data.subgroup];\n      if (subgroup) {\n        var itemIndex = subgroup.items.indexOf(item);\n        subgroup.items.splice(itemIndex, 1);\n        if (!subgroup.items.length) {\n          delete this.subgroups[item.data.subgroup];\n          this.subgroupIndex--;\n        }\n        this.orderSubgroups();\n      }\n    }\n  };\n\n  /**\n   * Remove an item from the corresponding DataSet\n   * @param {Item} item\n   */\n  Group.prototype.removeFromDataSet = function (item) {\n    this.itemSet.removeItem(item.id);\n  };\n\n  /**\n   * Reorder the items\n   */\n  Group.prototype.order = function () {\n    var array = util.toArray(this.items);\n    var startArray = [];\n    var endArray = [];\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i].data.end !== undefined) {\n        endArray.push(array[i]);\n      }\n      startArray.push(array[i]);\n    }\n    this.orderedItems = {\n      byStart: startArray,\n      byEnd: endArray\n    };\n\n    stack.orderByStart(this.orderedItems.byStart);\n    stack.orderByEnd(this.orderedItems.byEnd);\n  };\n\n  /**\n   * Update the visible items\n   * @param {{byStart: Item[], byEnd: Item[]}} orderedItems   All items ordered by start date and by end date\n   * @param {Item[]} visibleItems                             The previously visible items.\n   * @param {{start: number, end: number}} range              Visible range\n   * @return {Item[]} visibleItems                            The new visible items.\n   * @private\n   */\n  Group.prototype._updateVisibleItems = function (orderedItems, oldVisibleItems, range) {\n    var visibleItems = [];\n    var visibleItemsLookup = {}; // we keep this to quickly look up if an item already exists in the list without using indexOf on visibleItems\n    if (!this.isVisible && this.groupId != \"__background__\") {\n      for (var i = 0; i < oldVisibleItems.length; i++) {\n        var item = oldVisibleItems[i];\n        if (item.displayed) item.hide();\n      }\n      return visibleItems;\n    }\n\n    var interval = (range.end - range.start) / 4;\n    var lowerBound = range.start - interval;\n    var upperBound = range.end + interval;\n\n    // this function is used to do the binary search.\n    var searchFunction = function searchFunction(value) {\n      if (value < lowerBound) {\n        return -1;\n      } else if (value <= upperBound) {\n        return 0;\n      } else {\n        return 1;\n      }\n    };\n\n    // first check if the items that were in view previously are still in view.\n    // IMPORTANT: this handles the case for the items with startdate before the window and enddate after the window!\n    // also cleans up invisible items.\n    if (oldVisibleItems.length > 0) {\n      for (var i = 0; i < oldVisibleItems.length; i++) {\n        this._checkIfVisibleWithReference(oldVisibleItems[i], visibleItems, visibleItemsLookup, range);\n      }\n    }\n\n    // we do a binary search for the items that have only start values.\n    var initialPosByStart = util.binarySearchCustom(orderedItems.byStart, searchFunction, 'data', 'start');\n\n    // trace the visible items from the inital start pos both ways until an invisible item is found, we only look at the start values.\n    this._traceVisible(initialPosByStart, orderedItems.byStart, visibleItems, visibleItemsLookup, function (item) {\n      return item.data.start < lowerBound || item.data.start > upperBound;\n    });\n\n    // if the window has changed programmatically without overlapping the old window, the ranged items with start < lowerBound and end > upperbound are not shown.\n    // We therefore have to brute force check all items in the byEnd list\n    if (this.checkRangedItems == true) {\n      this.checkRangedItems = false;\n      for (i = 0; i < orderedItems.byEnd.length; i++) {\n        this._checkIfVisibleWithReference(orderedItems.byEnd[i], visibleItems, visibleItemsLookup, range);\n      }\n    } else {\n      // we do a binary search for the items that have defined end times.\n      var initialPosByEnd = util.binarySearchCustom(orderedItems.byEnd, searchFunction, 'data', 'end');\n\n      // trace the visible items from the inital start pos both ways until an invisible item is found, we only look at the end values.\n      this._traceVisible(initialPosByEnd, orderedItems.byEnd, visibleItems, visibleItemsLookup, function (item) {\n        return item.data.end < lowerBound || item.data.end > upperBound;\n      });\n    }\n\n    // finally, we reposition all the visible items.\n    for (var i = 0; i < visibleItems.length; i++) {\n      var item = visibleItems[i];\n      if (!item.displayed) item.show();\n      // reposition item horizontally\n      item.repositionX();\n    }\n\n    return visibleItems;\n  };\n\n  Group.prototype._traceVisible = function (initialPos, items, visibleItems, visibleItemsLookup, breakCondition) {\n    if (initialPos != -1) {\n      for (var i = initialPos; i >= 0; i--) {\n        var item = items[i];\n        if (breakCondition(item)) {\n          break;\n        } else {\n          if (visibleItemsLookup[item.id] === undefined) {\n            visibleItemsLookup[item.id] = true;\n            visibleItems.push(item);\n          }\n        }\n      }\n\n      for (var i = initialPos + 1; i < items.length; i++) {\n        var item = items[i];\n        if (breakCondition(item)) {\n          break;\n        } else {\n          if (visibleItemsLookup[item.id] === undefined) {\n            visibleItemsLookup[item.id] = true;\n            visibleItems.push(item);\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * this function is very similar to the _checkIfInvisible() but it does not\n   * return booleans, hides the item if it should not be seen and always adds to\n   * the visibleItems.\n   * this one is for brute forcing and hiding.\n   *\n   * @param {Item} item\n   * @param {Array} visibleItems\n   * @param {{start:number, end:number}} range\n   * @private\n   */\n  Group.prototype._checkIfVisible = function (item, visibleItems, range) {\n    if (item.isVisible(range)) {\n      if (!item.displayed) item.show();\n      // reposition item horizontally\n      item.repositionX();\n      visibleItems.push(item);\n    } else {\n      if (item.displayed) item.hide();\n    }\n  };\n\n  /**\n   * this function is very similar to the _checkIfInvisible() but it does not\n   * return booleans, hides the item if it should not be seen and always adds to\n   * the visibleItems.\n   * this one is for brute forcing and hiding.\n   *\n   * @param {Item} item\n   * @param {Array} visibleItems\n   * @param {{start:number, end:number}} range\n   * @private\n   */\n  Group.prototype._checkIfVisibleWithReference = function (item, visibleItems, visibleItemsLookup, range) {\n    if (item.isVisible(range)) {\n      if (visibleItemsLookup[item.id] === undefined) {\n        visibleItemsLookup[item.id] = true;\n        visibleItems.push(item);\n      }\n    } else {\n      if (item.displayed) item.hide();\n    }\n  };\n\n  module.exports = Group;\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n  'use strict';\n\n  // Utility functions for ordering and stacking of items\n  var EPSILON = 0.001; // used when checking collisions, to prevent round-off errors\n\n  /**\n   * Order items by their start data\n   * @param {Item[]} items\n   */\n  exports.orderByStart = function (items) {\n    items.sort(function (a, b) {\n      return a.data.start - b.data.start;\n    });\n  };\n\n  /**\n   * Order items by their end date. If they have no end date, their start date\n   * is used.\n   * @param {Item[]} items\n   */\n  exports.orderByEnd = function (items) {\n    items.sort(function (a, b) {\n      var aTime = 'end' in a.data ? a.data.end : a.data.start,\n          bTime = 'end' in b.data ? b.data.end : b.data.start;\n\n      return aTime - bTime;\n    });\n  };\n\n  /**\n   * Adjust vertical positions of the items such that they don't overlap each\n   * other.\n   * @param {Item[]} items\n   *            All visible items\n   * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin\n   *            Margins between items and between items and the axis.\n   * @param {boolean} [force=false]\n   *            If true, all items will be repositioned. If false (default), only\n   *            items having a top===null will be re-stacked\n   */\n  exports.stack = function (items, margin, force) {\n    var i, iMax;\n    if (force) {\n      // reset top position of all items\n      for (i = 0, iMax = items.length; i < iMax; i++) {\n        items[i].top = null;\n      }\n    }\n\n    // calculate new, non-overlapping positions\n    for (i = 0, iMax = items.length; i < iMax; i++) {\n      var item = items[i];\n      if (item.stack && item.top === null) {\n        // initialize top position\n        item.top = margin.axis;\n\n        do {\n          // TODO: optimize checking for overlap. when there is a gap without items,\n          //       you only need to check for items from the next item on, not from zero\n          var collidingItem = null;\n          for (var j = 0, jj = items.length; j < jj; j++) {\n            var other = items[j];\n            if (other.top !== null && other !== item && other.stack && exports.collision(item, other, margin.item, other.options.rtl)) {\n              collidingItem = other;\n              break;\n            }\n          }\n\n          if (collidingItem != null) {\n            // There is a collision. Reposition the items above the colliding element\n            item.top = collidingItem.top + collidingItem.height + margin.item.vertical;\n          }\n        } while (collidingItem);\n      }\n    }\n  };\n\n  /**\n   * Adjust vertical positions of the items without stacking them\n   * @param {Item[]} items\n   *            All visible items\n   * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin\n   *            Margins between items and between items and the axis.\n   */\n  exports.nostack = function (items, margin, subgroups) {\n    var i, iMax, newTop;\n\n    // reset top position of all items\n    for (i = 0, iMax = items.length; i < iMax; i++) {\n      if (items[i].data.subgroup !== undefined) {\n        newTop = margin.axis;\n        for (var subgroup in subgroups) {\n          if (subgroups.hasOwnProperty(subgroup)) {\n            if (subgroups[subgroup].visible == true && subgroups[subgroup].index < subgroups[items[i].data.subgroup].index) {\n              newTop += subgroups[subgroup].height + margin.item.vertical;\n            }\n          }\n        }\n        items[i].top = newTop;\n      } else {\n        items[i].top = margin.axis;\n      }\n    }\n  };\n\n  /**\n   * Test if the two provided items collide\n   * The items must have parameters left, width, top, and height.\n   * @param {Item} a          The first item\n   * @param {Item} b          The second item\n   * @param {{horizontal: number, vertical: number}} margin\n   *                          An object containing a horizontal and vertical\n   *                          minimum required margin.\n   * @param {boolean} rtl\n   * @return {boolean}        true if a and b collide, else false\n   */\n  exports.collision = function (a, b, margin, rtl) {\n    if (rtl) {\n      return a.right - margin.horizontal + EPSILON < b.right + b.width && a.right + a.width + margin.horizontal - EPSILON > b.right && a.top - margin.vertical + EPSILON < b.top + b.height && a.top + a.height + margin.vertical - EPSILON > b.top;\n    } else {\n      return a.left - margin.horizontal + EPSILON < b.left + b.width && a.left + a.width + margin.horizontal - EPSILON > b.left && a.top - margin.vertical + EPSILON < b.top + b.height && a.top + a.height + margin.vertical - EPSILON > b.top;\n    }\n  };\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var Hammer = __webpack_require__(22);\n  var Item = __webpack_require__(41);\n\n  /**\n   * @constructor RangeItem\n   * @extends Item\n   * @param {Object} data             Object containing parameters start, end\n   *                                  content, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} [options]        Configuration options\n   *                                  // TODO: describe options\n   */\n  function RangeItem(data, conversion, options) {\n    this.props = {\n      content: {\n        width: 0\n      }\n    };\n    this.overflow = false; // if contents can overflow (css styling), this flag is set to true\n    this.options = options;\n    // validate data\n    if (data) {\n      if (data.start == undefined) {\n        throw new Error('Property \"start\" missing in item ' + data.id);\n      }\n      if (data.end == undefined) {\n        throw new Error('Property \"end\" missing in item ' + data.id);\n      }\n    }\n\n    Item.call(this, data, conversion, options);\n  }\n\n  RangeItem.prototype = new Item(null, null, null);\n\n  RangeItem.prototype.baseClassName = 'vis-item vis-range';\n\n  /**\n   * Check whether this item is visible inside given range\n   * @returns {{start: Number, end: Number}} range with a timestamp for start and end\n   * @returns {boolean} True if visible\n   */\n  RangeItem.prototype.isVisible = function (range) {\n    // determine visibility\n    return this.data.start < range.end && this.data.end > range.start;\n  };\n\n  /**\n   * Repaint the item\n   */\n  RangeItem.prototype.redraw = function () {\n    var dom = this.dom;\n    if (!dom) {\n      // create DOM\n      this.dom = {};\n      dom = this.dom;\n\n      // background box\n      dom.box = document.createElement('div');\n      // className is updated in redraw()\n\n      // frame box (to prevent the item contents from overflowing\n      dom.frame = document.createElement('div');\n      dom.frame.className = 'vis-item-overflow';\n      dom.box.appendChild(dom.frame);\n\n      // contents box\n      dom.content = document.createElement('div');\n      dom.content.className = 'vis-item-content';\n      dom.frame.appendChild(dom.content);\n\n      // attach this item as attribute\n      dom.box['timeline-item'] = this;\n\n      this.dirty = true;\n    }\n\n    // append DOM to parent DOM\n    if (!this.parent) {\n      throw new Error('Cannot redraw item: no parent attached');\n    }\n    if (!dom.box.parentNode) {\n      var foreground = this.parent.dom.foreground;\n      if (!foreground) {\n        throw new Error('Cannot redraw item: parent has no foreground container element');\n      }\n      foreground.appendChild(dom.box);\n    }\n    this.displayed = true;\n\n    // Update DOM when item is marked dirty. An item is marked dirty when:\n    // - the item is not yet rendered\n    // - the item's data is changed\n    // - the item is selected/deselected\n    if (this.dirty) {\n      this._updateContents(this.dom.content);\n      this._updateTitle(this.dom.box);\n      this._updateDataAttributes(this.dom.box);\n      this._updateStyle(this.dom.box);\n\n      var editable = (this.options.editable.updateTime || this.options.editable.updateGroup || this.editable === true) && this.editable !== false;\n\n      // update class\n      var className = (this.data.className ? ' ' + this.data.className : '') + (this.selected ? ' vis-selected' : '') + (editable ? ' vis-editable' : ' vis-readonly');\n      dom.box.className = this.baseClassName + className;\n\n      // determine from css whether this box has overflow\n      this.overflow = window.getComputedStyle(dom.frame).overflow !== 'hidden';\n\n      // recalculate size\n      // turn off max-width to be able to calculate the real width\n      // this causes an extra browser repaint/reflow, but so be it\n      this.dom.content.style.maxWidth = 'none';\n      this.props.content.width = this.dom.content.offsetWidth;\n      this.height = this.dom.box.offsetHeight;\n      this.dom.content.style.maxWidth = '';\n\n      this.dirty = false;\n    }\n\n    this._repaintOnItemUpdateTimeTooltip(dom.box);\n    this._repaintDeleteButton(dom.box);\n    this._repaintDragCenter();\n    this._repaintDragLeft();\n    this._repaintDragRight();\n  };\n\n  /**\n   * Show the item in the DOM (when not already visible). The items DOM will\n   * be created when needed.\n   */\n  RangeItem.prototype.show = function () {\n    if (!this.displayed) {\n      this.redraw();\n    }\n  };\n\n  /**\n   * Hide the item from the DOM (when visible)\n   * @return {Boolean} changed\n   */\n  RangeItem.prototype.hide = function () {\n    if (this.displayed) {\n      var box = this.dom.box;\n\n      if (box.parentNode) {\n        box.parentNode.removeChild(box);\n      }\n\n      this.displayed = false;\n    }\n  };\n\n  /**\n   * Reposition the item horizontally\n   * @param {boolean} [limitSize=true] If true (default), the width of the range\n   *                                   item will be limited, as the browser cannot\n   *                                   display very wide divs. This means though\n   *                                   that the applied left and width may\n   *                                   not correspond to the ranges start and end\n   * @Override\n   */\n  RangeItem.prototype.repositionX = function (limitSize) {\n    var parentWidth = this.parent.width;\n    var start = this.conversion.toScreen(this.data.start);\n    var end = this.conversion.toScreen(this.data.end);\n    var contentStartPosition;\n    var contentWidth;\n\n    // limit the width of the range, as browsers cannot draw very wide divs\n    if (limitSize === undefined || limitSize === true) {\n      if (start < -parentWidth) {\n        start = -parentWidth;\n      }\n      if (end > 2 * parentWidth) {\n        end = 2 * parentWidth;\n      }\n    }\n\n    // add 0.5 to compensate floating-point values rounding\n    var boxWidth = Math.max(end - start + 0.5, 1);\n\n    if (this.overflow) {\n      if (this.options.rtl) {\n        this.right = start;\n      } else {\n        this.left = start;\n      }\n      this.width = boxWidth + this.props.content.width;\n      contentWidth = this.props.content.width;\n\n      // Note: The calculation of width is an optimistic calculation, giving\n      //       a width which will not change when moving the Timeline\n      //       So no re-stacking needed, which is nicer for the eye;\n    } else {\n      if (this.options.rtl) {\n        this.right = start;\n      } else {\n        this.left = start;\n      }\n      this.width = boxWidth;\n      contentWidth = Math.min(end - start, this.props.content.width);\n    }\n\n    if (this.options.rtl) {\n      this.dom.box.style.right = this.right + 'px';\n    } else {\n      this.dom.box.style.left = this.left + 'px';\n    }\n    this.dom.box.style.width = boxWidth + 'px';\n\n    switch (this.options.align) {\n      case 'left':\n        if (this.options.rtl) {\n          this.dom.content.style.right = '0';\n        } else {\n          this.dom.content.style.left = '0';\n        }\n        break;\n\n      case 'right':\n        if (this.options.rtl) {\n          this.dom.content.style.right = Math.max(boxWidth - contentWidth, 0) + 'px';\n        } else {\n          this.dom.content.style.left = Math.max(boxWidth - contentWidth, 0) + 'px';\n        }\n        break;\n\n      case 'center':\n        if (this.options.rtl) {\n          this.dom.content.style.right = Math.max((boxWidth - contentWidth) / 2, 0) + 'px';\n        } else {\n          this.dom.content.style.left = Math.max((boxWidth - contentWidth) / 2, 0) + 'px';\n        }\n\n        break;\n\n      default:\n        // 'auto'\n        // when range exceeds left of the window, position the contents at the left of the visible area\n        if (this.overflow) {\n          if (end > 0) {\n            contentStartPosition = Math.max(-start, 0);\n          } else {\n            contentStartPosition = -contentWidth; // ensure it's not visible anymore\n          }\n        } else {\n          if (start < 0) {\n            contentStartPosition = -start;\n          } else {\n            contentStartPosition = 0;\n          }\n        }\n        if (this.options.rtl) {\n          this.dom.content.style.right = contentStartPosition + 'px';\n        } else {\n          this.dom.content.style.left = contentStartPosition + 'px';\n          this.dom.content.style.width = 'calc(100% - ' + contentStartPosition + 'px)';\n        }\n    }\n  };\n\n  /**\n   * Reposition the item vertically\n   * @Override\n   */\n  RangeItem.prototype.repositionY = function () {\n    var orientation = this.options.orientation.item;\n    var box = this.dom.box;\n\n    if (orientation == 'top') {\n      box.style.top = this.top + 'px';\n    } else {\n      box.style.top = this.parent.height - this.top - this.height + 'px';\n    }\n  };\n\n  /**\n   * Repaint a drag area on the left side of the range when the range is selected\n   * @protected\n   */\n  RangeItem.prototype._repaintDragLeft = function () {\n    if (this.selected && this.options.editable.updateTime && !this.dom.dragLeft) {\n      // create and show drag area\n      var dragLeft = document.createElement('div');\n      dragLeft.className = 'vis-drag-left';\n      dragLeft.dragLeftItem = this;\n\n      this.dom.box.appendChild(dragLeft);\n      this.dom.dragLeft = dragLeft;\n    } else if (!this.selected && this.dom.dragLeft) {\n      // delete drag area\n      if (this.dom.dragLeft.parentNode) {\n        this.dom.dragLeft.parentNode.removeChild(this.dom.dragLeft);\n      }\n      this.dom.dragLeft = null;\n    }\n  };\n\n  /**\n   * Repaint a drag area on the right side of the range when the range is selected\n   * @protected\n   */\n  RangeItem.prototype._repaintDragRight = function () {\n    if (this.selected && this.options.editable.updateTime && !this.dom.dragRight) {\n      // create and show drag area\n      var dragRight = document.createElement('div');\n      dragRight.className = 'vis-drag-right';\n      dragRight.dragRightItem = this;\n\n      this.dom.box.appendChild(dragRight);\n      this.dom.dragRight = dragRight;\n    } else if (!this.selected && this.dom.dragRight) {\n      // delete drag area\n      if (this.dom.dragRight.parentNode) {\n        this.dom.dragRight.parentNode.removeChild(this.dom.dragRight);\n      }\n      this.dom.dragRight = null;\n    }\n  };\n\n  module.exports = RangeItem;\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var Hammer = __webpack_require__(22);\n  var util = __webpack_require__(1);\n  var moment = __webpack_require__(2);\n\n  /**\n   * @constructor Item\n   * @param {Object} data             Object containing (optional) parameters type,\n   *                                  start, end, content, group, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} options          Configuration options\n   *                                  // TODO: describe available options\n   */\n  function Item(data, conversion, options) {\n    this.id = null;\n    this.parent = null;\n    this.data = data;\n    this.dom = null;\n    this.conversion = conversion || {};\n    this.options = options || {};\n    this.selected = false;\n    this.displayed = false;\n    this.dirty = true;\n\n    this.top = null;\n    this.right = null;\n    this.left = null;\n    this.width = null;\n    this.height = null;\n\n    this.editable = null;\n    if (this.data && this.data.hasOwnProperty('editable') && typeof this.data.editable === 'boolean') {\n      this.editable = data.editable;\n    }\n  }\n\n  Item.prototype.stack = true;\n\n  /**\n   * Select current item\n   */\n  Item.prototype.select = function () {\n    this.selected = true;\n    this.dirty = true;\n    if (this.displayed) this.redraw();\n  };\n\n  /**\n   * Unselect current item\n   */\n  Item.prototype.unselect = function () {\n    this.selected = false;\n    this.dirty = true;\n    if (this.displayed) this.redraw();\n  };\n\n  /**\n   * Set data for the item. Existing data will be updated. The id should not\n   * be changed. When the item is displayed, it will be redrawn immediately.\n   * @param {Object} data\n   */\n  Item.prototype.setData = function (data) {\n    var groupChanged = data.group != undefined && this.data.group != data.group;\n    if (groupChanged) {\n      this.parent.itemSet._moveToGroup(this, data.group);\n    }\n\n    if (data.hasOwnProperty('editable') && typeof data.editable === 'boolean') {\n      this.editable = data.editable;\n    }\n\n    this.data = data;\n    this.dirty = true;\n    if (this.displayed) this.redraw();\n  };\n\n  /**\n   * Set a parent for the item\n   * @param {ItemSet | Group} parent\n   */\n  Item.prototype.setParent = function (parent) {\n    if (this.displayed) {\n      this.hide();\n      this.parent = parent;\n      if (this.parent) {\n        this.show();\n      }\n    } else {\n      this.parent = parent;\n    }\n  };\n\n  /**\n   * Check whether this item is visible inside given range\n   * @returns {{start: Number, end: Number}} range with a timestamp for start and end\n   * @returns {boolean} True if visible\n   */\n  Item.prototype.isVisible = function (range) {\n    return false;\n  };\n\n  /**\n   * Show the Item in the DOM (when not already visible)\n   * @return {Boolean} changed\n   */\n  Item.prototype.show = function () {\n    return false;\n  };\n\n  /**\n   * Hide the Item from the DOM (when visible)\n   * @return {Boolean} changed\n   */\n  Item.prototype.hide = function () {\n    return false;\n  };\n\n  /**\n   * Repaint the item\n   */\n  Item.prototype.redraw = function () {\n    // should be implemented by the item\n  };\n\n  /**\n   * Reposition the Item horizontally\n   */\n  Item.prototype.repositionX = function () {\n    // should be implemented by the item\n  };\n\n  /**\n   * Reposition the Item vertically\n   */\n  Item.prototype.repositionY = function () {\n    // should be implemented by the item\n  };\n\n  /**\n   * Repaint a delete button on the top right of the item when the item is selected\n   * @param {HTMLElement} anchor\n   * @protected\n   */\n  Item.prototype._repaintDeleteButton = function (anchor) {\n    var editable = (this.options.editable.remove || this.data.editable === true) && this.data.editable !== false;\n\n    if (this.selected && editable && !this.dom.deleteButton) {\n      // create and show button\n      var me = this;\n\n      var deleteButton = document.createElement('div');\n\n      if (this.options.rtl) {\n        deleteButton.className = 'vis-delete-rtl';\n      } else {\n        deleteButton.className = 'vis-delete';\n      }\n      deleteButton.title = 'Delete this item';\n\n      // TODO: be able to destroy the delete button\n      new Hammer(deleteButton).on('tap', function (event) {\n        event.stopPropagation();\n        me.parent.removeFromDataSet(me);\n      });\n\n      anchor.appendChild(deleteButton);\n      this.dom.deleteButton = deleteButton;\n    } else if (!this.selected && this.dom.deleteButton) {\n      // remove button\n      if (this.dom.deleteButton.parentNode) {\n        this.dom.deleteButton.parentNode.removeChild(this.dom.deleteButton);\n      }\n      this.dom.deleteButton = null;\n    }\n  };\n\n  /**\n   * Repaint a onChange tooltip on the top right of the item when the item is selected\n   * @param {HTMLElement} anchor\n   * @protected\n   */\n  Item.prototype._repaintOnItemUpdateTimeTooltip = function (anchor) {\n    if (!this.options.tooltipOnItemUpdateTime) return;\n\n    var editable = (this.options.editable.updateTime || this.data.editable === true) && this.data.editable !== false;\n\n    if (this.selected && editable && !this.dom.onItemUpdateTimeTooltip) {\n      // create and show tooltip\n      var me = this;\n\n      var onItemUpdateTimeTooltip = document.createElement('div');\n\n      onItemUpdateTimeTooltip.className = 'vis-onUpdateTime-tooltip';\n      anchor.appendChild(onItemUpdateTimeTooltip);\n      this.dom.onItemUpdateTimeTooltip = onItemUpdateTimeTooltip;\n    } else if (!this.selected && this.dom.onItemUpdateTimeTooltip) {\n      // remove button\n      if (this.dom.onItemUpdateTimeTooltip.parentNode) {\n        this.dom.onItemUpdateTimeTooltip.parentNode.removeChild(this.dom.onItemUpdateTimeTooltip);\n      }\n      this.dom.onItemUpdateTimeTooltip = null;\n    }\n\n    // position onChange tooltip\n    if (this.dom.onItemUpdateTimeTooltip) {\n\n      // only show when editing\n      this.dom.onItemUpdateTimeTooltip.style.visibility = this.parent.itemSet.touchParams.itemIsDragging ? 'visible' : 'hidden';\n\n      // position relative to item's content\n      if (this.options.rtl) {\n        this.dom.onItemUpdateTimeTooltip.style.right = this.dom.content.style.right;\n      } else {\n        this.dom.onItemUpdateTimeTooltip.style.left = this.dom.content.style.left;\n      }\n\n      // position above or below the item depending on the item's position in the window\n      var tooltipOffset = 50; // TODO: should be tooltip height (depends on template)\n      var scrollTop = this.parent.itemSet.body.domProps.scrollTop;\n\n      // TODO: this.top for orientation:true is actually the items distance from the bottom... \n      // (should be this.bottom)\n      var itemDistanceFromTop;\n      if (this.options.orientation.item == 'top') {\n        itemDistanceFromTop = this.top;\n      } else {\n        itemDistanceFromTop = this.parent.height - this.top - this.height;\n      }\n      var isCloseToTop = itemDistanceFromTop + this.parent.top - tooltipOffset < -scrollTop;\n\n      if (isCloseToTop) {\n        this.dom.onItemUpdateTimeTooltip.style.bottom = \"\";\n        this.dom.onItemUpdateTimeTooltip.style.top = this.height + 2 + \"px\";\n      } else {\n        this.dom.onItemUpdateTimeTooltip.style.top = \"\";\n        this.dom.onItemUpdateTimeTooltip.style.bottom = this.height + 2 + \"px\";\n      }\n\n      // handle tooltip content\n      var content;\n      var templateFunction;\n\n      if (this.options.tooltipOnItemUpdateTime && this.options.tooltipOnItemUpdateTime.template) {\n        templateFunction = this.options.tooltipOnItemUpdateTime.template.bind(this);\n        content = templateFunction(this.data);\n      } else {\n        content = 'start: ' + moment(this.data.start).format('MM/DD/YYYY hh:mm');\n        if (this.data.end) {\n          content += '<br> end: ' + moment(this.data.end).format('MM/DD/YYYY hh:mm');\n        }\n      }\n      this.dom.onItemUpdateTimeTooltip.innerHTML = content;\n    }\n  };\n\n  /**\n   * Set HTML contents for the item\n   * @param {Element} element   HTML element to fill with the contents\n   * @private\n   */\n  Item.prototype._updateContents = function (element) {\n    var content;\n    var templateFunction;\n\n    if (this.options.template) {\n      var itemData = this.parent.itemSet.itemsData.get(this.id); // get a clone of the data from the dataset\n      templateFunction = this.options.template.bind(this);\n      content = templateFunction(itemData, element);\n    } else {\n      content = this.data.content;\n    }\n\n    if (content instanceof Object && !(content instanceof Element)) {\n      templateFunction(itemData, element);\n    } else {\n      var changed = this._contentToString(this.content) !== this._contentToString(content);\n      if (changed) {\n        // only replace the content when changed\n        if (content instanceof Element) {\n          element.innerHTML = '';\n          element.appendChild(content);\n        } else if (content != undefined) {\n          element.innerHTML = content;\n        } else {\n          if (!(this.data.type == 'background' && this.data.content === undefined)) {\n            throw new Error('Property \"content\" missing in item ' + this.id);\n          }\n        }\n\n        this.content = content;\n      }\n    }\n  };\n\n  /**\n   * Set HTML contents for the item\n   * @param {Element} element   HTML element to fill with the contents\n   * @private\n   */\n  Item.prototype._updateTitle = function (element) {\n    if (this.data.title != null) {\n      element.title = this.data.title || '';\n    } else {\n      element.removeAttribute('vis-title');\n    }\n  };\n\n  /**\n   * Process dataAttributes timeline option and set as data- attributes on dom.content\n   * @param {Element} element   HTML element to which the attributes will be attached\n   * @private\n   */\n  Item.prototype._updateDataAttributes = function (element) {\n    if (this.options.dataAttributes && this.options.dataAttributes.length > 0) {\n      var attributes = [];\n\n      if (Array.isArray(this.options.dataAttributes)) {\n        attributes = this.options.dataAttributes;\n      } else if (this.options.dataAttributes == 'all') {\n        attributes = Object.keys(this.data);\n      } else {\n        return;\n      }\n\n      for (var i = 0; i < attributes.length; i++) {\n        var name = attributes[i];\n        var value = this.data[name];\n\n        if (value != null) {\n          element.setAttribute('data-' + name, value);\n        } else {\n          element.removeAttribute('data-' + name);\n        }\n      }\n    }\n  };\n\n  /**\n   * Update custom styles of the element\n   * @param element\n   * @private\n   */\n  Item.prototype._updateStyle = function (element) {\n    // remove old styles\n    if (this.style) {\n      util.removeCssText(element, this.style);\n      this.style = null;\n    }\n\n    // append new styles\n    if (this.data.style) {\n      util.addCssText(element, this.data.style);\n      this.style = this.data.style;\n    }\n  };\n\n  /**\n   * Stringify the items contents\n   * @param {string | Element | undefined} content\n   * @returns {string | undefined}\n   * @private\n   */\n  Item.prototype._contentToString = function (content) {\n    if (typeof content === 'string') return content;\n    if (content && 'outerHTML' in content) return content.outerHTML;\n    return content;\n  };\n\n  /**\n   * Return the width of the item left from its start date\n   * @return {number}\n   */\n  Item.prototype.getWidthLeft = function () {\n    return 0;\n  };\n\n  /**\n   * Return the width of the item right from the max of its start and end date\n   * @return {number}\n   */\n  Item.prototype.getWidthRight = function () {\n    return 0;\n  };\n\n  /**\n   * Repaint a drag area on the center of the item when the item is selected\n   * @protected\n   */\n  Item.prototype._repaintDragCenter = function () {\n    if (this.selected && this.options.editable.updateTime && !this.dom.dragCenter) {\n      // create and show drag area\n      var dragCenter = document.createElement('div');\n      dragCenter.className = 'vis-drag-center';\n      dragCenter.dragCenterItem = this;\n\n      if (this.dom.box) {\n        this.dom.box.appendChild(dragCenter);\n      } else if (this.dom.point) {\n        this.dom.point.appendChild(dragCenter);\n      }\n\n      this.dom.dragCenter = dragCenter;\n    } else if (!this.selected && this.dom.dragCenter) {\n      // delete drag area\n      if (this.dom.dragCenter.parentNode) {\n        this.dom.dragCenter.parentNode.removeChild(this.dom.dragCenter);\n      }\n      this.dom.dragCenter = null;\n    }\n  };\n\n  module.exports = Item;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var util = __webpack_require__(1);\n  var Group = __webpack_require__(38);\n\n  /**\n   * @constructor BackgroundGroup\n   * @param {Number | String} groupId\n   * @param {Object} data\n   * @param {ItemSet} itemSet\n   */\n  function BackgroundGroup(groupId, data, itemSet) {\n    Group.call(this, groupId, data, itemSet);\n\n    this.width = 0;\n    this.height = 0;\n    this.top = 0;\n    this.left = 0;\n  }\n\n  BackgroundGroup.prototype = Object.create(Group.prototype);\n\n  /**\n   * Repaint this group\n   * @param {{start: number, end: number}} range\n   * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin\n   * @param {boolean} [restack=false]  Force restacking of all items\n   * @return {boolean} Returns true if the group is resized\n   */\n  BackgroundGroup.prototype.redraw = function (range, margin, restack) {\n    var resized = false;\n\n    this.visibleItems = this._updateVisibleItems(this.orderedItems, this.visibleItems, range);\n\n    // calculate actual size\n    this.width = this.dom.background.offsetWidth;\n\n    // apply new height (just always zero for BackgroundGroup\n    this.dom.background.style.height = '0';\n\n    // update vertical position of items after they are re-stacked and the height of the group is calculated\n    for (var i = 0, ii = this.visibleItems.length; i < ii; i++) {\n      var item = this.visibleItems[i];\n      item.repositionY(margin);\n    }\n\n    return resized;\n  };\n\n  /**\n   * Show this group: attach to the DOM\n   */\n  BackgroundGroup.prototype.show = function () {\n    if (!this.dom.background.parentNode) {\n      this.itemSet.dom.background.appendChild(this.dom.background);\n    }\n  };\n\n  module.exports = BackgroundGroup;\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var Item = __webpack_require__(41);\n  var util = __webpack_require__(1);\n\n  /**\n   * @constructor BoxItem\n   * @extends Item\n   * @param {Object} data             Object containing parameters start\n   *                                  content, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} [options]        Configuration options\n   *                                  // TODO: describe available options\n   */\n  function BoxItem(data, conversion, options) {\n    this.props = {\n      dot: {\n        width: 0,\n        height: 0\n      },\n      line: {\n        width: 0,\n        height: 0\n      }\n    };\n    this.options = options;\n    // validate data\n    if (data) {\n      if (data.start == undefined) {\n        throw new Error('Property \"start\" missing in item ' + data);\n      }\n    }\n\n    Item.call(this, data, conversion, options);\n  }\n\n  BoxItem.prototype = new Item(null, null, null);\n\n  /**\n   * Check whether this item is visible inside given range\n   * @returns {{start: Number, end: Number}} range with a timestamp for start and end\n   * @returns {boolean} True if visible\n   */\n  BoxItem.prototype.isVisible = function (range) {\n    // determine visibility\n    var isVisible;\n    var align = this.options.align;\n    var msPerPixel = (range.end - range.start) / range.body.dom.center.clientWidth;\n    var widthInMs = this.width * msPerPixel;\n\n    if (align == 'right') {\n      isVisible = this.data.start.getTime() > range.start && this.data.start.getTime() - widthInMs < range.end;\n    } else if (align == 'left') {\n      isVisible = this.data.start.getTime() + widthInMs > range.start && this.data.start.getTime() < range.end;\n    } else {\n      // default or 'center'\n      isVisible = this.data.start.getTime() + widthInMs / 2 > range.start && this.data.start.getTime() - widthInMs / 2 < range.end;\n    }\n    return isVisible;\n  };\n\n  /**\n   * Repaint the item\n   */\n  BoxItem.prototype.redraw = function () {\n    var dom = this.dom;\n    if (!dom) {\n      // create DOM\n      this.dom = {};\n      dom = this.dom;\n\n      // create main box\n      dom.box = document.createElement('DIV');\n\n      // contents box (inside the background box). used for making margins\n      dom.content = document.createElement('DIV');\n      dom.content.className = 'vis-item-content';\n      dom.box.appendChild(dom.content);\n\n      // line to axis\n      dom.line = document.createElement('DIV');\n      dom.line.className = 'vis-line';\n\n      // dot on axis\n      dom.dot = document.createElement('DIV');\n      dom.dot.className = 'vis-dot';\n\n      // attach this item as attribute\n      dom.box['timeline-item'] = this;\n\n      this.dirty = true;\n    }\n\n    // append DOM to parent DOM\n    if (!this.parent) {\n      throw new Error('Cannot redraw item: no parent attached');\n    }\n    if (!dom.box.parentNode) {\n      var foreground = this.parent.dom.foreground;\n      if (!foreground) throw new Error('Cannot redraw item: parent has no foreground container element');\n      foreground.appendChild(dom.box);\n    }\n    if (!dom.line.parentNode) {\n      var background = this.parent.dom.background;\n      if (!background) throw new Error('Cannot redraw item: parent has no background container element');\n      background.appendChild(dom.line);\n    }\n    if (!dom.dot.parentNode) {\n      var axis = this.parent.dom.axis;\n      if (!background) throw new Error('Cannot redraw item: parent has no axis container element');\n      axis.appendChild(dom.dot);\n    }\n    this.displayed = true;\n\n    // Update DOM when item is marked dirty. An item is marked dirty when:\n    // - the item is not yet rendered\n    // - the item's data is changed\n    // - the item is selected/deselected\n    if (this.dirty) {\n      this._updateContents(this.dom.content);\n      this._updateTitle(this.dom.box);\n      this._updateDataAttributes(this.dom.box);\n      this._updateStyle(this.dom.box);\n\n      var editable = (this.options.editable.updateTime || this.options.editable.updateGroup || this.editable === true) && this.editable !== false;\n\n      // update class\n      var className = (this.data.className ? ' ' + this.data.className : '') + (this.selected ? ' vis-selected' : '') + (editable ? ' vis-editable' : ' vis-readonly');\n      dom.box.className = 'vis-item vis-box' + className;\n      dom.line.className = 'vis-item vis-line' + className;\n      dom.dot.className = 'vis-item vis-dot' + className;\n\n      // set initial position in the visible range of the grid so that the\n      // rendered box size can be determinated correctly, even the content\n      // has a dynamic width (fixes #2032).\n      var previousRight = dom.box.style.right;\n      var previousLeft = dom.box.style.left;\n      if (this.options.rtl) {\n        dom.box.style.right = \"0px\";\n      } else {\n        dom.box.style.left = \"0px\";\n      }\n\n      // recalculate size\n      this.props.dot.height = dom.dot.offsetHeight;\n      this.props.dot.width = dom.dot.offsetWidth;\n      this.props.line.width = dom.line.offsetWidth;\n      this.width = dom.box.offsetWidth;\n      this.height = dom.box.offsetHeight;\n\n      // restore previous position\n      if (this.options.rtl) {\n        dom.box.style.right = previousRight;\n      } else {\n        dom.box.style.left = previousLeft;\n      }\n\n      this.dirty = false;\n    }\n\n    this._repaintOnItemUpdateTimeTooltip(dom.box);\n    this._repaintDragCenter();\n    this._repaintDeleteButton(dom.box);\n  };\n\n  /**\n   * Show the item in the DOM (when not already displayed). The items DOM will\n   * be created when needed.\n   */\n  BoxItem.prototype.show = function () {\n    if (!this.displayed) {\n      this.redraw();\n    }\n  };\n\n  /**\n   * Hide the item from the DOM (when visible)\n   */\n  BoxItem.prototype.hide = function () {\n    if (this.displayed) {\n      var dom = this.dom;\n\n      if (dom.box.parentNode) dom.box.parentNode.removeChild(dom.box);\n      if (dom.line.parentNode) dom.line.parentNode.removeChild(dom.line);\n      if (dom.dot.parentNode) dom.dot.parentNode.removeChild(dom.dot);\n\n      this.displayed = false;\n    }\n  };\n\n  /**\n   * Reposition the item horizontally\n   * @Override\n   */\n  BoxItem.prototype.repositionX = function () {\n    var start = this.conversion.toScreen(this.data.start);\n    var align = this.options.align;\n\n    // calculate left position of the box\n    if (align == 'right') {\n      if (this.options.rtl) {\n        this.right = start - this.width;\n\n        // reposition box, line, and dot\n        this.dom.box.style.right = this.right + 'px';\n        this.dom.line.style.right = start - this.props.line.width + 'px';\n        this.dom.dot.style.right = start - this.props.line.width / 2 - this.props.dot.width / 2 + 'px';\n      } else {\n        this.left = start - this.width;\n\n        // reposition box, line, and dot\n        this.dom.box.style.left = this.left + 'px';\n        this.dom.line.style.left = start - this.props.line.width + 'px';\n        this.dom.dot.style.left = start - this.props.line.width / 2 - this.props.dot.width / 2 + 'px';\n      }\n    } else if (align == 'left') {\n      if (this.options.rtl) {\n        this.right = start;\n\n        // reposition box, line, and dot\n        this.dom.box.style.right = this.right + 'px';\n        this.dom.line.style.right = start + 'px';\n        this.dom.dot.style.right = start + this.props.line.width / 2 - this.props.dot.width / 2 + 'px';\n      } else {\n        this.left = start;\n\n        // reposition box, line, and dot\n        this.dom.box.style.left = this.left + 'px';\n        this.dom.line.style.left = start + 'px';\n        this.dom.dot.style.left = start + this.props.line.width / 2 - this.props.dot.width / 2 + 'px';\n      }\n    } else {\n      // default or 'center'\n      if (this.options.rtl) {\n        this.right = start - this.width / 2;\n\n        // reposition box, line, and dot\n        this.dom.box.style.right = this.right + 'px';\n        this.dom.line.style.right = start - this.props.line.width + 'px';\n        this.dom.dot.style.right = start - this.props.dot.width / 2 + 'px';\n      } else {\n        this.left = start - this.width / 2;\n\n        // reposition box, line, and dot\n        this.dom.box.style.left = this.left + 'px';\n        this.dom.line.style.left = start - this.props.line.width / 2 + 'px';\n        this.dom.dot.style.left = start - this.props.dot.width / 2 + 'px';\n      }\n    }\n  };\n\n  /**\n   * Reposition the item vertically\n   * @Override\n   */\n  BoxItem.prototype.repositionY = function () {\n    var orientation = this.options.orientation.item;\n    var box = this.dom.box;\n    var line = this.dom.line;\n    var dot = this.dom.dot;\n\n    if (orientation == 'top') {\n      box.style.top = (this.top || 0) + 'px';\n\n      line.style.top = '0';\n      line.style.height = this.parent.top + this.top + 1 + 'px';\n      line.style.bottom = '';\n    } else {\n      // orientation 'bottom'\n      var itemSetHeight = this.parent.itemSet.props.height; // TODO: this is nasty\n      var lineHeight = itemSetHeight - this.parent.top - this.parent.height + this.top;\n\n      box.style.top = (this.parent.height - this.top - this.height || 0) + 'px';\n      line.style.top = itemSetHeight - lineHeight + 'px';\n      line.style.bottom = '0';\n    }\n\n    dot.style.top = -this.props.dot.height / 2 + 'px';\n  };\n\n  /**\n   * Return the width of the item left from its start date\n   * @return {number}\n   */\n  BoxItem.prototype.getWidthLeft = function () {\n    return this.width / 2;\n  };\n\n  /**\n   * Return the width of the item right from its start date\n   * @return {number}\n   */\n  BoxItem.prototype.getWidthRight = function () {\n    return this.width / 2;\n  };\n\n  module.exports = BoxItem;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var Item = __webpack_require__(41);\n\n  /**\n   * @constructor PointItem\n   * @extends Item\n   * @param {Object} data             Object containing parameters start\n   *                                  content, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} [options]        Configuration options\n   *                                  // TODO: describe available options\n   */\n  function PointItem(data, conversion, options) {\n    this.props = {\n      dot: {\n        top: 0,\n        width: 0,\n        height: 0\n      },\n      content: {\n        height: 0,\n        marginLeft: 0,\n        marginRight: 0\n      }\n    };\n    this.options = options;\n    // validate data\n    if (data) {\n      if (data.start == undefined) {\n        throw new Error('Property \"start\" missing in item ' + data);\n      }\n    }\n\n    Item.call(this, data, conversion, options);\n  }\n\n  PointItem.prototype = new Item(null, null, null);\n\n  /**\n   * Check whether this item is visible inside given range\n   * @returns {{start: Number, end: Number}} range with a timestamp for start and end\n   * @returns {boolean} True if visible\n   */\n  PointItem.prototype.isVisible = function (range) {\n    // determine visibility\n    var msPerPixel = (range.end - range.start) / range.body.dom.center.clientWidth;\n    var widthInMs = this.width * msPerPixel;\n\n    return this.data.start.getTime() + widthInMs > range.start && this.data.start < range.end;\n  };\n\n  /**\n   * Repaint the item\n   */\n  PointItem.prototype.redraw = function () {\n    var dom = this.dom;\n    if (!dom) {\n      // create DOM\n      this.dom = {};\n      dom = this.dom;\n\n      // background box\n      dom.point = document.createElement('div');\n      // className is updated in redraw()\n\n      // contents box, right from the dot\n      dom.content = document.createElement('div');\n      dom.content.className = 'vis-item-content';\n      dom.point.appendChild(dom.content);\n\n      // dot at start\n      dom.dot = document.createElement('div');\n      dom.point.appendChild(dom.dot);\n\n      // attach this item as attribute\n      dom.point['timeline-item'] = this;\n\n      this.dirty = true;\n    }\n\n    // append DOM to parent DOM\n    if (!this.parent) {\n      throw new Error('Cannot redraw item: no parent attached');\n    }\n    if (!dom.point.parentNode) {\n      var foreground = this.parent.dom.foreground;\n      if (!foreground) {\n        throw new Error('Cannot redraw item: parent has no foreground container element');\n      }\n      foreground.appendChild(dom.point);\n    }\n    this.displayed = true;\n\n    // Update DOM when item is marked dirty. An item is marked dirty when:\n    // - the item is not yet rendered\n    // - the item's data is changed\n    // - the item is selected/deselected\n    if (this.dirty) {\n      this._updateContents(this.dom.content);\n      this._updateTitle(this.dom.point);\n      this._updateDataAttributes(this.dom.point);\n      this._updateStyle(this.dom.point);\n\n      var editable = (this.options.editable.updateTime || this.options.editable.updateGroup || this.editable === true) && this.editable !== false;\n\n      // update class\n      var className = (this.data.className ? ' ' + this.data.className : '') + (this.selected ? ' vis-selected' : '') + (editable ? ' vis-editable' : ' vis-readonly');\n      dom.point.className = 'vis-item vis-point' + className;\n      dom.dot.className = 'vis-item vis-dot' + className;\n\n      // recalculate size of dot and contents\n      this.props.dot.width = dom.dot.offsetWidth;\n      this.props.dot.height = dom.dot.offsetHeight;\n      this.props.content.height = dom.content.offsetHeight;\n\n      // resize contents\n      if (this.options.rtl) {\n        dom.content.style.marginRight = 2 * this.props.dot.width + 'px';\n      } else {\n        dom.content.style.marginLeft = 2 * this.props.dot.width + 'px';\n      }\n      //dom.content.style.marginRight = ... + 'px'; // TODO: margin right\n\n      // recalculate size\n      this.width = dom.point.offsetWidth;\n      this.height = dom.point.offsetHeight;\n\n      // reposition the dot\n      dom.dot.style.top = (this.height - this.props.dot.height) / 2 + 'px';\n      if (this.options.rtl) {\n        dom.dot.style.right = this.props.dot.width / 2 + 'px';\n      } else {\n        dom.dot.style.left = this.props.dot.width / 2 + 'px';\n      }\n\n      this.dirty = false;\n    }\n\n    this._repaintOnItemUpdateTimeTooltip(dom.point);\n    this._repaintDragCenter();\n    this._repaintDeleteButton(dom.point);\n  };\n\n  /**\n   * Show the item in the DOM (when not already visible). The items DOM will\n   * be created when needed.\n   */\n  PointItem.prototype.show = function () {\n    if (!this.displayed) {\n      this.redraw();\n    }\n  };\n\n  /**\n   * Hide the item from the DOM (when visible)\n   */\n  PointItem.prototype.hide = function () {\n    if (this.displayed) {\n      if (this.dom.point.parentNode) {\n        this.dom.point.parentNode.removeChild(this.dom.point);\n      }\n\n      this.displayed = false;\n    }\n  };\n\n  /**\n   * Reposition the item horizontally\n   * @Override\n   */\n  PointItem.prototype.repositionX = function () {\n    var start = this.conversion.toScreen(this.data.start);\n\n    if (this.options.rtl) {\n      this.right = start - this.props.dot.width;\n\n      // reposition point\n      this.dom.point.style.right = this.right + 'px';\n    } else {\n      this.left = start - this.props.dot.width;\n\n      // reposition point\n      this.dom.point.style.left = this.left + 'px';\n    }\n  };\n\n  /**\n   * Reposition the item vertically\n   * @Override\n   */\n  PointItem.prototype.repositionY = function () {\n    var orientation = this.options.orientation.item;\n    var point = this.dom.point;\n    if (orientation == 'top') {\n      point.style.top = this.top + 'px';\n    } else {\n      point.style.top = this.parent.height - this.top - this.height + 'px';\n    }\n  };\n\n  /**\n   * Return the width of the item left from its start date\n   * @return {number}\n   */\n  PointItem.prototype.getWidthLeft = function () {\n    return this.props.dot.width;\n  };\n\n  /**\n   * Return the width of the item right from  its start date\n   * @return {number}\n   */\n  PointItem.prototype.getWidthRight = function () {\n    return this.props.dot.width;\n  };\n\n  module.exports = PointItem;\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var Hammer = __webpack_require__(22);\n  var Item = __webpack_require__(41);\n  var BackgroundGroup = __webpack_require__(42);\n  var RangeItem = __webpack_require__(40);\n\n  /**\n   * @constructor BackgroundItem\n   * @extends Item\n   * @param {Object} data             Object containing parameters start, end\n   *                                  content, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} [options]        Configuration options\n   *                                  // TODO: describe options\n   */\n  // TODO: implement support for the BackgroundItem just having a start, then being displayed as a sort of an annotation\n  function BackgroundItem(data, conversion, options) {\n    this.props = {\n      content: {\n        width: 0\n      }\n    };\n    this.overflow = false; // if contents can overflow (css styling), this flag is set to true\n\n    // validate data\n    if (data) {\n      if (data.start == undefined) {\n        throw new Error('Property \"start\" missing in item ' + data.id);\n      }\n      if (data.end == undefined) {\n        throw new Error('Property \"end\" missing in item ' + data.id);\n      }\n    }\n\n    Item.call(this, data, conversion, options);\n  }\n\n  BackgroundItem.prototype = new Item(null, null, null);\n\n  BackgroundItem.prototype.baseClassName = 'vis-item vis-background';\n  BackgroundItem.prototype.stack = false;\n\n  /**\n   * Check whether this item is visible inside given range\n   * @returns {{start: Number, end: Number}} range with a timestamp for start and end\n   * @returns {boolean} True if visible\n   */\n  BackgroundItem.prototype.isVisible = function (range) {\n    // determine visibility\n    return this.data.start < range.end && this.data.end > range.start;\n  };\n\n  /**\n   * Repaint the item\n   */\n  BackgroundItem.prototype.redraw = function () {\n    var dom = this.dom;\n    if (!dom) {\n      // create DOM\n      this.dom = {};\n      dom = this.dom;\n\n      // background box\n      dom.box = document.createElement('div');\n      // className is updated in redraw()\n\n      // frame box (to prevent the item contents from overflowing\n      dom.frame = document.createElement('div');\n      dom.frame.className = 'vis-item-overflow';\n      dom.box.appendChild(dom.frame);\n\n      // contents box\n      dom.content = document.createElement('div');\n      dom.content.className = 'vis-item-content';\n      dom.frame.appendChild(dom.content);\n\n      // Note: we do NOT attach this item as attribute to the DOM,\n      //       such that background items cannot be selected\n      //dom.box['timeline-item'] = this;\n\n      this.dirty = true;\n    }\n\n    // append DOM to parent DOM\n    if (!this.parent) {\n      throw new Error('Cannot redraw item: no parent attached');\n    }\n    if (!dom.box.parentNode) {\n      var background = this.parent.dom.background;\n      if (!background) {\n        throw new Error('Cannot redraw item: parent has no background container element');\n      }\n      background.appendChild(dom.box);\n    }\n    this.displayed = true;\n\n    // Update DOM when item is marked dirty. An item is marked dirty when:\n    // - the item is not yet rendered\n    // - the item's data is changed\n    // - the item is selected/deselected\n    if (this.dirty) {\n      this._updateContents(this.dom.content);\n      this._updateTitle(this.dom.content);\n      this._updateDataAttributes(this.dom.content);\n      this._updateStyle(this.dom.box);\n\n      // update class\n      var className = (this.data.className ? ' ' + this.data.className : '') + (this.selected ? ' vis-selected' : '');\n      dom.box.className = this.baseClassName + className;\n\n      // determine from css whether this box has overflow\n      this.overflow = window.getComputedStyle(dom.content).overflow !== 'hidden';\n\n      // recalculate size\n      this.props.content.width = this.dom.content.offsetWidth;\n      this.height = 0; // set height zero, so this item will be ignored when stacking items\n\n      this.dirty = false;\n    }\n  };\n\n  /**\n   * Show the item in the DOM (when not already visible). The items DOM will\n   * be created when needed.\n   */\n  BackgroundItem.prototype.show = RangeItem.prototype.show;\n\n  /**\n   * Hide the item from the DOM (when visible)\n   * @return {Boolean} changed\n   */\n  BackgroundItem.prototype.hide = RangeItem.prototype.hide;\n\n  /**\n   * Reposition the item horizontally\n   * @Override\n   */\n  BackgroundItem.prototype.repositionX = RangeItem.prototype.repositionX;\n\n  /**\n   * Reposition the item vertically\n   * @Override\n   */\n  BackgroundItem.prototype.repositionY = function (margin) {\n    var onTop = this.options.orientation.item === 'top';\n    this.dom.content.style.top = onTop ? '' : '0';\n    this.dom.content.style.bottom = onTop ? '0' : '';\n    var height;\n\n    // special positioning for subgroups\n    if (this.data.subgroup !== undefined) {\n      // TODO: instead of calculating the top position of the subgroups here for every BackgroundItem, calculate the top of the subgroup once in Itemset\n\n      var itemSubgroup = this.data.subgroup;\n      var subgroups = this.parent.subgroups;\n      var subgroupIndex = subgroups[itemSubgroup].index;\n      // if the orientation is top, we need to take the difference in height into account.\n      if (onTop == true) {\n        // the first subgroup will have to account for the distance from the top to the first item.\n        height = this.parent.subgroups[itemSubgroup].height + margin.item.vertical;\n        height += subgroupIndex == 0 ? margin.axis - 0.5 * margin.item.vertical : 0;\n        var newTop = this.parent.top;\n        for (var subgroup in subgroups) {\n          if (subgroups.hasOwnProperty(subgroup)) {\n            if (subgroups[subgroup].visible == true && subgroups[subgroup].index < subgroupIndex) {\n              newTop += subgroups[subgroup].height + margin.item.vertical;\n            }\n          }\n        }\n\n        // the others will have to be offset downwards with this same distance.\n        newTop += subgroupIndex != 0 ? margin.axis - 0.5 * margin.item.vertical : 0;\n        this.dom.box.style.top = newTop + 'px';\n        this.dom.box.style.bottom = '';\n      }\n      // and when the orientation is bottom:\n      else {\n          var newTop = this.parent.top;\n          var totalHeight = 0;\n          for (var subgroup in subgroups) {\n            if (subgroups.hasOwnProperty(subgroup)) {\n              if (subgroups[subgroup].visible == true) {\n                var newHeight = subgroups[subgroup].height + margin.item.vertical;\n                totalHeight += newHeight;\n                if (subgroups[subgroup].index > subgroupIndex) {\n                  newTop += newHeight;\n                }\n              }\n            }\n          }\n          height = this.parent.subgroups[itemSubgroup].height + margin.item.vertical;\n          this.dom.box.style.top = this.parent.height - totalHeight + newTop + 'px';\n          this.dom.box.style.bottom = '';\n        }\n    }\n    // and in the case of no subgroups:\n    else {\n        // we want backgrounds with groups to only show in groups.\n        if (this.parent instanceof BackgroundGroup) {\n          // if the item is not in a group:\n          height = Math.max(this.parent.height, this.parent.itemSet.body.domProps.center.height, this.parent.itemSet.body.domProps.centerContainer.height);\n          this.dom.box.style.top = onTop ? '0' : '';\n          this.dom.box.style.bottom = onTop ? '' : '0';\n        } else {\n          height = this.parent.height;\n          // same alignment for items when orientation is top or bottom\n          this.dom.box.style.top = this.parent.top + 'px';\n          this.dom.box.style.bottom = '';\n        }\n      }\n    this.dom.box.style.height = height + 'px';\n  };\n\n  module.exports = BackgroundItem;\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  var util = __webpack_require__(1);\n  var Component = __webpack_require__(33);\n  var TimeStep = __webpack_require__(37);\n  var DateUtil = __webpack_require__(34);\n  var moment = __webpack_require__(2);\n\n  /**\n   * A horizontal time axis\n   * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} body\n   * @param {Object} [options]        See TimeAxis.setOptions for the available\n   *                                  options.\n   * @constructor TimeAxis\n   * @extends Component\n   */\n  function TimeAxis(body, options) {\n    this.dom = {\n      foreground: null,\n      lines: [],\n      majorTexts: [],\n      minorTexts: [],\n      redundant: {\n        lines: [],\n        majorTexts: [],\n        minorTexts: []\n      }\n    };\n    this.props = {\n      range: {\n        start: 0,\n        end: 0,\n        minimumStep: 0\n      },\n      lineTop: 0\n    };\n\n    this.defaultOptions = {\n      orientation: {\n        axis: 'bottom'\n      }, // axis orientation: 'top' or 'bottom'\n      showMinorLabels: true,\n      showMajorLabels: true,\n      maxMinorChars: 7,\n      format: TimeStep.FORMAT,\n      moment: moment,\n      timeAxis: null\n    };\n    this.options = util.extend({}, this.defaultOptions);\n\n    this.body = body;\n\n    // create the HTML DOM\n    this._create();\n\n    this.setOptions(options);\n  }\n\n  TimeAxis.prototype = new Component();\n\n  /**\n   * Set options for the TimeAxis.\n   * Parameters will be merged in current options.\n   * @param {Object} options  Available options:\n   *                          {string} [orientation.axis]\n   *                          {boolean} [showMinorLabels]\n   *                          {boolean} [showMajorLabels]\n   */\n  TimeAxis.prototype.setOptions = function (options) {\n    if (options) {\n      // copy all options that we know\n      util.selectiveExtend(['showMinorLabels', 'showMajorLabels', 'maxMinorChars', 'hiddenDates', 'timeAxis', 'moment', 'rtl'], this.options, options);\n\n      // deep copy the format options\n      util.selectiveDeepExtend(['format'], this.options, options);\n\n      if ('orientation' in options) {\n        if (typeof options.orientation === 'string') {\n          this.options.orientation.axis = options.orientation;\n        } else if (_typeof(options.orientation) === 'object' && 'axis' in options.orientation) {\n          this.options.orientation.axis = options.orientation.axis;\n        }\n      }\n\n      // apply locale to moment.js\n      // TODO: not so nice, this is applied globally to moment.js\n      if ('locale' in options) {\n        if (typeof moment.locale === 'function') {\n          // moment.js 2.8.1+\n          moment.locale(options.locale);\n        } else {\n          moment.lang(options.locale);\n        }\n      }\n    }\n  };\n\n  /**\n   * Create the HTML DOM for the TimeAxis\n   */\n  TimeAxis.prototype._create = function () {\n    this.dom.foreground = document.createElement('div');\n    this.dom.background = document.createElement('div');\n\n    this.dom.foreground.className = 'vis-time-axis vis-foreground';\n    this.dom.background.className = 'vis-time-axis vis-background';\n  };\n\n  /**\n   * Destroy the TimeAxis\n   */\n  TimeAxis.prototype.destroy = function () {\n    // remove from DOM\n    if (this.dom.foreground.parentNode) {\n      this.dom.foreground.parentNode.removeChild(this.dom.foreground);\n    }\n    if (this.dom.background.parentNode) {\n      this.dom.background.parentNode.removeChild(this.dom.background);\n    }\n\n    this.body = null;\n  };\n\n  /**\n   * Repaint the component\n   * @return {boolean} Returns true if the component is resized\n   */\n  TimeAxis.prototype.redraw = function () {\n    var props = this.props;\n    var foreground = this.dom.foreground;\n    var background = this.dom.background;\n\n    // determine the correct parent DOM element (depending on option orientation)\n    var parent = this.options.orientation.axis == 'top' ? this.body.dom.top : this.body.dom.bottom;\n    var parentChanged = foreground.parentNode !== parent;\n\n    // calculate character width and height\n    this._calculateCharSize();\n\n    // TODO: recalculate sizes only needed when parent is resized or options is changed\n    var showMinorLabels = this.options.showMinorLabels && this.options.orientation.axis !== 'none';\n    var showMajorLabels = this.options.showMajorLabels && this.options.orientation.axis !== 'none';\n\n    // determine the width and height of the elemens for the axis\n    props.minorLabelHeight = showMinorLabels ? props.minorCharHeight : 0;\n    props.majorLabelHeight = showMajorLabels ? props.majorCharHeight : 0;\n    props.height = props.minorLabelHeight + props.majorLabelHeight;\n    props.width = foreground.offsetWidth;\n\n    props.minorLineHeight = this.body.domProps.root.height - props.majorLabelHeight - (this.options.orientation.axis == 'top' ? this.body.domProps.bottom.height : this.body.domProps.top.height);\n    props.minorLineWidth = 1; // TODO: really calculate width\n    props.majorLineHeight = props.minorLineHeight + props.majorLabelHeight;\n    props.majorLineWidth = 1; // TODO: really calculate width\n\n    //  take foreground and background offline while updating (is almost twice as fast)\n    var foregroundNextSibling = foreground.nextSibling;\n    var backgroundNextSibling = background.nextSibling;\n    foreground.parentNode && foreground.parentNode.removeChild(foreground);\n    background.parentNode && background.parentNode.removeChild(background);\n\n    foreground.style.height = this.props.height + 'px';\n\n    this._repaintLabels();\n\n    // put DOM online again (at the same place)\n    if (foregroundNextSibling) {\n      parent.insertBefore(foreground, foregroundNextSibling);\n    } else {\n      parent.appendChild(foreground);\n    }\n    if (backgroundNextSibling) {\n      this.body.dom.backgroundVertical.insertBefore(background, backgroundNextSibling);\n    } else {\n      this.body.dom.backgroundVertical.appendChild(background);\n    }\n    return this._isResized() || parentChanged;\n  };\n\n  /**\n   * Repaint major and minor text labels and vertical grid lines\n   * @private\n   */\n  TimeAxis.prototype._repaintLabels = function () {\n    var orientation = this.options.orientation.axis;\n\n    // calculate range and step (step such that we have space for 7 characters per label)\n    var start = util.convert(this.body.range.start, 'Number');\n    var end = util.convert(this.body.range.end, 'Number');\n    var timeLabelsize = this.body.util.toTime((this.props.minorCharWidth || 10) * this.options.maxMinorChars).valueOf();\n    var minimumStep = timeLabelsize - DateUtil.getHiddenDurationBefore(this.options.moment, this.body.hiddenDates, this.body.range, timeLabelsize);\n    minimumStep -= this.body.util.toTime(0).valueOf();\n\n    var step = new TimeStep(new Date(start), new Date(end), minimumStep, this.body.hiddenDates);\n    step.setMoment(this.options.moment);\n    if (this.options.format) {\n      step.setFormat(this.options.format);\n    }\n    if (this.options.timeAxis) {\n      step.setScale(this.options.timeAxis);\n    }\n    this.step = step;\n\n    // Move all DOM elements to a \"redundant\" list, where they\n    // can be picked for re-use, and clear the lists with lines and texts.\n    // At the end of the function _repaintLabels, left over elements will be cleaned up\n    var dom = this.dom;\n    dom.redundant.lines = dom.lines;\n    dom.redundant.majorTexts = dom.majorTexts;\n    dom.redundant.minorTexts = dom.minorTexts;\n    dom.lines = [];\n    dom.majorTexts = [];\n    dom.minorTexts = [];\n\n    var current;\n    var next;\n    var x;\n    var xNext;\n    var isMajor, nextIsMajor;\n    var width = 0,\n        prevWidth;\n    var line;\n    var labelMinor;\n    var xFirstMajorLabel = undefined;\n    var count = 0;\n    var MAX = 1000;\n    var className;\n\n    step.start();\n    next = step.getCurrent();\n    xNext = this.body.util.toScreen(next);\n    while (step.hasNext() && count < MAX) {\n      count++;\n\n      isMajor = step.isMajor();\n      className = step.getClassName();\n      labelMinor = step.getLabelMinor();\n\n      current = next;\n      x = xNext;\n\n      step.next();\n      next = step.getCurrent();\n      nextIsMajor = step.isMajor();\n      xNext = this.body.util.toScreen(next);\n\n      prevWidth = width;\n      width = xNext - x;\n      var showMinorGrid = width >= prevWidth * 0.4; // prevent displaying of the 31th of the month on a scale of 5 days\n\n      if (this.options.showMinorLabels && showMinorGrid) {\n        var label = this._repaintMinorText(x, labelMinor, orientation, className);\n        label.style.width = width + 'px'; // set width to prevent overflow\n      }\n\n      if (isMajor && this.options.showMajorLabels) {\n        if (x > 0) {\n          if (xFirstMajorLabel == undefined) {\n            xFirstMajorLabel = x;\n          }\n          label = this._repaintMajorText(x, step.getLabelMajor(), orientation, className);\n        }\n        line = this._repaintMajorLine(x, width, orientation, className);\n      } else {\n        // minor line\n        if (showMinorGrid) {\n          line = this._repaintMinorLine(x, width, orientation, className);\n        } else {\n          if (line) {\n            // adjust the width of the previous grid\n            line.style.width = parseInt(line.style.width) + width + 'px';\n          }\n        }\n      }\n    }\n\n    if (count === MAX && !warnedForOverflow) {\n      console.warn('Something is wrong with the Timeline scale. Limited drawing of grid lines to ' + MAX + ' lines.');\n      warnedForOverflow = true;\n    }\n\n    // create a major label on the left when needed\n    if (this.options.showMajorLabels) {\n      var leftTime = this.body.util.toTime(0),\n          leftText = step.getLabelMajor(leftTime),\n          widthText = leftText.length * (this.props.majorCharWidth || 10) + 10; // upper bound estimation\n\n      if (xFirstMajorLabel == undefined || widthText < xFirstMajorLabel) {\n        this._repaintMajorText(0, leftText, orientation, className);\n      }\n    }\n\n    // Cleanup leftover DOM elements from the redundant list\n    util.forEach(this.dom.redundant, function (arr) {\n      while (arr.length) {\n        var elem = arr.pop();\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      }\n    });\n  };\n\n  /**\n   * Create a minor label for the axis at position x\n   * @param {Number} x\n   * @param {String} text\n   * @param {String} orientation   \"top\" or \"bottom\" (default)\n   * @param {String} className\n   * @return {Element} Returns the HTML element of the created label\n   * @private\n   */\n  TimeAxis.prototype._repaintMinorText = function (x, text, orientation, className) {\n    // reuse redundant label\n    var label = this.dom.redundant.minorTexts.shift();\n\n    if (!label) {\n      // create new label\n      var content = document.createTextNode('');\n      label = document.createElement('div');\n      label.appendChild(content);\n      this.dom.foreground.appendChild(label);\n    }\n    this.dom.minorTexts.push(label);\n\n    label.childNodes[0].nodeValue = text;\n\n    label.style.top = orientation == 'top' ? this.props.majorLabelHeight + 'px' : '0';\n\n    if (this.options.rtl) {\n      label.style.left = \"\";\n      label.style.right = x + 'px';\n    } else {\n      label.style.left = x + 'px';\n    };\n    label.className = 'vis-text vis-minor ' + className;\n    //label.title = title;  // TODO: this is a heavy operation\n\n    return label;\n  };\n\n  /**\n   * Create a Major label for the axis at position x\n   * @param {Number} x\n   * @param {String} text\n   * @param {String} orientation   \"top\" or \"bottom\" (default)\n   * @param {String} className\n   * @return {Element} Returns the HTML element of the created label\n   * @private\n   */\n  TimeAxis.prototype._repaintMajorText = function (x, text, orientation, className) {\n    // reuse redundant label\n    var label = this.dom.redundant.majorTexts.shift();\n\n    if (!label) {\n      // create label\n      var content = document.createTextNode(text);\n      label = document.createElement('div');\n      label.appendChild(content);\n      this.dom.foreground.appendChild(label);\n    }\n    this.dom.majorTexts.push(label);\n\n    label.childNodes[0].nodeValue = text;\n    label.className = 'vis-text vis-major ' + className;\n    //label.title = title; // TODO: this is a heavy operation\n\n    label.style.top = orientation == 'top' ? '0' : this.props.minorLabelHeight + 'px';\n    if (this.options.rtl) {\n      label.style.left = \"\";\n      label.style.right = x + 'px';\n    } else {\n      label.style.left = x + 'px';\n    };\n\n    return label;\n  };\n\n  /**\n   * Create a minor line for the axis at position x\n   * @param {Number} x\n   * @param {Number} width\n   * @param {String} orientation   \"top\" or \"bottom\" (default)\n   * @param {String} className\n   * @return {Element} Returns the created line\n   * @private\n   */\n  TimeAxis.prototype._repaintMinorLine = function (x, width, orientation, className) {\n    // reuse redundant line\n    var line = this.dom.redundant.lines.shift();\n    if (!line) {\n      // create vertical line\n      line = document.createElement('div');\n      this.dom.background.appendChild(line);\n    }\n    this.dom.lines.push(line);\n\n    var props = this.props;\n    if (orientation == 'top') {\n      line.style.top = props.majorLabelHeight + 'px';\n    } else {\n      line.style.top = this.body.domProps.top.height + 'px';\n    }\n    line.style.height = props.minorLineHeight + 'px';\n    if (this.options.rtl) {\n      line.style.left = \"\";\n      line.style.right = x - props.minorLineWidth / 2 + 'px';\n      line.className = 'vis-grid vis-vertical-rtl vis-minor ' + className;\n    } else {\n      line.style.left = x - props.minorLineWidth / 2 + 'px';\n      line.className = 'vis-grid vis-vertical vis-minor ' + className;\n    };\n    line.style.width = width + 'px';\n\n    return line;\n  };\n\n  /**\n   * Create a Major line for the axis at position x\n   * @param {Number} x\n   * @param {Number} width\n   * @param {String} orientation   \"top\" or \"bottom\" (default)\n   * @param {String} className\n   * @return {Element} Returns the created line\n   * @private\n   */\n  TimeAxis.prototype._repaintMajorLine = function (x, width, orientation, className) {\n    // reuse redundant line\n    var line = this.dom.redundant.lines.shift();\n    if (!line) {\n      // create vertical line\n      line = document.createElement('div');\n      this.dom.background.appendChild(line);\n    }\n    this.dom.lines.push(line);\n\n    var props = this.props;\n    if (orientation == 'top') {\n      line.style.top = '0';\n    } else {\n      line.style.top = this.body.domProps.top.height + 'px';\n    }\n\n    if (this.options.rtl) {\n      line.style.left = \"\";\n      line.style.right = x - props.majorLineWidth / 2 + 'px';\n      line.className = 'vis-grid vis-vertical-rtl vis-major ' + className;\n    } else {\n      line.style.left = x - props.majorLineWidth / 2 + 'px';\n      line.className = 'vis-grid vis-vertical vis-major ' + className;\n    }\n\n    line.style.height = props.majorLineHeight + 'px';\n    line.style.width = width + 'px';\n\n    return line;\n  };\n\n  /**\n   * Determine the size of text on the axis (both major and minor axis).\n   * The size is calculated only once and then cached in this.props.\n   * @private\n   */\n  TimeAxis.prototype._calculateCharSize = function () {\n    // Note: We calculate char size with every redraw. Size may change, for\n    // example when any of the timelines parents had display:none for example.\n\n    // determine the char width and height on the minor axis\n    if (!this.dom.measureCharMinor) {\n      this.dom.measureCharMinor = document.createElement('DIV');\n      this.dom.measureCharMinor.className = 'vis-text vis-minor vis-measure';\n      this.dom.measureCharMinor.style.position = 'absolute';\n\n      this.dom.measureCharMinor.appendChild(document.createTextNode('0'));\n      this.dom.foreground.appendChild(this.dom.measureCharMinor);\n    }\n    this.props.minorCharHeight = this.dom.measureCharMinor.clientHeight;\n    this.props.minorCharWidth = this.dom.measureCharMinor.clientWidth;\n\n    // determine the char width and height on the major axis\n    if (!this.dom.measureCharMajor) {\n      this.dom.measureCharMajor = document.createElement('DIV');\n      this.dom.measureCharMajor.className = 'vis-text vis-major vis-measure';\n      this.dom.measureCharMajor.style.position = 'absolute';\n\n      this.dom.measureCharMajor.appendChild(document.createTextNode('0'));\n      this.dom.foreground.appendChild(this.dom.measureCharMajor);\n    }\n    this.props.majorCharHeight = this.dom.measureCharMajor.clientHeight;\n    this.props.majorCharWidth = this.dom.measureCharMajor.clientWidth;\n  };\n\n  var warnedForOverflow = false;\n\n  module.exports = TimeAxis;\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var keycharm = __webpack_require__(25);\n  var Emitter = __webpack_require__(13);\n  var Hammer = __webpack_require__(22);\n  var util = __webpack_require__(1);\n\n  /**\n   * Turn an element into an clickToUse element.\n   * When not active, the element has a transparent overlay. When the overlay is\n   * clicked, the mode is changed to active.\n   * When active, the element is displayed with a blue border around it, and\n   * the interactive contents of the element can be used. When clicked outside\n   * the element, the elements mode is changed to inactive.\n   * @param {Element} container\n   * @constructor\n   */\n  function Activator(container) {\n    this.active = false;\n\n    this.dom = {\n      container: container\n    };\n\n    this.dom.overlay = document.createElement('div');\n    this.dom.overlay.className = 'vis-overlay';\n\n    this.dom.container.appendChild(this.dom.overlay);\n\n    this.hammer = Hammer(this.dom.overlay);\n    this.hammer.on('tap', this._onTapOverlay.bind(this));\n\n    // block all touch events (except tap)\n    var me = this;\n    var events = ['tap', 'doubletap', 'press', 'pinch', 'pan', 'panstart', 'panmove', 'panend'];\n    events.forEach(function (event) {\n      me.hammer.on(event, function (event) {\n        event.stopPropagation();\n      });\n    });\n\n    // attach a click event to the window, in order to deactivate when clicking outside the timeline\n    if (document && document.body) {\n      this.onClick = function (event) {\n        if (!_hasParent(event.target, container)) {\n          me.deactivate();\n        }\n      };\n      document.body.addEventListener('click', this.onClick);\n    }\n\n    if (this.keycharm !== undefined) {\n      this.keycharm.destroy();\n    }\n    this.keycharm = keycharm();\n\n    // keycharm listener only bounded when active)\n    this.escListener = this.deactivate.bind(this);\n  }\n\n  // turn into an event emitter\n  Emitter(Activator.prototype);\n\n  // The currently active activator\n  Activator.current = null;\n\n  /**\n   * Destroy the activator. Cleans up all created DOM and event listeners\n   */\n  Activator.prototype.destroy = function () {\n    this.deactivate();\n\n    // remove dom\n    this.dom.overlay.parentNode.removeChild(this.dom.overlay);\n\n    // remove global event listener\n    if (this.onClick) {\n      document.body.removeEventListener('click', this.onClick);\n    }\n\n    // cleanup hammer instances\n    this.hammer.destroy();\n    this.hammer = null;\n    // FIXME: cleaning up hammer instances doesn't work (Timeline not removed from memory)\n  };\n\n  /**\n   * Activate the element\n   * Overlay is hidden, element is decorated with a blue shadow border\n   */\n  Activator.prototype.activate = function () {\n    // we allow only one active activator at a time\n    if (Activator.current) {\n      Activator.current.deactivate();\n    }\n    Activator.current = this;\n\n    this.active = true;\n    this.dom.overlay.style.display = 'none';\n    util.addClassName(this.dom.container, 'vis-active');\n\n    this.emit('change');\n    this.emit('activate');\n\n    // ugly hack: bind ESC after emitting the events, as the Network rebinds all\n    // keyboard events on a 'change' event\n    this.keycharm.bind('esc', this.escListener);\n  };\n\n  /**\n   * Deactivate the element\n   * Overlay is displayed on top of the element\n   */\n  Activator.prototype.deactivate = function () {\n    this.active = false;\n    this.dom.overlay.style.display = '';\n    util.removeClassName(this.dom.container, 'vis-active');\n    this.keycharm.unbind('esc', this.escListener);\n\n    this.emit('change');\n    this.emit('deactivate');\n  };\n\n  /**\n   * Handle a tap event: activate the container\n   * @param event\n   * @private\n   */\n  Activator.prototype._onTapOverlay = function (event) {\n    // activate the container\n    this.activate();\n    event.stopPropagation();\n  };\n\n  /**\n   * Test whether the element has the requested parent element somewhere in\n   * its chain of parent nodes.\n   * @param {HTMLElement} element\n   * @param {HTMLElement} parent\n   * @returns {boolean} Returns true when the parent is found somewhere in the\n   *                    chain of parent nodes.\n   * @private\n   */\n  function _hasParent(element, parent) {\n    while (element) {\n      if (element === parent) {\n        return true;\n      }\n      element = element.parentNode;\n    }\n    return false;\n  }\n\n  module.exports = Activator;\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var Hammer = __webpack_require__(22);\n  var util = __webpack_require__(1);\n  var Component = __webpack_require__(33);\n  var moment = __webpack_require__(2);\n  var locales = __webpack_require__(49);\n\n  /**\n   * A custom time bar\n   * @param {{range: Range, dom: Object}} body\n   * @param {Object} [options]        Available parameters:\n   *                                  {number | string} id\n   *                                  {string} locales\n   *                                  {string} locale\n   * @constructor CustomTime\n   * @extends Component\n   */\n\n  function CustomTime(body, options) {\n    this.body = body;\n\n    // default options\n    this.defaultOptions = {\n      moment: moment,\n      locales: locales,\n      locale: 'en',\n      id: undefined,\n      title: undefined\n    };\n    this.options = util.extend({}, this.defaultOptions);\n\n    if (options && options.time) {\n      this.customTime = options.time;\n    } else {\n      this.customTime = new Date();\n    }\n\n    this.eventParams = {}; // stores state parameters while dragging the bar\n\n    this.setOptions(options);\n\n    // create the DOM\n    this._create();\n  }\n\n  CustomTime.prototype = new Component();\n\n  /**\n   * Set options for the component. Options will be merged in current options.\n   * @param {Object} options  Available parameters:\n   *                                  {number | string} id\n   *                                  {string} locales\n   *                                  {string} locale\n   */\n  CustomTime.prototype.setOptions = function (options) {\n    if (options) {\n      // copy all options that we know\n      util.selectiveExtend(['moment', 'locale', 'locales', 'id'], this.options, options);\n    }\n  };\n\n  /**\n   * Create the DOM for the custom time\n   * @private\n   */\n  CustomTime.prototype._create = function () {\n    var bar = document.createElement('div');\n    bar['custom-time'] = this;\n    bar.className = 'vis-custom-time ' + (this.options.id || '');\n    bar.style.position = 'absolute';\n    bar.style.top = '0px';\n    bar.style.height = '100%';\n    this.bar = bar;\n\n    var drag = document.createElement('div');\n    drag.style.position = 'relative';\n    drag.style.top = '0px';\n    drag.style.left = '-10px';\n    drag.style.height = '100%';\n    drag.style.width = '20px';\n    bar.appendChild(drag);\n\n    // attach event listeners\n    this.hammer = new Hammer(drag);\n    this.hammer.on('panstart', this._onDragStart.bind(this));\n    this.hammer.on('panmove', this._onDrag.bind(this));\n    this.hammer.on('panend', this._onDragEnd.bind(this));\n    this.hammer.get('pan').set({ threshold: 5, direction: Hammer.DIRECTION_HORIZONTAL });\n  };\n\n  /**\n   * Destroy the CustomTime bar\n   */\n  CustomTime.prototype.destroy = function () {\n    this.hide();\n\n    this.hammer.destroy();\n    this.hammer = null;\n\n    this.body = null;\n  };\n\n  /**\n   * Repaint the component\n   * @return {boolean} Returns true if the component is resized\n   */\n  CustomTime.prototype.redraw = function () {\n    var parent = this.body.dom.backgroundVertical;\n    if (this.bar.parentNode != parent) {\n      // attach to the dom\n      if (this.bar.parentNode) {\n        this.bar.parentNode.removeChild(this.bar);\n      }\n      parent.appendChild(this.bar);\n    }\n\n    var x = this.body.util.toScreen(this.customTime);\n\n    var locale = this.options.locales[this.options.locale];\n    if (!locale) {\n      if (!this.warned) {\n        console.log('WARNING: options.locales[\\'' + this.options.locale + '\\'] not found. See http://visjs.org/docs/timeline/#Localization');\n        this.warned = true;\n      }\n      locale = this.options.locales['en']; // fall back on english when not available\n    }\n\n    var title = this.options.title;\n    // To hide the title completely use empty string ''.\n    if (title === undefined) {\n      title = locale.time + ': ' + this.options.moment(this.customTime).format('dddd, MMMM Do YYYY, H:mm:ss');\n      title = title.charAt(0).toUpperCase() + title.substring(1);\n    }\n\n    this.bar.style.left = x + 'px';\n    this.bar.title = title;\n\n    return false;\n  };\n\n  /**\n   * Remove the CustomTime from the DOM\n   */\n  CustomTime.prototype.hide = function () {\n    // remove the line from the DOM\n    if (this.bar.parentNode) {\n      this.bar.parentNode.removeChild(this.bar);\n    }\n  };\n\n  /**\n   * Set custom time.\n   * @param {Date | number | string} time\n   */\n  CustomTime.prototype.setCustomTime = function (time) {\n    this.customTime = util.convert(time, 'Date');\n    this.redraw();\n  };\n\n  /**\n   * Retrieve the current custom time.\n   * @return {Date} customTime\n   */\n  CustomTime.prototype.getCustomTime = function () {\n    return new Date(this.customTime.valueOf());\n  };\n\n  /**\n    * Set custom title.\n    * @param {Date | number | string} title\n    */\n  CustomTime.prototype.setCustomTitle = function (title) {\n    this.options.title = title;\n  };\n\n  /**\n   * Start moving horizontally\n   * @param {Event} event\n   * @private\n   */\n  CustomTime.prototype._onDragStart = function (event) {\n    this.eventParams.dragging = true;\n    this.eventParams.customTime = this.customTime;\n\n    event.stopPropagation();\n  };\n\n  /**\n   * Perform moving operating.\n   * @param {Event} event\n   * @private\n   */\n  CustomTime.prototype._onDrag = function (event) {\n    if (!this.eventParams.dragging) return;\n\n    var x = this.body.util.toScreen(this.eventParams.customTime) + event.deltaX;\n    var time = this.body.util.toTime(x);\n\n    this.setCustomTime(time);\n\n    // fire a timechange event\n    this.body.emitter.emit('timechange', {\n      id: this.options.id,\n      time: new Date(this.customTime.valueOf())\n    });\n\n    event.stopPropagation();\n  };\n\n  /**\n   * Stop moving operating.\n   * @param {Event} event\n   * @private\n   */\n  CustomTime.prototype._onDragEnd = function (event) {\n    if (!this.eventParams.dragging) return;\n\n    // fire a timechanged event\n    this.body.emitter.emit('timechanged', {\n      id: this.options.id,\n      time: new Date(this.customTime.valueOf())\n    });\n\n    event.stopPropagation();\n  };\n\n  /**\n   * Find a custom time from an event target:\n   * searches for the attribute 'custom-time' in the event target's element tree\n   * @param {Event} event\n   * @return {CustomTime | null} customTime\n   */\n  CustomTime.customTimeFromTarget = function (event) {\n    var target = event.target;\n    while (target) {\n      if (target.hasOwnProperty('custom-time')) {\n        return target['custom-time'];\n      }\n      target = target.parentNode;\n    }\n\n    return null;\n  };\n\n  module.exports = CustomTime;\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n  'use strict';\n\n  // English\n  exports['en'] = {\n    current: 'current',\n    time: 'time'\n  };\n  exports['en_EN'] = exports['en'];\n  exports['en_US'] = exports['en'];\n\n  // Italiano\n  exports['it'] = {\n    current: 'attuale',\n    time: 'tempo'\n  };\n  exports['it_IT'] = exports['it'];\n  exports['it_CH'] = exports['it'];\n\n  // Dutch\n  exports['nl'] = {\n    current: 'huidige',\n    time: 'tijd'\n  };\n  exports['nl_NL'] = exports['nl'];\n  exports['nl_BE'] = exports['nl'];\n\n  // German\n  exports['de'] = {\n    current: 'Aktuelle',\n    time: 'Zeit'\n  };\n  exports['de_DE'] = exports['de'];\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var util = __webpack_require__(1);\n  var Component = __webpack_require__(33);\n  var moment = __webpack_require__(2);\n  var locales = __webpack_require__(49);\n\n  /**\n   * A current time bar\n   * @param {{range: Range, dom: Object, domProps: Object}} body\n   * @param {Object} [options]        Available parameters:\n   *                                  {Boolean} [showCurrentTime]\n   * @constructor CurrentTime\n   * @extends Component\n   */\n  function CurrentTime(body, options) {\n    this.body = body;\n\n    // default options\n    this.defaultOptions = {\n      rtl: false,\n      showCurrentTime: true,\n\n      moment: moment,\n      locales: locales,\n      locale: 'en'\n    };\n    this.options = util.extend({}, this.defaultOptions);\n    this.offset = 0;\n\n    this._create();\n\n    this.setOptions(options);\n  }\n\n  CurrentTime.prototype = new Component();\n\n  /**\n   * Create the HTML DOM for the current time bar\n   * @private\n   */\n  CurrentTime.prototype._create = function () {\n    var bar = document.createElement('div');\n    bar.className = 'vis-current-time';\n    bar.style.position = 'absolute';\n    bar.style.top = '0px';\n    bar.style.height = '100%';\n\n    this.bar = bar;\n  };\n\n  /**\n   * Destroy the CurrentTime bar\n   */\n  CurrentTime.prototype.destroy = function () {\n    this.options.showCurrentTime = false;\n    this.redraw(); // will remove the bar from the DOM and stop refreshing\n\n    this.body = null;\n  };\n\n  /**\n   * Set options for the component. Options will be merged in current options.\n   * @param {Object} options  Available parameters:\n   *                          {boolean} [showCurrentTime]\n   */\n  CurrentTime.prototype.setOptions = function (options) {\n    if (options) {\n      // copy all options that we know\n      util.selectiveExtend(['rtl', 'showCurrentTime', 'moment', 'locale', 'locales'], this.options, options);\n    }\n  };\n\n  /**\n   * Repaint the component\n   * @return {boolean} Returns true if the component is resized\n   */\n  CurrentTime.prototype.redraw = function () {\n    if (this.options.showCurrentTime) {\n      var parent = this.body.dom.backgroundVertical;\n      if (this.bar.parentNode != parent) {\n        // attach to the dom\n        if (this.bar.parentNode) {\n          this.bar.parentNode.removeChild(this.bar);\n        }\n        parent.appendChild(this.bar);\n\n        this.start();\n      }\n\n      var now = this.options.moment(new Date().valueOf() + this.offset);\n      var x = this.body.util.toScreen(now);\n\n      var locale = this.options.locales[this.options.locale];\n      if (!locale) {\n        if (!this.warned) {\n          console.log('WARNING: options.locales[\\'' + this.options.locale + '\\'] not found. See http://visjs.org/docs/timeline/#Localization');\n          this.warned = true;\n        }\n        locale = this.options.locales['en']; // fall back on english when not available\n      }\n      var title = locale.current + ' ' + locale.time + ': ' + now.format('dddd, MMMM Do YYYY, H:mm:ss');\n      title = title.charAt(0).toUpperCase() + title.substring(1);\n\n      if (this.options.rtl) {\n        this.bar.style.right = x + 'px';\n      } else {\n        this.bar.style.left = x + 'px';\n      }\n      this.bar.title = title;\n    } else {\n      // remove the line from the DOM\n      if (this.bar.parentNode) {\n        this.bar.parentNode.removeChild(this.bar);\n      }\n      this.stop();\n    }\n\n    return false;\n  };\n\n  /**\n   * Start auto refreshing the current time bar\n   */\n  CurrentTime.prototype.start = function () {\n    var me = this;\n\n    function update() {\n      me.stop();\n\n      // determine interval to refresh\n      var scale = me.body.range.conversion(me.body.domProps.center.width).scale;\n      var interval = 1 / scale / 10;\n      if (interval < 30) interval = 30;\n      if (interval > 1000) interval = 1000;\n\n      me.redraw();\n      me.body.emitter.emit('currentTimeTick');\n\n      // start a renderTimer to adjust for the new time\n      me.currentTimeTimer = setTimeout(update, interval);\n    }\n\n    update();\n  };\n\n  /**\n   * Stop auto refreshing the current time bar\n   */\n  CurrentTime.prototype.stop = function () {\n    if (this.currentTimeTimer !== undefined) {\n      clearTimeout(this.currentTimeTimer);\n      delete this.currentTimeTimer;\n    }\n  };\n\n  /**\n   * Set a current time. This can be used for example to ensure that a client's\n   * time is synchronized with a shared server time.\n   * @param {Date | String | Number} time     A Date, unix timestamp, or\n   *                                          ISO date string.\n   */\n  CurrentTime.prototype.setCurrentTime = function (time) {\n    var t = util.convert(time, 'Date').valueOf();\n    var now = new Date().valueOf();\n    this.offset = t - now;\n    this.redraw();\n  };\n\n  /**\n   * Get the current time.\n   * @return {Date} Returns the current time.\n   */\n  CurrentTime.prototype.getCurrentTime = function () {\n    return new Date(new Date().valueOf() + this.offset);\n  };\n\n  module.exports = CurrentTime;\n\n/***/ },\n/* 51 */\n/***/ function(module, exports) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * This object contains all possible options. It will check if the types are correct, if required if the option is one\n   * of the allowed values.\n   *\n   * __any__ means that the name of the property does not matter.\n   * __type__ is a required field for all objects and contains the allowed types of all objects\n   */\n  var string = 'string';\n  var boolean = 'boolean';\n  var number = 'number';\n  var array = 'array';\n  var date = 'date';\n  var object = 'object'; // should only be in a __type__ property\n  var dom = 'dom';\n  var moment = 'moment';\n  var any = 'any';\n\n  var allOptions = {\n    configure: {\n      enabled: { boolean: boolean },\n      filter: { boolean: boolean, 'function': 'function' },\n      container: { dom: dom },\n      __type__: { object: object, boolean: boolean, 'function': 'function' }\n    },\n\n    //globals :\n    align: { string: string },\n    rtl: { boolean: boolean, 'undefined': 'undefined' },\n    verticalScroll: { boolean: boolean, 'undefined': 'undefined' },\n    horizontalScroll: { boolean: boolean, 'undefined': 'undefined' },\n    autoResize: { boolean: boolean },\n    clickToUse: { boolean: boolean },\n    dataAttributes: { string: string, array: array },\n    editable: {\n      add: { boolean: boolean, 'undefined': 'undefined' },\n      remove: { boolean: boolean, 'undefined': 'undefined' },\n      updateGroup: { boolean: boolean, 'undefined': 'undefined' },\n      updateTime: { boolean: boolean, 'undefined': 'undefined' },\n      __type__: { boolean: boolean, object: object }\n    },\n    end: { number: number, date: date, string: string, moment: moment },\n    format: {\n      minorLabels: {\n        millisecond: { string: string, 'undefined': 'undefined' },\n        second: { string: string, 'undefined': 'undefined' },\n        minute: { string: string, 'undefined': 'undefined' },\n        hour: { string: string, 'undefined': 'undefined' },\n        weekday: { string: string, 'undefined': 'undefined' },\n        day: { string: string, 'undefined': 'undefined' },\n        month: { string: string, 'undefined': 'undefined' },\n        year: { string: string, 'undefined': 'undefined' },\n        __type__: { object: object, 'function': 'function' }\n      },\n      majorLabels: {\n        millisecond: { string: string, 'undefined': 'undefined' },\n        second: { string: string, 'undefined': 'undefined' },\n        minute: { string: string, 'undefined': 'undefined' },\n        hour: { string: string, 'undefined': 'undefined' },\n        weekday: { string: string, 'undefined': 'undefined' },\n        day: { string: string, 'undefined': 'undefined' },\n        month: { string: string, 'undefined': 'undefined' },\n        year: { string: string, 'undefined': 'undefined' },\n        __type__: { object: object, 'function': 'function' }\n      },\n      __type__: { object: object }\n    },\n    moment: { 'function': 'function' },\n    groupOrder: { string: string, 'function': 'function' },\n    groupEditable: {\n      add: { boolean: boolean, 'undefined': 'undefined' },\n      remove: { boolean: boolean, 'undefined': 'undefined' },\n      order: { boolean: boolean, 'undefined': 'undefined' },\n      __type__: { boolean: boolean, object: object }\n    },\n    groupOrderSwap: { 'function': 'function' },\n    height: { string: string, number: number },\n    hiddenDates: {\n      start: { date: date, number: number, string: string, moment: moment },\n      end: { date: date, number: number, string: string, moment: moment },\n      repeat: { string: string },\n      __type__: { object: object, array: array }\n    },\n    itemsAlwaysDraggable: { boolean: boolean },\n    locale: { string: string },\n    locales: {\n      __any__: { any: any },\n      __type__: { object: object }\n    },\n    margin: {\n      axis: { number: number },\n      item: {\n        horizontal: { number: number, 'undefined': 'undefined' },\n        vertical: { number: number, 'undefined': 'undefined' },\n        __type__: { object: object, number: number }\n      },\n      __type__: { object: object, number: number }\n    },\n    max: { date: date, number: number, string: string, moment: moment },\n    maxHeight: { number: number, string: string },\n    maxMinorChars: { number: number },\n    min: { date: date, number: number, string: string, moment: moment },\n    minHeight: { number: number, string: string },\n    moveable: { boolean: boolean },\n    multiselect: { boolean: boolean },\n    multiselectPerGroup: { boolean: boolean },\n    onAdd: { 'function': 'function' },\n    onUpdate: { 'function': 'function' },\n    onMove: { 'function': 'function' },\n    onMoving: { 'function': 'function' },\n    onRemove: { 'function': 'function' },\n    onAddGroup: { 'function': 'function' },\n    onMoveGroup: { 'function': 'function' },\n    onRemoveGroup: { 'function': 'function' },\n    order: { 'function': 'function' },\n    orientation: {\n      axis: { string: string, 'undefined': 'undefined' },\n      item: { string: string, 'undefined': 'undefined' },\n      __type__: { string: string, object: object }\n    },\n    selectable: { boolean: boolean },\n    showCurrentTime: { boolean: boolean },\n    showMajorLabels: { boolean: boolean },\n    showMinorLabels: { boolean: boolean },\n    stack: { boolean: boolean },\n    snap: { 'function': 'function', 'null': 'null' },\n    start: { date: date, number: number, string: string, moment: moment },\n    template: { 'function': 'function' },\n    groupTemplate: { 'function': 'function' },\n    tooltipOnItemUpdateTime: {\n      template: { 'function': 'function' },\n      __type__: { boolean: boolean, object: object }\n    },\n    timeAxis: {\n      scale: { string: string, 'undefined': 'undefined' },\n      step: { number: number, 'undefined': 'undefined' },\n      __type__: { object: object }\n    },\n    type: { string: string },\n    width: { string: string, number: number },\n    zoomable: { boolean: boolean },\n    zoomKey: { string: ['ctrlKey', 'altKey', 'metaKey', ''] },\n    zoomMax: { number: number },\n    zoomMin: { number: number },\n\n    __type__: { object: object }\n  };\n\n  var configureOptions = {\n    global: {\n      align: ['center', 'left', 'right'],\n      direction: false,\n      autoResize: true,\n      clickToUse: false,\n      // dataAttributes: ['all'], // FIXME: can be 'all' or string[]\n      editable: {\n        add: false,\n        remove: false,\n        updateGroup: false,\n        updateTime: false\n      },\n      end: '',\n      format: {\n        minorLabels: {\n          millisecond: 'SSS',\n          second: 's',\n          minute: 'HH:mm',\n          hour: 'HH:mm',\n          weekday: 'ddd D',\n          day: 'D',\n          month: 'MMM',\n          year: 'YYYY'\n        },\n        majorLabels: {\n          millisecond: 'HH:mm:ss',\n          second: 'D MMMM HH:mm',\n          minute: 'ddd D MMMM',\n          hour: 'ddd D MMMM',\n          weekday: 'MMMM YYYY',\n          day: 'MMMM YYYY',\n          month: 'YYYY',\n          year: ''\n        }\n      },\n\n      //groupOrder: {string, 'function': 'function'},\n      groupsDraggable: false,\n      height: '',\n      //hiddenDates: {object, array},\n      locale: '',\n      margin: {\n        axis: [20, 0, 100, 1],\n        item: {\n          horizontal: [10, 0, 100, 1],\n          vertical: [10, 0, 100, 1]\n        }\n      },\n      max: '',\n      maxHeight: '',\n      maxMinorChars: [7, 0, 20, 1],\n      min: '',\n      minHeight: '',\n      moveable: false,\n      multiselect: false,\n      multiselectPerGroup: false,\n      //onAdd: {'function': 'function'},\n      //onUpdate: {'function': 'function'},\n      //onMove: {'function': 'function'},\n      //onMoving: {'function': 'function'},\n      //onRename: {'function': 'function'},\n      //order: {'function': 'function'},\n      orientation: {\n        axis: ['both', 'bottom', 'top'],\n        item: ['bottom', 'top']\n      },\n      selectable: true,\n      showCurrentTime: false,\n      showMajorLabels: true,\n      showMinorLabels: true,\n      stack: true,\n      //snap: {'function': 'function', nada},\n      start: '',\n      //template: {'function': 'function'},\n      //timeAxis: {\n      //  scale: ['millisecond', 'second', 'minute', 'hour', 'weekday', 'day', 'month', 'year'],\n      //  step: [1, 1, 10, 1]\n      //},\n      tooltipOnItemUpdateTime: false,\n      type: ['box', 'point', 'range', 'background'],\n      width: '100%',\n      zoomable: true,\n      zoomKey: ['ctrlKey', 'altKey', 'metaKey', ''],\n      zoomMax: [315360000000000, 10, 315360000000000, 1],\n      zoomMin: [10, 10, 315360000000000, 1]\n    }\n  };\n\n  exports.allOptions = allOptions;\n  exports.configureOptions = configureOptions;\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var _Configurator = __webpack_require__(28);\n\n  var _Configurator2 = _interopRequireDefault(_Configurator);\n\n  var _Validator = __webpack_require__(31);\n\n  var _Validator2 = _interopRequireDefault(_Validator);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var Emitter = __webpack_require__(13);\n  var Hammer = __webpack_require__(22);\n  var moment = __webpack_require__(2);\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(9);\n  var DataView = __webpack_require__(11);\n  var Range = __webpack_require__(32);\n  var Core = __webpack_require__(35);\n  var TimeAxis = __webpack_require__(46);\n  var CurrentTime = __webpack_require__(50);\n  var CustomTime = __webpack_require__(48);\n  var LineGraph = __webpack_require__(53);\n\n  var printStyle = __webpack_require__(31).printStyle;\n  var allOptions = __webpack_require__(61).allOptions;\n  var configureOptions = __webpack_require__(61).configureOptions;\n\n  /**\n   * Create a timeline visualization\n   * @param {HTMLElement} container\n   * @param {vis.DataSet | Array} [items]\n   * @param {Object} [options]  See Graph2d.setOptions for the available options.\n   * @constructor\n   * @extends Core\n   */\n  function Graph2d(container, items, groups, options) {\n    // if the third element is options, the forth is groups (optionally);\n    if (!(Array.isArray(groups) || groups instanceof DataSet || groups instanceof DataView) && groups instanceof Object) {\n      var forthArgument = options;\n      options = groups;\n      groups = forthArgument;\n    }\n\n    var me = this;\n    this.defaultOptions = {\n      start: null,\n      end: null,\n\n      autoResize: true,\n\n      orientation: {\n        axis: 'bottom', // axis orientation: 'bottom', 'top', or 'both'\n        item: 'bottom' // not relevant for Graph2d\n      },\n\n      moment: moment,\n\n      width: null,\n      height: null,\n      maxHeight: null,\n      minHeight: null\n    };\n    this.options = util.deepExtend({}, this.defaultOptions);\n\n    // Create the DOM, props, and emitter\n    this._create(container);\n\n    // all components listed here will be repainted automatically\n    this.components = [];\n\n    this.body = {\n      dom: this.dom,\n      domProps: this.props,\n      emitter: {\n        on: this.on.bind(this),\n        off: this.off.bind(this),\n        emit: this.emit.bind(this)\n      },\n      hiddenDates: [],\n      util: {\n        toScreen: me._toScreen.bind(me),\n        toGlobalScreen: me._toGlobalScreen.bind(me), // this refers to the root.width\n        toTime: me._toTime.bind(me),\n        toGlobalTime: me._toGlobalTime.bind(me)\n      }\n    };\n\n    // range\n    this.range = new Range(this.body);\n    this.components.push(this.range);\n    this.body.range = this.range;\n\n    // time axis\n    this.timeAxis = new TimeAxis(this.body);\n    this.components.push(this.timeAxis);\n    //this.body.util.snap = this.timeAxis.snap.bind(this.timeAxis);\n\n    // current time bar\n    this.currentTime = new CurrentTime(this.body);\n    this.components.push(this.currentTime);\n\n    // item set\n    this.linegraph = new LineGraph(this.body);\n\n    this.components.push(this.linegraph);\n\n    this.itemsData = null; // DataSet\n    this.groupsData = null; // DataSet\n\n\n    this.on('tap', function (event) {\n      me.emit('click', me.getEventProperties(event));\n    });\n    this.on('doubletap', function (event) {\n      me.emit('doubleClick', me.getEventProperties(event));\n    });\n    this.dom.root.oncontextmenu = function (event) {\n      me.emit('contextmenu', me.getEventProperties(event));\n    };\n\n    // apply options\n    if (options) {\n      this.setOptions(options);\n    }\n\n    // IMPORTANT: THIS HAPPENS BEFORE SET ITEMS!\n    if (groups) {\n      this.setGroups(groups);\n    }\n\n    // create itemset\n    if (items) {\n      this.setItems(items);\n    }\n\n    // draw for the first time\n    this._redraw();\n  }\n\n  // Extend the functionality from Core\n  Graph2d.prototype = new Core();\n\n  Graph2d.prototype.setOptions = function (options) {\n    // validate options\n    var errorFound = _Validator2.default.validate(options, allOptions);\n    if (errorFound === true) {\n      console.log('%cErrors have been found in the supplied options object.', printStyle);\n    }\n\n    Core.prototype.setOptions.call(this, options);\n  };\n\n  /**\n   * Set items\n   * @param {vis.DataSet | Array | null} items\n   */\n  Graph2d.prototype.setItems = function (items) {\n    var initialLoad = this.itemsData == null;\n\n    // convert to type DataSet when needed\n    var newDataSet;\n    if (!items) {\n      newDataSet = null;\n    } else if (items instanceof DataSet || items instanceof DataView) {\n      newDataSet = items;\n    } else {\n      // turn an array into a dataset\n      newDataSet = new DataSet(items, {\n        type: {\n          start: 'Date',\n          end: 'Date'\n        }\n      });\n    }\n\n    // set items\n    this.itemsData = newDataSet;\n    this.linegraph && this.linegraph.setItems(newDataSet);\n\n    if (initialLoad) {\n      if (this.options.start != undefined || this.options.end != undefined) {\n        var start = this.options.start != undefined ? this.options.start : null;\n        var end = this.options.end != undefined ? this.options.end : null;\n        this.setWindow(start, end, { animation: false });\n      } else {\n        this.fit({ animation: false });\n      }\n    }\n  };\n\n  /**\n   * Set groups\n   * @param {vis.DataSet | Array} groups\n   */\n  Graph2d.prototype.setGroups = function (groups) {\n    // convert to type DataSet when needed\n    var newDataSet;\n    if (!groups) {\n      newDataSet = null;\n    } else if (groups instanceof DataSet || groups instanceof DataView) {\n      newDataSet = groups;\n    } else {\n      // turn an array into a dataset\n      newDataSet = new DataSet(groups);\n    }\n\n    this.groupsData = newDataSet;\n    this.linegraph.setGroups(newDataSet);\n  };\n\n  /**\n   * Returns an object containing an SVG element with the icon of the group (size determined by iconWidth and iconHeight), the label of the group (content) and the yAxisOrientation of the group (left or right).\n   * @param groupId\n   * @param width\n   * @param height\n   */\n  Graph2d.prototype.getLegend = function (groupId, width, height) {\n    if (width === undefined) {\n      width = 15;\n    }\n    if (height === undefined) {\n      height = 15;\n    }\n    if (this.linegraph.groups[groupId] !== undefined) {\n      return this.linegraph.groups[groupId].getLegend(width, height);\n    } else {\n      return \"cannot find group:'\" + groupId + \"'\";\n    }\n  };\n\n  /**\n   * This checks if the visible option of the supplied group (by ID) is true or false.\n   * @param groupId\n   * @returns {*}\n   */\n  Graph2d.prototype.isGroupVisible = function (groupId) {\n    if (this.linegraph.groups[groupId] !== undefined) {\n      return this.linegraph.groups[groupId].visible && (this.linegraph.options.groups.visibility[groupId] === undefined || this.linegraph.options.groups.visibility[groupId] == true);\n    } else {\n      return false;\n    }\n  };\n\n  /**\n   * Get the data range of the item set.\n   * @returns {{min: Date, max: Date}} range  A range with a start and end Date.\n   *                                          When no minimum is found, min==null\n   *                                          When no maximum is found, max==null\n   */\n  Graph2d.prototype.getDataRange = function () {\n    var min = null;\n    var max = null;\n\n    // calculate min from start filed\n    for (var groupId in this.linegraph.groups) {\n      if (this.linegraph.groups.hasOwnProperty(groupId)) {\n        if (this.linegraph.groups[groupId].visible == true) {\n          for (var i = 0; i < this.linegraph.groups[groupId].itemsData.length; i++) {\n            var item = this.linegraph.groups[groupId].itemsData[i];\n            var value = util.convert(item.x, 'Date').valueOf();\n            min = min == null ? value : min > value ? value : min;\n            max = max == null ? value : max < value ? value : max;\n          }\n        }\n      }\n    }\n\n    return {\n      min: min != null ? new Date(min) : null,\n      max: max != null ? new Date(max) : null\n    };\n  };\n\n  /**\n   * Generate Timeline related information from an event\n   * @param {Event} event\n   * @return {Object} An object with related information, like on which area\n   *                  The event happened, whether clicked on an item, etc.\n   */\n  Graph2d.prototype.getEventProperties = function (event) {\n    var clientX = event.center ? event.center.x : event.clientX;\n    var clientY = event.center ? event.center.y : event.clientY;\n    var x = clientX - util.getAbsoluteLeft(this.dom.centerContainer);\n    var y = clientY - util.getAbsoluteTop(this.dom.centerContainer);\n    var time = this._toTime(x);\n\n    var customTime = CustomTime.customTimeFromTarget(event);\n\n    var element = util.getTarget(event);\n    var what = null;\n    if (util.hasParent(element, this.timeAxis.dom.foreground)) {\n      what = 'axis';\n    } else if (this.timeAxis2 && util.hasParent(element, this.timeAxis2.dom.foreground)) {\n      what = 'axis';\n    } else if (util.hasParent(element, this.linegraph.yAxisLeft.dom.frame)) {\n      what = 'data-axis';\n    } else if (util.hasParent(element, this.linegraph.yAxisRight.dom.frame)) {\n      what = 'data-axis';\n    } else if (util.hasParent(element, this.linegraph.legendLeft.dom.frame)) {\n      what = 'legend';\n    } else if (util.hasParent(element, this.linegraph.legendRight.dom.frame)) {\n      what = 'legend';\n    } else if (customTime != null) {\n      what = 'custom-time';\n    } else if (util.hasParent(element, this.currentTime.bar)) {\n      what = 'current-time';\n    } else if (util.hasParent(element, this.dom.center)) {\n      what = 'background';\n    }\n\n    var value = [];\n    var yAxisLeft = this.linegraph.yAxisLeft;\n    var yAxisRight = this.linegraph.yAxisRight;\n    if (!yAxisLeft.hidden) {\n      value.push(yAxisLeft.screenToValue(y));\n    }\n    if (!yAxisRight.hidden) {\n      value.push(yAxisRight.screenToValue(y));\n    }\n\n    return {\n      event: event,\n      what: what,\n      pageX: event.srcEvent ? event.srcEvent.pageX : event.pageX,\n      pageY: event.srcEvent ? event.srcEvent.pageY : event.pageY,\n      x: x,\n      y: y,\n      time: time,\n      value: value\n    };\n  };\n\n  /**\n   * Load a configurator\n   * @return {Object}\n   * @private\n   */\n  Graph2d.prototype._createConfigurator = function () {\n    return new _Configurator2.default(this, this.dom.container, configureOptions);\n  };\n\n  module.exports = Graph2d;\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  var util = __webpack_require__(1);\n  var DOMutil = __webpack_require__(8);\n  var DataSet = __webpack_require__(9);\n  var DataView = __webpack_require__(11);\n  var Component = __webpack_require__(33);\n  var DataAxis = __webpack_require__(54);\n  var GraphGroup = __webpack_require__(56);\n  var Legend = __webpack_require__(60);\n  var Bars = __webpack_require__(57);\n  var Lines = __webpack_require__(59);\n  var Points = __webpack_require__(58);\n\n  var UNGROUPED = '__ungrouped__'; // reserved group id for ungrouped items\n\n  /**\n   * This is the constructor of the LineGraph. It requires a Timeline body and options.\n   *\n   * @param body\n   * @param options\n   * @constructor\n   */\n  function LineGraph(body, options) {\n    this.id = util.randomUUID();\n    this.body = body;\n\n    this.defaultOptions = {\n      yAxisOrientation: 'left',\n      defaultGroup: 'default',\n      sort: true,\n      sampling: true,\n      stack: false,\n      graphHeight: '400px',\n      shaded: {\n        enabled: false,\n        orientation: 'bottom' // top, bottom, zero\n      },\n      style: 'line', // line, bar\n      barChart: {\n        width: 50,\n        sideBySide: false,\n        align: 'center' // left, center, right\n      },\n      interpolation: {\n        enabled: true,\n        parametrization: 'centripetal', // uniform (alpha = 0.0), chordal (alpha = 1.0), centripetal (alpha = 0.5)\n        alpha: 0.5\n      },\n      drawPoints: {\n        enabled: true,\n        size: 6,\n        style: 'square' // square, circle\n      },\n      dataAxis: {}, //Defaults are done on DataAxis level\n      legend: {}, //Defaults are done on Legend level\n      groups: {\n        visibility: {}\n      }\n    };\n\n    // options is shared by this lineGraph and all its items\n    this.options = util.extend({}, this.defaultOptions);\n    this.dom = {};\n    this.props = {};\n    this.hammer = null;\n    this.groups = {};\n    this.abortedGraphUpdate = false;\n    this.updateSVGheight = false;\n    this.updateSVGheightOnResize = false;\n    this.forceGraphUpdate = true;\n\n    var me = this;\n    this.itemsData = null; // DataSet\n    this.groupsData = null; // DataSet\n\n    // listeners for the DataSet of the items\n    this.itemListeners = {\n      'add': function add(event, params, senderId) {\n        me._onAdd(params.items);\n      },\n      'update': function update(event, params, senderId) {\n        me._onUpdate(params.items);\n      },\n      'remove': function remove(event, params, senderId) {\n        me._onRemove(params.items);\n      }\n    };\n\n    // listeners for the DataSet of the groups\n    this.groupListeners = {\n      'add': function add(event, params, senderId) {\n        me._onAddGroups(params.items);\n      },\n      'update': function update(event, params, senderId) {\n        me._onUpdateGroups(params.items);\n      },\n      'remove': function remove(event, params, senderId) {\n        me._onRemoveGroups(params.items);\n      }\n    };\n\n    this.items = {}; // object with an Item for every data item\n    this.selection = []; // list with the ids of all selected nodes\n    this.lastStart = this.body.range.start;\n    this.touchParams = {}; // stores properties while dragging\n\n    this.svgElements = {};\n    this.setOptions(options);\n    this.groupsUsingDefaultStyles = [0];\n    this.body.emitter.on('rangechanged', function () {\n      me.lastStart = me.body.range.start;\n      me.svg.style.left = util.option.asSize(-me.props.width);\n\n      me.forceGraphUpdate = true;\n      //Is this local redraw necessary? (Core also does a change event!)\n      me.redraw.call(me);\n    });\n\n    // create the HTML DOM\n    this._create();\n    this.framework = { svg: this.svg, svgElements: this.svgElements, options: this.options, groups: this.groups };\n  }\n\n  LineGraph.prototype = new Component();\n\n  /**\n   * Create the HTML DOM for the ItemSet\n   */\n  LineGraph.prototype._create = function () {\n    var frame = document.createElement('div');\n    frame.className = 'vis-line-graph';\n    this.dom.frame = frame;\n\n    // create svg element for graph drawing.\n    this.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    this.svg.style.position = 'relative';\n    this.svg.style.height = ('' + this.options.graphHeight).replace('px', '') + 'px';\n    this.svg.style.display = 'block';\n    frame.appendChild(this.svg);\n\n    // data axis\n    this.options.dataAxis.orientation = 'left';\n    this.yAxisLeft = new DataAxis(this.body, this.options.dataAxis, this.svg, this.options.groups);\n\n    this.options.dataAxis.orientation = 'right';\n    this.yAxisRight = new DataAxis(this.body, this.options.dataAxis, this.svg, this.options.groups);\n    delete this.options.dataAxis.orientation;\n\n    // legends\n    this.legendLeft = new Legend(this.body, this.options.legend, 'left', this.options.groups);\n    this.legendRight = new Legend(this.body, this.options.legend, 'right', this.options.groups);\n\n    this.show();\n  };\n\n  /**\n   * set the options of the LineGraph. the mergeOptions is used for subObjects that have an enabled element.\n   * @param {object} options\n   */\n  LineGraph.prototype.setOptions = function (options) {\n    if (options) {\n      var fields = ['sampling', 'defaultGroup', 'stack', 'height', 'graphHeight', 'yAxisOrientation', 'style', 'barChart', 'dataAxis', 'sort', 'groups'];\n      if (options.graphHeight === undefined && options.height !== undefined) {\n        this.updateSVGheight = true;\n        this.updateSVGheightOnResize = true;\n      } else if (this.body.domProps.centerContainer.height !== undefined && options.graphHeight !== undefined) {\n        if (parseInt((options.graphHeight + '').replace(\"px\", '')) < this.body.domProps.centerContainer.height) {\n          this.updateSVGheight = true;\n        }\n      }\n      util.selectiveDeepExtend(fields, this.options, options);\n      util.mergeOptions(this.options, options, 'interpolation');\n      util.mergeOptions(this.options, options, 'drawPoints');\n      util.mergeOptions(this.options, options, 'shaded');\n      util.mergeOptions(this.options, options, 'legend');\n\n      if (options.interpolation) {\n        if (_typeof(options.interpolation) == 'object') {\n          if (options.interpolation.parametrization) {\n            if (options.interpolation.parametrization == 'uniform') {\n              this.options.interpolation.alpha = 0;\n            } else if (options.interpolation.parametrization == 'chordal') {\n              this.options.interpolation.alpha = 1.0;\n            } else {\n              this.options.interpolation.parametrization = 'centripetal';\n              this.options.interpolation.alpha = 0.5;\n            }\n          }\n        }\n      }\n\n      if (this.yAxisLeft) {\n        if (options.dataAxis !== undefined) {\n          this.yAxisLeft.setOptions(this.options.dataAxis);\n          this.yAxisRight.setOptions(this.options.dataAxis);\n        }\n      }\n\n      if (this.legendLeft) {\n        if (options.legend !== undefined) {\n          this.legendLeft.setOptions(this.options.legend);\n          this.legendRight.setOptions(this.options.legend);\n        }\n      }\n\n      if (this.groups.hasOwnProperty(UNGROUPED)) {\n        this.groups[UNGROUPED].setOptions(options);\n      }\n    }\n\n    // this is used to redraw the graph if the visibility of the groups is changed.\n    if (this.dom.frame) {\n      //not on initial run?\n      this.forceGraphUpdate = true;\n      this.body.emitter.emit(\"_change\", { queue: true });\n    }\n  };\n\n  /**\n   * Hide the component from the DOM\n   */\n  LineGraph.prototype.hide = function () {\n    // remove the frame containing the items\n    if (this.dom.frame.parentNode) {\n      this.dom.frame.parentNode.removeChild(this.dom.frame);\n    }\n  };\n\n  /**\n   * Show the component in the DOM (when not already visible).\n   * @return {Boolean} changed\n   */\n  LineGraph.prototype.show = function () {\n    // show frame containing the items\n    if (!this.dom.frame.parentNode) {\n      this.body.dom.center.appendChild(this.dom.frame);\n    }\n  };\n\n  /**\n   * Set items\n   * @param {vis.DataSet | null} items\n   */\n  LineGraph.prototype.setItems = function (items) {\n    var me = this,\n        ids,\n        oldItemsData = this.itemsData;\n\n    // replace the dataset\n    if (!items) {\n      this.itemsData = null;\n    } else if (items instanceof DataSet || items instanceof DataView) {\n      this.itemsData = items;\n    } else {\n      throw new TypeError('Data must be an instance of DataSet or DataView');\n    }\n\n    if (oldItemsData) {\n      // unsubscribe from old dataset\n      util.forEach(this.itemListeners, function (callback, event) {\n        oldItemsData.off(event, callback);\n      });\n\n      // remove all drawn items\n      ids = oldItemsData.getIds();\n      this._onRemove(ids);\n    }\n\n    if (this.itemsData) {\n      // subscribe to new dataset\n      var id = this.id;\n      util.forEach(this.itemListeners, function (callback, event) {\n        me.itemsData.on(event, callback, id);\n      });\n\n      // add all new items\n      ids = this.itemsData.getIds();\n      this._onAdd(ids);\n    }\n  };\n\n  /**\n   * Set groups\n   * @param {vis.DataSet} groups\n   */\n  LineGraph.prototype.setGroups = function (groups) {\n    var me = this;\n    var ids;\n\n    // unsubscribe from current dataset\n    if (this.groupsData) {\n      util.forEach(this.groupListeners, function (callback, event) {\n        me.groupsData.off(event, callback);\n      });\n\n      // remove all drawn groups\n      ids = this.groupsData.getIds();\n      this.groupsData = null;\n      for (var i = 0; i < ids.length; i++) {\n        this._removeGroup(ids[i]);\n      }\n    }\n\n    // replace the dataset\n    if (!groups) {\n      this.groupsData = null;\n    } else if (groups instanceof DataSet || groups instanceof DataView) {\n      this.groupsData = groups;\n    } else {\n      throw new TypeError('Data must be an instance of DataSet or DataView');\n    }\n\n    if (this.groupsData) {\n      // subscribe to new dataset\n      var id = this.id;\n      util.forEach(this.groupListeners, function (callback, event) {\n        me.groupsData.on(event, callback, id);\n      });\n\n      // draw all ms\n      ids = this.groupsData.getIds();\n      this._onAddGroups(ids);\n    }\n  };\n\n  LineGraph.prototype._onUpdate = function (ids) {\n    this._updateAllGroupData();\n  };\n  LineGraph.prototype._onAdd = function (ids) {\n    this._onUpdate(ids);\n  };\n  LineGraph.prototype._onRemove = function (ids) {\n    this._onUpdate(ids);\n  };\n  LineGraph.prototype._onUpdateGroups = function (groupIds) {\n    this._updateAllGroupData();\n  };\n  LineGraph.prototype._onAddGroups = function (groupIds) {\n    this._onUpdateGroups(groupIds);\n  };\n\n  /**\n   * this cleans the group out off the legends and the dataaxis, updates the ungrouped and updates the graph\n   * @param {Array} groupIds\n   * @private\n   */\n  LineGraph.prototype._onRemoveGroups = function (groupIds) {\n    for (var i = 0; i < groupIds.length; i++) {\n      this._removeGroup(groupIds[i]);\n    }\n    this.forceGraphUpdate = true;\n    this.body.emitter.emit(\"_change\", { queue: true });\n  };\n\n  /**\n   * this cleans the group out off the legends and the dataaxis\n   * @param groupId\n   * @private\n   */\n  LineGraph.prototype._removeGroup = function (groupId) {\n    if (this.groups.hasOwnProperty(groupId)) {\n      if (this.groups[groupId].options.yAxisOrientation == 'right') {\n        this.yAxisRight.removeGroup(groupId);\n        this.legendRight.removeGroup(groupId);\n        this.legendRight.redraw();\n      } else {\n        this.yAxisLeft.removeGroup(groupId);\n        this.legendLeft.removeGroup(groupId);\n        this.legendLeft.redraw();\n      }\n      delete this.groups[groupId];\n    }\n  };\n\n  /**\n   * update a group object with the group dataset entree\n   *\n   * @param group\n   * @param groupId\n   * @private\n   */\n  LineGraph.prototype._updateGroup = function (group, groupId) {\n    if (!this.groups.hasOwnProperty(groupId)) {\n      this.groups[groupId] = new GraphGroup(group, groupId, this.options, this.groupsUsingDefaultStyles);\n      if (this.groups[groupId].options.yAxisOrientation == 'right') {\n        this.yAxisRight.addGroup(groupId, this.groups[groupId]);\n        this.legendRight.addGroup(groupId, this.groups[groupId]);\n      } else {\n        this.yAxisLeft.addGroup(groupId, this.groups[groupId]);\n        this.legendLeft.addGroup(groupId, this.groups[groupId]);\n      }\n    } else {\n      this.groups[groupId].update(group);\n      if (this.groups[groupId].options.yAxisOrientation == 'right') {\n        this.yAxisRight.updateGroup(groupId, this.groups[groupId]);\n        this.legendRight.updateGroup(groupId, this.groups[groupId]);\n        //If yAxisOrientation changed, clean out the group from the other axis.\n        this.yAxisLeft.removeGroup(groupId);\n        this.legendLeft.removeGroup(groupId);\n      } else {\n        this.yAxisLeft.updateGroup(groupId, this.groups[groupId]);\n        this.legendLeft.updateGroup(groupId, this.groups[groupId]);\n        //If yAxisOrientation changed, clean out the group from the other axis.\n        this.yAxisRight.removeGroup(groupId);\n        this.legendRight.removeGroup(groupId);\n      }\n    }\n    this.legendLeft.redraw();\n    this.legendRight.redraw();\n  };\n\n  /**\n   * this updates all groups, it is used when there is an update the the itemset.\n   *\n   * @private\n   */\n  LineGraph.prototype._updateAllGroupData = function () {\n    if (this.itemsData != null) {\n      var groupsContent = {};\n      var items = this.itemsData.get();\n      //pre-Determine array sizes, for more efficient memory claim\n      var groupCounts = {};\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        var groupId = item.group;\n        if (groupId === null || groupId === undefined) {\n          groupId = UNGROUPED;\n        }\n        groupCounts.hasOwnProperty(groupId) ? groupCounts[groupId]++ : groupCounts[groupId] = 1;\n      }\n      //Now insert data into the arrays.\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        var groupId = item.group;\n        if (groupId === null || groupId === undefined) {\n          groupId = UNGROUPED;\n        }\n        if (!groupsContent.hasOwnProperty(groupId)) {\n          groupsContent[groupId] = new Array(groupCounts[groupId]);\n        }\n        //Copy data (because of unmodifiable DataView input.\n        var extended = util.bridgeObject(item);\n        extended.x = util.convert(item.x, 'Date');\n        extended.orginalY = item.y; //real Y\n        extended.y = Number(item.y);\n\n        var index = groupsContent[groupId].length - groupCounts[groupId]--;\n        groupsContent[groupId][index] = extended;\n      }\n\n      //Make sure all groups are present, to allow removal of old groups\n      for (var groupId in this.groups) {\n        if (this.groups.hasOwnProperty(groupId)) {\n          if (!groupsContent.hasOwnProperty(groupId)) {\n            groupsContent[groupId] = new Array(0);\n          }\n        }\n      }\n\n      //Update legendas, style and axis\n      for (var groupId in groupsContent) {\n        if (groupsContent.hasOwnProperty(groupId)) {\n          if (groupsContent[groupId].length == 0) {\n            if (this.groups.hasOwnProperty(groupId)) {\n              this._removeGroup(groupId);\n            }\n          } else {\n            var group = undefined;\n            if (this.groupsData != undefined) {\n              group = this.groupsData.get(groupId);\n            }\n            if (group == undefined) {\n              group = { id: groupId, content: this.options.defaultGroup + groupId };\n            }\n            this._updateGroup(group, groupId);\n            this.groups[groupId].setItems(groupsContent[groupId]);\n          }\n        }\n      }\n      this.forceGraphUpdate = true;\n      this.body.emitter.emit(\"_change\", { queue: true });\n    }\n  };\n\n  /**\n   * Redraw the component, mandatory function\n   * @return {boolean} Returns true if the component is resized\n   */\n  LineGraph.prototype.redraw = function () {\n    var resized = false;\n\n    // calculate actual size and position\n    this.props.width = this.dom.frame.offsetWidth;\n    this.props.height = this.body.domProps.centerContainer.height - this.body.domProps.border.top - this.body.domProps.border.bottom;\n\n    // check if this component is resized\n    resized = this._isResized() || resized;\n\n    // check whether zoomed (in that case we need to re-stack everything)\n    var visibleInterval = this.body.range.end - this.body.range.start;\n    var zoomed = visibleInterval != this.lastVisibleInterval;\n    this.lastVisibleInterval = visibleInterval;\n\n    // the svg element is three times as big as the width, this allows for fully dragging left and right\n    // without reloading the graph. the controls for this are bound to events in the constructor\n    if (resized == true) {\n      this.svg.style.width = util.option.asSize(3 * this.props.width);\n      this.svg.style.left = util.option.asSize(-this.props.width);\n\n      // if the height of the graph is set as proportional, change the height of the svg\n      if ((this.options.height + '').indexOf(\"%\") != -1 || this.updateSVGheightOnResize == true) {\n        this.updateSVGheight = true;\n      }\n    }\n\n    // update the height of the graph on each redraw of the graph.\n    if (this.updateSVGheight == true) {\n      if (this.options.graphHeight != this.props.height + 'px') {\n        this.options.graphHeight = this.props.height + 'px';\n        this.svg.style.height = this.props.height + 'px';\n      }\n      this.updateSVGheight = false;\n    } else {\n      this.svg.style.height = ('' + this.options.graphHeight).replace('px', '') + 'px';\n    }\n\n    // zoomed is here to ensure that animations are shown correctly.\n    if (resized == true || zoomed == true || this.abortedGraphUpdate == true || this.forceGraphUpdate == true) {\n      resized = this._updateGraph() || resized;\n      this.forceGraphUpdate = false;\n    } else {\n      // move the whole svg while dragging\n      if (this.lastStart != 0) {\n        var offset = this.body.range.start - this.lastStart;\n        var range = this.body.range.end - this.body.range.start;\n        if (this.props.width != 0) {\n          var rangePerPixelInv = this.props.width / range;\n          var xOffset = offset * rangePerPixelInv;\n          this.svg.style.left = -this.props.width - xOffset + 'px';\n        }\n      }\n    }\n    this.legendLeft.redraw();\n    this.legendRight.redraw();\n    return resized;\n  };\n\n  LineGraph.prototype._getSortedGroupIds = function () {\n    // getting group Ids\n    var grouplist = [];\n    for (var groupId in this.groups) {\n      if (this.groups.hasOwnProperty(groupId)) {\n        var group = this.groups[groupId];\n        if (group.visible == true && (this.options.groups.visibility[groupId] === undefined || this.options.groups.visibility[groupId] == true)) {\n          grouplist.push({ id: groupId, zIndex: group.options.zIndex });\n        }\n      }\n    }\n    util.insertSort(grouplist, function (a, b) {\n      var az = a.zIndex;\n      var bz = b.zIndex;\n      if (az === undefined) az = 0;\n      if (bz === undefined) bz = 0;\n      return az == bz ? 0 : az < bz ? -1 : 1;\n    });\n    var groupIds = new Array(grouplist.length);\n    for (var i = 0; i < grouplist.length; i++) {\n      groupIds[i] = grouplist[i].id;\n    }\n    return groupIds;\n  };\n\n  /**\n   * Update and redraw the graph.\n   *\n   */\n  LineGraph.prototype._updateGraph = function () {\n    // reset the svg elements\n    DOMutil.prepareElements(this.svgElements);\n    if (this.props.width != 0 && this.itemsData != null) {\n      var group, i;\n      var groupRanges = {};\n      var changeCalled = false;\n      // this is the range of the SVG canvas\n      var minDate = this.body.util.toGlobalTime(-this.body.domProps.root.width);\n      var maxDate = this.body.util.toGlobalTime(2 * this.body.domProps.root.width);\n\n      // getting group Ids\n      var groupIds = this._getSortedGroupIds();\n      if (groupIds.length > 0) {\n        var groupsData = {};\n\n        // fill groups data, this only loads the data we require based on the timewindow\n        this._getRelevantData(groupIds, groupsData, minDate, maxDate);\n\n        // apply sampling, if disabled, it will pass through this function.\n        this._applySampling(groupIds, groupsData);\n\n        // we transform the X coordinates to detect collisions\n        for (i = 0; i < groupIds.length; i++) {\n          this._convertXcoordinates(groupsData[groupIds[i]]);\n        }\n\n        // now all needed data has been collected we start the processing.\n        this._getYRanges(groupIds, groupsData, groupRanges);\n\n        // update the Y axis first, we use this data to draw at the correct Y points\n        changeCalled = this._updateYAxis(groupIds, groupRanges);\n\n        //  at changeCalled, abort this update cycle as the graph needs another update with new Width input from the Redraw container.\n        //  Cleanup SVG elements on abort.\n        if (changeCalled == true) {\n          DOMutil.cleanupElements(this.svgElements);\n          this.abortedGraphUpdate = true;\n          return true;\n        }\n        this.abortedGraphUpdate = false;\n\n        // With the yAxis scaled correctly, use this to get the Y values of the points.\n        var below = undefined;\n        for (i = 0; i < groupIds.length; i++) {\n          group = this.groups[groupIds[i]];\n          if (this.options.stack === true && this.options.style === 'line') {\n            if (group.options.excludeFromStacking == undefined || !group.options.excludeFromStacking) {\n              if (below != undefined) {\n                this._stack(groupsData[group.id], groupsData[below.id]);\n                if (group.options.shaded.enabled == true && group.options.shaded.orientation !== \"group\") {\n                  if (group.options.shaded.orientation == \"top\" && below.options.shaded.orientation !== \"group\") {\n                    below.options.shaded.orientation = \"group\";\n                    below.options.shaded.groupId = group.id;\n                  } else {\n                    group.options.shaded.orientation = \"group\";\n                    group.options.shaded.groupId = below.id;\n                  }\n                }\n              }\n              below = group;\n            }\n          }\n          this._convertYcoordinates(groupsData[groupIds[i]], group);\n        }\n\n        //Precalculate paths and draw shading if appropriate. This will make sure the shading is always behind any lines.\n        var paths = {};\n        for (i = 0; i < groupIds.length; i++) {\n          group = this.groups[groupIds[i]];\n          if (group.options.style === 'line' && group.options.shaded.enabled == true) {\n            var dataset = groupsData[groupIds[i]];\n            if (dataset == null || dataset.length == 0) {\n              continue;\n            }\n            if (!paths.hasOwnProperty(groupIds[i])) {\n              paths[groupIds[i]] = Lines.calcPath(dataset, group);\n            }\n            if (group.options.shaded.orientation === \"group\") {\n              var subGroupId = group.options.shaded.groupId;\n              if (groupIds.indexOf(subGroupId) === -1) {\n                console.log(group.id + \": Unknown shading group target given:\" + subGroupId);\n                continue;\n              }\n              if (!paths.hasOwnProperty(subGroupId)) {\n                paths[subGroupId] = Lines.calcPath(groupsData[subGroupId], this.groups[subGroupId]);\n              }\n              Lines.drawShading(paths[groupIds[i]], group, paths[subGroupId], this.framework);\n            } else {\n              Lines.drawShading(paths[groupIds[i]], group, undefined, this.framework);\n            }\n          }\n        }\n\n        // draw the groups, calculating paths if still necessary.\n        Bars.draw(groupIds, groupsData, this.framework);\n        for (i = 0; i < groupIds.length; i++) {\n          group = this.groups[groupIds[i]];\n          if (groupsData[groupIds[i]].length > 0) {\n            switch (group.options.style) {\n              case \"line\":\n                if (!paths.hasOwnProperty(groupIds[i])) {\n                  paths[groupIds[i]] = Lines.calcPath(groupsData[groupIds[i]], group);\n                }\n                Lines.draw(paths[groupIds[i]], group, this.framework);\n              //explicit no break;\n              case \"point\":\n              //explicit no break;\n              case \"points\":\n                if (group.options.style == \"point\" || group.options.style == \"points\" || group.options.drawPoints.enabled == true) {\n                  Points.draw(groupsData[groupIds[i]], group, this.framework);\n                }\n                break;\n              case \"bar\":\n              // bar needs to be drawn enmasse\n              //explicit no break\n              default:\n              //do nothing...\n            }\n          }\n        }\n      }\n    }\n\n    // cleanup unused svg elements\n    DOMutil.cleanupElements(this.svgElements);\n    return false;\n  };\n\n  LineGraph.prototype._stack = function (data, subData) {\n    var index, dx, dy, subPrevPoint, subNextPoint;\n    index = 0;\n    // for each data point we look for a matching on in the set below\n    for (var j = 0; j < data.length; j++) {\n      subPrevPoint = undefined;\n      subNextPoint = undefined;\n      // we look for time matches or a before-after point\n      for (var k = index; k < subData.length; k++) {\n        // if times match exactly\n        if (subData[k].x === data[j].x) {\n          subPrevPoint = subData[k];\n          subNextPoint = subData[k];\n          index = k;\n          break;\n        } else if (subData[k].x > data[j].x) {\n          // overshoot\n          subNextPoint = subData[k];\n          if (k == 0) {\n            subPrevPoint = subNextPoint;\n          } else {\n            subPrevPoint = subData[k - 1];\n          }\n          index = k;\n          break;\n        }\n      }\n      // in case the last data point has been used, we assume it stays like this.\n      if (subNextPoint === undefined) {\n        subPrevPoint = subData[subData.length - 1];\n        subNextPoint = subData[subData.length - 1];\n      }\n      // linear interpolation\n      dx = subNextPoint.x - subPrevPoint.x;\n      dy = subNextPoint.y - subPrevPoint.y;\n      if (dx == 0) {\n        data[j].y = data[j].orginalY + subNextPoint.y;\n      } else {\n        data[j].y = data[j].orginalY + dy / dx * (data[j].x - subPrevPoint.x) + subPrevPoint.y; // ax + b where b is data[j].y\n      }\n    }\n  };\n\n  /**\n   * first select and preprocess the data from the datasets.\n   * the groups have their preselection of data, we now loop over this data to see\n   * what data we need to draw. Sorted data is much faster.\n   * more optimization is possible by doing the sampling before and using the binary search\n   * to find the end date to determine the increment.\n   *\n   * @param {array}  groupIds\n   * @param {object} groupsData\n   * @param {date}   minDate\n   * @param {date}   maxDate\n   * @private\n   */\n  LineGraph.prototype._getRelevantData = function (groupIds, groupsData, minDate, maxDate) {\n    var group, i, j, item;\n    if (groupIds.length > 0) {\n      for (i = 0; i < groupIds.length; i++) {\n        group = this.groups[groupIds[i]];\n        var itemsData = group.getItems();\n        // optimization for sorted data\n        if (group.options.sort == true) {\n          var dateComparator = function dateComparator(a, b) {\n            return a.getTime() == b.getTime() ? 0 : a < b ? -1 : 1;\n          };\n          var first = Math.max(0, util.binarySearchValue(itemsData, minDate, 'x', 'before', dateComparator));\n          var last = Math.min(itemsData.length, util.binarySearchValue(itemsData, maxDate, 'x', 'after', dateComparator) + 1);\n          if (last <= 0) {\n            last = itemsData.length;\n          }\n          var dataContainer = new Array(last - first);\n          for (j = first; j < last; j++) {\n            item = group.itemsData[j];\n            dataContainer[j - first] = item;\n          }\n          groupsData[groupIds[i]] = dataContainer;\n        } else {\n          // If unsorted data, all data is relevant, just returning entire structure\n          groupsData[groupIds[i]] = group.itemsData;\n        }\n      }\n    }\n  };\n\n  /**\n   *\n   * @param groupIds\n   * @param groupsData\n   * @private\n   */\n  LineGraph.prototype._applySampling = function (groupIds, groupsData) {\n    var group;\n    if (groupIds.length > 0) {\n      for (var i = 0; i < groupIds.length; i++) {\n        group = this.groups[groupIds[i]];\n        if (group.options.sampling == true) {\n          var dataContainer = groupsData[groupIds[i]];\n          if (dataContainer.length > 0) {\n            var increment = 1;\n            var amountOfPoints = dataContainer.length;\n\n            // the global screen is used because changing the width of the yAxis may affect the increment, resulting in an endless loop\n            // of width changing of the yAxis.\n            var xDistance = this.body.util.toGlobalScreen(dataContainer[dataContainer.length - 1].x) - this.body.util.toGlobalScreen(dataContainer[0].x);\n            var pointsPerPixel = amountOfPoints / xDistance;\n            increment = Math.min(Math.ceil(0.2 * amountOfPoints), Math.max(1, Math.round(pointsPerPixel)));\n\n            var sampledData = new Array(amountOfPoints);\n            for (var j = 0; j < amountOfPoints; j += increment) {\n              var idx = Math.round(j / increment);\n              sampledData[idx] = dataContainer[j];\n            }\n            groupsData[groupIds[i]] = sampledData.splice(0, Math.round(amountOfPoints / increment));\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   *\n   *\n   * @param {array}  groupIds\n   * @param {object} groupsData\n   * @param {object} groupRanges  | this is being filled here\n   * @private\n   */\n  LineGraph.prototype._getYRanges = function (groupIds, groupsData, groupRanges) {\n    var groupData, group, i;\n    var combinedDataLeft = [];\n    var combinedDataRight = [];\n    var options;\n    if (groupIds.length > 0) {\n      for (i = 0; i < groupIds.length; i++) {\n        groupData = groupsData[groupIds[i]];\n        options = this.groups[groupIds[i]].options;\n        if (groupData.length > 0) {\n          group = this.groups[groupIds[i]];\n          // if bar graphs are stacked, their range need to be handled differently and accumulated over all groups.\n          if (options.stack === true && options.style === 'bar') {\n            if (options.yAxisOrientation === 'left') {\n              combinedDataLeft = combinedDataLeft.concat(group.getItems());\n            } else {\n              combinedDataRight = combinedDataRight.concat(group.getItems());\n            }\n          } else {\n            groupRanges[groupIds[i]] = group.getYRange(groupData, groupIds[i]);\n          }\n        }\n      }\n\n      // if bar graphs are stacked, their range need to be handled differently and accumulated over all groups.\n      Bars.getStackedYRange(combinedDataLeft, groupRanges, groupIds, '__barStackLeft', 'left');\n      Bars.getStackedYRange(combinedDataRight, groupRanges, groupIds, '__barStackRight', 'right');\n    }\n  };\n\n  /**\n   * this sets the Y ranges for the Y axis. It also determines which of the axis should be shown or hidden.\n   * @param {Array} groupIds\n   * @param {Object} groupRanges\n   * @private\n   */\n  LineGraph.prototype._updateYAxis = function (groupIds, groupRanges) {\n    var resized = false;\n    var yAxisLeftUsed = false;\n    var yAxisRightUsed = false;\n    var minLeft = 1e9,\n        minRight = 1e9,\n        maxLeft = -1e9,\n        maxRight = -1e9,\n        minVal,\n        maxVal;\n    // if groups are present\n    if (groupIds.length > 0) {\n      // this is here to make sure that if there are no items in the axis but there are groups, that there is no infinite draw/redraw loop.\n      for (var i = 0; i < groupIds.length; i++) {\n        var group = this.groups[groupIds[i]];\n        if (group && group.options.yAxisOrientation != 'right') {\n          yAxisLeftUsed = true;\n          minLeft = 1e9;\n          maxLeft = -1e9;\n        } else if (group && group.options.yAxisOrientation) {\n          yAxisRightUsed = true;\n          minRight = 1e9;\n          maxRight = -1e9;\n        }\n      }\n\n      // if there are items:\n      for (var i = 0; i < groupIds.length; i++) {\n        if (groupRanges.hasOwnProperty(groupIds[i])) {\n          if (groupRanges[groupIds[i]].ignore !== true) {\n            minVal = groupRanges[groupIds[i]].min;\n            maxVal = groupRanges[groupIds[i]].max;\n\n            if (groupRanges[groupIds[i]].yAxisOrientation != 'right') {\n              yAxisLeftUsed = true;\n              minLeft = minLeft > minVal ? minVal : minLeft;\n              maxLeft = maxLeft < maxVal ? maxVal : maxLeft;\n            } else {\n              yAxisRightUsed = true;\n              minRight = minRight > minVal ? minVal : minRight;\n              maxRight = maxRight < maxVal ? maxVal : maxRight;\n            }\n          }\n        }\n      }\n\n      if (yAxisLeftUsed == true) {\n        this.yAxisLeft.setRange(minLeft, maxLeft);\n      }\n      if (yAxisRightUsed == true) {\n        this.yAxisRight.setRange(minRight, maxRight);\n      }\n    }\n    resized = this._toggleAxisVisiblity(yAxisLeftUsed, this.yAxisLeft) || resized;\n    resized = this._toggleAxisVisiblity(yAxisRightUsed, this.yAxisRight) || resized;\n\n    if (yAxisRightUsed == true && yAxisLeftUsed == true) {\n      this.yAxisLeft.drawIcons = true;\n      this.yAxisRight.drawIcons = true;\n    } else {\n      this.yAxisLeft.drawIcons = false;\n      this.yAxisRight.drawIcons = false;\n    }\n    this.yAxisRight.master = !yAxisLeftUsed;\n    this.yAxisRight.masterAxis = this.yAxisLeft;\n\n    if (this.yAxisRight.master == false) {\n      if (yAxisRightUsed == true) {\n        this.yAxisLeft.lineOffset = this.yAxisRight.width;\n      } else {\n        this.yAxisLeft.lineOffset = 0;\n      }\n\n      resized = this.yAxisLeft.redraw() || resized;\n      resized = this.yAxisRight.redraw() || resized;\n    } else {\n      resized = this.yAxisRight.redraw() || resized;\n    }\n\n    // clean the accumulated lists\n    var tempGroups = ['__barStackLeft', '__barStackRight', '__lineStackLeft', '__lineStackRight'];\n    for (var i = 0; i < tempGroups.length; i++) {\n      if (groupIds.indexOf(tempGroups[i]) != -1) {\n        groupIds.splice(groupIds.indexOf(tempGroups[i]), 1);\n      }\n    }\n\n    return resized;\n  };\n\n  /**\n   * This shows or hides the Y axis if needed. If there is a change, the changed event is emitted by the updateYAxis function\n   *\n   * @param {boolean} axisUsed\n   * @returns {boolean}\n   * @private\n   * @param axis\n   */\n  LineGraph.prototype._toggleAxisVisiblity = function (axisUsed, axis) {\n    var changed = false;\n    if (axisUsed == false) {\n      if (axis.dom.frame.parentNode && axis.hidden == false) {\n        axis.hide();\n        changed = true;\n      }\n    } else {\n      if (!axis.dom.frame.parentNode && axis.hidden == true) {\n        axis.show();\n        changed = true;\n      }\n    }\n    return changed;\n  };\n\n  /**\n   * This uses the DataAxis object to generate the correct X coordinate on the SVG window. It uses the\n   * util function toScreen to get the x coordinate from the timestamp. It also pre-filters the data and get the minMax ranges for\n   * the yAxis.\n   *\n   * @param datapoints\n   * @returns {Array}\n   * @private\n   */\n  LineGraph.prototype._convertXcoordinates = function (datapoints) {\n    var toScreen = this.body.util.toScreen;\n    for (var i = 0; i < datapoints.length; i++) {\n      datapoints[i].screen_x = toScreen(datapoints[i].x) + this.props.width;\n      datapoints[i].screen_y = datapoints[i].y; //starting point for range calculations\n    }\n  };\n\n  /**\n   * This uses the DataAxis object to generate the correct X coordinate on the SVG window. It uses the\n   * util function toScreen to get the x coordinate from the timestamp. It also pre-filters the data and get the minMax ranges for\n   * the yAxis.\n   *\n   * @param datapoints\n   * @param group\n   * @returns {Array}\n   * @private\n   */\n  LineGraph.prototype._convertYcoordinates = function (datapoints, group) {\n    var axis = this.yAxisLeft;\n    var svgHeight = Number(this.svg.style.height.replace('px', ''));\n    if (group.options.yAxisOrientation == 'right') {\n      axis = this.yAxisRight;\n    }\n    for (var i = 0; i < datapoints.length; i++) {\n      datapoints[i].screen_y = Math.round(axis.convertValue(datapoints[i].y));\n    }\n    group.setZeroPosition(Math.min(svgHeight, axis.convertValue(0)));\n  };\n\n  module.exports = LineGraph;\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var util = __webpack_require__(1);\n  var DOMutil = __webpack_require__(8);\n  var Component = __webpack_require__(33);\n  var DataScale = __webpack_require__(55);\n  /**\n   * A horizontal time axis\n   * @param {Object} [options]        See DataAxis.setOptions for the available\n   *                                  options.\n   * @constructor DataAxis\n   * @extends Component\n   * @param body\n   */\n  function DataAxis(body, options, svg, linegraphOptions) {\n    this.id = util.randomUUID();\n    this.body = body;\n\n    this.defaultOptions = {\n      orientation: 'left', // supported: 'left', 'right'\n      showMinorLabels: true,\n      showMajorLabels: true,\n      icons: false,\n      majorLinesOffset: 7,\n      minorLinesOffset: 4,\n      labelOffsetX: 10,\n      labelOffsetY: 2,\n      iconWidth: 20,\n      width: '40px',\n      visible: true,\n      alignZeros: true,\n      left: {\n        range: { min: undefined, max: undefined },\n        format: function format(value) {\n          return '' + parseFloat(value.toPrecision(3));\n        },\n        title: { text: undefined, style: undefined }\n      },\n      right: {\n        range: { min: undefined, max: undefined },\n        format: function format(value) {\n          return '' + parseFloat(value.toPrecision(3));\n        },\n        title: { text: undefined, style: undefined }\n      }\n    };\n\n    this.linegraphOptions = linegraphOptions;\n    this.linegraphSVG = svg;\n    this.props = {};\n    this.DOMelements = { // dynamic elements\n      lines: {},\n      labels: {},\n      title: {}\n    };\n\n    this.dom = {};\n    this.scale = undefined;\n    this.range = { start: 0, end: 0 };\n\n    this.options = util.extend({}, this.defaultOptions);\n    this.conversionFactor = 1;\n\n    this.setOptions(options);\n    this.width = Number(('' + this.options.width).replace(\"px\", \"\"));\n    this.minWidth = this.width;\n    this.height = this.linegraphSVG.getBoundingClientRect().height;\n    this.hidden = false;\n\n    this.stepPixels = 25;\n    this.zeroCrossing = -1;\n    this.amountOfSteps = -1;\n\n    this.lineOffset = 0;\n    this.master = true;\n    this.masterAxis = null;\n    this.svgElements = {};\n    this.iconsRemoved = false;\n\n    this.groups = {};\n    this.amountOfGroups = 0;\n\n    // create the HTML DOM\n    this._create();\n    this.framework = { svg: this.svg, svgElements: this.svgElements, options: this.options, groups: this.groups };\n\n    var me = this;\n    this.body.emitter.on(\"verticalDrag\", function () {\n      me.dom.lineContainer.style.top = me.body.domProps.scrollTop + 'px';\n    });\n  }\n\n  DataAxis.prototype = new Component();\n\n  DataAxis.prototype.addGroup = function (label, graphOptions) {\n    if (!this.groups.hasOwnProperty(label)) {\n      this.groups[label] = graphOptions;\n    }\n    this.amountOfGroups += 1;\n  };\n\n  DataAxis.prototype.updateGroup = function (label, graphOptions) {\n    if (!this.groups.hasOwnProperty(label)) {\n      this.amountOfGroups += 1;\n    }\n    this.groups[label] = graphOptions;\n  };\n\n  DataAxis.prototype.removeGroup = function (label) {\n    if (this.groups.hasOwnProperty(label)) {\n      delete this.groups[label];\n      this.amountOfGroups -= 1;\n    }\n  };\n\n  DataAxis.prototype.setOptions = function (options) {\n    if (options) {\n      var redraw = false;\n      if (this.options.orientation != options.orientation && options.orientation !== undefined) {\n        redraw = true;\n      }\n      var fields = ['orientation', 'showMinorLabels', 'showMajorLabels', 'icons', 'majorLinesOffset', 'minorLinesOffset', 'labelOffsetX', 'labelOffsetY', 'iconWidth', 'width', 'visible', 'left', 'right', 'alignZeros'];\n      util.selectiveDeepExtend(fields, this.options, options);\n\n      this.minWidth = Number(('' + this.options.width).replace(\"px\", \"\"));\n      if (redraw === true && this.dom.frame) {\n        this.hide();\n        this.show();\n      }\n    }\n  };\n\n  /**\n   * Create the HTML DOM for the DataAxis\n   */\n  DataAxis.prototype._create = function () {\n    this.dom.frame = document.createElement('div');\n    this.dom.frame.style.width = this.options.width;\n    this.dom.frame.style.height = this.height;\n\n    this.dom.lineContainer = document.createElement('div');\n    this.dom.lineContainer.style.width = '100%';\n    this.dom.lineContainer.style.height = this.height;\n    this.dom.lineContainer.style.position = 'relative';\n\n    // create svg element for graph drawing.\n    this.svg = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\n    this.svg.style.position = \"absolute\";\n    this.svg.style.top = '0px';\n    this.svg.style.height = '100%';\n    this.svg.style.width = '100%';\n    this.svg.style.display = \"block\";\n    this.dom.frame.appendChild(this.svg);\n  };\n\n  DataAxis.prototype._redrawGroupIcons = function () {\n    DOMutil.prepareElements(this.svgElements);\n\n    var x;\n    var iconWidth = this.options.iconWidth;\n    var iconHeight = 15;\n    var iconOffset = 4;\n    var y = iconOffset + 0.5 * iconHeight;\n\n    if (this.options.orientation === 'left') {\n      x = iconOffset;\n    } else {\n      x = this.width - iconWidth - iconOffset;\n    }\n\n    var groupArray = Object.keys(this.groups);\n    groupArray.sort(function (a, b) {\n      return a < b ? -1 : 1;\n    });\n\n    for (var i = 0; i < groupArray.length; i++) {\n      var groupId = groupArray[i];\n      if (this.groups[groupId].visible === true && (this.linegraphOptions.visibility[groupId] === undefined || this.linegraphOptions.visibility[groupId] === true)) {\n        this.groups[groupId].getLegend(iconWidth, iconHeight, this.framework, x, y);\n        y += iconHeight + iconOffset;\n      }\n    }\n\n    DOMutil.cleanupElements(this.svgElements);\n    this.iconsRemoved = false;\n  };\n\n  DataAxis.prototype._cleanupIcons = function () {\n    if (this.iconsRemoved === false) {\n      DOMutil.prepareElements(this.svgElements);\n      DOMutil.cleanupElements(this.svgElements);\n      this.iconsRemoved = true;\n    }\n  };\n\n  /**\n   * Create the HTML DOM for the DataAxis\n   */\n  DataAxis.prototype.show = function () {\n    this.hidden = false;\n    if (!this.dom.frame.parentNode) {\n      if (this.options.orientation === 'left') {\n        this.body.dom.left.appendChild(this.dom.frame);\n      } else {\n        this.body.dom.right.appendChild(this.dom.frame);\n      }\n    }\n\n    if (!this.dom.lineContainer.parentNode) {\n      this.body.dom.backgroundHorizontal.appendChild(this.dom.lineContainer);\n    }\n  };\n\n  /**\n   * Create the HTML DOM for the DataAxis\n   */\n  DataAxis.prototype.hide = function () {\n    this.hidden = true;\n    if (this.dom.frame.parentNode) {\n      this.dom.frame.parentNode.removeChild(this.dom.frame);\n    }\n\n    if (this.dom.lineContainer.parentNode) {\n      this.dom.lineContainer.parentNode.removeChild(this.dom.lineContainer);\n    }\n  };\n\n  /**\n   * Set a range (start and end)\n   * @param end\n   * @param start\n   * @param end\n   */\n  DataAxis.prototype.setRange = function (start, end) {\n    this.range.start = start;\n    this.range.end = end;\n  };\n\n  /**\n   * Repaint the component\n   * @return {boolean} Returns true if the component is resized\n   */\n  DataAxis.prototype.redraw = function () {\n    var resized = false;\n    var activeGroups = 0;\n\n    // Make sure the line container adheres to the vertical scrolling.\n    this.dom.lineContainer.style.top = this.body.domProps.scrollTop + 'px';\n\n    for (var groupId in this.groups) {\n      if (this.groups.hasOwnProperty(groupId)) {\n        if (this.groups[groupId].visible === true && (this.linegraphOptions.visibility[groupId] === undefined || this.linegraphOptions.visibility[groupId] === true)) {\n          activeGroups++;\n        }\n      }\n    }\n    if (this.amountOfGroups === 0 || activeGroups === 0) {\n      this.hide();\n    } else {\n      this.show();\n      this.height = Number(this.linegraphSVG.style.height.replace(\"px\", \"\"));\n\n      // svg offsetheight did not work in firefox and explorer...\n      this.dom.lineContainer.style.height = this.height + 'px';\n      this.width = this.options.visible === true ? Number(('' + this.options.width).replace(\"px\", \"\")) : 0;\n\n      var props = this.props;\n      var frame = this.dom.frame;\n\n      // update classname\n      frame.className = 'vis-data-axis';\n\n      // calculate character width and height\n      this._calculateCharSize();\n\n      var orientation = this.options.orientation;\n      var showMinorLabels = this.options.showMinorLabels;\n      var showMajorLabels = this.options.showMajorLabels;\n\n      // determine the width and height of the elements for the axis\n      props.minorLabelHeight = showMinorLabels ? props.minorCharHeight : 0;\n      props.majorLabelHeight = showMajorLabels ? props.majorCharHeight : 0;\n\n      props.minorLineWidth = this.body.dom.backgroundHorizontal.offsetWidth - this.lineOffset - this.width + 2 * this.options.minorLinesOffset;\n      props.minorLineHeight = 1;\n      props.majorLineWidth = this.body.dom.backgroundHorizontal.offsetWidth - this.lineOffset - this.width + 2 * this.options.majorLinesOffset;\n      props.majorLineHeight = 1;\n\n      //  take frame offline while updating (is almost twice as fast)\n      if (orientation === 'left') {\n        frame.style.top = '0';\n        frame.style.left = '0';\n        frame.style.bottom = '';\n        frame.style.width = this.width + 'px';\n        frame.style.height = this.height + \"px\";\n        this.props.width = this.body.domProps.left.width;\n        this.props.height = this.body.domProps.left.height;\n      } else {\n        // right\n        frame.style.top = '';\n        frame.style.bottom = '0';\n        frame.style.left = '0';\n        frame.style.width = this.width + 'px';\n        frame.style.height = this.height + \"px\";\n        this.props.width = this.body.domProps.right.width;\n        this.props.height = this.body.domProps.right.height;\n      }\n\n      resized = this._redrawLabels();\n      resized = this._isResized() || resized;\n\n      if (this.options.icons === true) {\n        this._redrawGroupIcons();\n      } else {\n        this._cleanupIcons();\n      }\n\n      this._redrawTitle(orientation);\n    }\n    return resized;\n  };\n\n  /**\n   * Repaint major and minor text labels and vertical grid lines\n   * @private\n   */\n  DataAxis.prototype._redrawLabels = function () {\n    var _this = this;\n\n    var resized = false;\n    DOMutil.prepareElements(this.DOMelements.lines);\n    DOMutil.prepareElements(this.DOMelements.labels);\n    var orientation = this.options['orientation'];\n    var customRange = this.options[orientation].range != undefined ? this.options[orientation].range : {};\n\n    //Override range with manual options:\n    var autoScaleEnd = true;\n    if (customRange.max != undefined) {\n      this.range.end = customRange.max;\n      autoScaleEnd = false;\n    }\n    var autoScaleStart = true;\n    if (customRange.min != undefined) {\n      this.range.start = customRange.min;\n      autoScaleStart = false;\n    }\n\n    this.scale = new DataScale(this.range.start, this.range.end, autoScaleStart, autoScaleEnd, this.dom.frame.offsetHeight, this.props.majorCharHeight, this.options.alignZeros, this.options[orientation].format);\n\n    if (this.master === false && this.masterAxis != undefined) {\n      this.scale.followScale(this.masterAxis.scale);\n    }\n\n    //Is updated in side-effect of _redrawLabel():\n    this.maxLabelSize = 0;\n\n    var lines = this.scale.getLines();\n    lines.forEach(function (line) {\n      var y = line.y;\n      var isMajor = line.major;\n      if (_this.options['showMinorLabels'] && isMajor === false) {\n        _this._redrawLabel(y - 2, line.val, orientation, 'vis-y-axis vis-minor', _this.props.minorCharHeight);\n      }\n      if (isMajor) {\n        if (y >= 0) {\n          _this._redrawLabel(y - 2, line.val, orientation, 'vis-y-axis vis-major', _this.props.majorCharHeight);\n        }\n      }\n      if (_this.master === true) {\n        if (isMajor) {\n          _this._redrawLine(y, orientation, 'vis-grid vis-horizontal vis-major', _this.options.majorLinesOffset, _this.props.majorLineWidth);\n        } else {\n          _this._redrawLine(y, orientation, 'vis-grid vis-horizontal vis-minor', _this.options.minorLinesOffset, _this.props.minorLineWidth);\n        }\n      }\n    });\n\n    // Note that title is rotated, so we're using the height, not width!\n    var titleWidth = 0;\n    if (this.options[orientation].title !== undefined && this.options[orientation].title.text !== undefined) {\n      titleWidth = this.props.titleCharHeight;\n    }\n    var offset = this.options.icons === true ? Math.max(this.options.iconWidth, titleWidth) + this.options.labelOffsetX + 15 : titleWidth + this.options.labelOffsetX + 15;\n\n    // this will resize the yAxis to accommodate the labels.\n    if (this.maxLabelSize > this.width - offset && this.options.visible === true) {\n      this.width = this.maxLabelSize + offset;\n      this.options.width = this.width + \"px\";\n      DOMutil.cleanupElements(this.DOMelements.lines);\n      DOMutil.cleanupElements(this.DOMelements.labels);\n      this.redraw();\n      resized = true;\n    }\n    // this will resize the yAxis if it is too big for the labels.\n    else if (this.maxLabelSize < this.width - offset && this.options.visible === true && this.width > this.minWidth) {\n        this.width = Math.max(this.minWidth, this.maxLabelSize + offset);\n        this.options.width = this.width + \"px\";\n        DOMutil.cleanupElements(this.DOMelements.lines);\n        DOMutil.cleanupElements(this.DOMelements.labels);\n        this.redraw();\n        resized = true;\n      } else {\n        DOMutil.cleanupElements(this.DOMelements.lines);\n        DOMutil.cleanupElements(this.DOMelements.labels);\n        resized = false;\n      }\n\n    return resized;\n  };\n\n  DataAxis.prototype.convertValue = function (value) {\n    return this.scale.convertValue(value);\n  };\n\n  DataAxis.prototype.screenToValue = function (x) {\n    return this.scale.screenToValue(x);\n  };\n\n  /**\n   * Create a label for the axis at position x\n   * @private\n   * @param y\n   * @param text\n   * @param orientation\n   * @param className\n   * @param characterHeight\n   */\n  DataAxis.prototype._redrawLabel = function (y, text, orientation, className, characterHeight) {\n    // reuse redundant label\n    var label = DOMutil.getDOMElement('div', this.DOMelements.labels, this.dom.frame); //this.dom.redundant.labels.shift();\n    label.className = className;\n    label.innerHTML = text;\n    if (orientation === 'left') {\n      label.style.left = '-' + this.options.labelOffsetX + 'px';\n      label.style.textAlign = \"right\";\n    } else {\n      label.style.right = '-' + this.options.labelOffsetX + 'px';\n      label.style.textAlign = \"left\";\n    }\n\n    label.style.top = y - 0.5 * characterHeight + this.options.labelOffsetY + 'px';\n\n    text += '';\n\n    var largestWidth = Math.max(this.props.majorCharWidth, this.props.minorCharWidth);\n    if (this.maxLabelSize < text.length * largestWidth) {\n      this.maxLabelSize = text.length * largestWidth;\n    }\n  };\n\n  /**\n   * Create a minor line for the axis at position y\n   * @param y\n   * @param orientation\n   * @param className\n   * @param offset\n   * @param width\n   */\n  DataAxis.prototype._redrawLine = function (y, orientation, className, offset, width) {\n    if (this.master === true) {\n      var line = DOMutil.getDOMElement('div', this.DOMelements.lines, this.dom.lineContainer); //this.dom.redundant.lines.shift();\n      line.className = className;\n      line.innerHTML = '';\n\n      if (orientation === 'left') {\n        line.style.left = this.width - offset + 'px';\n      } else {\n        line.style.right = this.width - offset + 'px';\n      }\n\n      line.style.width = width + 'px';\n      line.style.top = y + 'px';\n    }\n  };\n\n  /**\n   * Create a title for the axis\n   * @private\n   * @param orientation\n   */\n  DataAxis.prototype._redrawTitle = function (orientation) {\n    DOMutil.prepareElements(this.DOMelements.title);\n\n    // Check if the title is defined for this axes\n    if (this.options[orientation].title !== undefined && this.options[orientation].title.text !== undefined) {\n      var title = DOMutil.getDOMElement('div', this.DOMelements.title, this.dom.frame);\n      title.className = 'vis-y-axis vis-title vis-' + orientation;\n      title.innerHTML = this.options[orientation].title.text;\n\n      // Add style - if provided\n      if (this.options[orientation].title.style !== undefined) {\n        util.addCssText(title, this.options[orientation].title.style);\n      }\n\n      if (orientation === 'left') {\n        title.style.left = this.props.titleCharHeight + 'px';\n      } else {\n        title.style.right = this.props.titleCharHeight + 'px';\n      }\n\n      title.style.width = this.height + 'px';\n    }\n\n    // we need to clean up in case we did not use all elements.\n    DOMutil.cleanupElements(this.DOMelements.title);\n  };\n\n  /**\n   * Determine the size of text on the axis (both major and minor axis).\n   * The size is calculated only once and then cached in this.props.\n   * @private\n   */\n  DataAxis.prototype._calculateCharSize = function () {\n    // determine the char width and height on the minor axis\n    if (!('minorCharHeight' in this.props)) {\n      var textMinor = document.createTextNode('0');\n      var measureCharMinor = document.createElement('div');\n      measureCharMinor.className = 'vis-y-axis vis-minor vis-measure';\n      measureCharMinor.appendChild(textMinor);\n      this.dom.frame.appendChild(measureCharMinor);\n\n      this.props.minorCharHeight = measureCharMinor.clientHeight;\n      this.props.minorCharWidth = measureCharMinor.clientWidth;\n\n      this.dom.frame.removeChild(measureCharMinor);\n    }\n\n    if (!('majorCharHeight' in this.props)) {\n      var textMajor = document.createTextNode('0');\n      var measureCharMajor = document.createElement('div');\n      measureCharMajor.className = 'vis-y-axis vis-major vis-measure';\n      measureCharMajor.appendChild(textMajor);\n      this.dom.frame.appendChild(measureCharMajor);\n\n      this.props.majorCharHeight = measureCharMajor.clientHeight;\n      this.props.majorCharWidth = measureCharMajor.clientWidth;\n\n      this.dom.frame.removeChild(measureCharMajor);\n    }\n\n    if (!('titleCharHeight' in this.props)) {\n      var textTitle = document.createTextNode('0');\n      var measureCharTitle = document.createElement('div');\n      measureCharTitle.className = 'vis-y-axis vis-title vis-measure';\n      measureCharTitle.appendChild(textTitle);\n      this.dom.frame.appendChild(measureCharTitle);\n\n      this.props.titleCharHeight = measureCharTitle.clientHeight;\n      this.props.titleCharWidth = measureCharTitle.clientWidth;\n\n      this.dom.frame.removeChild(measureCharTitle);\n    }\n  };\n\n  module.exports = DataAxis;\n\n/***/ },\n/* 55 */\n/***/ function(module, exports) {\n\n  'use strict';\n\n  /**\n   * Created by ludo on 25-1-16.\n   */\n\n  function DataScale(start, end, autoScaleStart, autoScaleEnd, containerHeight, majorCharHeight) {\n    var zeroAlign = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    var formattingFunction = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n\n    this.majorSteps = [1, 2, 5, 10];\n    this.minorSteps = [0.25, 0.5, 1, 2];\n    this.customLines = null;\n\n    this.containerHeight = containerHeight;\n    this.majorCharHeight = majorCharHeight;\n    this._start = start;\n    this._end = end;\n\n    this.scale = 1;\n    this.minorStepIdx = -1;\n    this.magnitudefactor = 1;\n    this.determineScale();\n\n    this.zeroAlign = zeroAlign;\n    this.autoScaleStart = autoScaleStart;\n    this.autoScaleEnd = autoScaleEnd;\n\n    this.formattingFunction = formattingFunction;\n\n    if (autoScaleStart || autoScaleEnd) {\n      var me = this;\n      var roundToMinor = function roundToMinor(value) {\n        var rounded = value - value % (me.magnitudefactor * me.minorSteps[me.minorStepIdx]);\n        if (value % (me.magnitudefactor * me.minorSteps[me.minorStepIdx]) > 0.5 * (me.magnitudefactor * me.minorSteps[me.minorStepIdx])) {\n          return rounded + me.magnitudefactor * me.minorSteps[me.minorStepIdx];\n        } else {\n          return rounded;\n        }\n      };\n      if (autoScaleStart) {\n        this._start -= this.magnitudefactor * 2 * this.minorSteps[this.minorStepIdx];\n        this._start = roundToMinor(this._start);\n      }\n\n      if (autoScaleEnd) {\n        this._end += this.magnitudefactor * this.minorSteps[this.minorStepIdx];\n        this._end = roundToMinor(this._end);\n      }\n      this.determineScale();\n    }\n  }\n\n  DataScale.prototype.setCharHeight = function (majorCharHeight) {\n    this.majorCharHeight = majorCharHeight;\n  };\n\n  DataScale.prototype.setHeight = function (containerHeight) {\n    this.containerHeight = containerHeight;\n  };\n\n  DataScale.prototype.determineScale = function () {\n    var range = this._end - this._start;\n    this.scale = this.containerHeight / range;\n    var minimumStepValue = this.majorCharHeight / this.scale;\n    var orderOfMagnitude = range > 0 ? Math.round(Math.log(range) / Math.LN10) : 0;\n\n    this.minorStepIdx = -1;\n    this.magnitudefactor = Math.pow(10, orderOfMagnitude);\n\n    var start = 0;\n    if (orderOfMagnitude < 0) {\n      start = orderOfMagnitude;\n    }\n\n    var solutionFound = false;\n    for (var l = start; Math.abs(l) <= Math.abs(orderOfMagnitude); l++) {\n      this.magnitudefactor = Math.pow(10, l);\n      for (var j = 0; j < this.minorSteps.length; j++) {\n        var stepSize = this.magnitudefactor * this.minorSteps[j];\n        if (stepSize >= minimumStepValue) {\n          solutionFound = true;\n          this.minorStepIdx = j;\n          break;\n        }\n      }\n      if (solutionFound === true) {\n        break;\n      }\n    }\n  };\n\n  DataScale.prototype.is_major = function (value) {\n    return value % (this.magnitudefactor * this.majorSteps[this.minorStepIdx]) === 0;\n  };\n\n  DataScale.prototype.getStep = function () {\n    return this.magnitudefactor * this.minorSteps[this.minorStepIdx];\n  };\n\n  DataScale.prototype.getFirstMajor = function () {\n    var majorStep = this.magnitudefactor * this.majorSteps[this.minorStepIdx];\n    return this.convertValue(this._start + (majorStep - this._start % majorStep) % majorStep);\n  };\n\n  DataScale.prototype.formatValue = function (current) {\n    var returnValue = current.toPrecision(5);\n    if (typeof this.formattingFunction === 'function') {\n      returnValue = this.formattingFunction(current);\n    }\n\n    if (typeof returnValue === 'number') {\n      return '' + returnValue;\n    } else if (typeof returnValue === 'string') {\n      return returnValue;\n    } else {\n      return current.toPrecision(5);\n    }\n  };\n\n  DataScale.prototype.getLines = function () {\n    var lines = [];\n    var step = this.getStep();\n    var bottomOffset = (step - this._start % step) % step;\n    for (var i = this._start + bottomOffset; this._end - i > 0.00001; i += step) {\n      if (i != this._start) {\n        //Skip the bottom line\n        lines.push({ major: this.is_major(i), y: this.convertValue(i), val: this.formatValue(i) });\n      }\n    }\n    return lines;\n  };\n\n  DataScale.prototype.followScale = function (other) {\n    var oldStepIdx = this.minorStepIdx;\n    var oldStart = this._start;\n    var oldEnd = this._end;\n\n    var me = this;\n    var increaseMagnitude = function increaseMagnitude() {\n      me.magnitudefactor *= 2;\n    };\n    var decreaseMagnitude = function decreaseMagnitude() {\n      me.magnitudefactor /= 2;\n    };\n\n    if (other.minorStepIdx <= 1 && this.minorStepIdx <= 1 || other.minorStepIdx > 1 && this.minorStepIdx > 1) {\n      //easy, no need to change stepIdx nor multiplication factor\n    } else if (other.minorStepIdx < this.minorStepIdx) {\n      //I'm 5, they are 4 per major.\n      this.minorStepIdx = 1;\n      if (oldStepIdx == 2) {\n        increaseMagnitude();\n      } else {\n        increaseMagnitude();\n        increaseMagnitude();\n      }\n    } else {\n      //I'm 4, they are 5 per major\n      this.minorStepIdx = 2;\n      if (oldStepIdx == 1) {\n        decreaseMagnitude();\n      } else {\n        decreaseMagnitude();\n        decreaseMagnitude();\n      }\n    }\n\n    //Get masters stats:\n    var lines = other.getLines();\n    var otherZero = other.convertValue(0);\n    var otherStep = other.getStep() * other.scale;\n\n    var done = false;\n    var count = 0;\n    //Loop until magnitude is correct for given constrains.\n    while (!done && count++ < 5) {\n\n      //Get my stats:\n      this.scale = otherStep / (this.minorSteps[this.minorStepIdx] * this.magnitudefactor);\n      var newRange = this.containerHeight / this.scale;\n\n      //For the case the magnitudefactor has changed:\n      this._start = oldStart;\n      this._end = this._start + newRange;\n\n      var myOriginalZero = this._end * this.scale;\n      var majorStep = this.magnitudefactor * this.majorSteps[this.minorStepIdx];\n      var majorOffset = this.getFirstMajor() - other.getFirstMajor();\n\n      if (this.zeroAlign) {\n        var zeroOffset = otherZero - myOriginalZero;\n        this._end += zeroOffset / this.scale;\n        this._start = this._end - newRange;\n      } else {\n        if (!this.autoScaleStart) {\n          this._start += majorStep - majorOffset / this.scale;\n          this._end = this._start + newRange;\n        } else {\n          this._start -= majorOffset / this.scale;\n          this._end = this._start + newRange;\n        }\n      }\n      if (!this.autoScaleEnd && this._end > oldEnd + 0.00001) {\n        //Need to decrease magnitude to prevent scale overshoot! (end)\n        decreaseMagnitude();\n        done = false;\n        continue;\n      }\n      if (!this.autoScaleStart && this._start < oldStart - 0.00001) {\n        if (this.zeroAlign && oldStart >= 0) {\n          console.warn(\"Can't adhere to given 'min' range, due to zeroalign\");\n        } else {\n          //Need to decrease magnitude to prevent scale overshoot! (start)\n          decreaseMagnitude();\n          done = false;\n          continue;\n        }\n      }\n      if (this.autoScaleStart && this.autoScaleEnd && newRange < oldEnd - oldStart) {\n        increaseMagnitude();\n        done = false;\n        continue;\n      }\n      done = true;\n    }\n  };\n\n  DataScale.prototype.convertValue = function (value) {\n    return this.containerHeight - (value - this._start) * this.scale;\n  };\n\n  DataScale.prototype.screenToValue = function (pixels) {\n    return (this.containerHeight - pixels) / this.scale + this._start;\n  };\n\n  module.exports = DataScale;\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  var util = __webpack_require__(1);\n  var DOMutil = __webpack_require__(8);\n  var Bars = __webpack_require__(57);\n  var Lines = __webpack_require__(59);\n  var Points = __webpack_require__(58);\n\n  /**\n   * /**\n   * @param {object} group            | the object of the group from the dataset\n   * @param {string} groupId          | ID of the group\n   * @param {object} options          | the default options\n   * @param {array} groupsUsingDefaultStyles  | this array has one entree.\n   *                                            It is passed as an array so it is passed by reference.\n   *                                            It enumerates through the default styles\n   * @constructor\n   */\n  function GraphGroup(group, groupId, options, groupsUsingDefaultStyles) {\n    this.id = groupId;\n    var fields = ['sampling', 'style', 'sort', 'yAxisOrientation', 'barChart', 'drawPoints', 'shaded', 'interpolation', 'zIndex', 'excludeFromStacking', 'excludeFromLegend'];\n    this.options = util.selectiveBridgeObject(fields, options);\n    this.usingDefaultStyle = group.className === undefined;\n    this.groupsUsingDefaultStyles = groupsUsingDefaultStyles;\n    this.zeroPosition = 0;\n    this.update(group);\n    if (this.usingDefaultStyle == true) {\n      this.groupsUsingDefaultStyles[0] += 1;\n    }\n    this.itemsData = [];\n    this.visible = group.visible === undefined ? true : group.visible;\n  }\n\n  /**\n   * this loads a reference to all items in this group into this group.\n   * @param {array} items\n   */\n  GraphGroup.prototype.setItems = function (items) {\n    if (items != null) {\n      this.itemsData = items;\n      if (this.options.sort == true) {\n        util.insertSort(this.itemsData, function (a, b) {\n          return a.x > b.x ? 1 : -1;\n        });\n      }\n    } else {\n      this.itemsData = [];\n    }\n  };\n\n  GraphGroup.prototype.getItems = function () {\n    return this.itemsData;\n  };\n\n  /**\n   * this is used for barcharts and shading, this way, we only have to calculate it once.\n   * @param pos\n   */\n  GraphGroup.prototype.setZeroPosition = function (pos) {\n    this.zeroPosition = pos;\n  };\n\n  /**\n   * set the options of the graph group over the default options.\n   * @param options\n   */\n  GraphGroup.prototype.setOptions = function (options) {\n    if (options !== undefined) {\n      var fields = ['sampling', 'style', 'sort', 'yAxisOrientation', 'barChart', 'zIndex', 'excludeFromStacking', 'excludeFromLegend'];\n      util.selectiveDeepExtend(fields, this.options, options);\n\n      // if the group's drawPoints is a function delegate the callback to the onRender property\n      if (typeof options.drawPoints == 'function') {\n        options.drawPoints = {\n          onRender: options.drawPoints\n        };\n      }\n\n      util.mergeOptions(this.options, options, 'interpolation');\n      util.mergeOptions(this.options, options, 'drawPoints');\n      util.mergeOptions(this.options, options, 'shaded');\n\n      if (options.interpolation) {\n        if (_typeof(options.interpolation) == 'object') {\n          if (options.interpolation.parametrization) {\n            if (options.interpolation.parametrization == 'uniform') {\n              this.options.interpolation.alpha = 0;\n            } else if (options.interpolation.parametrization == 'chordal') {\n              this.options.interpolation.alpha = 1.0;\n            } else {\n              this.options.interpolation.parametrization = 'centripetal';\n              this.options.interpolation.alpha = 0.5;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * this updates the current group class with the latest group dataset entree, used in _updateGroup in linegraph\n   * @param group\n   */\n  GraphGroup.prototype.update = function (group) {\n    this.group = group;\n    this.content = group.content || 'graph';\n    this.className = group.className || this.className || 'vis-graph-group' + this.groupsUsingDefaultStyles[0] % 10;\n    this.visible = group.visible === undefined ? true : group.visible;\n    this.style = group.style;\n    this.setOptions(group.options);\n  };\n\n  /**\n   * return the legend entree for this group.\n   *\n   * @param iconWidth\n   * @param iconHeight\n   * @returns {{icon: HTMLElement, label: (group.content|*|string), orientation: (.options.yAxisOrientation|*)}}\n   */\n  GraphGroup.prototype.getLegend = function (iconWidth, iconHeight, framework, x, y) {\n    if (framework == undefined || framework == null) {\n      var svg = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\n      framework = { svg: svg, svgElements: {}, options: this.options, groups: [this] };\n    }\n    if (x == undefined || x == null) {\n      x = 0;\n    }\n    if (y == undefined || y == null) {\n      y = 0.5 * iconHeight;\n    }\n    switch (this.options.style) {\n      case \"line\":\n        Lines.drawIcon(this, x, y, iconWidth, iconHeight, framework);\n        break;\n      case \"points\": //explicit no break\n      case \"point\":\n        Points.drawIcon(this, x, y, iconWidth, iconHeight, framework);\n        break;\n      case \"bar\":\n        Bars.drawIcon(this, x, y, iconWidth, iconHeight, framework);\n        break;\n    }\n    return { icon: framework.svg, label: this.content, orientation: this.options.yAxisOrientation };\n  };\n\n  GraphGroup.prototype.getYRange = function (groupData) {\n    var yMin = groupData[0].y;\n    var yMax = groupData[0].y;\n    for (var j = 0; j < groupData.length; j++) {\n      yMin = yMin > groupData[j].y ? groupData[j].y : yMin;\n      yMax = yMax < groupData[j].y ? groupData[j].y : yMax;\n    }\n    return { min: yMin, max: yMax, yAxisOrientation: this.options.yAxisOrientation };\n  };\n\n  module.exports = GraphGroup;\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var DOMutil = __webpack_require__(8);\n  var Points = __webpack_require__(58);\n\n  function Bargraph(groupId, options) {}\n\n  Bargraph.drawIcon = function (group, x, y, iconWidth, iconHeight, framework) {\n    var fillHeight = iconHeight * 0.5;\n    var path, fillPath;\n\n    var outline = DOMutil.getSVGElement(\"rect\", framework.svgElements, framework.svg);\n    outline.setAttributeNS(null, \"x\", x);\n    outline.setAttributeNS(null, \"y\", y - fillHeight);\n    outline.setAttributeNS(null, \"width\", iconWidth);\n    outline.setAttributeNS(null, \"height\", 2 * fillHeight);\n    outline.setAttributeNS(null, \"class\", \"vis-outline\");\n\n    var barWidth = Math.round(0.3 * iconWidth);\n    var originalWidth = group.options.barChart.width;\n    var scale = originalWidth / barWidth;\n    var bar1Height = Math.round(0.4 * iconHeight);\n    var bar2Height = Math.round(0.75 * iconHeight);\n\n    var offset = Math.round((iconWidth - 2 * barWidth) / 3);\n\n    DOMutil.drawBar(x + 0.5 * barWidth + offset, y + fillHeight - bar1Height - 1, barWidth, bar1Height, group.className + ' vis-bar', framework.svgElements, framework.svg, group.style);\n    DOMutil.drawBar(x + 1.5 * barWidth + offset + 2, y + fillHeight - bar2Height - 1, barWidth, bar2Height, group.className + ' vis-bar', framework.svgElements, framework.svg, group.style);\n\n    if (group.options.drawPoints.enabled == true) {\n      var groupTemplate = {\n        style: group.options.drawPoints.style,\n        styles: group.options.drawPoints.styles,\n        size: group.options.drawPoints.size / scale,\n        className: group.className\n      };\n      DOMutil.drawPoint(x + 0.5 * barWidth + offset, y + fillHeight - bar1Height - 1, groupTemplate, framework.svgElements, framework.svg);\n      DOMutil.drawPoint(x + 1.5 * barWidth + offset + 2, y + fillHeight - bar2Height - 1, groupTemplate, framework.svgElements, framework.svg);\n    }\n  };\n\n  /**\n   * draw a bar graph\n   *\n   * @param groupIds\n   * @param processedGroupData\n   */\n  Bargraph.draw = function (groupIds, processedGroupData, framework) {\n    var combinedData = [];\n    var intersections = {};\n    var coreDistance;\n    var key, drawData;\n    var group;\n    var i, j;\n    var barPoints = 0;\n\n    // combine all barchart data\n    for (i = 0; i < groupIds.length; i++) {\n      group = framework.groups[groupIds[i]];\n      if (group.options.style === 'bar') {\n        if (group.visible === true && (framework.options.groups.visibility[groupIds[i]] === undefined || framework.options.groups.visibility[groupIds[i]] === true)) {\n          for (j = 0; j < processedGroupData[groupIds[i]].length; j++) {\n            combinedData.push({\n              screen_x: processedGroupData[groupIds[i]][j].screen_x,\n              screen_y: processedGroupData[groupIds[i]][j].screen_y,\n              x: processedGroupData[groupIds[i]][j].x,\n              y: processedGroupData[groupIds[i]][j].y,\n              groupId: groupIds[i],\n              label: processedGroupData[groupIds[i]][j].label\n            });\n            barPoints += 1;\n          }\n        }\n      }\n    }\n\n    if (barPoints === 0) {\n      return;\n    }\n\n    // sort by time and by group\n    combinedData.sort(function (a, b) {\n      if (a.screen_x === b.screen_x) {\n        return a.groupId < b.groupId ? -1 : 1;\n      } else {\n        return a.screen_x - b.screen_x;\n      }\n    });\n\n    // get intersections\n    Bargraph._getDataIntersections(intersections, combinedData);\n\n    // plot barchart\n    for (i = 0; i < combinedData.length; i++) {\n      group = framework.groups[combinedData[i].groupId];\n      var minWidth = group.options.barChart.minWidth != undefined ? group.options.barChart.minWidth : 0.1 * group.options.barChart.width;\n\n      key = combinedData[i].screen_x;\n      var heightOffset = 0;\n      if (intersections[key] === undefined) {\n        if (i + 1 < combinedData.length) {\n          coreDistance = Math.abs(combinedData[i + 1].screen_x - key);\n        }\n        drawData = Bargraph._getSafeDrawData(coreDistance, group, minWidth);\n      } else {\n        var nextKey = i + (intersections[key].amount - intersections[key].resolved);\n        var prevKey = i - (intersections[key].resolved + 1);\n        if (nextKey < combinedData.length) {\n          coreDistance = Math.abs(combinedData[nextKey].screen_x - key);\n        }\n        drawData = Bargraph._getSafeDrawData(coreDistance, group, minWidth);\n        intersections[key].resolved += 1;\n\n        if (group.options.stack === true && group.options.excludeFromStacking !== true) {\n          if (combinedData[i].screen_y < group.zeroPosition) {\n            heightOffset = intersections[key].accumulatedNegative;\n            intersections[key].accumulatedNegative += group.zeroPosition - combinedData[i].screen_y;\n          } else {\n            heightOffset = intersections[key].accumulatedPositive;\n            intersections[key].accumulatedPositive += group.zeroPosition - combinedData[i].screen_y;\n          }\n        } else if (group.options.barChart.sideBySide === true) {\n          drawData.width = drawData.width / intersections[key].amount;\n          drawData.offset += intersections[key].resolved * drawData.width - 0.5 * drawData.width * (intersections[key].amount + 1);\n        }\n      }\n      DOMutil.drawBar(combinedData[i].screen_x + drawData.offset, combinedData[i].screen_y - heightOffset, drawData.width, group.zeroPosition - combinedData[i].screen_y, group.className + ' vis-bar', framework.svgElements, framework.svg, group.style);\n      // draw points\n      if (group.options.drawPoints.enabled === true) {\n        var pointData = {\n          screen_x: combinedData[i].screen_x,\n          screen_y: combinedData[i].screen_y - heightOffset,\n          x: combinedData[i].x,\n          y: combinedData[i].y,\n          groupId: combinedData[i].groupId,\n          label: combinedData[i].label\n        };\n        Points.draw([pointData], group, framework, drawData.offset);\n        //DOMutil.drawPoint(combinedData[i].x + drawData.offset, combinedData[i].y, group, framework.svgElements, framework.svg);\n      }\n    }\n  };\n\n  /**\n   * Fill the intersections object with counters of how many datapoints share the same x coordinates\n   * @param intersections\n   * @param combinedData\n   * @private\n   */\n  Bargraph._getDataIntersections = function (intersections, combinedData) {\n    // get intersections\n    var coreDistance;\n    for (var i = 0; i < combinedData.length; i++) {\n      if (i + 1 < combinedData.length) {\n        coreDistance = Math.abs(combinedData[i + 1].screen_x - combinedData[i].screen_x);\n      }\n      if (i > 0) {\n        coreDistance = Math.min(coreDistance, Math.abs(combinedData[i - 1].screen_x - combinedData[i].screen_x));\n      }\n      if (coreDistance === 0) {\n        if (intersections[combinedData[i].screen_x] === undefined) {\n          intersections[combinedData[i].screen_x] = {\n            amount: 0,\n            resolved: 0,\n            accumulatedPositive: 0,\n            accumulatedNegative: 0\n          };\n        }\n        intersections[combinedData[i].screen_x].amount += 1;\n      }\n    }\n  };\n\n  /**\n   * Get the width and offset for bargraphs based on the coredistance between datapoints\n   *\n   * @param coreDistance\n   * @param group\n   * @param minWidth\n   * @returns {{width: Number, offset: Number}}\n   * @private\n   */\n  Bargraph._getSafeDrawData = function (coreDistance, group, minWidth) {\n    var width, offset;\n    if (coreDistance < group.options.barChart.width && coreDistance > 0) {\n      width = coreDistance < minWidth ? minWidth : coreDistance;\n\n      offset = 0; // recalculate offset with the new width;\n      if (group.options.barChart.align === 'left') {\n        offset -= 0.5 * coreDistance;\n      } else if (group.options.barChart.align === 'right') {\n        offset += 0.5 * coreDistance;\n      }\n    } else {\n      // default settings\n      width = group.options.barChart.width;\n      offset = 0;\n      if (group.options.barChart.align === 'left') {\n        offset -= 0.5 * group.options.barChart.width;\n      } else if (group.options.barChart.align === 'right') {\n        offset += 0.5 * group.options.barChart.width;\n      }\n    }\n\n    return { width: width, offset: offset };\n  };\n\n  Bargraph.getStackedYRange = function (combinedData, groupRanges, groupIds, groupLabel, orientation) {\n    if (combinedData.length > 0) {\n      // sort by time and by group\n      combinedData.sort(function (a, b) {\n        if (a.screen_x === b.screen_x) {\n          return a.groupId < b.groupId ? -1 : 1;\n        } else {\n          return a.screen_x - b.screen_x;\n        }\n      });\n      var intersections = {};\n\n      Bargraph._getDataIntersections(intersections, combinedData);\n      groupRanges[groupLabel] = Bargraph._getStackedYRange(intersections, combinedData);\n      groupRanges[groupLabel].yAxisOrientation = orientation;\n      groupIds.push(groupLabel);\n    }\n  };\n\n  Bargraph._getStackedYRange = function (intersections, combinedData) {\n    var key;\n    var yMin = combinedData[0].screen_y;\n    var yMax = combinedData[0].screen_y;\n    for (var i = 0; i < combinedData.length; i++) {\n      key = combinedData[i].screen_x;\n      if (intersections[key] === undefined) {\n        yMin = yMin > combinedData[i].screen_y ? combinedData[i].screen_y : yMin;\n        yMax = yMax < combinedData[i].screen_y ? combinedData[i].screen_y : yMax;\n      } else {\n        if (combinedData[i].screen_y < 0) {\n          intersections[key].accumulatedNegative += combinedData[i].screen_y;\n        } else {\n          intersections[key].accumulatedPositive += combinedData[i].screen_y;\n        }\n      }\n    }\n    for (var xpos in intersections) {\n      if (intersections.hasOwnProperty(xpos)) {\n        yMin = yMin > intersections[xpos].accumulatedNegative ? intersections[xpos].accumulatedNegative : yMin;\n        yMin = yMin > intersections[xpos].accumulatedPositive ? intersections[xpos].accumulatedPositive : yMin;\n        yMax = yMax < intersections[xpos].accumulatedNegative ? intersections[xpos].accumulatedNegative : yMax;\n        yMax = yMax < intersections[xpos].accumulatedPositive ? intersections[xpos].accumulatedPositive : yMax;\n      }\n    }\n\n    return { min: yMin, max: yMax };\n  };\n\n  module.exports = Bargraph;\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  var DOMutil = __webpack_require__(8);\n\n  function Points(groupId, options) {}\n\n  /**\n   * draw the data points\n   *\n   * @param {Array} dataset\n   * @param {Object} JSONcontainer\n   * @param {Object} svg            | SVG DOM element\n   * @param {GraphGroup} group\n   * @param {Number} [offset]\n   */\n  Points.draw = function (dataset, group, framework, offset) {\n    offset = offset || 0;\n    var callback = getCallback(framework, group);\n\n    for (var i = 0; i < dataset.length; i++) {\n      if (!callback) {\n        // draw the point the simple way.\n        DOMutil.drawPoint(dataset[i].screen_x + offset, dataset[i].screen_y, getGroupTemplate(group), framework.svgElements, framework.svg, dataset[i].label);\n      } else {\n        var callbackResult = callback(dataset[i], group); // result might be true, false or an object\n        if (callbackResult === true || (typeof callbackResult === 'undefined' ? 'undefined' : _typeof(callbackResult)) === 'object') {\n          DOMutil.drawPoint(dataset[i].screen_x + offset, dataset[i].screen_y, getGroupTemplate(group, callbackResult), framework.svgElements, framework.svg, dataset[i].label);\n        }\n      }\n    }\n  };\n\n  Points.drawIcon = function (group, x, y, iconWidth, iconHeight, framework) {\n    var fillHeight = iconHeight * 0.5;\n    var path, fillPath;\n\n    var outline = DOMutil.getSVGElement(\"rect\", framework.svgElements, framework.svg);\n    outline.setAttributeNS(null, \"x\", x);\n    outline.setAttributeNS(null, \"y\", y - fillHeight);\n    outline.setAttributeNS(null, \"width\", iconWidth);\n    outline.setAttributeNS(null, \"height\", 2 * fillHeight);\n    outline.setAttributeNS(null, \"class\", \"vis-outline\");\n\n    //Don't call callback on icon\n    DOMutil.drawPoint(x + 0.5 * iconWidth, y, getGroupTemplate(group), framework.svgElements, framework.svg);\n  };\n\n  function getGroupTemplate(group, callbackResult) {\n    callbackResult = typeof callbackResult === 'undefined' ? {} : callbackResult;\n    return {\n      style: callbackResult.style || group.options.drawPoints.style,\n      styles: callbackResult.styles || group.options.drawPoints.styles,\n      size: callbackResult.size || group.options.drawPoints.size,\n      className: callbackResult.className || group.className\n    };\n  }\n\n  function getCallback(framework, group) {\n    var callback = undefined;\n    // check for the graph2d onRender\n    if (framework.options && framework.options.drawPoints && framework.options.drawPoints.onRender && typeof framework.options.drawPoints.onRender == 'function') {\n      callback = framework.options.drawPoints.onRender;\n    }\n\n    // override it with the group onRender if defined\n    if (group.group.options && group.group.options.drawPoints && group.group.options.drawPoints.onRender && typeof group.group.options.drawPoints.onRender == 'function') {\n      callback = group.group.options.drawPoints.onRender;\n    }\n    return callback;\n  }\n\n  module.exports = Points;\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  var DOMutil = __webpack_require__(8);\n\n  function Line(groupId, options) {}\n\n  Line.calcPath = function (dataset, group) {\n      if (dataset != null) {\n          if (dataset.length > 0) {\n              var d = [];\n\n              // construct path from dataset\n              if (group.options.interpolation.enabled == true) {\n                  d = Line._catmullRom(dataset, group);\n              } else {\n                  d = Line._linear(dataset);\n              }\n              return d;\n          }\n      }\n  };\n\n  Line.drawIcon = function (group, x, y, iconWidth, iconHeight, framework) {\n      var fillHeight = iconHeight * 0.5;\n      var path, fillPath;\n\n      var outline = DOMutil.getSVGElement(\"rect\", framework.svgElements, framework.svg);\n      outline.setAttributeNS(null, \"x\", x);\n      outline.setAttributeNS(null, \"y\", y - fillHeight);\n      outline.setAttributeNS(null, \"width\", iconWidth);\n      outline.setAttributeNS(null, \"height\", 2 * fillHeight);\n      outline.setAttributeNS(null, \"class\", \"vis-outline\");\n\n      path = DOMutil.getSVGElement(\"path\", framework.svgElements, framework.svg);\n      path.setAttributeNS(null, \"class\", group.className);\n      if (group.style !== undefined) {\n          path.setAttributeNS(null, \"style\", group.style);\n      }\n\n      path.setAttributeNS(null, \"d\", \"M\" + x + \",\" + y + \" L\" + (x + iconWidth) + \",\" + y + \"\");\n      if (group.options.shaded.enabled == true) {\n          fillPath = DOMutil.getSVGElement(\"path\", framework.svgElements, framework.svg);\n          if (group.options.shaded.orientation == 'top') {\n              fillPath.setAttributeNS(null, \"d\", \"M\" + x + \", \" + (y - fillHeight) + \"L\" + x + \",\" + y + \" L\" + (x + iconWidth) + \",\" + y + \" L\" + (x + iconWidth) + \",\" + (y - fillHeight));\n          } else {\n              fillPath.setAttributeNS(null, \"d\", \"M\" + x + \",\" + y + \" \" + \"L\" + x + \",\" + (y + fillHeight) + \" \" + \"L\" + (x + iconWidth) + \",\" + (y + fillHeight) + \"L\" + (x + iconWidth) + \",\" + y);\n          }\n          fillPath.setAttributeNS(null, \"class\", group.className + \" vis-icon-fill\");\n          if (group.options.shaded.style !== undefined && group.options.shaded.style !== \"\") {\n              fillPath.setAttributeNS(null, \"style\", group.options.shaded.style);\n          }\n      }\n\n      if (group.options.drawPoints.enabled == true) {\n          var groupTemplate = {\n              style: group.options.drawPoints.style,\n              styles: group.options.drawPoints.styles,\n              size: group.options.drawPoints.size,\n              className: group.className\n          };\n          DOMutil.drawPoint(x + 0.5 * iconWidth, y, groupTemplate, framework.svgElements, framework.svg);\n      }\n  };\n\n  Line.drawShading = function (pathArray, group, subPathArray, framework) {\n      // append shading to the path\n      if (group.options.shaded.enabled == true) {\n          var svgHeight = Number(framework.svg.style.height.replace('px', ''));\n          var fillPath = DOMutil.getSVGElement('path', framework.svgElements, framework.svg);\n          var type = \"L\";\n          if (group.options.interpolation.enabled == true) {\n              type = \"C\";\n          }\n          var dFill;\n          var zero = 0;\n          if (group.options.shaded.orientation == 'top') {\n              zero = 0;\n          } else if (group.options.shaded.orientation == 'bottom') {\n              zero = svgHeight;\n          } else {\n              zero = Math.min(Math.max(0, group.zeroPosition), svgHeight);\n          }\n          if (group.options.shaded.orientation == 'group' && subPathArray != null && subPathArray != undefined) {\n              dFill = 'M' + pathArray[0][0] + \",\" + pathArray[0][1] + \" \" + this.serializePath(pathArray, type, false) + ' L' + subPathArray[subPathArray.length - 1][0] + \",\" + subPathArray[subPathArray.length - 1][1] + \" \" + this.serializePath(subPathArray, type, true) + subPathArray[0][0] + \",\" + subPathArray[0][1] + \" Z\";\n          } else {\n              dFill = 'M' + pathArray[0][0] + \",\" + pathArray[0][1] + \" \" + this.serializePath(pathArray, type, false) + ' V' + zero + ' H' + pathArray[0][0] + \" Z\";\n          }\n\n          fillPath.setAttributeNS(null, 'class', group.className + ' vis-fill');\n          if (group.options.shaded.style !== undefined) {\n              fillPath.setAttributeNS(null, 'style', group.options.shaded.style);\n          }\n          fillPath.setAttributeNS(null, 'd', dFill);\n      }\n  };\n\n  /**\n   * draw a line graph\n   *\n   * @param dataset\n   * @param group\n   */\n  Line.draw = function (pathArray, group, framework) {\n      if (pathArray != null && pathArray != undefined) {\n          var path = DOMutil.getSVGElement('path', framework.svgElements, framework.svg);\n          path.setAttributeNS(null, \"class\", group.className);\n          if (group.style !== undefined) {\n              path.setAttributeNS(null, \"style\", group.style);\n          }\n\n          var type = \"L\";\n          if (group.options.interpolation.enabled == true) {\n              type = \"C\";\n          }\n          // copy properties to path for drawing.\n          path.setAttributeNS(null, 'd', 'M' + pathArray[0][0] + \",\" + pathArray[0][1] + \" \" + this.serializePath(pathArray, type, false));\n      }\n  };\n\n  Line.serializePath = function (pathArray, type, inverse) {\n      if (pathArray.length < 2) {\n          //Too little data to create a path.\n          return \"\";\n      }\n      var d = type;\n      if (inverse) {\n          for (var i = pathArray.length - 2; i > 0; i--) {\n              d += pathArray[i][0] + \",\" + pathArray[i][1] + \" \";\n          }\n      } else {\n          for (var i = 1; i < pathArray.length; i++) {\n              d += pathArray[i][0] + \",\" + pathArray[i][1] + \" \";\n          }\n      }\n      return d;\n  };\n\n  /**\n   * This uses an uniform parametrization of the interpolation algorithm:\n   * 'On the Parameterization of Catmull-Rom Curves' by Cem Yuksel et al.\n   * @param data\n   * @returns {string}\n   * @private\n   */\n  Line._catmullRomUniform = function (data) {\n      // catmull rom\n      var p0, p1, p2, p3, bp1, bp2;\n      var d = [];\n      d.push([Math.round(data[0].screen_x), Math.round(data[0].screen_y)]);\n      var normalization = 1 / 6;\n      var length = data.length;\n      for (var i = 0; i < length - 1; i++) {\n\n          p0 = i == 0 ? data[0] : data[i - 1];\n          p1 = data[i];\n          p2 = data[i + 1];\n          p3 = i + 2 < length ? data[i + 2] : p2;\n\n          // Catmull-Rom to Cubic Bezier conversion matrix\n          //    0       1       0       0\n          //  -1/6      1      1/6      0\n          //    0      1/6      1     -1/6\n          //    0       0       1       0\n\n          //    bp0 = { x: p1.x,                               y: p1.y };\n          bp1 = {\n              screen_x: (-p0.screen_x + 6 * p1.screen_x + p2.screen_x) * normalization,\n              screen_y: (-p0.screen_y + 6 * p1.screen_y + p2.screen_y) * normalization\n          };\n          bp2 = {\n              screen_x: (p1.screen_x + 6 * p2.screen_x - p3.screen_x) * normalization,\n              screen_y: (p1.screen_y + 6 * p2.screen_y - p3.screen_y) * normalization\n          };\n          //    bp0 = { x: p2.x,                               y: p2.y };\n\n          d.push([bp1.screen_x, bp1.screen_y]);\n          d.push([bp2.screen_x, bp2.screen_y]);\n          d.push([p2.screen_x, p2.screen_y]);\n      }\n\n      return d;\n  };\n\n  /**\n   * This uses either the chordal or centripetal parameterization of the catmull-rom algorithm.\n   * By default, the centripetal parameterization is used because this gives the nicest results.\n   * These parameterizations are relatively heavy because the distance between 4 points have to be calculated.\n   *\n   * One optimization can be used to reuse distances since this is a sliding window approach.\n   * @param data\n   * @param group\n   * @returns {string}\n   * @private\n   */\n  Line._catmullRom = function (data, group) {\n      var alpha = group.options.interpolation.alpha;\n      if (alpha == 0 || alpha === undefined) {\n          return this._catmullRomUniform(data);\n      } else {\n          var p0, p1, p2, p3, bp1, bp2, d1, d2, d3, A, B, N, M;\n          var d3powA, d2powA, d3pow2A, d2pow2A, d1pow2A, d1powA;\n          var d = [];\n          d.push([Math.round(data[0].screen_x), Math.round(data[0].screen_y)]);\n          var length = data.length;\n          for (var i = 0; i < length - 1; i++) {\n\n              p0 = i == 0 ? data[0] : data[i - 1];\n              p1 = data[i];\n              p2 = data[i + 1];\n              p3 = i + 2 < length ? data[i + 2] : p2;\n\n              d1 = Math.sqrt(Math.pow(p0.screen_x - p1.screen_x, 2) + Math.pow(p0.screen_y - p1.screen_y, 2));\n              d2 = Math.sqrt(Math.pow(p1.screen_x - p2.screen_x, 2) + Math.pow(p1.screen_y - p2.screen_y, 2));\n              d3 = Math.sqrt(Math.pow(p2.screen_x - p3.screen_x, 2) + Math.pow(p2.screen_y - p3.screen_y, 2));\n\n              // Catmull-Rom to Cubic Bezier conversion matrix\n\n              // A = 2d1^2a + 3d1^a * d2^a + d3^2a\n              // B = 2d3^2a + 3d3^a * d2^a + d2^2a\n\n              // [   0             1            0          0          ]\n              // [   -d2^2a /N     A/N          d1^2a /N   0          ]\n              // [   0             d3^2a /M     B/M        -d2^2a /M  ]\n              // [   0             0            1          0          ]\n\n              d3powA = Math.pow(d3, alpha);\n              d3pow2A = Math.pow(d3, 2 * alpha);\n              d2powA = Math.pow(d2, alpha);\n              d2pow2A = Math.pow(d2, 2 * alpha);\n              d1powA = Math.pow(d1, alpha);\n              d1pow2A = Math.pow(d1, 2 * alpha);\n\n              A = 2 * d1pow2A + 3 * d1powA * d2powA + d2pow2A;\n              B = 2 * d3pow2A + 3 * d3powA * d2powA + d2pow2A;\n              N = 3 * d1powA * (d1powA + d2powA);\n              if (N > 0) {\n                  N = 1 / N;\n              }\n              M = 3 * d3powA * (d3powA + d2powA);\n              if (M > 0) {\n                  M = 1 / M;\n              }\n\n              bp1 = {\n                  screen_x: (-d2pow2A * p0.screen_x + A * p1.screen_x + d1pow2A * p2.screen_x) * N,\n                  screen_y: (-d2pow2A * p0.screen_y + A * p1.screen_y + d1pow2A * p2.screen_y) * N\n              };\n\n              bp2 = {\n                  screen_x: (d3pow2A * p1.screen_x + B * p2.screen_x - d2pow2A * p3.screen_x) * M,\n                  screen_y: (d3pow2A * p1.screen_y + B * p2.screen_y - d2pow2A * p3.screen_y) * M\n              };\n\n              if (bp1.screen_x == 0 && bp1.screen_y == 0) {\n                  bp1 = p1;\n              }\n              if (bp2.screen_x == 0 && bp2.screen_y == 0) {\n                  bp2 = p2;\n              }\n              d.push([bp1.screen_x, bp1.screen_y]);\n              d.push([bp2.screen_x, bp2.screen_y]);\n              d.push([p2.screen_x, p2.screen_y]);\n          }\n\n          return d;\n      }\n  };\n\n  /**\n   * this generates the SVG path for a linear drawing between datapoints.\n   * @param data\n   * @returns {string}\n   * @private\n   */\n  Line._linear = function (data) {\n      // linear\n      var d = [];\n      for (var i = 0; i < data.length; i++) {\n          d.push([data[i].screen_x, data[i].screen_y]);\n      }\n      return d;\n  };\n\n  module.exports = Line;\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var util = __webpack_require__(1);\n  var DOMutil = __webpack_require__(8);\n  var Component = __webpack_require__(33);\n\n  /**\n   * Legend for Graph2d\n   */\n  function Legend(body, options, side, linegraphOptions) {\n    this.body = body;\n    this.defaultOptions = {\n      enabled: false,\n      icons: true,\n      iconSize: 20,\n      iconSpacing: 6,\n      left: {\n        visible: true,\n        position: 'top-left' // top/bottom - left,center,right\n      },\n      right: {\n        visible: true,\n        position: 'top-right' // top/bottom - left,center,right\n      }\n    };\n\n    this.side = side;\n    this.options = util.extend({}, this.defaultOptions);\n    this.linegraphOptions = linegraphOptions;\n\n    this.svgElements = {};\n    this.dom = {};\n    this.groups = {};\n    this.amountOfGroups = 0;\n    this._create();\n    this.framework = { svg: this.svg, svgElements: this.svgElements, options: this.options, groups: this.groups };\n\n    this.setOptions(options);\n  }\n\n  Legend.prototype = new Component();\n\n  Legend.prototype.clear = function () {\n    this.groups = {};\n    this.amountOfGroups = 0;\n  };\n\n  Legend.prototype.addGroup = function (label, graphOptions) {\n\n    // Include a group only if the group option 'excludeFromLegend: false' is not set.\n    if (graphOptions.options.excludeFromLegend != true) {\n      if (!this.groups.hasOwnProperty(label)) {\n        this.groups[label] = graphOptions;\n      }\n      this.amountOfGroups += 1;\n    }\n  };\n\n  Legend.prototype.updateGroup = function (label, graphOptions) {\n    this.groups[label] = graphOptions;\n  };\n\n  Legend.prototype.removeGroup = function (label) {\n    if (this.groups.hasOwnProperty(label)) {\n      delete this.groups[label];\n      this.amountOfGroups -= 1;\n    }\n  };\n\n  Legend.prototype._create = function () {\n    this.dom.frame = document.createElement('div');\n    this.dom.frame.className = 'vis-legend';\n    this.dom.frame.style.position = \"absolute\";\n    this.dom.frame.style.top = \"10px\";\n    this.dom.frame.style.display = \"block\";\n\n    this.dom.textArea = document.createElement('div');\n    this.dom.textArea.className = 'vis-legend-text';\n    this.dom.textArea.style.position = \"relative\";\n    this.dom.textArea.style.top = \"0px\";\n\n    this.svg = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\n    this.svg.style.position = 'absolute';\n    this.svg.style.top = 0 + 'px';\n    this.svg.style.width = this.options.iconSize + 5 + 'px';\n    this.svg.style.height = '100%';\n\n    this.dom.frame.appendChild(this.svg);\n    this.dom.frame.appendChild(this.dom.textArea);\n  };\n\n  /**\n   * Hide the component from the DOM\n   */\n  Legend.prototype.hide = function () {\n    // remove the frame containing the items\n    if (this.dom.frame.parentNode) {\n      this.dom.frame.parentNode.removeChild(this.dom.frame);\n    }\n  };\n\n  /**\n   * Show the component in the DOM (when not already visible).\n   * @return {Boolean} changed\n   */\n  Legend.prototype.show = function () {\n    // show frame containing the items\n    if (!this.dom.frame.parentNode) {\n      this.body.dom.center.appendChild(this.dom.frame);\n    }\n  };\n\n  Legend.prototype.setOptions = function (options) {\n    var fields = ['enabled', 'orientation', 'icons', 'left', 'right'];\n    util.selectiveDeepExtend(fields, this.options, options);\n  };\n\n  Legend.prototype.redraw = function () {\n    var activeGroups = 0;\n    var groupArray = Object.keys(this.groups);\n    groupArray.sort(function (a, b) {\n      return a < b ? -1 : 1;\n    });\n\n    for (var i = 0; i < groupArray.length; i++) {\n      var groupId = groupArray[i];\n      if (this.groups[groupId].visible == true && (this.linegraphOptions.visibility[groupId] === undefined || this.linegraphOptions.visibility[groupId] == true)) {\n        activeGroups++;\n      }\n    }\n\n    if (this.options[this.side].visible == false || this.amountOfGroups == 0 || this.options.enabled == false || activeGroups == 0) {\n      this.hide();\n    } else {\n      this.show();\n      if (this.options[this.side].position == 'top-left' || this.options[this.side].position == 'bottom-left') {\n        this.dom.frame.style.left = '4px';\n        this.dom.frame.style.textAlign = \"left\";\n        this.dom.textArea.style.textAlign = \"left\";\n        this.dom.textArea.style.left = this.options.iconSize + 15 + 'px';\n        this.dom.textArea.style.right = '';\n        this.svg.style.left = 0 + 'px';\n        this.svg.style.right = '';\n      } else {\n        this.dom.frame.style.right = '4px';\n        this.dom.frame.style.textAlign = \"right\";\n        this.dom.textArea.style.textAlign = \"right\";\n        this.dom.textArea.style.right = this.options.iconSize + 15 + 'px';\n        this.dom.textArea.style.left = '';\n        this.svg.style.right = 0 + 'px';\n        this.svg.style.left = '';\n      }\n\n      if (this.options[this.side].position == 'top-left' || this.options[this.side].position == 'top-right') {\n        this.dom.frame.style.top = 4 - Number(this.body.dom.center.style.top.replace(\"px\", \"\")) + 'px';\n        this.dom.frame.style.bottom = '';\n      } else {\n        var scrollableHeight = this.body.domProps.center.height - this.body.domProps.centerContainer.height;\n        this.dom.frame.style.bottom = 4 + scrollableHeight + Number(this.body.dom.center.style.top.replace(\"px\", \"\")) + 'px';\n        this.dom.frame.style.top = '';\n      }\n\n      if (this.options.icons == false) {\n        this.dom.frame.style.width = this.dom.textArea.offsetWidth + 10 + 'px';\n        this.dom.textArea.style.right = '';\n        this.dom.textArea.style.left = '';\n        this.svg.style.width = '0px';\n      } else {\n        this.dom.frame.style.width = this.options.iconSize + 15 + this.dom.textArea.offsetWidth + 10 + 'px';\n        this.drawLegendIcons();\n      }\n\n      var content = '';\n      for (var i = 0; i < groupArray.length; i++) {\n        var groupId = groupArray[i];\n        if (this.groups[groupId].visible == true && (this.linegraphOptions.visibility[groupId] === undefined || this.linegraphOptions.visibility[groupId] == true)) {\n          content += this.groups[groupId].content + '<br />';\n        }\n      }\n      this.dom.textArea.innerHTML = content;\n      this.dom.textArea.style.lineHeight = 0.75 * this.options.iconSize + this.options.iconSpacing + 'px';\n    }\n  };\n\n  Legend.prototype.drawLegendIcons = function () {\n    if (this.dom.frame.parentNode) {\n      var groupArray = Object.keys(this.groups);\n      groupArray.sort(function (a, b) {\n        return a < b ? -1 : 1;\n      });\n\n      // this resets the elements so the order is maintained\n      DOMutil.resetElements(this.svgElements);\n\n      var padding = window.getComputedStyle(this.dom.frame).paddingTop;\n      var iconOffset = Number(padding.replace('px', ''));\n      var x = iconOffset;\n      var iconWidth = this.options.iconSize;\n      var iconHeight = 0.75 * this.options.iconSize;\n      var y = iconOffset + 0.5 * iconHeight + 3;\n\n      this.svg.style.width = iconWidth + 5 + iconOffset + 'px';\n\n      for (var i = 0; i < groupArray.length; i++) {\n        var groupId = groupArray[i];\n        if (this.groups[groupId].visible == true && (this.linegraphOptions.visibility[groupId] === undefined || this.linegraphOptions.visibility[groupId] == true)) {\n          this.groups[groupId].getLegend(iconWidth, iconHeight, this.framework, x, y);\n          y += iconHeight + this.options.iconSpacing;\n        }\n      }\n    }\n  };\n\n  module.exports = Legend;\n\n/***/ },\n/* 61 */\n/***/ function(module, exports) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * This object contains all possible options. It will check if the types are correct, if required if the option is one\n   * of the allowed values.\n   *\n   * __any__ means that the name of the property does not matter.\n   * __type__ is a required field for all objects and contains the allowed types of all objects\n   */\n  var string = 'string';\n  var boolean = 'boolean';\n  var number = 'number';\n  var array = 'array';\n  var date = 'date';\n  var object = 'object'; // should only be in a __type__ property\n  var dom = 'dom';\n  var moment = 'moment';\n  var any = 'any';\n\n  var allOptions = {\n    configure: {\n      enabled: { boolean: boolean },\n      filter: { boolean: boolean, 'function': 'function' },\n      container: { dom: dom },\n      __type__: { object: object, boolean: boolean, 'function': 'function' }\n    },\n\n    //globals :\n    yAxisOrientation: { string: ['left', 'right'] },\n    defaultGroup: { string: string },\n    sort: { boolean: boolean },\n    sampling: { boolean: boolean },\n    stack: { boolean: boolean },\n    graphHeight: { string: string, number: number },\n    shaded: {\n      enabled: { boolean: boolean },\n      orientation: { string: ['bottom', 'top', 'zero', 'group'] }, // top, bottom, zero, group\n      groupId: { object: object },\n      __type__: { boolean: boolean, object: object }\n    },\n    style: { string: ['line', 'bar', 'points'] }, // line, bar\n    barChart: {\n      width: { number: number },\n      minWidth: { number: number },\n      sideBySide: { boolean: boolean },\n      align: { string: ['left', 'center', 'right'] },\n      __type__: { object: object }\n    },\n    interpolation: {\n      enabled: { boolean: boolean },\n      parametrization: { string: ['centripetal', 'chordal', 'uniform'] }, // uniform (alpha = 0.0), chordal (alpha = 1.0), centripetal (alpha = 0.5)\n      alpha: { number: number },\n      __type__: { object: object, boolean: boolean }\n    },\n    drawPoints: {\n      enabled: { boolean: boolean },\n      onRender: { 'function': 'function' },\n      size: { number: number },\n      style: { string: ['square', 'circle'] }, // square, circle\n      __type__: { object: object, boolean: boolean, 'function': 'function' }\n    },\n    dataAxis: {\n      showMinorLabels: { boolean: boolean },\n      showMajorLabels: { boolean: boolean },\n      icons: { boolean: boolean },\n      width: { string: string, number: number },\n      visible: { boolean: boolean },\n      alignZeros: { boolean: boolean },\n      left: {\n        range: { min: { number: number }, max: { number: number }, __type__: { object: object } },\n        format: { 'function': 'function' },\n        title: { text: { string: string, number: number }, style: { string: string }, __type__: { object: object } },\n        __type__: { object: object }\n      },\n      right: {\n        range: { min: { number: number }, max: { number: number }, __type__: { object: object } },\n        format: { 'function': 'function' },\n        title: { text: { string: string, number: number }, style: { string: string }, __type__: { object: object } },\n        __type__: { object: object }\n      },\n      __type__: { object: object }\n    },\n    legend: {\n      enabled: { boolean: boolean },\n      icons: { boolean: boolean },\n      left: {\n        visible: { boolean: boolean },\n        position: { string: ['top-right', 'bottom-right', 'top-left', 'bottom-left'] },\n        __type__: { object: object }\n      },\n      right: {\n        visible: { boolean: boolean },\n        position: { string: ['top-right', 'bottom-right', 'top-left', 'bottom-left'] },\n        __type__: { object: object }\n      },\n      __type__: { object: object, boolean: boolean }\n    },\n    groups: {\n      visibility: { any: any },\n      __type__: { object: object }\n    },\n\n    autoResize: { boolean: boolean },\n    clickToUse: { boolean: boolean },\n    end: { number: number, date: date, string: string, moment: moment },\n    format: {\n      minorLabels: {\n        millisecond: { string: string, 'undefined': 'undefined' },\n        second: { string: string, 'undefined': 'undefined' },\n        minute: { string: string, 'undefined': 'undefined' },\n        hour: { string: string, 'undefined': 'undefined' },\n        weekday: { string: string, 'undefined': 'undefined' },\n        day: { string: string, 'undefined': 'undefined' },\n        month: { string: string, 'undefined': 'undefined' },\n        year: { string: string, 'undefined': 'undefined' },\n        __type__: { object: object }\n      },\n      majorLabels: {\n        millisecond: { string: string, 'undefined': 'undefined' },\n        second: { string: string, 'undefined': 'undefined' },\n        minute: { string: string, 'undefined': 'undefined' },\n        hour: { string: string, 'undefined': 'undefined' },\n        weekday: { string: string, 'undefined': 'undefined' },\n        day: { string: string, 'undefined': 'undefined' },\n        month: { string: string, 'undefined': 'undefined' },\n        year: { string: string, 'undefined': 'undefined' },\n        __type__: { object: object }\n      },\n      __type__: { object: object }\n    },\n    moment: { 'function': 'function' },\n    height: { string: string, number: number },\n    hiddenDates: {\n      start: { date: date, number: number, string: string, moment: moment },\n      end: { date: date, number: number, string: string, moment: moment },\n      repeat: { string: string },\n      __type__: { object: object, array: array }\n    },\n    locale: { string: string },\n    locales: {\n      __any__: { any: any },\n      __type__: { object: object }\n    },\n    max: { date: date, number: number, string: string, moment: moment },\n    maxHeight: { number: number, string: string },\n    maxMinorChars: { number: number },\n    min: { date: date, number: number, string: string, moment: moment },\n    minHeight: { number: number, string: string },\n    moveable: { boolean: boolean },\n    multiselect: { boolean: boolean },\n    orientation: { string: string },\n    showCurrentTime: { boolean: boolean },\n    showMajorLabels: { boolean: boolean },\n    showMinorLabels: { boolean: boolean },\n    start: { date: date, number: number, string: string, moment: moment },\n    timeAxis: {\n      scale: { string: string, 'undefined': 'undefined' },\n      step: { number: number, 'undefined': 'undefined' },\n      __type__: { object: object }\n    },\n    width: { string: string, number: number },\n    zoomable: { boolean: boolean },\n    zoomKey: { string: ['ctrlKey', 'altKey', 'metaKey', ''] },\n    zoomMax: { number: number },\n    zoomMin: { number: number },\n    zIndex: { number: number },\n    __type__: { object: object }\n  };\n\n  var configureOptions = {\n    global: {\n      //yAxisOrientation: ['left','right'], // TDOO: enable as soon as Grahp2d doesn't crash when changing this on the fly\n      sort: true,\n      sampling: true,\n      stack: false,\n      shaded: {\n        enabled: false,\n        orientation: ['zero', 'top', 'bottom', 'group'] // zero, top, bottom\n      },\n      style: ['line', 'bar', 'points'], // line, bar\n      barChart: {\n        width: [50, 5, 100, 5],\n        minWidth: [50, 5, 100, 5],\n        sideBySide: false,\n        align: ['left', 'center', 'right'] // left, center, right\n      },\n      interpolation: {\n        enabled: true,\n        parametrization: ['centripetal', 'chordal', 'uniform'] // uniform (alpha = 0.0), chordal (alpha = 1.0), centripetal (alpha = 0.5)\n      },\n      drawPoints: {\n        enabled: true,\n        size: [6, 2, 30, 1],\n        style: ['square', 'circle'] // square, circle\n      },\n      dataAxis: {\n        showMinorLabels: true,\n        showMajorLabels: true,\n        icons: false,\n        width: [40, 0, 200, 1],\n        visible: true,\n        alignZeros: true,\n        left: {\n          //range: {min:'undefined': 'undefined'ined,max:'undefined': 'undefined'ined},\n          //format: function (value) {return value;},\n          title: { text: '', style: '' }\n        },\n        right: {\n          //range: {min:'undefined': 'undefined'ined,max:'undefined': 'undefined'ined},\n          //format: function (value) {return value;},\n          title: { text: '', style: '' }\n        }\n      },\n      legend: {\n        enabled: false,\n        icons: true,\n        left: {\n          visible: true,\n          position: ['top-right', 'bottom-right', 'top-left', 'bottom-left'] // top/bottom - left,right\n        },\n        right: {\n          visible: true,\n          position: ['top-right', 'bottom-right', 'top-left', 'bottom-left'] // top/bottom - left,right\n        }\n      },\n\n      autoResize: true,\n      clickToUse: false,\n      end: '',\n      format: {\n        minorLabels: {\n          millisecond: 'SSS',\n          second: 's',\n          minute: 'HH:mm',\n          hour: 'HH:mm',\n          weekday: 'ddd D',\n          day: 'D',\n          month: 'MMM',\n          year: 'YYYY'\n        },\n        majorLabels: {\n          millisecond: 'HH:mm:ss',\n          second: 'D MMMM HH:mm',\n          minute: 'ddd D MMMM',\n          hour: 'ddd D MMMM',\n          weekday: 'MMMM YYYY',\n          day: 'MMMM YYYY',\n          month: 'YYYY',\n          year: ''\n        }\n      },\n\n      height: '',\n      locale: '',\n      max: '',\n      maxHeight: '',\n      maxMinorChars: [7, 0, 20, 1],\n      min: '',\n      minHeight: '',\n      moveable: true,\n      orientation: ['both', 'bottom', 'top'],\n      showCurrentTime: false,\n      showMajorLabels: true,\n      showMinorLabels: true,\n      start: '',\n      width: '100%',\n      zoomable: true,\n      zoomKey: ['ctrlKey', 'altKey', 'metaKey', ''],\n      zoomMax: [315360000000000, 10, 315360000000000, 1],\n      zoomMin: [10, 10, 315360000000000, 1],\n      zIndex: 0\n    }\n  };\n\n  exports.allOptions = allOptions;\n  exports.configureOptions = configureOptions;\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  // utils\n  exports.util = __webpack_require__(1);\n  exports.DOMutil = __webpack_require__(8);\n\n  // data\n  exports.DataSet = __webpack_require__(9);\n  exports.DataView = __webpack_require__(11);\n  exports.Queue = __webpack_require__(10);\n\n  // Network\n  exports.Network = __webpack_require__(63);\n  exports.network = {\n    Images: __webpack_require__(64),\n    dotparser: __webpack_require__(120),\n    gephiParser: __webpack_require__(121),\n    allOptions: __webpack_require__(116)\n  };\n  exports.network.convertDot = function (input) {\n    return exports.network.dotparser.DOTToGraph(input);\n  };\n  exports.network.convertGephi = function (input, options) {\n    return exports.network.gephiParser.parseGephi(input, options);\n  };\n\n  // bundled external libraries\n  exports.moment = __webpack_require__(2);\n  exports.Hammer = __webpack_require__(22);\n  exports.keycharm = __webpack_require__(25);\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  var _Images = __webpack_require__(64);\n\n  var _Images2 = _interopRequireDefault(_Images);\n\n  var _Groups = __webpack_require__(65);\n\n  var _Groups2 = _interopRequireDefault(_Groups);\n\n  var _NodesHandler = __webpack_require__(66);\n\n  var _NodesHandler2 = _interopRequireDefault(_NodesHandler);\n\n  var _EdgesHandler = __webpack_require__(86);\n\n  var _EdgesHandler2 = _interopRequireDefault(_EdgesHandler);\n\n  var _PhysicsEngine = __webpack_require__(95);\n\n  var _PhysicsEngine2 = _interopRequireDefault(_PhysicsEngine);\n\n  var _Clustering = __webpack_require__(104);\n\n  var _Clustering2 = _interopRequireDefault(_Clustering);\n\n  var _CanvasRenderer = __webpack_require__(107);\n\n  var _CanvasRenderer2 = _interopRequireDefault(_CanvasRenderer);\n\n  var _Canvas = __webpack_require__(108);\n\n  var _Canvas2 = _interopRequireDefault(_Canvas);\n\n  var _View = __webpack_require__(109);\n\n  var _View2 = _interopRequireDefault(_View);\n\n  var _InteractionHandler = __webpack_require__(110);\n\n  var _InteractionHandler2 = _interopRequireDefault(_InteractionHandler);\n\n  var _SelectionHandler = __webpack_require__(113);\n\n  var _SelectionHandler2 = _interopRequireDefault(_SelectionHandler);\n\n  var _LayoutEngine = __webpack_require__(114);\n\n  var _LayoutEngine2 = _interopRequireDefault(_LayoutEngine);\n\n  var _ManipulationSystem = __webpack_require__(115);\n\n  var _ManipulationSystem2 = _interopRequireDefault(_ManipulationSystem);\n\n  var _Configurator = __webpack_require__(28);\n\n  var _Configurator2 = _interopRequireDefault(_Configurator);\n\n  var _Validator = __webpack_require__(31);\n\n  var _Validator2 = _interopRequireDefault(_Validator);\n\n  var _options = __webpack_require__(116);\n\n  var _KamadaKawai = __webpack_require__(117);\n\n  var _KamadaKawai2 = _interopRequireDefault(_KamadaKawai);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  // Load custom shapes into CanvasRenderingContext2D\n  __webpack_require__(119);\n\n  var Emitter = __webpack_require__(13);\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(9);\n  var DataView = __webpack_require__(11);\n  var dotparser = __webpack_require__(120);\n  var gephiParser = __webpack_require__(121);\n  var Activator = __webpack_require__(47);\n  var locales = __webpack_require__(122);\n\n  /**\n   * @constructor Network\n   * Create a network visualization, displaying nodes and edges.\n   *\n   * @param {Element} container   The DOM element in which the Network will\n   *                                  be created. Normally a div element.\n   * @param {Object} data         An object containing parameters\n   *                              {Array} nodes\n   *                              {Array} edges\n   * @param {Object} options      Options\n   */\n  function Network(container, data, options) {\n    var _this = this;\n\n    if (!(this instanceof Network)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    // set constant values\n    this.options = {};\n    this.defaultOptions = {\n      locale: 'en',\n      locales: locales,\n      clickToUse: false\n    };\n    util.extend(this.options, this.defaultOptions);\n\n    // containers for nodes and edges\n    this.body = {\n      container: container,\n      nodes: {},\n      nodeIndices: [],\n      edges: {},\n      edgeIndices: [],\n      emitter: {\n        on: this.on.bind(this),\n        off: this.off.bind(this),\n        emit: this.emit.bind(this),\n        once: this.once.bind(this)\n      },\n      eventListeners: {\n        onTap: function onTap() {},\n        onTouch: function onTouch() {},\n        onDoubleTap: function onDoubleTap() {},\n        onHold: function onHold() {},\n        onDragStart: function onDragStart() {},\n        onDrag: function onDrag() {},\n        onDragEnd: function onDragEnd() {},\n        onMouseWheel: function onMouseWheel() {},\n        onPinch: function onPinch() {},\n        onMouseMove: function onMouseMove() {},\n        onRelease: function onRelease() {},\n        onContext: function onContext() {}\n      },\n      data: {\n        nodes: null, // A DataSet or DataView\n        edges: null // A DataSet or DataView\n      },\n      functions: {\n        createNode: function createNode() {},\n        createEdge: function createEdge() {},\n        getPointer: function getPointer() {}\n      },\n      modules: {},\n      view: {\n        scale: 1,\n        translation: { x: 0, y: 0 }\n      }\n    };\n\n    // bind the event listeners\n    this.bindEventListeners();\n\n    // setting up all modules\n    this.images = new _Images2.default(function () {\n      return _this.body.emitter.emit(\"_requestRedraw\");\n    }); // object with images\n    this.groups = new _Groups2.default(); // object with groups\n    this.canvas = new _Canvas2.default(this.body); // DOM handler\n    this.selectionHandler = new _SelectionHandler2.default(this.body, this.canvas); // Selection handler\n    this.interactionHandler = new _InteractionHandler2.default(this.body, this.canvas, this.selectionHandler); // Interaction handler handles all the hammer bindings (that are bound by canvas), key\n    this.view = new _View2.default(this.body, this.canvas); // camera handler, does animations and zooms\n    this.renderer = new _CanvasRenderer2.default(this.body, this.canvas); // renderer, starts renderloop, has events that modules can hook into\n    this.physics = new _PhysicsEngine2.default(this.body); // physics engine, does all the simulations\n    this.layoutEngine = new _LayoutEngine2.default(this.body); // layout engine for inital layout and hierarchical layout\n    this.clustering = new _Clustering2.default(this.body); // clustering api\n    this.manipulation = new _ManipulationSystem2.default(this.body, this.canvas, this.selectionHandler); // data manipulation system\n\n    this.nodesHandler = new _NodesHandler2.default(this.body, this.images, this.groups, this.layoutEngine); // Handle adding, deleting and updating of nodes as well as global options\n    this.edgesHandler = new _EdgesHandler2.default(this.body, this.images, this.groups); // Handle adding, deleting and updating of edges as well as global options\n\n    this.body.modules[\"kamadaKawai\"] = new _KamadaKawai2.default(this.body, 150, 0.05); // Layouting algorithm.\n    this.body.modules[\"clustering\"] = this.clustering;\n\n    // create the DOM elements\n    this.canvas._create();\n\n    // apply options\n    this.setOptions(options);\n\n    // load data (the disable start variable will be the same as the enabled clustering)\n    this.setData(data);\n  }\n\n  // Extend Network with an Emitter mixin\n  Emitter(Network.prototype);\n\n  /**\n   * Set options\n   * @param {Object} options\n   */\n  Network.prototype.setOptions = function (options) {\n    var _this2 = this;\n\n    if (options !== undefined) {\n      var errorFound = _Validator2.default.validate(options, _options.allOptions);\n      if (errorFound === true) {\n        console.log('%cErrors have been found in the supplied options object.', _Validator.printStyle);\n      }\n\n      // copy the global fields over\n      var fields = ['locale', 'locales', 'clickToUse'];\n      util.selectiveDeepExtend(fields, this.options, options);\n\n      // the hierarchical system can adapt the edges and the physics to it's own options because not all combinations work with the hierarichical system.\n      options = this.layoutEngine.setOptions(options.layout, options);\n\n      this.canvas.setOptions(options); // options for canvas are in globals\n\n      // pass the options to the modules\n      this.groups.setOptions(options.groups);\n      this.nodesHandler.setOptions(options.nodes);\n      this.edgesHandler.setOptions(options.edges);\n      this.physics.setOptions(options.physics);\n      this.manipulation.setOptions(options.manipulation, options, this.options); // manipulation uses the locales in the globals\n\n      this.interactionHandler.setOptions(options.interaction);\n      this.renderer.setOptions(options.interaction); // options for rendering are in interaction\n      this.selectionHandler.setOptions(options.interaction); // options for selection are in interaction\n\n      // reload the settings of the nodes to apply changes in groups that are not referenced by pointer.\n      if (options.groups !== undefined) {\n        this.body.emitter.emit(\"refreshNodes\");\n      }\n      // these two do not have options at the moment, here for completeness\n      //this.view.setOptions(options.view);\n      //this.clustering.setOptions(options.clustering);\n\n      if ('configure' in options) {\n        if (!this.configurator) {\n          this.configurator = new _Configurator2.default(this, this.body.container, _options.configureOptions, this.canvas.pixelRatio);\n        }\n\n        this.configurator.setOptions(options.configure);\n      }\n\n      // if the configuration system is enabled, copy all options and put them into the config system\n      if (this.configurator && this.configurator.options.enabled === true) {\n        var networkOptions = { nodes: {}, edges: {}, layout: {}, interaction: {}, manipulation: {}, physics: {}, global: {} };\n        util.deepExtend(networkOptions.nodes, this.nodesHandler.options);\n        util.deepExtend(networkOptions.edges, this.edgesHandler.options);\n        util.deepExtend(networkOptions.layout, this.layoutEngine.options);\n        // load the selectionHandler and render default options in to the interaction group\n        util.deepExtend(networkOptions.interaction, this.selectionHandler.options);\n        util.deepExtend(networkOptions.interaction, this.renderer.options);\n\n        util.deepExtend(networkOptions.interaction, this.interactionHandler.options);\n        util.deepExtend(networkOptions.manipulation, this.manipulation.options);\n        util.deepExtend(networkOptions.physics, this.physics.options);\n\n        // load globals into the global object\n        util.deepExtend(networkOptions.global, this.canvas.options);\n        util.deepExtend(networkOptions.global, this.options);\n\n        this.configurator.setModuleOptions(networkOptions);\n      }\n\n      // handle network global options\n      if (options.clickToUse !== undefined) {\n        if (options.clickToUse === true) {\n          if (this.activator === undefined) {\n            this.activator = new Activator(this.canvas.frame);\n            this.activator.on('change', function () {\n              _this2.body.emitter.emit(\"activate\");\n            });\n          }\n        } else {\n          if (this.activator !== undefined) {\n            this.activator.destroy();\n            delete this.activator;\n          }\n          this.body.emitter.emit(\"activate\");\n        }\n      } else {\n        this.body.emitter.emit(\"activate\");\n      }\n\n      this.canvas.setSize();\n      // start the physics simulation. Can be safely called multiple times.\n      this.body.emitter.emit(\"startSimulation\");\n    }\n  };\n\n  /**\n   * Update the this.body.nodeIndices with the most recent node index list\n   * @private\n   */\n  Network.prototype._updateVisibleIndices = function () {\n    var nodes = this.body.nodes;\n    var edges = this.body.edges;\n    this.body.nodeIndices = [];\n    this.body.edgeIndices = [];\n\n    for (var nodeId in nodes) {\n      if (nodes.hasOwnProperty(nodeId)) {\n        if (nodes[nodeId].options.hidden === false) {\n          this.body.nodeIndices.push(nodes[nodeId].id);\n        }\n      }\n    }\n\n    for (var edgeId in edges) {\n      if (edges.hasOwnProperty(edgeId)) {\n        if (edges[edgeId].options.hidden === false) {\n          this.body.edgeIndices.push(edges[edgeId].id);\n        }\n      }\n    }\n  };\n\n  /**\n   * Bind all events\n   */\n  Network.prototype.bindEventListeners = function () {\n    var _this3 = this;\n\n    // this event will trigger a rebuilding of the cache everything. Used when nodes or edges have been added or removed.\n    this.body.emitter.on(\"_dataChanged\", function () {\n      // update shortcut lists\n      _this3._updateVisibleIndices();\n      _this3.body.emitter.emit(\"_requestRedraw\");\n      // call the dataUpdated event because the only difference between the two is the updating of the indices\n      _this3.body.emitter.emit(\"_dataUpdated\");\n    });\n\n    // this is called when options of EXISTING nodes or edges have changed.\n    this.body.emitter.on(\"_dataUpdated\", function () {\n      // update values\n      _this3._updateValueRange(_this3.body.nodes);\n      _this3._updateValueRange(_this3.body.edges);\n      // start simulation (can be called safely, even if already running)\n      _this3.body.emitter.emit(\"startSimulation\");\n      _this3.body.emitter.emit(\"_requestRedraw\");\n    });\n  };\n\n  /**\n   * Set nodes and edges, and optionally options as well.\n   *\n   * @param {Object} data              Object containing parameters:\n   *                                   {Array | DataSet | DataView} [nodes] Array with nodes\n   *                                   {Array | DataSet | DataView} [edges] Array with edges\n   *                                   {String} [dot] String containing data in DOT format\n   *                                   {String} [gephi] String containing data in gephi JSON format\n   *                                   {Options} [options] Object with options\n   */\n  Network.prototype.setData = function (data) {\n    // reset the physics engine.\n    this.body.emitter.emit(\"resetPhysics\");\n    this.body.emitter.emit(\"_resetData\");\n\n    // unselect all to ensure no selections from old data are carried over.\n    this.selectionHandler.unselectAll();\n\n    if (data && data.dot && (data.nodes || data.edges)) {\n      throw new SyntaxError('Data must contain either parameter \"dot\" or ' + ' parameter pair \"nodes\" and \"edges\", but not both.');\n    }\n\n    // set options\n    this.setOptions(data && data.options);\n    // set all data\n    if (data && data.dot) {\n      console.log('The dot property has been deprecated. Please use the static convertDot method to convert DOT into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertDot(dotString);');\n      // parse DOT file\n      var dotData = dotparser.DOTToGraph(data.dot);\n      this.setData(dotData);\n      return;\n    } else if (data && data.gephi) {\n      // parse DOT file\n      console.log('The gephi property has been deprecated. Please use the static convertGephi method to convert gephi into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertGephi(gephiJson);');\n      var gephiData = gephiParser.parseGephi(data.gephi);\n      this.setData(gephiData);\n      return;\n    } else {\n      this.nodesHandler.setData(data && data.nodes, true);\n      this.edgesHandler.setData(data && data.edges, true);\n    }\n\n    // emit change in data\n    this.body.emitter.emit(\"_dataChanged\");\n\n    // emit data loaded\n    this.body.emitter.emit(\"_dataLoaded\");\n\n    // find a stable position or start animating to a stable position\n    this.body.emitter.emit(\"initPhysics\");\n  };\n\n  /**\n   * Cleans up all bindings of the network, removing it fully from the memory IF the variable is set to null after calling this function.\n   * var network = new vis.Network(..);\n   * network.destroy();\n   * network = null;\n   */\n  Network.prototype.destroy = function () {\n    this.body.emitter.emit(\"destroy\");\n    // clear events\n    this.body.emitter.off();\n    this.off();\n\n    // delete modules\n    delete this.groups;\n    delete this.canvas;\n    delete this.selectionHandler;\n    delete this.interactionHandler;\n    delete this.view;\n    delete this.renderer;\n    delete this.physics;\n    delete this.layoutEngine;\n    delete this.clustering;\n    delete this.manipulation;\n    delete this.nodesHandler;\n    delete this.edgesHandler;\n    delete this.configurator;\n    delete this.images;\n\n    for (var nodeId in this.body.nodes) {\n      delete this.body.nodes[nodeId];\n    }\n    for (var edgeId in this.body.edges) {\n      delete this.body.edges[edgeId];\n    }\n\n    // remove the container and everything inside it recursively\n    util.recursiveDOMDelete(this.body.container);\n  };\n\n  /**\n   * Update the values of all object in the given array according to the current\n   * value range of the objects in the array.\n   * @param {Object} obj    An object containing a set of Edges or Nodes\n   *                        The objects must have a method getValue() and\n   *                        setValueRange(min, max).\n   * @private\n   */\n  Network.prototype._updateValueRange = function (obj) {\n    var id;\n\n    // determine the range of the objects\n    var valueMin = undefined;\n    var valueMax = undefined;\n    var valueTotal = 0;\n    for (id in obj) {\n      if (obj.hasOwnProperty(id)) {\n        var value = obj[id].getValue();\n        if (value !== undefined) {\n          valueMin = valueMin === undefined ? value : Math.min(value, valueMin);\n          valueMax = valueMax === undefined ? value : Math.max(value, valueMax);\n          valueTotal += value;\n        }\n      }\n    }\n\n    // adjust the range of all objects\n    if (valueMin !== undefined && valueMax !== undefined) {\n      for (id in obj) {\n        if (obj.hasOwnProperty(id)) {\n          obj[id].setValueRange(valueMin, valueMax, valueTotal);\n        }\n      }\n    }\n  };\n\n  /**\n   * Returns true when the Network is active.\n   * @returns {boolean}\n   */\n  Network.prototype.isActive = function () {\n    return !this.activator || this.activator.active;\n  };\n\n  Network.prototype.setSize = function () {\n    return this.canvas.setSize.apply(this.canvas, arguments);\n  };\n  Network.prototype.canvasToDOM = function () {\n    return this.canvas.canvasToDOM.apply(this.canvas, arguments);\n  };\n  Network.prototype.DOMtoCanvas = function () {\n    return this.canvas.DOMtoCanvas.apply(this.canvas, arguments);\n  };\n  Network.prototype.findNode = function () {\n    return this.clustering.findNode.apply(this.clustering, arguments);\n  };\n  Network.prototype.isCluster = function () {\n    return this.clustering.isCluster.apply(this.clustering, arguments);\n  };\n  Network.prototype.openCluster = function () {\n    return this.clustering.openCluster.apply(this.clustering, arguments);\n  };\n  Network.prototype.cluster = function () {\n    return this.clustering.cluster.apply(this.clustering, arguments);\n  };\n  Network.prototype.getNodesInCluster = function () {\n    return this.clustering.getNodesInCluster.apply(this.clustering, arguments);\n  };\n  Network.prototype.clusterByConnection = function () {\n    return this.clustering.clusterByConnection.apply(this.clustering, arguments);\n  };\n  Network.prototype.clusterByHubsize = function () {\n    return this.clustering.clusterByHubsize.apply(this.clustering, arguments);\n  };\n  Network.prototype.clusterOutliers = function () {\n    return this.clustering.clusterOutliers.apply(this.clustering, arguments);\n  };\n  Network.prototype.getSeed = function () {\n    return this.layoutEngine.getSeed.apply(this.layoutEngine, arguments);\n  };\n  Network.prototype.enableEditMode = function () {\n    return this.manipulation.enableEditMode.apply(this.manipulation, arguments);\n  };\n  Network.prototype.disableEditMode = function () {\n    return this.manipulation.disableEditMode.apply(this.manipulation, arguments);\n  };\n  Network.prototype.addNodeMode = function () {\n    return this.manipulation.addNodeMode.apply(this.manipulation, arguments);\n  };\n  Network.prototype.editNode = function () {\n    return this.manipulation.editNode.apply(this.manipulation, arguments);\n  };\n  Network.prototype.editNodeMode = function () {\n    console.log(\"Deprecated: Please use editNode instead of editNodeMode.\");return this.manipulation.editNode.apply(this.manipulation, arguments);\n  };\n  Network.prototype.addEdgeMode = function () {\n    return this.manipulation.addEdgeMode.apply(this.manipulation, arguments);\n  };\n  Network.prototype.editEdgeMode = function () {\n    return this.manipulation.editEdgeMode.apply(this.manipulation, arguments);\n  };\n  Network.prototype.deleteSelected = function () {\n    return this.manipulation.deleteSelected.apply(this.manipulation, arguments);\n  };\n  Network.prototype.getPositions = function () {\n    return this.nodesHandler.getPositions.apply(this.nodesHandler, arguments);\n  };\n  Network.prototype.storePositions = function () {\n    return this.nodesHandler.storePositions.apply(this.nodesHandler, arguments);\n  };\n  Network.prototype.moveNode = function () {\n    return this.nodesHandler.moveNode.apply(this.nodesHandler, arguments);\n  };\n  Network.prototype.getBoundingBox = function () {\n    return this.nodesHandler.getBoundingBox.apply(this.nodesHandler, arguments);\n  };\n  Network.prototype.getConnectedNodes = function (objectId) {\n    if (this.body.nodes[objectId] !== undefined) {\n      return this.nodesHandler.getConnectedNodes.apply(this.nodesHandler, arguments);\n    } else {\n      return this.edgesHandler.getConnectedNodes.apply(this.edgesHandler, arguments);\n    }\n  };\n  Network.prototype.getConnectedEdges = function () {\n    return this.nodesHandler.getConnectedEdges.apply(this.nodesHandler, arguments);\n  };\n  Network.prototype.startSimulation = function () {\n    return this.physics.startSimulation.apply(this.physics, arguments);\n  };\n  Network.prototype.stopSimulation = function () {\n    return this.physics.stopSimulation.apply(this.physics, arguments);\n  };\n  Network.prototype.stabilize = function () {\n    return this.physics.stabilize.apply(this.physics, arguments);\n  };\n  Network.prototype.getSelection = function () {\n    return this.selectionHandler.getSelection.apply(this.selectionHandler, arguments);\n  };\n  Network.prototype.setSelection = function () {\n    return this.selectionHandler.setSelection.apply(this.selectionHandler, arguments);\n  };\n  Network.prototype.getSelectedNodes = function () {\n    return this.selectionHandler.getSelectedNodes.apply(this.selectionHandler, arguments);\n  };\n  Network.prototype.getSelectedEdges = function () {\n    return this.selectionHandler.getSelectedEdges.apply(this.selectionHandler, arguments);\n  };\n  Network.prototype.getNodeAt = function () {\n    var node = this.selectionHandler.getNodeAt.apply(this.selectionHandler, arguments);\n    if (node !== undefined && node.id !== undefined) {\n      return node.id;\n    }\n    return node;\n  };\n  Network.prototype.getEdgeAt = function () {\n    var edge = this.selectionHandler.getEdgeAt.apply(this.selectionHandler, arguments);\n    if (edge !== undefined && edge.id !== undefined) {\n      return edge.id;\n    }\n    return edge;\n  };\n  Network.prototype.selectNodes = function () {\n    return this.selectionHandler.selectNodes.apply(this.selectionHandler, arguments);\n  };\n  Network.prototype.selectEdges = function () {\n    return this.selectionHandler.selectEdges.apply(this.selectionHandler, arguments);\n  };\n  Network.prototype.unselectAll = function () {\n    this.selectionHandler.unselectAll.apply(this.selectionHandler, arguments);\n    this.redraw();\n  };\n  Network.prototype.redraw = function () {\n    return this.renderer.redraw.apply(this.renderer, arguments);\n  };\n  Network.prototype.getScale = function () {\n    return this.view.getScale.apply(this.view, arguments);\n  };\n  Network.prototype.getViewPosition = function () {\n    return this.view.getViewPosition.apply(this.view, arguments);\n  };\n  Network.prototype.fit = function () {\n    return this.view.fit.apply(this.view, arguments);\n  };\n  Network.prototype.moveTo = function () {\n    return this.view.moveTo.apply(this.view, arguments);\n  };\n  Network.prototype.focus = function () {\n    return this.view.focus.apply(this.view, arguments);\n  };\n  Network.prototype.releaseNode = function () {\n    return this.view.releaseNode.apply(this.view, arguments);\n  };\n  Network.prototype.getOptionsFromConfigurator = function () {\n    var options = {};\n    if (this.configurator) {\n      options = this.configurator.getOptions.apply(this.configurator);\n    }\n    return options;\n  };\n\n  module.exports = Network;\n\n/***/ },\n/* 64 */\n/***/ function(module, exports) {\n\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n      value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  /**\n   * @class Images\n   * This class loads images and keeps them stored.\n   */\n  var Images = function () {\n      function Images(callback) {\n          _classCallCheck(this, Images);\n\n          this.images = {};\n          this.imageBroken = {};\n          this.callback = callback;\n      }\n\n      /**\n       * @param {string} url                      The Url to cache the image as \n        * @return {Image} imageToLoadBrokenUrlOn  The image object\n       */\n\n\n      _createClass(Images, [{\n          key: \"_addImageToCache\",\n          value: function _addImageToCache(url, imageToCache) {\n              // IE11 fix -- thanks dponch!\n              if (imageToCache.width === 0) {\n                  document.body.appendChild(imageToCache);\n                  imageToCache.width = imageToCache.offsetWidth;\n                  imageToCache.height = imageToCache.offsetHeight;\n                  document.body.removeChild(imageToCache);\n              }\n\n              this.images[url] = imageToCache;\n          }\n\n          /**\n           * @param {string} url                      The original Url that failed to load, if the broken image is successfully loaded it will be added to the cache using this Url as the key so that subsequent requests for this Url will return the broken image\n           * @param {string} brokenUrl                Url the broken image to try and load\n           * @return {Image} imageToLoadBrokenUrlOn   The image object\n           */\n\n      }, {\n          key: \"_tryloadBrokenUrl\",\n          value: function _tryloadBrokenUrl(url, brokenUrl, imageToLoadBrokenUrlOn) {\n              var _this = this;\n\n              //If any of the parameters aren't specified then exit the function because nothing constructive can be done\n              if (url === undefined || brokenUrl === undefined || imageToLoadBrokenUrlOn === undefined) return;\n\n              //Clear the old subscription to the error event and put a new in place that only handle errors in loading the brokenImageUrl\n              imageToLoadBrokenUrlOn.onerror = function () {\n                  console.error(\"Could not load brokenImage:\", brokenUrl);\n                  //Add an empty image to the cache so that when subsequent load calls are made for the url we don't try load the image and broken image again\n                  _this._addImageToCache(url, new Image());\n              };\n\n              //Set the source of the image to the brokenUrl, this is actually what kicks off the loading of the broken image\n              imageToLoadBrokenUrlOn.src = brokenUrl;\n          }\n\n          /**\n           * @return {Image} imageToRedrawWith The images that will be passed to the callback when it is invoked\n           */\n\n      }, {\n          key: \"_redrawWithImage\",\n          value: function _redrawWithImage(imageToRedrawWith) {\n              if (this.callback) {\n                  this.callback(imageToRedrawWith);\n              }\n          }\n\n          /**\n           * @param {string} url          Url of the image\n           * @param {string} brokenUrl    Url of an image to use if the url image is not found\n           * @return {Image} img          The image object\n           */\n\n      }, {\n          key: \"load\",\n          value: function load(url, brokenUrl, id) {\n              var _this2 = this;\n\n              //Try and get the image from the cache, if successful then return the cached image   \n              var cachedImage = this.images[url];\n              if (cachedImage) return cachedImage;\n\n              //Create a new image\n              var img = new Image();\n\n              //Subscribe to the event that is raised if the image loads successfully \n              img.onload = function () {\n                  //Add the image to the cache and then request a redraw\n                  _this2._addImageToCache(url, img);\n                  _this2._redrawWithImage(img);\n              };\n\n              //Subscribe to the event that is raised if the image fails to load\n              img.onerror = function () {\n                  console.error(\"Could not load image:\", url);\n                  //Try and load the image specified by the brokenUrl using\n                  _this2._tryloadBrokenUrl(url, brokenUrl, img);\n              };\n\n              //Set the source of the image to the url, this is actuall what kicks off the loading of the image\n              img.src = url;\n\n              //Return the new image\n              return img;\n          }\n      }]);\n\n      return Images;\n  }();\n\n  exports.default = Images;\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n\n  /**\n   * @class Groups\n   * This class can store groups and options specific for groups.\n   */\n\n  var Groups = function () {\n    function Groups() {\n      _classCallCheck(this, Groups);\n\n      this.clear();\n      this.defaultIndex = 0;\n      this.groupsArray = [];\n      this.groupIndex = 0;\n\n      this.defaultGroups = [{ border: \"#2B7CE9\", background: \"#97C2FC\", highlight: { border: \"#2B7CE9\", background: \"#D2E5FF\" }, hover: { border: \"#2B7CE9\", background: \"#D2E5FF\" } }, // 0: blue\n      { border: \"#FFA500\", background: \"#FFFF00\", highlight: { border: \"#FFA500\", background: \"#FFFFA3\" }, hover: { border: \"#FFA500\", background: \"#FFFFA3\" } }, // 1: yellow\n      { border: \"#FA0A10\", background: \"#FB7E81\", highlight: { border: \"#FA0A10\", background: \"#FFAFB1\" }, hover: { border: \"#FA0A10\", background: \"#FFAFB1\" } }, // 2: red\n      { border: \"#41A906\", background: \"#7BE141\", highlight: { border: \"#41A906\", background: \"#A1EC76\" }, hover: { border: \"#41A906\", background: \"#A1EC76\" } }, // 3: green\n      { border: \"#E129F0\", background: \"#EB7DF4\", highlight: { border: \"#E129F0\", background: \"#F0B3F5\" }, hover: { border: \"#E129F0\", background: \"#F0B3F5\" } }, // 4: magenta\n      { border: \"#7C29F0\", background: \"#AD85E4\", highlight: { border: \"#7C29F0\", background: \"#D3BDF0\" }, hover: { border: \"#7C29F0\", background: \"#D3BDF0\" } }, // 5: purple\n      { border: \"#C37F00\", background: \"#FFA807\", highlight: { border: \"#C37F00\", background: \"#FFCA66\" }, hover: { border: \"#C37F00\", background: \"#FFCA66\" } }, // 6: orange\n      { border: \"#4220FB\", background: \"#6E6EFD\", highlight: { border: \"#4220FB\", background: \"#9B9BFD\" }, hover: { border: \"#4220FB\", background: \"#9B9BFD\" } }, // 7: darkblue\n      { border: \"#FD5A77\", background: \"#FFC0CB\", highlight: { border: \"#FD5A77\", background: \"#FFD1D9\" }, hover: { border: \"#FD5A77\", background: \"#FFD1D9\" } }, // 8: pink\n      { border: \"#4AD63A\", background: \"#C2FABC\", highlight: { border: \"#4AD63A\", background: \"#E6FFE3\" }, hover: { border: \"#4AD63A\", background: \"#E6FFE3\" } }, // 9: mint\n\n      { border: \"#990000\", background: \"#EE0000\", highlight: { border: \"#BB0000\", background: \"#FF3333\" }, hover: { border: \"#BB0000\", background: \"#FF3333\" } }, // 10:bright red\n\n      { border: \"#FF6000\", background: \"#FF6000\", highlight: { border: \"#FF6000\", background: \"#FF6000\" }, hover: { border: \"#FF6000\", background: \"#FF6000\" } }, // 12: real orange\n      { border: \"#97C2FC\", background: \"#2B7CE9\", highlight: { border: \"#D2E5FF\", background: \"#2B7CE9\" }, hover: { border: \"#D2E5FF\", background: \"#2B7CE9\" } }, // 13: blue\n      { border: \"#399605\", background: \"#255C03\", highlight: { border: \"#399605\", background: \"#255C03\" }, hover: { border: \"#399605\", background: \"#255C03\" } }, // 14: green\n      { border: \"#B70054\", background: \"#FF007E\", highlight: { border: \"#B70054\", background: \"#FF007E\" }, hover: { border: \"#B70054\", background: \"#FF007E\" } }, // 15: magenta\n      { border: \"#AD85E4\", background: \"#7C29F0\", highlight: { border: \"#D3BDF0\", background: \"#7C29F0\" }, hover: { border: \"#D3BDF0\", background: \"#7C29F0\" } }, // 16: purple\n      { border: \"#4557FA\", background: \"#000EA1\", highlight: { border: \"#6E6EFD\", background: \"#000EA1\" }, hover: { border: \"#6E6EFD\", background: \"#000EA1\" } }, // 17: darkblue\n      { border: \"#FFC0CB\", background: \"#FD5A77\", highlight: { border: \"#FFD1D9\", background: \"#FD5A77\" }, hover: { border: \"#FFD1D9\", background: \"#FD5A77\" } }, // 18: pink\n      { border: \"#C2FABC\", background: \"#74D66A\", highlight: { border: \"#E6FFE3\", background: \"#74D66A\" }, hover: { border: \"#E6FFE3\", background: \"#74D66A\" } }, // 19: mint\n\n      { border: \"#EE0000\", background: \"#990000\", highlight: { border: \"#FF3333\", background: \"#BB0000\" }, hover: { border: \"#FF3333\", background: \"#BB0000\" } } // 20:bright red\n      ];\n\n      this.options = {};\n      this.defaultOptions = {\n        useDefaultGroups: true\n      };\n      util.extend(this.options, this.defaultOptions);\n    }\n\n    _createClass(Groups, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        var optionFields = ['useDefaultGroups'];\n\n        if (options !== undefined) {\n          for (var groupName in options) {\n            if (options.hasOwnProperty(groupName)) {\n              if (optionFields.indexOf(groupName) === -1) {\n                var group = options[groupName];\n                this.add(groupName, group);\n              }\n            }\n          }\n        }\n      }\n\n      /**\n       * Clear all groups\n       */\n\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        this.groups = {};\n        this.groupsArray = [];\n      }\n\n      /**\n       * get group options of a groupname. If groupname is not found, a new group\n       * is added.\n       * @param {*} groupname        Can be a number, string, Date, etc.\n       * @return {Object} group      The created group, containing all group options\n       */\n\n    }, {\n      key: \"get\",\n      value: function get(groupname) {\n        var group = this.groups[groupname];\n        if (group === undefined) {\n          if (this.options.useDefaultGroups === false && this.groupsArray.length > 0) {\n            // create new group\n            var index = this.groupIndex % this.groupsArray.length;\n            this.groupIndex++;\n            group = {};\n            group.color = this.groups[this.groupsArray[index]];\n            this.groups[groupname] = group;\n          } else {\n            // create new group\n            var _index = this.defaultIndex % this.defaultGroups.length;\n            this.defaultIndex++;\n            group = {};\n            group.color = this.defaultGroups[_index];\n            this.groups[groupname] = group;\n          }\n        }\n\n        return group;\n      }\n\n      /**\n       * Add a custom group style\n       * @param {String} groupName\n       * @param {Object} style       An object containing borderColor,\n       *                             backgroundColor, etc.\n       * @return {Object} group      The created group object\n       */\n\n    }, {\n      key: \"add\",\n      value: function add(groupName, style) {\n        this.groups[groupName] = style;\n        this.groupsArray.push(groupName);\n        return style;\n      }\n    }]);\n\n    return Groups;\n  }();\n\n  exports.default = Groups;\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _Node = __webpack_require__(67);\n\n  var _Node2 = _interopRequireDefault(_Node);\n\n  var _Label = __webpack_require__(68);\n\n  var _Label2 = _interopRequireDefault(_Label);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(9);\n  var DataView = __webpack_require__(11);\n\n  var NodesHandler = function () {\n    function NodesHandler(body, images, groups, layoutEngine) {\n      var _this = this;\n\n      _classCallCheck(this, NodesHandler);\n\n      this.body = body;\n      this.images = images;\n      this.groups = groups;\n      this.layoutEngine = layoutEngine;\n\n      // create the node API in the body container\n      this.body.functions.createNode = this.create.bind(this);\n\n      this.nodesListeners = {\n        add: function add(event, params) {\n          _this.add(params.items);\n        },\n        update: function update(event, params) {\n          _this.update(params.items, params.data);\n        },\n        remove: function remove(event, params) {\n          _this.remove(params.items);\n        }\n      };\n\n      this.options = {};\n      this.defaultOptions = {\n        borderWidth: 1,\n        borderWidthSelected: 2,\n        brokenImage: undefined,\n        color: {\n          border: '#2B7CE9',\n          background: '#97C2FC',\n          highlight: {\n            border: '#2B7CE9',\n            background: '#D2E5FF'\n          },\n          hover: {\n            border: '#2B7CE9',\n            background: '#D2E5FF'\n          }\n        },\n        fixed: {\n          x: false,\n          y: false\n        },\n        font: {\n          color: '#343434',\n          size: 14, // px\n          face: 'arial',\n          background: 'none',\n          strokeWidth: 0, // px\n          strokeColor: '#ffffff',\n          align: 'center'\n        },\n        group: undefined,\n        hidden: false,\n        icon: {\n          face: 'FontAwesome', //'FontAwesome',\n          code: undefined, //'\\uf007',\n          size: 50, //50,\n          color: '#2B7CE9' //'#aa00ff'\n        },\n        image: undefined, // --> URL\n        label: undefined,\n        labelHighlightBold: true,\n        level: undefined,\n        mass: 1,\n        physics: true,\n        scaling: {\n          min: 10,\n          max: 30,\n          label: {\n            enabled: false,\n            min: 14,\n            max: 30,\n            maxVisible: 30,\n            drawThreshold: 5\n          },\n          customScalingFunction: function customScalingFunction(min, max, total, value) {\n            if (max === min) {\n              return 0.5;\n            } else {\n              var scale = 1 / (max - min);\n              return Math.max(0, (value - min) * scale);\n            }\n          }\n        },\n        shadow: {\n          enabled: false,\n          color: 'rgba(0,0,0,0.5)',\n          size: 10,\n          x: 5,\n          y: 5\n        },\n        shape: 'ellipse',\n        shapeProperties: {\n          borderDashes: false, // only for borders\n          borderRadius: 6, // only for box shape\n          interpolation: true, // only for image and circularImage shapes\n          useImageSize: false, // only for image and circularImage shapes\n          useBorderWithImage: false // only for image shape\n        },\n        size: 25,\n        title: undefined,\n        value: undefined,\n        x: undefined,\n        y: undefined\n      };\n      util.extend(this.options, this.defaultOptions);\n\n      this.bindEventListeners();\n    }\n\n    _createClass(NodesHandler, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this2 = this;\n\n        // refresh the nodes. Used when reverting from hierarchical layout\n        this.body.emitter.on('refreshNodes', this.refresh.bind(this));\n        this.body.emitter.on('refresh', this.refresh.bind(this));\n        this.body.emitter.on('destroy', function () {\n          util.forEach(_this2.nodesListeners, function (callback, event) {\n            if (_this2.body.data.nodes) _this2.body.data.nodes.off(event, callback);\n          });\n          delete _this2.body.functions.createNode;\n          delete _this2.nodesListeners.add;\n          delete _this2.nodesListeners.update;\n          delete _this2.nodesListeners.remove;\n          delete _this2.nodesListeners;\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          _Node2.default.parseOptions(this.options, options);\n\n          // update the shape in all nodes\n          if (options.shape !== undefined) {\n            for (var nodeId in this.body.nodes) {\n              if (this.body.nodes.hasOwnProperty(nodeId)) {\n                this.body.nodes[nodeId].updateShape();\n              }\n            }\n          }\n\n          // update the font in all nodes\n          if (options.font !== undefined) {\n            _Label2.default.parseOptions(this.options.font, options);\n            for (var _nodeId in this.body.nodes) {\n              if (this.body.nodes.hasOwnProperty(_nodeId)) {\n                this.body.nodes[_nodeId].updateLabelModule();\n                this.body.nodes[_nodeId]._reset();\n              }\n            }\n          }\n\n          // update the shape size in all nodes\n          if (options.size !== undefined) {\n            for (var _nodeId2 in this.body.nodes) {\n              if (this.body.nodes.hasOwnProperty(_nodeId2)) {\n                this.body.nodes[_nodeId2]._reset();\n              }\n            }\n          }\n\n          // update the state of the letiables if needed\n          if (options.hidden !== undefined || options.physics !== undefined) {\n            this.body.emitter.emit('_dataChanged');\n          }\n        }\n      }\n\n      /**\n       * Set a data set with nodes for the network\n       * @param {Array | DataSet | DataView} nodes         The data containing the nodes.\n       * @private\n       */\n\n    }, {\n      key: 'setData',\n      value: function setData(nodes) {\n        var _this3 = this;\n\n        var doNotEmit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        var oldNodesData = this.body.data.nodes;\n\n        if (nodes instanceof DataSet || nodes instanceof DataView) {\n          this.body.data.nodes = nodes;\n        } else if (Array.isArray(nodes)) {\n          this.body.data.nodes = new DataSet();\n          this.body.data.nodes.add(nodes);\n        } else if (!nodes) {\n          this.body.data.nodes = new DataSet();\n        } else {\n          throw new TypeError('Array or DataSet expected');\n        }\n\n        if (oldNodesData) {\n          // unsubscribe from old dataset\n          util.forEach(this.nodesListeners, function (callback, event) {\n            oldNodesData.off(event, callback);\n          });\n        }\n\n        // remove drawn nodes\n        this.body.nodes = {};\n\n        if (this.body.data.nodes) {\n          (function () {\n            // subscribe to new dataset\n            var me = _this3;\n            util.forEach(_this3.nodesListeners, function (callback, event) {\n              me.body.data.nodes.on(event, callback);\n            });\n\n            // draw all new nodes\n            var ids = _this3.body.data.nodes.getIds();\n            _this3.add(ids, true);\n          })();\n        }\n\n        if (doNotEmit === false) {\n          this.body.emitter.emit(\"_dataChanged\");\n        }\n      }\n\n      /**\n       * Add nodes\n       * @param {Number[] | String[]} ids\n       * @private\n       */\n\n    }, {\n      key: 'add',\n      value: function add(ids) {\n        var doNotEmit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        var id = void 0;\n        var newNodes = [];\n        for (var i = 0; i < ids.length; i++) {\n          id = ids[i];\n          var properties = this.body.data.nodes.get(id);\n          var node = this.create(properties);\n          newNodes.push(node);\n          this.body.nodes[id] = node; // note: this may replace an existing node\n        }\n\n        this.layoutEngine.positionInitially(newNodes);\n\n        if (doNotEmit === false) {\n          this.body.emitter.emit(\"_dataChanged\");\n        }\n      }\n\n      /**\n       * Update existing nodes, or create them when not yet existing\n       * @param {Number[] | String[]} ids\n       * @private\n       */\n\n    }, {\n      key: 'update',\n      value: function update(ids, changedData) {\n        var nodes = this.body.nodes;\n        var dataChanged = false;\n        for (var i = 0; i < ids.length; i++) {\n          var id = ids[i];\n          var node = nodes[id];\n          var data = changedData[i];\n          if (node !== undefined) {\n            // update node\n            dataChanged = node.setOptions(data);\n          } else {\n            dataChanged = true;\n            // create node\n            node = this.create(data);\n            nodes[id] = node;\n          }\n        }\n        if (dataChanged === true) {\n          this.body.emitter.emit(\"_dataChanged\");\n        } else {\n          this.body.emitter.emit(\"_dataUpdated\");\n        }\n      }\n\n      /**\n       * Remove existing nodes. If nodes do not exist, the method will just ignore it.\n       * @param {Number[] | String[]} ids\n       * @private\n       */\n\n    }, {\n      key: 'remove',\n      value: function remove(ids) {\n        var nodes = this.body.nodes;\n\n        for (var i = 0; i < ids.length; i++) {\n          var id = ids[i];\n          delete nodes[id];\n        }\n\n        this.body.emitter.emit(\"_dataChanged\");\n      }\n\n      /**\n       * create a node\n       * @param properties\n       * @param constructorClass\n       */\n\n    }, {\n      key: 'create',\n      value: function create(properties) {\n        var constructorClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _Node2.default;\n\n        return new constructorClass(properties, this.body, this.images, this.groups, this.options);\n      }\n    }, {\n      key: 'refresh',\n      value: function refresh() {\n        var clearPositions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n        var nodes = this.body.nodes;\n        for (var nodeId in nodes) {\n          var node = undefined;\n          if (nodes.hasOwnProperty(nodeId)) {\n            node = nodes[nodeId];\n          }\n          var data = this.body.data.nodes._data[nodeId];\n          if (node !== undefined && data !== undefined) {\n            if (clearPositions === true) {\n              node.setOptions({ x: null, y: null });\n            }\n            node.setOptions({ fixed: false });\n            node.setOptions(data);\n          }\n        }\n      }\n\n      /**\n       * Returns the positions of the nodes.\n       * @param ids  --> optional, can be array of nodeIds, can be string\n       * @returns {{}}\n       */\n\n    }, {\n      key: 'getPositions',\n      value: function getPositions(ids) {\n        var dataArray = {};\n        if (ids !== undefined) {\n          if (Array.isArray(ids) === true) {\n            for (var i = 0; i < ids.length; i++) {\n              if (this.body.nodes[ids[i]] !== undefined) {\n                var node = this.body.nodes[ids[i]];\n                dataArray[ids[i]] = { x: Math.round(node.x), y: Math.round(node.y) };\n              }\n            }\n          } else {\n            if (this.body.nodes[ids] !== undefined) {\n              var _node = this.body.nodes[ids];\n              dataArray[ids] = { x: Math.round(_node.x), y: Math.round(_node.y) };\n            }\n          }\n        } else {\n          for (var _i = 0; _i < this.body.nodeIndices.length; _i++) {\n            var _node2 = this.body.nodes[this.body.nodeIndices[_i]];\n            dataArray[this.body.nodeIndices[_i]] = { x: Math.round(_node2.x), y: Math.round(_node2.y) };\n          }\n        }\n        return dataArray;\n      }\n\n      /**\n       * Load the XY positions of the nodes into the dataset.\n       */\n\n    }, {\n      key: 'storePositions',\n      value: function storePositions() {\n        // todo: add support for clusters and hierarchical.\n        var dataArray = [];\n        var dataset = this.body.data.nodes.getDataSet();\n\n        for (var nodeId in dataset._data) {\n          if (dataset._data.hasOwnProperty(nodeId)) {\n            var node = this.body.nodes[nodeId];\n            if (dataset._data[nodeId].x != Math.round(node.x) || dataset._data[nodeId].y != Math.round(node.y)) {\n              dataArray.push({ id: node.id, x: Math.round(node.x), y: Math.round(node.y) });\n            }\n          }\n        }\n        dataset.update(dataArray);\n      }\n\n      /**\n       * get the bounding box of a node.\n       * @param nodeId\n       * @returns {j|*}\n       */\n\n    }, {\n      key: 'getBoundingBox',\n      value: function getBoundingBox(nodeId) {\n        if (this.body.nodes[nodeId] !== undefined) {\n          return this.body.nodes[nodeId].shape.boundingBox;\n        }\n      }\n\n      /**\n       * Get the Ids of nodes connected to this node.\n       * @param nodeId\n       * @returns {Array}\n       */\n\n    }, {\n      key: 'getConnectedNodes',\n      value: function getConnectedNodes(nodeId) {\n        var nodeList = [];\n        if (this.body.nodes[nodeId] !== undefined) {\n          var node = this.body.nodes[nodeId];\n          var nodeObj = {}; // used to quickly check if node already exists\n          for (var i = 0; i < node.edges.length; i++) {\n            var edge = node.edges[i];\n            if (edge.toId == node.id) {\n              // these are double equals since ids can be numeric or string\n              if (nodeObj[edge.fromId] === undefined) {\n                nodeList.push(edge.fromId);\n                nodeObj[edge.fromId] = true;\n              }\n            } else if (edge.fromId == node.id) {\n              // these are double equals since ids can be numeric or string\n              if (nodeObj[edge.toId] === undefined) {\n                nodeList.push(edge.toId);\n                nodeObj[edge.toId] = true;\n              }\n            }\n          }\n        }\n        return nodeList;\n      }\n\n      /**\n       * Get the ids of the edges connected to this node.\n       * @param nodeId\n       * @returns {*}\n       */\n\n    }, {\n      key: 'getConnectedEdges',\n      value: function getConnectedEdges(nodeId) {\n        var edgeList = [];\n        if (this.body.nodes[nodeId] !== undefined) {\n          var node = this.body.nodes[nodeId];\n          for (var i = 0; i < node.edges.length; i++) {\n            edgeList.push(node.edges[i].id);\n          }\n        } else {\n          console.log(\"NodeId provided for getConnectedEdges does not exist. Provided: \", nodeId);\n        }\n        return edgeList;\n      }\n\n      /**\n       * Move a node.\n       * @param String nodeId\n       * @param Number x\n       * @param Number y\n       */\n\n    }, {\n      key: 'moveNode',\n      value: function moveNode(nodeId, x, y) {\n        var _this4 = this;\n\n        if (this.body.nodes[nodeId] !== undefined) {\n          this.body.nodes[nodeId].x = Number(x);\n          this.body.nodes[nodeId].y = Number(y);\n          setTimeout(function () {\n            _this4.body.emitter.emit(\"startSimulation\");\n          }, 0);\n        } else {\n          console.log(\"Node id supplied to moveNode does not exist. Provided: \", nodeId);\n        }\n      }\n    }]);\n\n    return NodesHandler;\n  }();\n\n  exports.default = NodesHandler;\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _Label = __webpack_require__(68);\n\n  var _Label2 = _interopRequireDefault(_Label);\n\n  var _Box = __webpack_require__(69);\n\n  var _Box2 = _interopRequireDefault(_Box);\n\n  var _Circle = __webpack_require__(71);\n\n  var _Circle2 = _interopRequireDefault(_Circle);\n\n  var _CircularImage = __webpack_require__(73);\n\n  var _CircularImage2 = _interopRequireDefault(_CircularImage);\n\n  var _Database = __webpack_require__(74);\n\n  var _Database2 = _interopRequireDefault(_Database);\n\n  var _Diamond = __webpack_require__(75);\n\n  var _Diamond2 = _interopRequireDefault(_Diamond);\n\n  var _Dot = __webpack_require__(77);\n\n  var _Dot2 = _interopRequireDefault(_Dot);\n\n  var _Ellipse = __webpack_require__(78);\n\n  var _Ellipse2 = _interopRequireDefault(_Ellipse);\n\n  var _Icon = __webpack_require__(79);\n\n  var _Icon2 = _interopRequireDefault(_Icon);\n\n  var _Image = __webpack_require__(80);\n\n  var _Image2 = _interopRequireDefault(_Image);\n\n  var _Square = __webpack_require__(81);\n\n  var _Square2 = _interopRequireDefault(_Square);\n\n  var _Star = __webpack_require__(82);\n\n  var _Star2 = _interopRequireDefault(_Star);\n\n  var _Text = __webpack_require__(83);\n\n  var _Text2 = _interopRequireDefault(_Text);\n\n  var _Triangle = __webpack_require__(84);\n\n  var _Triangle2 = _interopRequireDefault(_Triangle);\n\n  var _TriangleDown = __webpack_require__(85);\n\n  var _TriangleDown2 = _interopRequireDefault(_TriangleDown);\n\n  var _Validator = __webpack_require__(31);\n\n  var _Validator2 = _interopRequireDefault(_Validator);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n\n  /**\n   * @class Node\n   * A node. A node can be connected to other nodes via one or multiple edges.\n   * @param {object} options An object containing options for the node. All\n   *                            options are optional, except for the id.\n   *                              {number} id     Id of the node. Required\n   *                              {string} label  Text label for the node\n   *                              {number} x      Horizontal position of the node\n   *                              {number} y      Vertical position of the node\n   *                              {string} shape  Node shape, available:\n   *                                              \"database\", \"circle\", \"ellipse\",\n   *                                              \"box\", \"image\", \"text\", \"dot\",\n   *                                              \"star\", \"triangle\", \"triangleDown\",\n   *                                              \"square\", \"icon\"\n   *                              {string} image  An image url\n   *                              {string} title  An title text, can be HTML\n   *                              {anytype} group A group name or number\n   * @param {Network.Images} imagelist    A list with images. Only needed\n   *                                            when the node has an image\n   * @param {Network.Groups} grouplist    A list with groups. Needed for\n   *                                            retrieving group options\n   * @param {Object}               constants    An object with default values for\n   *                                            example for the color\n   *\n   */\n  var Node = function () {\n    function Node(options, body, imagelist, grouplist, globalOptions) {\n      _classCallCheck(this, Node);\n\n      this.options = util.bridgeObject(globalOptions);\n      this.globalOptions = globalOptions;\n      this.body = body;\n\n      this.edges = []; // all edges connected to this node\n\n      // set defaults for the options\n      this.id = undefined;\n      this.imagelist = imagelist;\n      this.grouplist = grouplist;\n\n      // state options\n      this.x = undefined;\n      this.y = undefined;\n      this.baseSize = this.options.size;\n      this.baseFontSize = this.options.font.size;\n      this.predefinedPosition = false; // used to check if initial fit should just take the range or approximate\n      this.selected = false;\n      this.hover = false;\n\n      this.labelModule = new _Label2.default(this.body, this.options, false /* Not edge label */);\n      this.setOptions(options);\n    }\n\n    /**\n     * Attach a edge to the node\n     * @param {Edge} edge\n     */\n\n\n    _createClass(Node, [{\n      key: 'attachEdge',\n      value: function attachEdge(edge) {\n        if (this.edges.indexOf(edge) === -1) {\n          this.edges.push(edge);\n        }\n      }\n\n      /**\n       * Detach a edge from the node\n       * @param {Edge} edge\n       */\n\n    }, {\n      key: 'detachEdge',\n      value: function detachEdge(edge) {\n        var index = this.edges.indexOf(edge);\n        if (index != -1) {\n          this.edges.splice(index, 1);\n        }\n      }\n\n      /**\n       * Set or overwrite options for the node\n       * @param {Object} options an object with options\n       * @param {Object} constants  and object with default, global options\n       */\n\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        var currentShape = this.options.shape;\n        if (!options) {\n          return;\n        }\n        // basic options\n        if (options.id !== undefined) {\n          this.id = options.id;\n        }\n\n        if (this.id === undefined) {\n          throw \"Node must have an id\";\n        }\n\n        // set these options locally\n        // clear x and y positions\n        if (options.x !== undefined) {\n          if (options.x === null) {\n            this.x = undefined;this.predefinedPosition = false;\n          } else {\n            this.x = parseInt(options.x);this.predefinedPosition = true;\n          }\n        }\n        if (options.y !== undefined) {\n          if (options.y === null) {\n            this.y = undefined;this.predefinedPosition = false;\n          } else {\n            this.y = parseInt(options.y);this.predefinedPosition = true;\n          }\n        }\n        if (options.size !== undefined) {\n          this.baseSize = options.size;\n        }\n        if (options.value !== undefined) {\n          options.value = parseFloat(options.value);\n        }\n\n        // copy group options\n        if (typeof options.group === 'number' || typeof options.group === 'string' && options.group != '') {\n          var groupObj = this.grouplist.get(options.group);\n          util.deepExtend(this.options, groupObj);\n          // the color object needs to be completely defined. Since groups can partially overwrite the colors, we parse it again, just in case.\n          this.options.color = util.parseColor(this.options.color);\n        }\n\n        // this transforms all shorthands into fully defined options\n        Node.parseOptions(this.options, options, true, this.globalOptions);\n\n        // load the images\n        if (this.options.image !== undefined) {\n          if (this.imagelist) {\n            this.imageObj = this.imagelist.load(this.options.image, this.options.brokenImage, this.id);\n          } else {\n            throw \"No imagelist provided\";\n          }\n        }\n\n        this.updateLabelModule();\n        this.updateShape(currentShape);\n\n        if (options.hidden !== undefined || options.physics !== undefined) {\n          return true;\n        }\n        return false;\n      }\n\n      /**\n       * This process all possible shorthands in the new options and makes sure that the parentOptions are fully defined.\n       * Static so it can also be used by the handler.\n       * @param parentOptions\n       * @param newOptions\n       * @param allowDeletion\n       * @param globalOptions\n       */\n\n    }, {\n      key: 'updateLabelModule',\n      value: function updateLabelModule() {\n        if (this.options.label === undefined || this.options.label === null) {\n          this.options.label = '';\n        }\n        this.labelModule.setOptions(this.options, true);\n        if (this.labelModule.baseSize !== undefined) {\n          this.baseFontSize = this.labelModule.baseSize;\n        }\n      }\n    }, {\n      key: 'updateShape',\n      value: function updateShape(currentShape) {\n        if (currentShape === this.options.shape && this.shape) {\n          this.shape.setOptions(this.options, this.imageObj);\n        } else {\n          // choose draw method depending on the shape\n          switch (this.options.shape) {\n            case 'box':\n              this.shape = new _Box2.default(this.options, this.body, this.labelModule);\n              break;\n            case 'circle':\n              this.shape = new _Circle2.default(this.options, this.body, this.labelModule);\n              break;\n            case 'circularImage':\n              this.shape = new _CircularImage2.default(this.options, this.body, this.labelModule, this.imageObj);\n              break;\n            case 'database':\n              this.shape = new _Database2.default(this.options, this.body, this.labelModule);\n              break;\n            case 'diamond':\n              this.shape = new _Diamond2.default(this.options, this.body, this.labelModule);\n              break;\n            case 'dot':\n              this.shape = new _Dot2.default(this.options, this.body, this.labelModule);\n              break;\n            case 'ellipse':\n              this.shape = new _Ellipse2.default(this.options, this.body, this.labelModule);\n              break;\n            case 'icon':\n              this.shape = new _Icon2.default(this.options, this.body, this.labelModule);\n              break;\n            case 'image':\n              this.shape = new _Image2.default(this.options, this.body, this.labelModule, this.imageObj);\n              break;\n            case 'square':\n              this.shape = new _Square2.default(this.options, this.body, this.labelModule);\n              break;\n            case 'star':\n              this.shape = new _Star2.default(this.options, this.body, this.labelModule);\n              break;\n            case 'text':\n              this.shape = new _Text2.default(this.options, this.body, this.labelModule);\n              break;\n            case 'triangle':\n              this.shape = new _Triangle2.default(this.options, this.body, this.labelModule);\n              break;\n            case 'triangleDown':\n              this.shape = new _TriangleDown2.default(this.options, this.body, this.labelModule);\n              break;\n            default:\n              this.shape = new _Ellipse2.default(this.options, this.body, this.labelModule);\n              break;\n          }\n        }\n        this._reset();\n      }\n\n      /**\n       * select this node\n       */\n\n    }, {\n      key: 'select',\n      value: function select() {\n        this.selected = true;\n        this._reset();\n      }\n\n      /**\n       * unselect this node\n       */\n\n    }, {\n      key: 'unselect',\n      value: function unselect() {\n        this.selected = false;\n        this._reset();\n      }\n\n      /**\n       * Reset the calculated size of the node, forces it to recalculate its size\n       * @private\n       */\n\n    }, {\n      key: '_reset',\n      value: function _reset() {\n        this.shape.width = undefined;\n        this.shape.height = undefined;\n      }\n\n      /**\n       * get the title of this node.\n       * @return {string} title    The title of the node, or undefined when no title\n       *                           has been set.\n       */\n\n    }, {\n      key: 'getTitle',\n      value: function getTitle() {\n        return this.options.title;\n      }\n\n      /**\n       * Calculate the distance to the border of the Node\n       * @param {CanvasRenderingContext2D}   ctx\n       * @param {Number} angle        Angle in radians\n       * @returns {number} distance   Distance to the border in pixels\n       */\n\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this.shape.distanceToBorder(ctx, angle);\n      }\n\n      /**\n       * Check if this node has a fixed x and y position\n       * @return {boolean}      true if fixed, false if not\n       */\n\n    }, {\n      key: 'isFixed',\n      value: function isFixed() {\n        return this.options.fixed.x && this.options.fixed.y;\n      }\n\n      /**\n       * check if this node is selecte\n       * @return {boolean} selected   True if node is selected, else false\n       */\n\n    }, {\n      key: 'isSelected',\n      value: function isSelected() {\n        return this.selected;\n      }\n\n      /**\n       * Retrieve the value of the node. Can be undefined\n       * @return {Number} value\n       */\n\n    }, {\n      key: 'getValue',\n      value: function getValue() {\n        return this.options.value;\n      }\n\n      /**\n       * Adjust the value range of the node. The node will adjust it's size\n       * based on its value.\n       * @param {Number} min\n       * @param {Number} max\n       */\n\n    }, {\n      key: 'setValueRange',\n      value: function setValueRange(min, max, total) {\n        if (this.options.value !== undefined) {\n          var scale = this.options.scaling.customScalingFunction(min, max, total, this.options.value);\n          var sizeDiff = this.options.scaling.max - this.options.scaling.min;\n          if (this.options.scaling.label.enabled === true) {\n            var fontDiff = this.options.scaling.label.max - this.options.scaling.label.min;\n            this.options.font.size = this.options.scaling.label.min + scale * fontDiff;\n          }\n          this.options.size = this.options.scaling.min + scale * sizeDiff;\n        } else {\n          this.options.size = this.baseSize;\n          this.options.font.size = this.baseFontSize;\n        }\n\n        this.updateLabelModule();\n      }\n\n      /**\n       * Draw this node in the given canvas\n       * The 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");\n       * @param {CanvasRenderingContext2D}   ctx\n       */\n\n    }, {\n      key: 'draw',\n      value: function draw(ctx) {\n        this.shape.draw(ctx, this.x, this.y, this.selected, this.hover);\n      }\n\n      /**\n       * Update the bounding box of the shape\n       */\n\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(ctx) {\n        this.shape.updateBoundingBox(this.x, this.y, ctx);\n      }\n\n      /**\n       * Recalculate the size of this node in the given canvas\n       * The 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");\n       * @param {CanvasRenderingContext2D}   ctx\n       */\n\n    }, {\n      key: 'resize',\n      value: function resize(ctx) {\n        this.shape.resize(ctx, this.selected);\n      }\n\n      /**\n       * Check if this object is overlapping with the provided object\n       * @param {Object} obj   an object with parameters left, top, right, bottom\n       * @return {boolean}     True if location is located on node\n       */\n\n    }, {\n      key: 'isOverlappingWith',\n      value: function isOverlappingWith(obj) {\n        return this.shape.left < obj.right && this.shape.left + this.shape.width > obj.left && this.shape.top < obj.bottom && this.shape.top + this.shape.height > obj.top;\n      }\n\n      /**\n       * Check if this object is overlapping with the provided object\n       * @param {Object} obj   an object with parameters left, top, right, bottom\n       * @return {boolean}     True if location is located on node\n       */\n\n    }, {\n      key: 'isBoundingBoxOverlappingWith',\n      value: function isBoundingBoxOverlappingWith(obj) {\n        return this.shape.boundingBox.left < obj.right && this.shape.boundingBox.right > obj.left && this.shape.boundingBox.top < obj.bottom && this.shape.boundingBox.bottom > obj.top;\n      }\n    }], [{\n      key: 'parseOptions',\n      value: function parseOptions(parentOptions, newOptions) {\n        var allowDeletion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var globalOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n        var fields = ['color', 'font', 'fixed', 'shadow'];\n        util.selectiveNotDeepExtend(fields, parentOptions, newOptions, allowDeletion);\n\n        // merge the shadow options into the parent.\n        util.mergeOptions(parentOptions, newOptions, 'shadow', allowDeletion, globalOptions);\n\n        // individual shape newOptions\n        if (newOptions.color !== undefined && newOptions.color !== null) {\n          var parsedColor = util.parseColor(newOptions.color);\n          util.fillIfDefined(parentOptions.color, parsedColor);\n        } else if (allowDeletion === true && newOptions.color === null) {\n          parentOptions.color = util.bridgeObject(globalOptions.color); // set the object back to the global options\n        }\n\n        // handle the fixed options\n        if (newOptions.fixed !== undefined && newOptions.fixed !== null) {\n          if (typeof newOptions.fixed === 'boolean') {\n            parentOptions.fixed.x = newOptions.fixed;\n            parentOptions.fixed.y = newOptions.fixed;\n          } else {\n            if (newOptions.fixed.x !== undefined && typeof newOptions.fixed.x === 'boolean') {\n              parentOptions.fixed.x = newOptions.fixed.x;\n            }\n            if (newOptions.fixed.y !== undefined && typeof newOptions.fixed.y === 'boolean') {\n              parentOptions.fixed.y = newOptions.fixed.y;\n            }\n          }\n        }\n\n        // handle the font options\n        if (newOptions.font !== undefined && newOptions.font !== null) {\n          _Label2.default.parseOptions(parentOptions.font, newOptions);\n        } else if (allowDeletion === true && newOptions.font === null) {\n          parentOptions.font = util.bridgeObject(globalOptions.font); // set the object back to the global options\n        }\n\n        // handle the scaling options, specifically the label part\n        if (newOptions.scaling !== undefined) {\n          util.mergeOptions(parentOptions.scaling, newOptions.scaling, 'label', allowDeletion, globalOptions.scaling);\n        }\n      }\n    }]);\n\n    return Node;\n  }();\n\n  exports.default = Node;\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n\n  var Label = function () {\n    function Label(body, options) {\n      var edgelabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      _classCallCheck(this, Label);\n\n      this.body = body;\n\n      this.pointToSelf = false;\n      this.baseSize = undefined;\n      this.fontOptions = {};\n      this.setOptions(options);\n      this.size = { top: 0, left: 0, width: 0, height: 0, yLine: 0 }; // could be cached\n      this.isEdgeLabel = edgelabel;\n    }\n\n    _createClass(Label, [{\n      key: 'setOptions',\n      value: function setOptions(options) {\n        var allowDeletion = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        this.nodeOptions = options;\n\n        // We want to keep the font options seperated from the node options.\n        // The node options have to mirror the globals when they are not overruled.\n        this.fontOptions = util.deepExtend({}, options.font, true);\n\n        if (options.label !== undefined) {\n          this.labelDirty = true;\n        }\n\n        if (options.font !== undefined) {\n          Label.parseOptions(this.fontOptions, options, allowDeletion);\n          if (typeof options.font === 'string') {\n            this.baseSize = this.fontOptions.size;\n          } else if (_typeof(options.font) === 'object') {\n            if (options.font.size !== undefined) {\n              this.baseSize = options.font.size;\n            }\n          }\n        }\n      }\n    }, {\n      key: 'draw',\n\n\n      /**\n       * Main function. This is called from anything that wants to draw a label.\n       * @param ctx\n       * @param x\n       * @param y\n       * @param selected\n       * @param baseline\n       */\n      value: function draw(ctx, x, y, selected) {\n        var baseline = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'middle';\n\n        // if no label, return\n        if (this.nodeOptions.label === undefined) return;\n\n        // check if we have to render the label\n        var viewFontSize = this.fontOptions.size * this.body.view.scale;\n        if (this.nodeOptions.label && viewFontSize < this.nodeOptions.scaling.label.drawThreshold - 1) return;\n\n        // update the size cache if required\n        this.calculateLabelSize(ctx, selected, x, y, baseline);\n\n        // create the fontfill background\n        this._drawBackground(ctx);\n        // draw text\n        this._drawText(ctx, selected, x, y, baseline);\n      }\n\n      /**\n       * Draws the label background\n       * @param {CanvasRenderingContext2D} ctx\n       * @private\n       */\n\n    }, {\n      key: '_drawBackground',\n      value: function _drawBackground(ctx) {\n        if (this.fontOptions.background !== undefined && this.fontOptions.background !== \"none\") {\n          ctx.fillStyle = this.fontOptions.background;\n\n          var lineMargin = 2;\n\n          if (this.isEdgeLabel) {\n            switch (this.fontOptions.align) {\n              case 'middle':\n                ctx.fillRect(-this.size.width * 0.5, -this.size.height * 0.5, this.size.width, this.size.height);\n                break;\n              case 'top':\n                ctx.fillRect(-this.size.width * 0.5, -(this.size.height + lineMargin), this.size.width, this.size.height);\n                break;\n              case 'bottom':\n                ctx.fillRect(-this.size.width * 0.5, lineMargin, this.size.width, this.size.height);\n                break;\n              default:\n                ctx.fillRect(this.size.left, this.size.top - 0.5 * lineMargin, this.size.width, this.size.height);\n                break;\n            }\n          } else {\n            ctx.fillRect(this.size.left, this.size.top - 0.5 * lineMargin, this.size.width, this.size.height);\n          }\n        }\n      }\n\n      /**\n       *\n       * @param ctx\n       * @param x\n       * @param baseline\n       * @private\n       */\n\n    }, {\n      key: '_drawText',\n      value: function _drawText(ctx, selected, x, y) {\n        var baseline = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'middle';\n\n        var fontSize = this.fontOptions.size;\n        var viewFontSize = fontSize * this.body.view.scale;\n        // this ensures that there will not be HUGE letters on screen by setting an upper limit on the visible text size (regardless of zoomLevel)\n        if (viewFontSize >= this.nodeOptions.scaling.label.maxVisible) {\n          fontSize = Number(this.nodeOptions.scaling.label.maxVisible) / this.body.view.scale;\n        }\n\n        var yLine = this.size.yLine;\n\n        var _getColor2 = this._getColor(viewFontSize),\n            _getColor3 = _slicedToArray(_getColor2, 2),\n            fontColor = _getColor3[0],\n            strokeColor = _getColor3[1];\n\n        // configure context for drawing the text\n        var _setAlignment2 = this._setAlignment(ctx, x, yLine, baseline);\n\n        var _setAlignment3 = _slicedToArray(_setAlignment2, 2);\n\n        x = _setAlignment3[0];\n        yLine = _setAlignment3[1];\n        ctx.font = (selected && this.nodeOptions.labelHighlightBold ? 'bold ' : '') + fontSize + \"px \" + this.fontOptions.face;\n        ctx.fillStyle = fontColor;\n        // When the textAlign property is 'left', make label left-justified\n        if (!this.isEdgeLabel && this.fontOptions.align === 'left') {\n          ctx.textAlign = this.fontOptions.align;\n          x = x - 0.5 * this.size.width; // Shift label 1/2-distance to the left\n        } else {\n          ctx.textAlign = 'center';\n        }\n\n        // set the strokeWidth\n        if (this.fontOptions.strokeWidth > 0) {\n          ctx.lineWidth = this.fontOptions.strokeWidth;\n          ctx.strokeStyle = strokeColor;\n          ctx.lineJoin = 'round';\n        }\n\n        // draw the text\n        for (var i = 0; i < this.lineCount; i++) {\n          if (this.fontOptions.strokeWidth > 0) {\n            ctx.strokeText(this.lines[i], x, yLine);\n          }\n          ctx.fillText(this.lines[i], x, yLine);\n          yLine += fontSize;\n        }\n      }\n    }, {\n      key: '_setAlignment',\n      value: function _setAlignment(ctx, x, yLine, baseline) {\n        // check for label alignment (for edges)\n        // TODO: make alignment for nodes\n        if (this.isEdgeLabel && this.fontOptions.align !== 'horizontal' && this.pointToSelf === false) {\n          x = 0;\n          yLine = 0;\n\n          var lineMargin = 2;\n          if (this.fontOptions.align === 'top') {\n            ctx.textBaseline = 'alphabetic';\n            yLine -= 2 * lineMargin; // distance from edge, required because we use alphabetic. Alphabetic has less difference between browsers\n          } else if (this.fontOptions.align === 'bottom') {\n            ctx.textBaseline = 'hanging';\n            yLine += 2 * lineMargin; // distance from edge, required because we use hanging. Hanging has less difference between browsers\n          } else {\n            ctx.textBaseline = 'middle';\n          }\n        } else {\n          ctx.textBaseline = baseline;\n        }\n\n        return [x, yLine];\n      }\n\n      /**\n       * fade in when relative scale is between threshold and threshold - 1.\n       * If the relative scale would be smaller than threshold -1 the draw function would have returned before coming here.\n       *\n       * @param viewFontSize\n       * @returns {*[]}\n       * @private\n       */\n\n    }, {\n      key: '_getColor',\n      value: function _getColor(viewFontSize) {\n        var fontColor = this.fontOptions.color || '#000000';\n        var strokeColor = this.fontOptions.strokeColor || '#ffffff';\n        if (viewFontSize <= this.nodeOptions.scaling.label.drawThreshold) {\n          var opacity = Math.max(0, Math.min(1, 1 - (this.nodeOptions.scaling.label.drawThreshold - viewFontSize)));\n          fontColor = util.overrideOpacity(fontColor, opacity);\n          strokeColor = util.overrideOpacity(strokeColor, opacity);\n        }\n        return [fontColor, strokeColor];\n      }\n\n      /**\n       *\n       * @param ctx\n       * @param selected\n       * @returns {{width: number, height: number}}\n       */\n\n    }, {\n      key: 'getTextSize',\n      value: function getTextSize(ctx) {\n        var selected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        var size = {\n          width: this._processLabel(ctx, selected),\n          height: this.fontOptions.size * this.lineCount,\n          lineCount: this.lineCount\n        };\n        return size;\n      }\n\n      /**\n       *\n       * @param ctx\n       * @param selected\n       * @param x\n       * @param y\n       * @param baseline\n       */\n\n    }, {\n      key: 'calculateLabelSize',\n      value: function calculateLabelSize(ctx, selected) {\n        var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n        var baseline = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'middle';\n\n        if (this.labelDirty === true) {\n          this.size.width = this._processLabel(ctx, selected);\n        }\n        this.size.height = this.fontOptions.size * this.lineCount;\n        this.size.left = x - this.size.width * 0.5;\n        this.size.top = y - this.size.height * 0.5;\n        this.size.yLine = y + (1 - this.lineCount) * 0.5 * this.fontOptions.size;\n        if (baseline === \"hanging\") {\n          this.size.top += 0.5 * this.fontOptions.size;\n          this.size.top += 4; // distance from node, required because we use hanging. Hanging has less difference between browsers\n          this.size.yLine += 4; // distance from node\n        }\n\n        this.labelDirty = false;\n      }\n\n      /**\n       * This calculates the width as well as explodes the label string and calculates the amount of lines.\n       * @param ctx\n       * @param selected\n       * @returns {number}\n       * @private\n       */\n\n    }, {\n      key: '_processLabel',\n      value: function _processLabel(ctx, selected) {\n        var width = 0;\n        var lines = [''];\n        var lineCount = 0;\n        if (this.nodeOptions.label !== undefined) {\n          lines = String(this.nodeOptions.label).split('\\n');\n          lineCount = lines.length;\n          ctx.font = (selected && this.nodeOptions.labelHighlightBold ? 'bold ' : '') + this.fontOptions.size + \"px \" + this.fontOptions.face;\n          width = ctx.measureText(lines[0]).width;\n          for (var i = 1; i < lineCount; i++) {\n            var lineWidth = ctx.measureText(lines[i]).width;\n            width = lineWidth > width ? lineWidth : width;\n          }\n        }\n        this.lines = lines;\n        this.lineCount = lineCount;\n\n        return width;\n      }\n    }], [{\n      key: 'parseOptions',\n      value: function parseOptions(parentOptions, newOptions) {\n        var allowDeletion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (typeof newOptions.font === 'string') {\n          var newOptionsArray = newOptions.font.split(\" \");\n          parentOptions.size = newOptionsArray[0].replace(\"px\", '');\n          parentOptions.face = newOptionsArray[1];\n          parentOptions.color = newOptionsArray[2];\n        } else if (_typeof(newOptions.font) === 'object') {\n          util.fillIfDefined(parentOptions, newOptions.font, allowDeletion);\n        }\n        parentOptions.size = Number(parentOptions.size);\n      }\n    }]);\n\n    return Label;\n  }();\n\n  exports.default = Label;\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _NodeBase2 = __webpack_require__(70);\n\n  var _NodeBase3 = _interopRequireDefault(_NodeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var Box = function (_NodeBase) {\n    _inherits(Box, _NodeBase);\n\n    function Box(options, body, labelModule) {\n      _classCallCheck(this, Box);\n\n      return _possibleConstructorReturn(this, (Box.__proto__ || Object.getPrototypeOf(Box)).call(this, options, body, labelModule));\n    }\n\n    _createClass(Box, [{\n      key: 'resize',\n      value: function resize(ctx, selected) {\n        if (this.width === undefined) {\n          var margin = 5;\n          var textSize = this.labelModule.getTextSize(ctx, selected);\n          this.width = textSize.width + 2 * margin;\n          this.height = textSize.height + 2 * margin;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx, selected);\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n\n        var borderWidth = this.options.borderWidth;\n        var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n\n        ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n        ctx.lineWidth = selected ? selectionLineWidth : borderWidth;\n        ctx.lineWidth /= this.body.view.scale;\n        ctx.lineWidth = Math.min(this.width, ctx.lineWidth);\n\n        ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n\n        var borderRadius = this.options.shapeProperties.borderRadius; // only effective for box\n        ctx.roundRect(this.left, this.top, this.width, this.height, borderRadius);\n\n        // draw shadow if enabled\n        this.enableShadow(ctx);\n        // draw the background\n        ctx.fill();\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n\n        //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n        ctx.save();\n        // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n        if (borderWidth > 0) {\n          this.enableBorderDashes(ctx);\n          //draw the border\n          ctx.stroke();\n          //disable dashed border for other elements\n          this.disableBorderDashes(ctx);\n        }\n        ctx.restore();\n\n        this.updateBoundingBox(x, y, ctx, selected);\n        this.labelModule.draw(ctx, x, y, selected);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y, ctx, selected) {\n        this.resize(ctx, selected);\n        this.left = x - this.width * 0.5;\n        this.top = y - this.height * 0.5;\n\n        var borderRadius = this.options.shapeProperties.borderRadius; // only effective for box\n        this.boundingBox.left = this.left - borderRadius;\n        this.boundingBox.top = this.top - borderRadius;\n        this.boundingBox.bottom = this.top + this.height + borderRadius;\n        this.boundingBox.right = this.left + this.width + borderRadius;\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        this.resize(ctx);\n        var borderWidth = this.options.borderWidth;\n\n        return Math.min(Math.abs(this.width / 2 / Math.cos(angle)), Math.abs(this.height / 2 / Math.sin(angle))) + borderWidth;\n      }\n    }]);\n\n    return Box;\n  }(_NodeBase3.default);\n\n  exports.default = Box;\n\n/***/ },\n/* 70 */\n/***/ function(module, exports) {\n\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var NodeBase = function () {\n    function NodeBase(options, body, labelModule) {\n      _classCallCheck(this, NodeBase);\n\n      this.body = body;\n      this.labelModule = labelModule;\n      this.setOptions(options);\n      this.top = undefined;\n      this.left = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this.radius = undefined;\n      this.boundingBox = { top: 0, left: 0, right: 0, bottom: 0 };\n    }\n\n    _createClass(NodeBase, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n    }, {\n      key: \"_distanceToBorder\",\n      value: function _distanceToBorder(ctx, angle) {\n        var borderWidth = this.options.borderWidth;\n        this.resize(ctx);\n        return Math.min(Math.abs(this.width / 2 / Math.cos(angle)), Math.abs(this.height / 2 / Math.sin(angle))) + borderWidth;\n      }\n    }, {\n      key: \"enableShadow\",\n      value: function enableShadow(ctx) {\n        if (this.options.shadow.enabled === true) {\n          ctx.shadowColor = this.options.shadow.color;\n          ctx.shadowBlur = this.options.shadow.size;\n          ctx.shadowOffsetX = this.options.shadow.x;\n          ctx.shadowOffsetY = this.options.shadow.y;\n        }\n      }\n    }, {\n      key: \"disableShadow\",\n      value: function disableShadow(ctx) {\n        if (this.options.shadow.enabled === true) {\n          ctx.shadowColor = 'rgba(0,0,0,0)';\n          ctx.shadowBlur = 0;\n          ctx.shadowOffsetX = 0;\n          ctx.shadowOffsetY = 0;\n        }\n      }\n    }, {\n      key: \"enableBorderDashes\",\n      value: function enableBorderDashes(ctx) {\n        if (this.options.shapeProperties.borderDashes !== false) {\n          if (ctx.setLineDash !== undefined) {\n            var dashes = this.options.shapeProperties.borderDashes;\n            if (dashes === true) {\n              dashes = [5, 15];\n            }\n            ctx.setLineDash(dashes);\n          } else {\n            console.warn(\"setLineDash is not supported in this browser. The dashed borders cannot be used.\");\n            this.options.shapeProperties.borderDashes = false;\n          }\n        }\n      }\n    }, {\n      key: \"disableBorderDashes\",\n      value: function disableBorderDashes(ctx) {\n        if (this.options.shapeProperties.borderDashes !== false) {\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash([0]);\n          } else {\n            console.warn(\"setLineDash is not supported in this browser. The dashed borders cannot be used.\");\n            this.options.shapeProperties.borderDashes = false;\n          }\n        }\n      }\n    }]);\n\n    return NodeBase;\n  }();\n\n  exports.default = NodeBase;\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _CircleImageBase2 = __webpack_require__(72);\n\n  var _CircleImageBase3 = _interopRequireDefault(_CircleImageBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var Circle = function (_CircleImageBase) {\n    _inherits(Circle, _CircleImageBase);\n\n    function Circle(options, body, labelModule) {\n      _classCallCheck(this, Circle);\n\n      return _possibleConstructorReturn(this, (Circle.__proto__ || Object.getPrototypeOf(Circle)).call(this, options, body, labelModule));\n    }\n\n    _createClass(Circle, [{\n      key: 'resize',\n      value: function resize(ctx, selected) {\n        if (this.width === undefined) {\n          var margin = 5;\n          var textSize = this.labelModule.getTextSize(ctx, selected);\n          var diameter = Math.max(textSize.width, textSize.height) + 2 * margin;\n          this.options.size = diameter / 2;\n\n          this.width = diameter;\n          this.height = diameter;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx, selected);\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n\n        this._drawRawCircle(ctx, x, y, selected, hover, this.options.size);\n\n        this.boundingBox.top = y - this.options.size;\n        this.boundingBox.left = x - this.options.size;\n        this.boundingBox.right = x + this.options.size;\n        this.boundingBox.bottom = y + this.options.size;\n\n        this.updateBoundingBox(x, y);\n        this.labelModule.draw(ctx, x, y, selected);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y) {\n        this.boundingBox.top = y - this.options.size;\n        this.boundingBox.left = x - this.options.size;\n        this.boundingBox.right = x + this.options.size;\n        this.boundingBox.bottom = y + this.options.size;\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        this.resize(ctx);\n        return this.width * 0.5;\n      }\n    }]);\n\n    return Circle;\n  }(_CircleImageBase3.default);\n\n  exports.default = Circle;\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _NodeBase2 = __webpack_require__(70);\n\n  var _NodeBase3 = _interopRequireDefault(_NodeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var CircleImageBase = function (_NodeBase) {\n    _inherits(CircleImageBase, _NodeBase);\n\n    function CircleImageBase(options, body, labelModule) {\n      _classCallCheck(this, CircleImageBase);\n\n      var _this = _possibleConstructorReturn(this, (CircleImageBase.__proto__ || Object.getPrototypeOf(CircleImageBase)).call(this, options, body, labelModule));\n\n      _this.labelOffset = 0;\n      _this.imageLoaded = false;\n      return _this;\n    }\n\n    _createClass(CircleImageBase, [{\n      key: 'setOptions',\n      value: function setOptions(options, imageObj) {\n        this.options = options;\n        if (imageObj) {\n          this.imageObj = imageObj;\n        }\n      }\n\n      /**\n       * This function resizes the image by the options size when the image has not yet loaded. If the image has loaded, we\n       * force the update of the size again.\n       *\n       * @private\n       */\n\n    }, {\n      key: '_resizeImage',\n      value: function _resizeImage() {\n        var force = false;\n        if (!this.imageObj.width || !this.imageObj.height) {\n          // undefined or 0\n          this.imageLoaded = false;\n        } else if (this.imageLoaded === false) {\n          this.imageLoaded = true;\n          force = true;\n        }\n\n        if (!this.width || !this.height || force === true) {\n          // undefined or 0\n          var width, height, ratio;\n          if (this.imageObj.width && this.imageObj.height) {\n            // not undefined or 0\n            width = 0;\n            height = 0;\n          }\n          if (this.options.shapeProperties.useImageSize === false) {\n            if (this.imageObj.width > this.imageObj.height) {\n              ratio = this.imageObj.width / this.imageObj.height;\n              width = this.options.size * 2 * ratio || this.imageObj.width;\n              height = this.options.size * 2 || this.imageObj.height;\n            } else {\n              if (this.imageObj.width && this.imageObj.height) {\n                // not undefined or 0\n                ratio = this.imageObj.height / this.imageObj.width;\n              } else {\n                ratio = 1;\n              }\n              width = this.options.size * 2;\n              height = this.options.size * 2 * ratio;\n            }\n          } else {\n            // when not using the size property, we use the image size\n            width = this.imageObj.width;\n            height = this.imageObj.height;\n          }\n          this.width = width;\n          this.height = height;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: '_drawRawCircle',\n      value: function _drawRawCircle(ctx, x, y, selected, hover, size) {\n        var neutralborderWidth = this.options.borderWidth;\n        var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n        var borderWidth = (selected ? selectionLineWidth : neutralborderWidth) / this.body.view.scale;\n        ctx.lineWidth = Math.min(this.width, borderWidth);\n\n        ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n        ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n        ctx.circle(x, y, size);\n\n        // draw shadow if enabled\n        this.enableShadow(ctx);\n        // draw the background\n        ctx.fill();\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n\n        //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n        ctx.save();\n        // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n        if (borderWidth > 0) {\n          this.enableBorderDashes(ctx);\n          //draw the border\n          ctx.stroke();\n          //disable dashed border for other elements\n          this.disableBorderDashes(ctx);\n        }\n        ctx.restore();\n      }\n    }, {\n      key: '_drawImageAtPosition',\n      value: function _drawImageAtPosition(ctx) {\n        if (this.imageObj.width != 0) {\n          // draw the image\n          ctx.globalAlpha = 1.0;\n\n          // draw shadow if enabled\n          this.enableShadow(ctx);\n\n          var factor = this.imageObj.width / this.width / this.body.view.scale;\n          if (factor > 2 && this.options.shapeProperties.interpolation === true) {\n            var w = this.imageObj.width;\n            var h = this.imageObj.height;\n            var can2 = document.createElement('canvas');\n            can2.width = w;\n            can2.height = w;\n            var ctx2 = can2.getContext('2d');\n\n            factor *= 0.5;\n            w *= 0.5;\n            h *= 0.5;\n            ctx2.drawImage(this.imageObj, 0, 0, w, h);\n\n            var distance = 0;\n            var iterations = 1;\n            while (factor > 2 && iterations < 4) {\n              ctx2.drawImage(can2, distance, 0, w, h, distance + w, 0, w / 2, h / 2);\n              distance += w;\n              factor *= 0.5;\n              w *= 0.5;\n              h *= 0.5;\n              iterations += 1;\n            }\n            ctx.drawImage(can2, distance, 0, w, h, this.left, this.top, this.width, this.height);\n          } else {\n            // draw image\n            ctx.drawImage(this.imageObj, this.left, this.top, this.width, this.height);\n          }\n\n          // disable shadows for other elements.\n          this.disableShadow(ctx);\n        }\n      }\n    }, {\n      key: '_drawImageLabel',\n      value: function _drawImageLabel(ctx, x, y, selected) {\n        var yLabel;\n        var offset = 0;\n\n        if (this.height !== undefined) {\n          offset = this.height * 0.5;\n          var labelDimensions = this.labelModule.getTextSize(ctx);\n          if (labelDimensions.lineCount >= 1) {\n            offset += labelDimensions.height / 2;\n          }\n        }\n\n        yLabel = y + offset;\n\n        if (this.options.label) {\n          this.labelOffset = offset;\n        }\n        this.labelModule.draw(ctx, x, yLabel, selected, 'hanging');\n      }\n    }]);\n\n    return CircleImageBase;\n  }(_NodeBase3.default);\n\n  exports.default = CircleImageBase;\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _CircleImageBase2 = __webpack_require__(72);\n\n  var _CircleImageBase3 = _interopRequireDefault(_CircleImageBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var CircularImage = function (_CircleImageBase) {\n    _inherits(CircularImage, _CircleImageBase);\n\n    function CircularImage(options, body, labelModule, imageObj) {\n      _classCallCheck(this, CircularImage);\n\n      var _this = _possibleConstructorReturn(this, (CircularImage.__proto__ || Object.getPrototypeOf(CircularImage)).call(this, options, body, labelModule));\n\n      _this.imageObj = imageObj;\n      _this._swapToImageResizeWhenImageLoaded = true;\n      return _this;\n    }\n\n    _createClass(CircularImage, [{\n      key: 'resize',\n      value: function resize() {\n        if (this.imageObj.src === undefined || this.imageObj.width === undefined || this.imageObj.height === undefined) {\n          if (!this.width) {\n            var diameter = this.options.size * 2;\n            this.width = diameter;\n            this.height = diameter;\n            this._swapToImageResizeWhenImageLoaded = true;\n            this.radius = 0.5 * this.width;\n          }\n        } else {\n          if (this._swapToImageResizeWhenImageLoaded) {\n            this.width = undefined;\n            this.height = undefined;\n            this._swapToImageResizeWhenImageLoaded = false;\n          }\n          this._resizeImage();\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize();\n\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n\n        var size = Math.min(0.5 * this.height, 0.5 * this.width);\n\n        // draw the background circle. IMPORTANT: the stroke in this method is used by the clip method below.\n        this._drawRawCircle(ctx, x, y, selected, hover, size);\n\n        // now we draw in the circle, we save so we can revert the clip operation after drawing.\n        ctx.save();\n        // clip is used to use the stroke in drawRawCircle as an area that we can draw in.\n        ctx.clip();\n        // draw the image\n        this._drawImageAtPosition(ctx);\n        // restore so we can again draw on the full canvas\n        ctx.restore();\n\n        this._drawImageLabel(ctx, x, y, selected);\n\n        this.updateBoundingBox(x, y);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y) {\n        this.boundingBox.top = y - this.options.size;\n        this.boundingBox.left = x - this.options.size;\n        this.boundingBox.right = x + this.options.size;\n        this.boundingBox.bottom = y + this.options.size;\n        this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\n        this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\n        this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelOffset);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        this.resize(ctx);\n        return this.width * 0.5;\n      }\n    }]);\n\n    return CircularImage;\n  }(_CircleImageBase3.default);\n\n  exports.default = CircularImage;\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _NodeBase2 = __webpack_require__(70);\n\n  var _NodeBase3 = _interopRequireDefault(_NodeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var Database = function (_NodeBase) {\n    _inherits(Database, _NodeBase);\n\n    function Database(options, body, labelModule) {\n      _classCallCheck(this, Database);\n\n      return _possibleConstructorReturn(this, (Database.__proto__ || Object.getPrototypeOf(Database)).call(this, options, body, labelModule));\n    }\n\n    _createClass(Database, [{\n      key: 'resize',\n      value: function resize(ctx, selected) {\n        if (this.width === undefined) {\n          var margin = 5;\n          var textSize = this.labelModule.getTextSize(ctx, selected);\n          var size = textSize.width + 2 * margin;\n          this.width = size;\n          this.height = size;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx, selected);\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n\n        var neutralborderWidth = this.options.borderWidth;\n        var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n        var borderWidth = (selected ? selectionLineWidth : neutralborderWidth) / this.body.view.scale;\n        ctx.lineWidth = Math.min(this.width, borderWidth);\n\n        ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n\n        ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n        ctx.database(x - this.width / 2, y - this.height * 0.5, this.width, this.height);\n\n        // draw shadow if enabled\n        this.enableShadow(ctx);\n        // draw the background\n        ctx.fill();\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n\n        //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n        ctx.save();\n        // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n        if (borderWidth > 0) {\n          this.enableBorderDashes(ctx);\n          //draw the border\n          ctx.stroke();\n          //disable dashed border for other elements\n          this.disableBorderDashes(ctx);\n        }\n        ctx.restore();\n\n        this.updateBoundingBox(x, y, ctx, selected);\n        this.labelModule.draw(ctx, x, y, selected);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y, ctx, selected) {\n        this.resize(ctx, selected);\n\n        this.left = x - this.width * 0.5;\n        this.top = y - this.height * 0.5;\n\n        this.boundingBox.left = this.left;\n        this.boundingBox.top = this.top;\n        this.boundingBox.bottom = this.top + this.height;\n        this.boundingBox.right = this.left + this.width;\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n\n    return Database;\n  }(_NodeBase3.default);\n\n  exports.default = Database;\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _ShapeBase2 = __webpack_require__(76);\n\n  var _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var Diamond = function (_ShapeBase) {\n    _inherits(Diamond, _ShapeBase);\n\n    function Diamond(options, body, labelModule) {\n      _classCallCheck(this, Diamond);\n\n      return _possibleConstructorReturn(this, (Diamond.__proto__ || Object.getPrototypeOf(Diamond)).call(this, options, body, labelModule));\n    }\n\n    _createClass(Diamond, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'diamond', 4, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n\n    return Diamond;\n  }(_ShapeBase3.default);\n\n  exports.default = Diamond;\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _NodeBase2 = __webpack_require__(70);\n\n  var _NodeBase3 = _interopRequireDefault(_NodeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var ShapeBase = function (_NodeBase) {\n    _inherits(ShapeBase, _NodeBase);\n\n    function ShapeBase(options, body, labelModule) {\n      _classCallCheck(this, ShapeBase);\n\n      return _possibleConstructorReturn(this, (ShapeBase.__proto__ || Object.getPrototypeOf(ShapeBase)).call(this, options, body, labelModule));\n    }\n\n    _createClass(ShapeBase, [{\n      key: '_resizeShape',\n      value: function _resizeShape() {\n        if (this.width === undefined) {\n          var size = 2 * this.options.size;\n          this.width = size;\n          this.height = size;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: '_drawShape',\n      value: function _drawShape(ctx, shape, sizeMultiplier, x, y, selected, hover) {\n        this._resizeShape();\n\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n\n        var neutralborderWidth = this.options.borderWidth;\n        var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n        var borderWidth = (selected ? selectionLineWidth : neutralborderWidth) / this.body.view.scale;\n        ctx.lineWidth = Math.min(this.width, borderWidth);\n\n        ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n        ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n        ctx[shape](x, y, this.options.size);\n\n        // draw shadow if enabled\n        this.enableShadow(ctx);\n        // draw the background\n        ctx.fill();\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n\n        //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n        ctx.save();\n        // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n        if (borderWidth > 0) {\n          this.enableBorderDashes(ctx);\n          //draw the border\n          ctx.stroke();\n          //disable dashed border for other elements\n          this.disableBorderDashes(ctx);\n        }\n        ctx.restore();\n\n        if (this.options.label !== undefined) {\n          var yLabel = y + 0.5 * this.height + 3; // the + 3 is to offset it a bit below the node.\n          this.labelModule.draw(ctx, x, yLabel, selected, 'hanging');\n        }\n\n        this.updateBoundingBox(x, y);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y) {\n        this.boundingBox.top = y - this.options.size;\n        this.boundingBox.left = x - this.options.size;\n        this.boundingBox.right = x + this.options.size;\n        this.boundingBox.bottom = y + this.options.size;\n\n        if (this.options.label !== undefined && this.labelModule.size.width > 0) {\n          this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\n          this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\n          this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelModule.size.height + 3);\n        }\n      }\n    }]);\n\n    return ShapeBase;\n  }(_NodeBase3.default);\n\n  exports.default = ShapeBase;\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _ShapeBase2 = __webpack_require__(76);\n\n  var _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var Dot = function (_ShapeBase) {\n    _inherits(Dot, _ShapeBase);\n\n    function Dot(options, body, labelModule) {\n      _classCallCheck(this, Dot);\n\n      return _possibleConstructorReturn(this, (Dot.__proto__ || Object.getPrototypeOf(Dot)).call(this, options, body, labelModule));\n    }\n\n    _createClass(Dot, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'circle', 2, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        this.resize(ctx);\n        return this.options.size;\n      }\n    }]);\n\n    return Dot;\n  }(_ShapeBase3.default);\n\n  exports.default = Dot;\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _NodeBase2 = __webpack_require__(70);\n\n  var _NodeBase3 = _interopRequireDefault(_NodeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var Ellipse = function (_NodeBase) {\n    _inherits(Ellipse, _NodeBase);\n\n    function Ellipse(options, body, labelModule) {\n      _classCallCheck(this, Ellipse);\n\n      return _possibleConstructorReturn(this, (Ellipse.__proto__ || Object.getPrototypeOf(Ellipse)).call(this, options, body, labelModule));\n    }\n\n    _createClass(Ellipse, [{\n      key: 'resize',\n      value: function resize(ctx, selected) {\n        if (this.width === undefined) {\n          var textSize = this.labelModule.getTextSize(ctx, selected);\n\n          this.height = textSize.height * 2;\n          this.width = textSize.width + this.height;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx, selected);\n        this.left = x - this.width * 0.5;\n        this.top = y - this.height * 0.5;\n\n        var neutralborderWidth = this.options.borderWidth;\n        var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n        var borderWidth = (selected ? selectionLineWidth : neutralborderWidth) / this.body.view.scale;\n        ctx.lineWidth = Math.min(this.width, borderWidth);\n\n        ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n\n        ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n        ctx.ellipse(this.left, this.top, this.width, this.height);\n\n        // draw shadow if enabled\n        this.enableShadow(ctx);\n        // draw the background\n        ctx.fill();\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n\n        //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n        ctx.save();\n\n        // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n        if (borderWidth > 0) {\n          this.enableBorderDashes(ctx);\n          //draw the border\n          ctx.stroke();\n          //disable dashed border for other elements\n          this.disableBorderDashes(ctx);\n        }\n\n        ctx.restore();\n\n        this.updateBoundingBox(x, y, ctx, selected);\n        this.labelModule.draw(ctx, x, y, selected);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y, ctx, selected) {\n        this.resize(ctx, selected); // just in case\n\n        this.left = x - this.width * 0.5;\n        this.top = y - this.height * 0.5;\n\n        this.boundingBox.left = this.left;\n        this.boundingBox.top = this.top;\n        this.boundingBox.bottom = this.top + this.height;\n        this.boundingBox.right = this.left + this.width;\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        this.resize(ctx);\n        var a = this.width * 0.5;\n        var b = this.height * 0.5;\n        var w = Math.sin(angle) * a;\n        var h = Math.cos(angle) * b;\n        return a * b / Math.sqrt(w * w + h * h);\n      }\n    }]);\n\n    return Ellipse;\n  }(_NodeBase3.default);\n\n  exports.default = Ellipse;\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _NodeBase2 = __webpack_require__(70);\n\n  var _NodeBase3 = _interopRequireDefault(_NodeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var Icon = function (_NodeBase) {\n    _inherits(Icon, _NodeBase);\n\n    function Icon(options, body, labelModule) {\n      _classCallCheck(this, Icon);\n\n      return _possibleConstructorReturn(this, (Icon.__proto__ || Object.getPrototypeOf(Icon)).call(this, options, body, labelModule));\n    }\n\n    _createClass(Icon, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        if (this.width === undefined) {\n          var margin = 5;\n          var iconSize = {\n            width: Number(this.options.icon.size),\n            height: Number(this.options.icon.size)\n          };\n          this.width = iconSize.width + 2 * margin;\n          this.height = iconSize.height + 2 * margin;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx);\n        this.options.icon.size = this.options.icon.size || 50;\n\n        this.left = x - this.width * 0.5;\n        this.top = y - this.height * 0.5;\n        this._icon(ctx, x, y, selected);\n\n        if (this.options.label !== undefined) {\n          var iconTextSpacing = 5;\n          this.labelModule.draw(ctx, x, y + this.height * 0.5 + iconTextSpacing, selected);\n        }\n\n        this.updateBoundingBox(x, y);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y) {\n        this.boundingBox.top = y - this.options.icon.size * 0.5;\n        this.boundingBox.left = x - this.options.icon.size * 0.5;\n        this.boundingBox.right = x + this.options.icon.size * 0.5;\n        this.boundingBox.bottom = y + this.options.icon.size * 0.5;\n\n        if (this.options.label !== undefined && this.labelModule.size.width > 0) {\n          var iconTextSpacing = 5;\n          this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\n          this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\n          this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelModule.size.height + iconTextSpacing);\n        }\n      }\n    }, {\n      key: '_icon',\n      value: function _icon(ctx, x, y, selected) {\n        var iconSize = Number(this.options.icon.size);\n\n        if (this.options.icon.code !== undefined) {\n          ctx.font = (selected ? \"bold \" : \"\") + iconSize + \"px \" + this.options.icon.face;\n\n          // draw icon\n          ctx.fillStyle = this.options.icon.color || \"black\";\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"middle\";\n\n          // draw shadow if enabled\n          this.enableShadow(ctx);\n          ctx.fillText(this.options.icon.code, x, y);\n\n          // disable shadows for other elements.\n          this.disableShadow(ctx);\n        } else {\n          console.error('When using the icon shape, you need to define the code in the icon options object. This can be done per node or globally.');\n        }\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n\n    return Icon;\n  }(_NodeBase3.default);\n\n  exports.default = Icon;\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _CircleImageBase2 = __webpack_require__(72);\n\n  var _CircleImageBase3 = _interopRequireDefault(_CircleImageBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var Image = function (_CircleImageBase) {\n    _inherits(Image, _CircleImageBase);\n\n    function Image(options, body, labelModule, imageObj) {\n      _classCallCheck(this, Image);\n\n      var _this = _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).call(this, options, body, labelModule));\n\n      _this.imageObj = imageObj;\n      return _this;\n    }\n\n    _createClass(Image, [{\n      key: 'resize',\n      value: function resize() {\n        this._resizeImage();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize();\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n\n        if (this.options.shapeProperties.useBorderWithImage === true) {\n          var neutralborderWidth = this.options.borderWidth;\n          var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;\n          var borderWidth = (selected ? selectionLineWidth : neutralborderWidth) / this.body.view.scale;\n          ctx.lineWidth = Math.min(this.width, borderWidth);\n\n          ctx.beginPath();\n\n          // setup the line properties.\n          ctx.strokeStyle = selected ? this.options.color.highlight.border : hover ? this.options.color.hover.border : this.options.color.border;\n\n          // set a fillstyle\n          ctx.fillStyle = selected ? this.options.color.highlight.background : hover ? this.options.color.hover.background : this.options.color.background;\n\n          // draw a rectangle to form the border around. This rectangle is filled so the opacity of a picture (in future vis releases?) can be used to tint the image\n          ctx.rect(this.left - 0.5 * ctx.lineWidth, this.top - 0.5 * ctx.lineWidth, this.width + ctx.lineWidth, this.height + ctx.lineWidth);\n          ctx.fill();\n\n          //draw dashed border if enabled, save and restore is required for firefox not to crash on unix.\n          ctx.save();\n          // if borders are zero width, they will be drawn with width 1 by default. This prevents that\n          if (borderWidth > 0) {\n            this.enableBorderDashes(ctx);\n            //draw the border\n            ctx.stroke();\n            //disable dashed border for other elements\n            this.disableBorderDashes(ctx);\n          }\n          ctx.restore();\n\n          ctx.closePath();\n        }\n\n        this._drawImageAtPosition(ctx);\n\n        this._drawImageLabel(ctx, x, y, selected || hover);\n\n        this.updateBoundingBox(x, y);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y) {\n        this.resize();\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n\n        this.boundingBox.top = this.top;\n        this.boundingBox.left = this.left;\n        this.boundingBox.right = this.left + this.width;\n        this.boundingBox.bottom = this.top + this.height;\n\n        if (this.options.label !== undefined && this.labelModule.size.width > 0) {\n          this.boundingBox.left = Math.min(this.boundingBox.left, this.labelModule.size.left);\n          this.boundingBox.right = Math.max(this.boundingBox.right, this.labelModule.size.left + this.labelModule.size.width);\n          this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelOffset);\n        }\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n\n    return Image;\n  }(_CircleImageBase3.default);\n\n  exports.default = Image;\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _ShapeBase2 = __webpack_require__(76);\n\n  var _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var Square = function (_ShapeBase) {\n    _inherits(Square, _ShapeBase);\n\n    function Square(options, body, labelModule) {\n      _classCallCheck(this, Square);\n\n      return _possibleConstructorReturn(this, (Square.__proto__ || Object.getPrototypeOf(Square)).call(this, options, body, labelModule));\n    }\n\n    _createClass(Square, [{\n      key: 'resize',\n      value: function resize() {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'square', 2, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n\n    return Square;\n  }(_ShapeBase3.default);\n\n  exports.default = Square;\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _ShapeBase2 = __webpack_require__(76);\n\n  var _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var Star = function (_ShapeBase) {\n    _inherits(Star, _ShapeBase);\n\n    function Star(options, body, labelModule) {\n      _classCallCheck(this, Star);\n\n      return _possibleConstructorReturn(this, (Star.__proto__ || Object.getPrototypeOf(Star)).call(this, options, body, labelModule));\n    }\n\n    _createClass(Star, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'star', 4, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n\n    return Star;\n  }(_ShapeBase3.default);\n\n  exports.default = Star;\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _NodeBase2 = __webpack_require__(70);\n\n  var _NodeBase3 = _interopRequireDefault(_NodeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var Text = function (_NodeBase) {\n    _inherits(Text, _NodeBase);\n\n    function Text(options, body, labelModule) {\n      _classCallCheck(this, Text);\n\n      return _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this, options, body, labelModule));\n    }\n\n    _createClass(Text, [{\n      key: 'resize',\n      value: function resize(ctx, selected) {\n        if (this.width === undefined) {\n          var margin = 5;\n          var textSize = this.labelModule.getTextSize(ctx, selected);\n          this.width = textSize.width + 2 * margin;\n          this.height = textSize.height + 2 * margin;\n          this.radius = 0.5 * this.width;\n        }\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this.resize(ctx, selected || hover);\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n\n        // draw shadow if enabled\n        this.enableShadow(ctx);\n        this.labelModule.draw(ctx, x, y, selected || hover);\n\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n\n        this.updateBoundingBox(x, y, ctx, selected);\n      }\n    }, {\n      key: 'updateBoundingBox',\n      value: function updateBoundingBox(x, y, ctx, selected) {\n        this.resize(ctx, selected);\n\n        this.left = x - this.width / 2;\n        this.top = y - this.height / 2;\n\n        this.boundingBox.top = this.top;\n        this.boundingBox.left = this.left;\n        this.boundingBox.right = this.left + this.width;\n        this.boundingBox.bottom = this.top + this.height;\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n\n    return Text;\n  }(_NodeBase3.default);\n\n  exports.default = Text;\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _ShapeBase2 = __webpack_require__(76);\n\n  var _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var Triangle = function (_ShapeBase) {\n    _inherits(Triangle, _ShapeBase);\n\n    function Triangle(options, body, labelModule) {\n      _classCallCheck(this, Triangle);\n\n      return _possibleConstructorReturn(this, (Triangle.__proto__ || Object.getPrototypeOf(Triangle)).call(this, options, body, labelModule));\n    }\n\n    _createClass(Triangle, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'triangle', 3, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n\n    return Triangle;\n  }(_ShapeBase3.default);\n\n  exports.default = Triangle;\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _ShapeBase2 = __webpack_require__(76);\n\n  var _ShapeBase3 = _interopRequireDefault(_ShapeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var TriangleDown = function (_ShapeBase) {\n    _inherits(TriangleDown, _ShapeBase);\n\n    function TriangleDown(options, body, labelModule) {\n      _classCallCheck(this, TriangleDown);\n\n      return _possibleConstructorReturn(this, (TriangleDown.__proto__ || Object.getPrototypeOf(TriangleDown)).call(this, options, body, labelModule));\n    }\n\n    _createClass(TriangleDown, [{\n      key: 'resize',\n      value: function resize(ctx) {\n        this._resizeShape();\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y, selected, hover) {\n        this._drawShape(ctx, 'triangleDown', 3, x, y, selected, hover);\n      }\n    }, {\n      key: 'distanceToBorder',\n      value: function distanceToBorder(ctx, angle) {\n        return this._distanceToBorder(ctx, angle);\n      }\n    }]);\n\n    return TriangleDown;\n  }(_ShapeBase3.default);\n\n  exports.default = TriangleDown;\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _Edge = __webpack_require__(87);\n\n  var _Edge2 = _interopRequireDefault(_Edge);\n\n  var _Label = __webpack_require__(68);\n\n  var _Label2 = _interopRequireDefault(_Label);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n  var DataSet = __webpack_require__(9);\n  var DataView = __webpack_require__(11);\n\n  var EdgesHandler = function () {\n    function EdgesHandler(body, images, groups) {\n      var _this = this;\n\n      _classCallCheck(this, EdgesHandler);\n\n      this.body = body;\n      this.images = images;\n      this.groups = groups;\n\n      // create the edge API in the body container\n      this.body.functions.createEdge = this.create.bind(this);\n\n      this.edgesListeners = {\n        add: function add(event, params) {\n          _this.add(params.items);\n        },\n        update: function update(event, params) {\n          _this.update(params.items);\n        },\n        remove: function remove(event, params) {\n          _this.remove(params.items);\n        }\n      };\n\n      this.options = {};\n      this.defaultOptions = {\n        arrows: {\n          to: { enabled: false, scaleFactor: 1, type: 'arrow' }, // boolean / {arrowScaleFactor:1} / {enabled: false, arrowScaleFactor:1}\n          middle: { enabled: false, scaleFactor: 1, type: 'arrow' },\n          from: { enabled: false, scaleFactor: 1, type: 'arrow' }\n        },\n        arrowStrikethrough: true,\n        color: {\n          color: '#848484',\n          highlight: '#848484',\n          hover: '#848484',\n          inherit: 'from',\n          opacity: 1.0\n        },\n        dashes: false,\n        font: {\n          color: '#343434',\n          size: 14, // px\n          face: 'arial',\n          background: 'none',\n          strokeWidth: 2, // px\n          strokeColor: '#ffffff',\n          align: 'horizontal'\n        },\n        hidden: false,\n        hoverWidth: 1.5,\n        label: undefined,\n        labelHighlightBold: true,\n        length: undefined,\n        physics: true,\n        scaling: {\n          min: 1,\n          max: 15,\n          label: {\n            enabled: true,\n            min: 14,\n            max: 30,\n            maxVisible: 30,\n            drawThreshold: 5\n          },\n          customScalingFunction: function customScalingFunction(min, max, total, value) {\n            if (max === min) {\n              return 0.5;\n            } else {\n              var scale = 1 / (max - min);\n              return Math.max(0, (value - min) * scale);\n            }\n          }\n        },\n        selectionWidth: 1.5,\n        selfReferenceSize: 20,\n        shadow: {\n          enabled: false,\n          color: 'rgba(0,0,0,0.5)',\n          size: 10,\n          x: 5,\n          y: 5\n        },\n        smooth: {\n          enabled: true,\n          type: \"dynamic\",\n          forceDirection: 'none',\n          roundness: 0.5\n        },\n        title: undefined,\n        width: 1,\n        value: undefined\n      };\n\n      util.extend(this.options, this.defaultOptions);\n\n      this.bindEventListeners();\n    }\n\n    _createClass(EdgesHandler, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this2 = this;\n\n        // this allows external modules to force all dynamic curves to turn static.\n        this.body.emitter.on(\"_forceDisableDynamicCurves\", function (type) {\n          if (type === 'dynamic') {\n            type = 'continuous';\n          }\n          var emitChange = false;\n          for (var edgeId in _this2.body.edges) {\n            if (_this2.body.edges.hasOwnProperty(edgeId)) {\n              var edge = _this2.body.edges[edgeId];\n              var edgeData = _this2.body.data.edges._data[edgeId];\n\n              // only forcibly remove the smooth curve if the data has been set of the edge has the smooth curves defined.\n              // this is because a change in the global would not affect these curves.\n              if (edgeData !== undefined) {\n                var edgeOptions = edgeData.smooth;\n                if (edgeOptions !== undefined) {\n                  if (edgeOptions.enabled === true && edgeOptions.type === 'dynamic') {\n                    if (type === undefined) {\n                      edge.setOptions({ smooth: false });\n                    } else {\n                      edge.setOptions({ smooth: { type: type } });\n                    }\n                    emitChange = true;\n                  }\n                }\n              }\n            }\n          }\n          if (emitChange === true) {\n            _this2.body.emitter.emit(\"_dataChanged\");\n          }\n        });\n\n        // this is called when options of EXISTING nodes or edges have changed.\n        this.body.emitter.on(\"_dataUpdated\", function () {\n          _this2.reconnectEdges();\n          _this2.markAllEdgesAsDirty();\n        });\n\n        // refresh the edges. Used when reverting from hierarchical layout\n        this.body.emitter.on(\"refreshEdges\", this.refresh.bind(this));\n        this.body.emitter.on(\"refresh\", this.refresh.bind(this));\n        this.body.emitter.on(\"destroy\", function () {\n          util.forEach(_this2.edgesListeners, function (callback, event) {\n            if (_this2.body.data.edges) _this2.body.data.edges.off(event, callback);\n          });\n          delete _this2.body.functions.createEdge;\n          delete _this2.edgesListeners.add;\n          delete _this2.edgesListeners.update;\n          delete _this2.edgesListeners.remove;\n          delete _this2.edgesListeners;\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          // use the parser from the Edge class to fill in all shorthand notations\n          _Edge2.default.parseOptions(this.options, options);\n\n          // handle multiple input cases for color\n          if (options.color !== undefined) {\n            this.markAllEdgesAsDirty();\n          }\n\n          // update smooth settings in all edges\n          var dataChanged = false;\n          if (options.smooth !== undefined) {\n            for (var edgeId in this.body.edges) {\n              if (this.body.edges.hasOwnProperty(edgeId)) {\n                dataChanged = this.body.edges[edgeId].updateEdgeType() || dataChanged;\n              }\n            }\n          }\n\n          // update fonts in all edges\n          if (options.font !== undefined) {\n            // use the parser from the Label class to fill in all shorthand notations\n            _Label2.default.parseOptions(this.options.font, options);\n            for (var _edgeId in this.body.edges) {\n              if (this.body.edges.hasOwnProperty(_edgeId)) {\n                this.body.edges[_edgeId].updateLabelModule();\n              }\n            }\n          }\n\n          // update the state of the variables if needed\n          if (options.hidden !== undefined || options.physics !== undefined || dataChanged === true) {\n            this.body.emitter.emit('_dataChanged');\n          }\n        }\n      }\n\n      /**\n       * Load edges by reading the data table\n       * @param {Array | DataSet | DataView} edges    The data containing the edges.\n       * @private\n       * @private\n       */\n\n    }, {\n      key: 'setData',\n      value: function setData(edges) {\n        var _this3 = this;\n\n        var doNotEmit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        var oldEdgesData = this.body.data.edges;\n\n        if (edges instanceof DataSet || edges instanceof DataView) {\n          this.body.data.edges = edges;\n        } else if (Array.isArray(edges)) {\n          this.body.data.edges = new DataSet();\n          this.body.data.edges.add(edges);\n        } else if (!edges) {\n          this.body.data.edges = new DataSet();\n        } else {\n          throw new TypeError('Array or DataSet expected');\n        }\n\n        // TODO: is this null or undefined or false?\n        if (oldEdgesData) {\n          // unsubscribe from old dataset\n          util.forEach(this.edgesListeners, function (callback, event) {\n            oldEdgesData.off(event, callback);\n          });\n        }\n\n        // remove drawn edges\n        this.body.edges = {};\n\n        // TODO: is this null or undefined or false?\n        if (this.body.data.edges) {\n          // subscribe to new dataset\n          util.forEach(this.edgesListeners, function (callback, event) {\n            _this3.body.data.edges.on(event, callback);\n          });\n\n          // draw all new nodes\n          var ids = this.body.data.edges.getIds();\n          this.add(ids, true);\n        }\n\n        if (doNotEmit === false) {\n          this.body.emitter.emit(\"_dataChanged\");\n        }\n      }\n\n      /**\n       * Add edges\n       * @param {Number[] | String[]} ids\n       * @private\n       */\n\n    }, {\n      key: 'add',\n      value: function add(ids) {\n        var doNotEmit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        var edges = this.body.edges;\n        var edgesData = this.body.data.edges;\n\n        for (var i = 0; i < ids.length; i++) {\n          var id = ids[i];\n\n          var oldEdge = edges[id];\n          if (oldEdge) {\n            oldEdge.disconnect();\n          }\n\n          var data = edgesData.get(id, { \"showInternalIds\": true });\n          edges[id] = this.create(data);\n        }\n\n        if (doNotEmit === false) {\n          this.body.emitter.emit(\"_dataChanged\");\n        }\n      }\n\n      /**\n       * Update existing edges, or create them when not yet existing\n       * @param {Number[] | String[]} ids\n       * @private\n       */\n\n    }, {\n      key: 'update',\n      value: function update(ids) {\n        var edges = this.body.edges;\n        var edgesData = this.body.data.edges;\n        var dataChanged = false;\n        for (var i = 0; i < ids.length; i++) {\n          var id = ids[i];\n          var data = edgesData.get(id);\n          var edge = edges[id];\n          if (edge !== undefined) {\n            // update edge\n            edge.disconnect();\n            dataChanged = edge.setOptions(data) || dataChanged; // if a support node is added, data can be changed.\n            edge.connect();\n          } else {\n            // create edge\n            this.body.edges[id] = this.create(data);\n            dataChanged = true;\n          }\n        }\n\n        if (dataChanged === true) {\n          this.body.emitter.emit(\"_dataChanged\");\n        } else {\n          this.body.emitter.emit(\"_dataUpdated\");\n        }\n      }\n\n      /**\n       * Remove existing edges. Non existing ids will be ignored\n       * @param {Number[] | String[]} ids\n       * @private\n       */\n\n    }, {\n      key: 'remove',\n      value: function remove(ids) {\n        var edges = this.body.edges;\n        for (var i = 0; i < ids.length; i++) {\n          var id = ids[i];\n          var edge = edges[id];\n          if (edge !== undefined) {\n            edge.cleanup();\n            edge.disconnect();\n            delete edges[id];\n          }\n        }\n\n        this.body.emitter.emit(\"_dataChanged\");\n      }\n    }, {\n      key: 'refresh',\n      value: function refresh() {\n        var edges = this.body.edges;\n        for (var edgeId in edges) {\n          var edge = undefined;\n          if (edges.hasOwnProperty(edgeId)) {\n            edge = edges[edgeId];\n          }\n          var data = this.body.data.edges._data[edgeId];\n          if (edge !== undefined && data !== undefined) {\n            edge.setOptions(data);\n          }\n        }\n      }\n    }, {\n      key: 'create',\n      value: function create(properties) {\n        return new _Edge2.default(properties, this.body, this.options);\n      }\n    }, {\n      key: 'markAllEdgesAsDirty',\n      value: function markAllEdgesAsDirty() {\n        for (var edgeId in this.body.edges) {\n          this.body.edges[edgeId].edgeType.colorDirty = true;\n        }\n      }\n\n      /**\n       * Reconnect all edges\n       * @private\n       */\n\n    }, {\n      key: 'reconnectEdges',\n      value: function reconnectEdges() {\n        var id;\n        var nodes = this.body.nodes;\n        var edges = this.body.edges;\n\n        for (id in nodes) {\n          if (nodes.hasOwnProperty(id)) {\n            nodes[id].edges = [];\n          }\n        }\n\n        for (id in edges) {\n          if (edges.hasOwnProperty(id)) {\n            var edge = edges[id];\n            edge.from = null;\n            edge.to = null;\n            edge.connect();\n          }\n        }\n      }\n    }, {\n      key: 'getConnectedNodes',\n      value: function getConnectedNodes(edgeId) {\n        var nodeList = [];\n        if (this.body.edges[edgeId] !== undefined) {\n          var edge = this.body.edges[edgeId];\n          if (edge.fromId) {\n            nodeList.push(edge.fromId);\n          }\n          if (edge.toId) {\n            nodeList.push(edge.toId);\n          }\n        }\n        return nodeList;\n      }\n    }]);\n\n    return EdgesHandler;\n  }();\n\n  exports.default = EdgesHandler;\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _Label = __webpack_require__(68);\n\n  var _Label2 = _interopRequireDefault(_Label);\n\n  var _CubicBezierEdge = __webpack_require__(88);\n\n  var _CubicBezierEdge2 = _interopRequireDefault(_CubicBezierEdge);\n\n  var _BezierEdgeDynamic = __webpack_require__(92);\n\n  var _BezierEdgeDynamic2 = _interopRequireDefault(_BezierEdgeDynamic);\n\n  var _BezierEdgeStatic = __webpack_require__(93);\n\n  var _BezierEdgeStatic2 = _interopRequireDefault(_BezierEdgeStatic);\n\n  var _StraightEdge = __webpack_require__(94);\n\n  var _StraightEdge2 = _interopRequireDefault(_StraightEdge);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n\n  /**\n   * @class Edge\n   *\n   * A edge connects two nodes\n   * @param {Object} properties     Object with options. Must contain\n   *                                At least options from and to.\n   *                                Available options: from (number),\n   *                                to (number), label (string, color (string),\n   *                                width (number), style (string),\n   *                                length (number), title (string)\n   * @param {Network} network       A Network object, used to find and edge to\n   *                                nodes.\n   * @param {Object} constants      An object with default values for\n   *                                example for the color\n   */\n  var Edge = function () {\n    function Edge(options, body, globalOptions) {\n      _classCallCheck(this, Edge);\n\n      if (body === undefined) {\n        throw \"No body provided\";\n      }\n      this.options = util.bridgeObject(globalOptions);\n      this.globalOptions = globalOptions;\n      this.body = body;\n\n      // initialize variables\n      this.id = undefined;\n      this.fromId = undefined;\n      this.toId = undefined;\n      this.selected = false;\n      this.hover = false;\n      this.labelDirty = true;\n      this.colorDirty = true;\n\n      this.baseWidth = this.options.width;\n      this.baseFontSize = this.options.font.size;\n\n      this.from = undefined; // a node\n      this.to = undefined; // a node\n\n      this.edgeType = undefined;\n\n      this.connected = false;\n\n      this.labelModule = new _Label2.default(this.body, this.options, true /* It's an edge label */);\n\n      this.setOptions(options);\n    }\n\n    /**\n     * Set or overwrite options for the edge\n     * @param {Object} options  an object with options\n     * @param doNotEmit\n     */\n\n\n    _createClass(Edge, [{\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (!options) {\n          return;\n        }\n        this.colorDirty = true;\n\n        Edge.parseOptions(this.options, options, true, this.globalOptions);\n\n        if (options.id !== undefined) {\n          this.id = options.id;\n        }\n        if (options.from !== undefined) {\n          this.fromId = options.from;\n        }\n        if (options.to !== undefined) {\n          this.toId = options.to;\n        }\n        if (options.title !== undefined) {\n          this.title = options.title;\n        }\n        if (options.value !== undefined) {\n          options.value = parseFloat(options.value);\n        }\n\n        // update label Module\n        this.updateLabelModule();\n\n        var dataChanged = this.updateEdgeType();\n\n        // if anything has been updates, reset the selection width and the hover width\n        this._setInteractionWidths();\n\n        // A node is connected when it has a from and to node that both exist in the network.body.nodes.\n        this.connect();\n\n        if (options.hidden !== undefined || options.physics !== undefined) {\n          dataChanged = true;\n        }\n\n        return dataChanged;\n      }\n    }, {\n      key: 'updateLabelModule',\n\n\n      /**\n       * update the options in the label module\n       */\n      value: function updateLabelModule() {\n        this.labelModule.setOptions(this.options, true);\n        if (this.labelModule.baseSize !== undefined) {\n          this.baseFontSize = this.labelModule.baseSize;\n        }\n      }\n\n      /**\n       * update the edge type, set the options\n       * @returns {boolean}\n       */\n\n    }, {\n      key: 'updateEdgeType',\n      value: function updateEdgeType() {\n        var dataChanged = false;\n        var changeInType = true;\n        var smooth = this.options.smooth;\n        if (this.edgeType !== undefined) {\n          if (this.edgeType instanceof _BezierEdgeDynamic2.default && smooth.enabled === true && smooth.type === 'dynamic') {\n            changeInType = false;\n          }\n          if (this.edgeType instanceof _CubicBezierEdge2.default && smooth.enabled === true && smooth.type === 'cubicBezier') {\n            changeInType = false;\n          }\n          if (this.edgeType instanceof _BezierEdgeStatic2.default && smooth.enabled === true && smooth.type !== 'dynamic' && smooth.type !== 'cubicBezier') {\n            changeInType = false;\n          }\n          if (this.edgeType instanceof _StraightEdge2.default && smooth.enabled === false) {\n            changeInType = false;\n          }\n\n          if (changeInType === true) {\n            dataChanged = this.cleanup();\n          }\n        }\n\n        if (changeInType === true) {\n          if (this.options.smooth.enabled === true) {\n            if (this.options.smooth.type === 'dynamic') {\n              dataChanged = true;\n              this.edgeType = new _BezierEdgeDynamic2.default(this.options, this.body, this.labelModule);\n            } else if (this.options.smooth.type === 'cubicBezier') {\n              this.edgeType = new _CubicBezierEdge2.default(this.options, this.body, this.labelModule);\n            } else {\n              this.edgeType = new _BezierEdgeStatic2.default(this.options, this.body, this.labelModule);\n            }\n          } else {\n            this.edgeType = new _StraightEdge2.default(this.options, this.body, this.labelModule);\n          }\n        } else {\n          // if nothing changes, we just set the options.\n          this.edgeType.setOptions(this.options);\n        }\n\n        return dataChanged;\n      }\n\n      /**\n       * Connect an edge to its nodes\n       */\n\n    }, {\n      key: 'connect',\n      value: function connect() {\n        this.disconnect();\n\n        this.from = this.body.nodes[this.fromId] || undefined;\n        this.to = this.body.nodes[this.toId] || undefined;\n        this.connected = this.from !== undefined && this.to !== undefined;\n\n        if (this.connected === true) {\n          this.from.attachEdge(this);\n          this.to.attachEdge(this);\n        } else {\n          if (this.from) {\n            this.from.detachEdge(this);\n          }\n          if (this.to) {\n            this.to.detachEdge(this);\n          }\n        }\n\n        this.edgeType.connect();\n      }\n\n      /**\n       * Disconnect an edge from its nodes\n       */\n\n    }, {\n      key: 'disconnect',\n      value: function disconnect() {\n        if (this.from) {\n          this.from.detachEdge(this);\n          this.from = undefined;\n        }\n        if (this.to) {\n          this.to.detachEdge(this);\n          this.to = undefined;\n        }\n\n        this.connected = false;\n      }\n\n      /**\n       * get the title of this edge.\n       * @return {string} title    The title of the edge, or undefined when no title\n       *                           has been set.\n       */\n\n    }, {\n      key: 'getTitle',\n      value: function getTitle() {\n        return this.title;\n      }\n\n      /**\n       * check if this node is selecte\n       * @return {boolean} selected   True if node is selected, else false\n       */\n\n    }, {\n      key: 'isSelected',\n      value: function isSelected() {\n        return this.selected;\n      }\n\n      /**\n       * Retrieve the value of the edge. Can be undefined\n       * @return {Number} value\n       */\n\n    }, {\n      key: 'getValue',\n      value: function getValue() {\n        return this.options.value;\n      }\n\n      /**\n       * Adjust the value range of the edge. The edge will adjust it's width\n       * based on its value.\n       * @param {Number} min\n       * @param {Number} max\n       * @param total\n       */\n\n    }, {\n      key: 'setValueRange',\n      value: function setValueRange(min, max, total) {\n        if (this.options.value !== undefined) {\n          var scale = this.options.scaling.customScalingFunction(min, max, total, this.options.value);\n          var widthDiff = this.options.scaling.max - this.options.scaling.min;\n          if (this.options.scaling.label.enabled === true) {\n            var fontDiff = this.options.scaling.label.max - this.options.scaling.label.min;\n            this.options.font.size = this.options.scaling.label.min + scale * fontDiff;\n          }\n          this.options.width = this.options.scaling.min + scale * widthDiff;\n        } else {\n          this.options.width = this.baseWidth;\n          this.options.font.size = this.baseFontSize;\n        }\n\n        this._setInteractionWidths();\n        this.updateLabelModule();\n      }\n    }, {\n      key: '_setInteractionWidths',\n      value: function _setInteractionWidths() {\n        if (typeof this.options.hoverWidth === 'function') {\n          this.edgeType.hoverWidth = this.options.hoverWidth(this.options.width);\n        } else {\n          this.edgeType.hoverWidth = this.options.hoverWidth + this.options.width;\n        }\n\n        if (typeof this.options.selectionWidth === 'function') {\n          this.edgeType.selectionWidth = this.options.selectionWidth(this.options.width);\n        } else {\n          this.edgeType.selectionWidth = this.options.selectionWidth + this.options.width;\n        }\n      }\n\n      /**\n       * Redraw a edge\n       * Draw this edge in the given canvas\n       * The 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");\n       * @param {CanvasRenderingContext2D}   ctx\n       */\n\n    }, {\n      key: 'draw',\n      value: function draw(ctx) {\n        // get the via node from the edge type\n        var viaNode = this.edgeType.getViaNode();\n        var arrowData = {};\n\n        // restore edge targets to defaults\n        this.edgeType.fromPoint = this.edgeType.from;\n        this.edgeType.toPoint = this.edgeType.to;\n\n        // from and to arrows give a different end point for edges. we set them here\n        if (this.options.arrows.from.enabled === true) {\n          arrowData.from = this.edgeType.getArrowData(ctx, 'from', viaNode, this.selected, this.hover);\n          if (this.options.arrowStrikethrough === false) this.edgeType.fromPoint = arrowData.from.core;\n        }\n        if (this.options.arrows.to.enabled === true) {\n          arrowData.to = this.edgeType.getArrowData(ctx, 'to', viaNode, this.selected, this.hover);\n          if (this.options.arrowStrikethrough === false) this.edgeType.toPoint = arrowData.to.core;\n        }\n\n        // the middle arrow depends on the line, which can depend on the to and from arrows so we do this one lastly.\n        if (this.options.arrows.middle.enabled === true) {\n          arrowData.middle = this.edgeType.getArrowData(ctx, 'middle', viaNode, this.selected, this.hover);\n        }\n\n        // draw everything\n        this.edgeType.drawLine(ctx, this.selected, this.hover, viaNode);\n        this.drawArrows(ctx, arrowData);\n        this.drawLabel(ctx, viaNode);\n      }\n    }, {\n      key: 'drawArrows',\n      value: function drawArrows(ctx, arrowData) {\n        if (this.options.arrows.from.enabled === true) {\n          this.edgeType.drawArrowHead(ctx, this.selected, this.hover, arrowData.from);\n        }\n        if (this.options.arrows.middle.enabled === true) {\n          this.edgeType.drawArrowHead(ctx, this.selected, this.hover, arrowData.middle);\n        }\n        if (this.options.arrows.to.enabled === true) {\n          this.edgeType.drawArrowHead(ctx, this.selected, this.hover, arrowData.to);\n        }\n      }\n    }, {\n      key: 'drawLabel',\n      value: function drawLabel(ctx, viaNode) {\n        if (this.options.label !== undefined) {\n          // set style\n          var node1 = this.from;\n          var node2 = this.to;\n          var selected = this.from.selected || this.to.selected || this.selected;\n          if (node1.id != node2.id) {\n            this.labelModule.pointToSelf = false;\n            var point = this.edgeType.getPoint(0.5, viaNode);\n            ctx.save();\n\n            // if the label has to be rotated:\n            if (this.options.font.align !== \"horizontal\") {\n              this.labelModule.calculateLabelSize(ctx, selected, point.x, point.y);\n              ctx.translate(point.x, this.labelModule.size.yLine);\n              this._rotateForLabelAlignment(ctx);\n            }\n\n            // draw the label\n            this.labelModule.draw(ctx, point.x, point.y, selected);\n            ctx.restore();\n          } else {\n            // Ignore the orientations.\n            this.labelModule.pointToSelf = true;\n            var x, y;\n            var radius = this.options.selfReferenceSize;\n            if (node1.shape.width > node1.shape.height) {\n              x = node1.x + node1.shape.width * 0.5;\n              y = node1.y - radius;\n            } else {\n              x = node1.x + radius;\n              y = node1.y - node1.shape.height * 0.5;\n            }\n            point = this._pointOnCircle(x, y, radius, 0.125);\n            this.labelModule.draw(ctx, point.x, point.y, selected);\n          }\n        }\n      }\n\n      /**\n       * Check if this object is overlapping with the provided object\n       * @param {Object} obj   an object with parameters left, top\n       * @return {boolean}     True if location is located on the edge\n       */\n\n    }, {\n      key: 'isOverlappingWith',\n      value: function isOverlappingWith(obj) {\n        if (this.connected) {\n          var distMax = 10;\n          var xFrom = this.from.x;\n          var yFrom = this.from.y;\n          var xTo = this.to.x;\n          var yTo = this.to.y;\n          var xObj = obj.left;\n          var yObj = obj.top;\n\n          var dist = this.edgeType.getDistanceToEdge(xFrom, yFrom, xTo, yTo, xObj, yObj);\n\n          return dist < distMax;\n        } else {\n          return false;\n        }\n      }\n\n      /**\n       * Rotates the canvas so the text is most readable\n       * @param {CanvasRenderingContext2D} ctx\n       * @private\n       */\n\n    }, {\n      key: '_rotateForLabelAlignment',\n      value: function _rotateForLabelAlignment(ctx) {\n        var dy = this.from.y - this.to.y;\n        var dx = this.from.x - this.to.x;\n        var angleInDegrees = Math.atan2(dy, dx);\n\n        // rotate so label it is readable\n        if (angleInDegrees < -1 && dx < 0 || angleInDegrees > 0 && dx < 0) {\n          angleInDegrees = angleInDegrees + Math.PI;\n        }\n\n        ctx.rotate(angleInDegrees);\n      }\n\n      /**\n       * Get a point on a circle\n       * @param {Number} x\n       * @param {Number} y\n       * @param {Number} radius\n       * @param {Number} percentage. Value between 0 (line start) and 1 (line end)\n       * @return {Object} point\n       * @private\n       */\n\n    }, {\n      key: '_pointOnCircle',\n      value: function _pointOnCircle(x, y, radius, percentage) {\n        var angle = percentage * 2 * Math.PI;\n        return {\n          x: x + radius * Math.cos(angle),\n          y: y - radius * Math.sin(angle)\n        };\n      }\n    }, {\n      key: 'select',\n      value: function select() {\n        this.selected = true;\n      }\n    }, {\n      key: 'unselect',\n      value: function unselect() {\n        this.selected = false;\n      }\n\n      /**\n       * cleans all required things on delete\n       * @returns {*}\n       */\n\n    }, {\n      key: 'cleanup',\n      value: function cleanup() {\n        return this.edgeType.cleanup();\n      }\n    }], [{\n      key: 'parseOptions',\n      value: function parseOptions(parentOptions, newOptions) {\n        var allowDeletion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var globalOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n        var fields = ['arrowStrikethrough', 'id', 'from', 'hidden', 'hoverWidth', 'label', 'labelHighlightBold', 'length', 'line', 'opacity', 'physics', 'scaling', 'selectionWidth', 'selfReferenceSize', 'to', 'title', 'value', 'width'];\n\n        // only deep extend the items in the field array. These do not have shorthand.\n        util.selectiveDeepExtend(fields, parentOptions, newOptions, allowDeletion);\n\n        util.mergeOptions(parentOptions, newOptions, 'smooth', allowDeletion, globalOptions);\n        util.mergeOptions(parentOptions, newOptions, 'shadow', allowDeletion, globalOptions);\n\n        if (newOptions.dashes !== undefined && newOptions.dashes !== null) {\n          parentOptions.dashes = newOptions.dashes;\n        } else if (allowDeletion === true && newOptions.dashes === null) {\n          parentOptions.dashes = Object.create(globalOptions.dashes); // this sets the pointer of the option back to the global option.\n        }\n\n        // set the scaling newOptions\n        if (newOptions.scaling !== undefined && newOptions.scaling !== null) {\n          if (newOptions.scaling.min !== undefined) {\n            parentOptions.scaling.min = newOptions.scaling.min;\n          }\n          if (newOptions.scaling.max !== undefined) {\n            parentOptions.scaling.max = newOptions.scaling.max;\n          }\n          util.mergeOptions(parentOptions.scaling, newOptions.scaling, 'label', allowDeletion, globalOptions.scaling);\n        } else if (allowDeletion === true && newOptions.scaling === null) {\n          parentOptions.scaling = Object.create(globalOptions.scaling); // this sets the pointer of the option back to the global option.\n        }\n\n        // handle multiple input cases for arrows\n        if (newOptions.arrows !== undefined && newOptions.arrows !== null) {\n          if (typeof newOptions.arrows === 'string') {\n            var arrows = newOptions.arrows.toLowerCase();\n            parentOptions.arrows.to.enabled = arrows.indexOf(\"to\") != -1;\n            parentOptions.arrows.middle.enabled = arrows.indexOf(\"middle\") != -1;\n            parentOptions.arrows.from.enabled = arrows.indexOf(\"from\") != -1;\n          } else if (_typeof(newOptions.arrows) === 'object') {\n            util.mergeOptions(parentOptions.arrows, newOptions.arrows, 'to', allowDeletion, globalOptions.arrows);\n            util.mergeOptions(parentOptions.arrows, newOptions.arrows, 'middle', allowDeletion, globalOptions.arrows);\n            util.mergeOptions(parentOptions.arrows, newOptions.arrows, 'from', allowDeletion, globalOptions.arrows);\n          } else {\n            throw new Error(\"The arrow newOptions can only be an object or a string. Refer to the documentation. You used:\" + JSON.stringify(newOptions.arrows));\n          }\n        } else if (allowDeletion === true && newOptions.arrows === null) {\n          parentOptions.arrows = Object.create(globalOptions.arrows); // this sets the pointer of the option back to the global option.\n        }\n\n        // handle multiple input cases for color\n        if (newOptions.color !== undefined && newOptions.color !== null) {\n          // make a copy of the parent object in case this is referring to the global one (due to object create once, then update)\n          parentOptions.color = util.deepExtend({}, parentOptions.color, true);\n          if (util.isString(newOptions.color)) {\n            parentOptions.color.color = newOptions.color;\n            parentOptions.color.highlight = newOptions.color;\n            parentOptions.color.hover = newOptions.color;\n            parentOptions.color.inherit = false;\n          } else {\n            var colorsDefined = false;\n            if (newOptions.color.color !== undefined) {\n              parentOptions.color.color = newOptions.color.color;colorsDefined = true;\n            }\n            if (newOptions.color.highlight !== undefined) {\n              parentOptions.color.highlight = newOptions.color.highlight;colorsDefined = true;\n            }\n            if (newOptions.color.hover !== undefined) {\n              parentOptions.color.hover = newOptions.color.hover;colorsDefined = true;\n            }\n            if (newOptions.color.inherit !== undefined) {\n              parentOptions.color.inherit = newOptions.color.inherit;\n            }\n            if (newOptions.color.opacity !== undefined) {\n              parentOptions.color.opacity = Math.min(1, Math.max(0, newOptions.color.opacity));\n            }\n\n            if (newOptions.color.inherit === undefined && colorsDefined === true) {\n              parentOptions.color.inherit = false;\n            }\n          }\n        } else if (allowDeletion === true && newOptions.color === null) {\n          parentOptions.color = util.bridgeObject(globalOptions.color); // set the object back to the global options\n        }\n\n        // handle the font settings\n        if (newOptions.font !== undefined && newOptions.font !== null) {\n          _Label2.default.parseOptions(parentOptions.font, newOptions);\n        } else if (allowDeletion === true && newOptions.font === null) {\n          parentOptions.font = util.bridgeObject(globalOptions.font); // set the object back to the global options\n        }\n      }\n    }]);\n\n    return Edge;\n  }();\n\n  exports.default = Edge;\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _CubicBezierEdgeBase2 = __webpack_require__(89);\n\n  var _CubicBezierEdgeBase3 = _interopRequireDefault(_CubicBezierEdgeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var CubicBezierEdge = function (_CubicBezierEdgeBase) {\n    _inherits(CubicBezierEdge, _CubicBezierEdgeBase);\n\n    function CubicBezierEdge(options, body, labelModule) {\n      _classCallCheck(this, CubicBezierEdge);\n\n      return _possibleConstructorReturn(this, (CubicBezierEdge.__proto__ || Object.getPrototypeOf(CubicBezierEdge)).call(this, options, body, labelModule));\n    }\n\n    /**\n     * Draw a line between two nodes\n     * @param {CanvasRenderingContext2D} ctx\n     * @private\n     */\n\n\n    _createClass(CubicBezierEdge, [{\n      key: '_line',\n      value: function _line(ctx, viaNodes) {\n        // get the coordinates of the support points.\n        var via1 = viaNodes[0];\n        var via2 = viaNodes[1];\n\n        // start drawing the line.\n        ctx.beginPath();\n        ctx.moveTo(this.fromPoint.x, this.fromPoint.y);\n\n        // fallback to normal straight edges\n        if (viaNodes === undefined || via1.x === undefined) {\n          ctx.lineTo(this.toPoint.x, this.toPoint.y);\n        } else {\n          ctx.bezierCurveTo(via1.x, via1.y, via2.x, via2.y, this.toPoint.x, this.toPoint.y);\n        }\n        // draw shadow if enabled\n        this.enableShadow(ctx);\n        ctx.stroke();\n        this.disableShadow(ctx);\n      }\n    }, {\n      key: '_getViaCoordinates',\n      value: function _getViaCoordinates() {\n        var dx = this.from.x - this.to.x;\n        var dy = this.from.y - this.to.y;\n\n        var x1 = void 0,\n            y1 = void 0,\n            x2 = void 0,\n            y2 = void 0;\n        var roundness = this.options.smooth.roundness;\n\n        // horizontal if x > y or if direction is forced or if direction is horizontal\n        if ((Math.abs(dx) > Math.abs(dy) || this.options.smooth.forceDirection === true || this.options.smooth.forceDirection === 'horizontal') && this.options.smooth.forceDirection !== 'vertical') {\n          y1 = this.from.y;\n          y2 = this.to.y;\n          x1 = this.from.x - roundness * dx;\n          x2 = this.to.x + roundness * dx;\n        } else {\n          y1 = this.from.y - roundness * dy;\n          y2 = this.to.y + roundness * dy;\n          x1 = this.from.x;\n          x2 = this.to.x;\n        }\n\n        return [{ x: x1, y: y1 }, { x: x2, y: y2 }];\n      }\n    }, {\n      key: 'getViaNode',\n      value: function getViaNode() {\n        return this._getViaCoordinates();\n      }\n    }, {\n      key: '_findBorderPosition',\n      value: function _findBorderPosition(nearNode, ctx) {\n        return this._findBorderPositionBezier(nearNode, ctx);\n      }\n    }, {\n      key: '_getDistanceToEdge',\n      value: function _getDistanceToEdge(x1, y1, x2, y2, x3, y3) {\n        var _ref = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : this._getViaCoordinates(),\n            _ref2 = _slicedToArray(_ref, 2),\n            via1 = _ref2[0],\n            via2 = _ref2[1];\n\n        // x3,y3 is the point\n        return this._getDistanceToBezierEdge(x1, y1, x2, y2, x3, y3, via1, via2);\n      }\n\n      /**\n       * Combined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way\n       * @param percentage\n       * @param via\n       * @returns {{x: number, y: number}}\n       * @private\n       */\n\n    }, {\n      key: 'getPoint',\n      value: function getPoint(percentage) {\n        var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._getViaCoordinates(),\n            _ref4 = _slicedToArray(_ref3, 2),\n            via1 = _ref4[0],\n            via2 = _ref4[1];\n\n        var t = percentage;\n        var vec = [];\n        vec[0] = Math.pow(1 - t, 3);\n        vec[1] = 3 * t * Math.pow(1 - t, 2);\n        vec[2] = 3 * Math.pow(t, 2) * (1 - t);\n        vec[3] = Math.pow(t, 3);\n        var x = vec[0] * this.fromPoint.x + vec[1] * via1.x + vec[2] * via2.x + vec[3] * this.toPoint.x;\n        var y = vec[0] * this.fromPoint.y + vec[1] * via1.y + vec[2] * via2.y + vec[3] * this.toPoint.y;\n\n        return { x: x, y: y };\n      }\n    }]);\n\n    return CubicBezierEdge;\n  }(_CubicBezierEdgeBase3.default);\n\n  exports.default = CubicBezierEdge;\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _BezierEdgeBase2 = __webpack_require__(90);\n\n  var _BezierEdgeBase3 = _interopRequireDefault(_BezierEdgeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var CubicBezierEdgeBase = function (_BezierEdgeBase) {\n    _inherits(CubicBezierEdgeBase, _BezierEdgeBase);\n\n    function CubicBezierEdgeBase(options, body, labelModule) {\n      _classCallCheck(this, CubicBezierEdgeBase);\n\n      return _possibleConstructorReturn(this, (CubicBezierEdgeBase.__proto__ || Object.getPrototypeOf(CubicBezierEdgeBase)).call(this, options, body, labelModule));\n    }\n\n    /**\n     * Calculate the distance between a point (x3,y3) and a line segment from\n     * (x1,y1) to (x2,y2).\n     * http://stackoverflow.com/questions/849211/shortest-distancae-between-a-point-and-a-line-segment\n     * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n     * @param {number} x1 from x\n     * @param {number} y1 from y\n     * @param {number} x2 to x\n     * @param {number} y2 to y\n     * @param {number} x3 point to check x\n     * @param {number} y3 point to check y\n     * @private\n     */\n\n\n    _createClass(CubicBezierEdgeBase, [{\n      key: '_getDistanceToBezierEdge',\n      value: function _getDistanceToBezierEdge(x1, y1, x2, y2, x3, y3, via1, via2) {\n        // x3,y3 is the point\n        var minDistance = 1e9;\n        var distance = void 0;\n        var i = void 0,\n            t = void 0,\n            x = void 0,\n            y = void 0;\n        var lastX = x1;\n        var lastY = y1;\n        var vec = [0, 0, 0, 0];\n        for (i = 1; i < 10; i++) {\n          t = 0.1 * i;\n          vec[0] = Math.pow(1 - t, 3);\n          vec[1] = 3 * t * Math.pow(1 - t, 2);\n          vec[2] = 3 * Math.pow(t, 2) * (1 - t);\n          vec[3] = Math.pow(t, 3);\n          x = vec[0] * x1 + vec[1] * via1.x + vec[2] * via2.x + vec[3] * x2;\n          y = vec[0] * y1 + vec[1] * via1.y + vec[2] * via2.y + vec[3] * y2;\n          if (i > 0) {\n            distance = this._getDistanceToLine(lastX, lastY, x, y, x3, y3);\n            minDistance = distance < minDistance ? distance : minDistance;\n          }\n          lastX = x;\n          lastY = y;\n        }\n\n        return minDistance;\n      }\n    }]);\n\n    return CubicBezierEdgeBase;\n  }(_BezierEdgeBase3.default);\n\n  exports.default = CubicBezierEdgeBase;\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _EdgeBase2 = __webpack_require__(91);\n\n  var _EdgeBase3 = _interopRequireDefault(_EdgeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var BezierEdgeBase = function (_EdgeBase) {\n    _inherits(BezierEdgeBase, _EdgeBase);\n\n    function BezierEdgeBase(options, body, labelModule) {\n      _classCallCheck(this, BezierEdgeBase);\n\n      return _possibleConstructorReturn(this, (BezierEdgeBase.__proto__ || Object.getPrototypeOf(BezierEdgeBase)).call(this, options, body, labelModule));\n    }\n\n    /**\n     * This function uses binary search to look for the point where the bezier curve crosses the border of the node.\n     *\n     * @param nearNode\n     * @param ctx\n     * @param viaNode\n     * @param nearNode\n     * @param ctx\n     * @param viaNode\n     * @param nearNode\n     * @param ctx\n     * @param viaNode\n     */\n\n\n    _createClass(BezierEdgeBase, [{\n      key: '_findBorderPositionBezier',\n      value: function _findBorderPositionBezier(nearNode, ctx) {\n        var viaNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this._getViaCoordinates();\n\n        var maxIterations = 10;\n        var iteration = 0;\n        var low = 0;\n        var high = 1;\n        var pos, angle, distanceToBorder, distanceToPoint, difference;\n        var threshold = 0.2;\n        var node = this.to;\n        var from = false;\n        if (nearNode.id === this.from.id) {\n          node = this.from;\n          from = true;\n        }\n\n        while (low <= high && iteration < maxIterations) {\n          var middle = (low + high) * 0.5;\n\n          pos = this.getPoint(middle, viaNode);\n          angle = Math.atan2(node.y - pos.y, node.x - pos.x);\n          distanceToBorder = node.distanceToBorder(ctx, angle);\n          distanceToPoint = Math.sqrt(Math.pow(pos.x - node.x, 2) + Math.pow(pos.y - node.y, 2));\n          difference = distanceToBorder - distanceToPoint;\n          if (Math.abs(difference) < threshold) {\n            break; // found\n          } else if (difference < 0) {\n            // distance to nodes is larger than distance to border --> t needs to be bigger if we're looking at the to node.\n            if (from === false) {\n              low = middle;\n            } else {\n              high = middle;\n            }\n          } else {\n            if (from === false) {\n              high = middle;\n            } else {\n              low = middle;\n            }\n          }\n\n          iteration++;\n        }\n        pos.t = middle;\n\n        return pos;\n      }\n\n      /**\n       * Calculate the distance between a point (x3,y3) and a line segment from\n       * (x1,y1) to (x2,y2).\n       * http://stackoverflow.com/questions/849211/shortest-distancae-between-a-point-and-a-line-segment\n       * @param {number} x1 from x\n       * @param {number} y1 from y\n       * @param {number} x2 to x\n       * @param {number} y2 to y\n       * @param {number} x3 point to check x\n       * @param {number} y3 point to check y\n       * @private\n       */\n\n    }, {\n      key: '_getDistanceToBezierEdge',\n      value: function _getDistanceToBezierEdge(x1, y1, x2, y2, x3, y3, via) {\n        // x3,y3 is the point\n        var minDistance = 1e9;\n        var distance = void 0;\n        var i = void 0,\n            t = void 0,\n            x = void 0,\n            y = void 0;\n        var lastX = x1;\n        var lastY = y1;\n        for (i = 1; i < 10; i++) {\n          t = 0.1 * i;\n          x = Math.pow(1 - t, 2) * x1 + 2 * t * (1 - t) * via.x + Math.pow(t, 2) * x2;\n          y = Math.pow(1 - t, 2) * y1 + 2 * t * (1 - t) * via.y + Math.pow(t, 2) * y2;\n          if (i > 0) {\n            distance = this._getDistanceToLine(lastX, lastY, x, y, x3, y3);\n            minDistance = distance < minDistance ? distance : minDistance;\n          }\n          lastX = x;\n          lastY = y;\n        }\n\n        return minDistance;\n      }\n    }]);\n\n    return BezierEdgeBase;\n  }(_EdgeBase3.default);\n\n  exports.default = BezierEdgeBase;\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n\n  var EdgeBase = function () {\n    function EdgeBase(options, body, labelModule) {\n      _classCallCheck(this, EdgeBase);\n\n      this.body = body;\n      this.labelModule = labelModule;\n      this.options = {};\n      this.setOptions(options);\n      this.colorDirty = true;\n      this.color = {};\n      this.selectionWidth = 2;\n      this.hoverWidth = 1.5;\n      this.fromPoint = this.from;\n      this.toPoint = this.to;\n    }\n\n    _createClass(EdgeBase, [{\n      key: 'connect',\n      value: function connect() {\n        this.from = this.body.nodes[this.options.from];\n        this.to = this.body.nodes[this.options.to];\n      }\n    }, {\n      key: 'cleanup',\n      value: function cleanup() {\n        return false;\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        this.options = options;\n        this.from = this.body.nodes[this.options.from];\n        this.to = this.body.nodes[this.options.to];\n        this.id = this.options.id;\n      }\n\n      /**\n       * Redraw a edge as a line\n       * Draw this edge in the given canvas\n       * The 2d context of a HTML canvas can be retrieved by canvas.getContext(\"2d\");\n       * @param {CanvasRenderingContext2D}   ctx\n       * @private\n       */\n\n    }, {\n      key: 'drawLine',\n      value: function drawLine(ctx, selected, hover, viaNode) {\n        // set style\n        ctx.strokeStyle = this.getColor(ctx, selected, hover);\n        ctx.lineWidth = this.getLineWidth(selected, hover);\n\n        if (this.options.dashes !== false) {\n          this._drawDashedLine(ctx, viaNode);\n        } else {\n          this._drawLine(ctx, viaNode);\n        }\n      }\n    }, {\n      key: '_drawLine',\n      value: function _drawLine(ctx, viaNode, fromPoint, toPoint) {\n        if (this.from != this.to) {\n          // draw line\n          this._line(ctx, viaNode, fromPoint, toPoint);\n        } else {\n          var _getCircleData2 = this._getCircleData(ctx),\n              _getCircleData3 = _slicedToArray(_getCircleData2, 3),\n              x = _getCircleData3[0],\n              y = _getCircleData3[1],\n              radius = _getCircleData3[2];\n\n          this._circle(ctx, x, y, radius);\n        }\n      }\n    }, {\n      key: '_drawDashedLine',\n      value: function _drawDashedLine(ctx, viaNode, fromPoint, toPoint) {\n        ctx.lineCap = 'round';\n        var pattern = [5, 5];\n        if (Array.isArray(this.options.dashes) === true) {\n          pattern = this.options.dashes;\n        }\n\n        // only firefox and chrome support this method, else we use the legacy one.\n        if (ctx.setLineDash !== undefined) {\n          ctx.save();\n\n          // set dash settings for chrome or firefox\n          ctx.setLineDash(pattern);\n          ctx.lineDashOffset = 0;\n\n          // draw the line\n          if (this.from != this.to) {\n            // draw line\n            this._line(ctx, viaNode);\n          } else {\n            var _getCircleData4 = this._getCircleData(ctx),\n                _getCircleData5 = _slicedToArray(_getCircleData4, 3),\n                x = _getCircleData5[0],\n                y = _getCircleData5[1],\n                radius = _getCircleData5[2];\n\n            this._circle(ctx, x, y, radius);\n          }\n\n          // restore the dash settings.\n          ctx.setLineDash([0]);\n          ctx.lineDashOffset = 0;\n          ctx.restore();\n        } else {\n          // unsupporting smooth lines\n          if (this.from != this.to) {\n            // draw line\n            ctx.dashedLine(this.from.x, this.from.y, this.to.x, this.to.y, pattern);\n          } else {\n            var _getCircleData6 = this._getCircleData(ctx),\n                _getCircleData7 = _slicedToArray(_getCircleData6, 3),\n                _x = _getCircleData7[0],\n                _y = _getCircleData7[1],\n                _radius = _getCircleData7[2];\n\n            this._circle(ctx, _x, _y, _radius);\n          }\n          // draw shadow if enabled\n          this.enableShadow(ctx);\n\n          ctx.stroke();\n\n          // disable shadows for other elements.\n          this.disableShadow(ctx);\n        }\n      }\n    }, {\n      key: 'findBorderPosition',\n      value: function findBorderPosition(nearNode, ctx, options) {\n        if (this.from != this.to) {\n          return this._findBorderPosition(nearNode, ctx, options);\n        } else {\n          return this._findBorderPositionCircle(nearNode, ctx, options);\n        }\n      }\n    }, {\n      key: 'findBorderPositions',\n      value: function findBorderPositions(ctx) {\n        var from = {};\n        var to = {};\n        if (this.from != this.to) {\n          from = this._findBorderPosition(this.from, ctx);\n          to = this._findBorderPosition(this.to, ctx);\n        } else {\n          var _getCircleData8 = this._getCircleData(ctx),\n              _getCircleData9 = _slicedToArray(_getCircleData8, 3),\n              x = _getCircleData9[0],\n              y = _getCircleData9[1],\n              radius = _getCircleData9[2];\n\n          from = this._findBorderPositionCircle(this.from, ctx, { x: x, y: y, low: 0.25, high: 0.6, direction: -1 });\n          to = this._findBorderPositionCircle(this.from, ctx, { x: x, y: y, low: 0.6, high: 0.8, direction: 1 });\n        }\n        return { from: from, to: to };\n      }\n    }, {\n      key: '_getCircleData',\n      value: function _getCircleData(ctx) {\n        var x = void 0,\n            y = void 0;\n        var node = this.from;\n        var radius = this.options.selfReferenceSize;\n\n        if (ctx !== undefined) {\n          if (node.shape.width === undefined) {\n            node.shape.resize(ctx);\n          }\n        }\n\n        // get circle coordinates\n        if (node.shape.width > node.shape.height) {\n          x = node.x + node.shape.width * 0.5;\n          y = node.y - radius;\n        } else {\n          x = node.x + radius;\n          y = node.y - node.shape.height * 0.5;\n        }\n        return [x, y, radius];\n      }\n\n      /**\n       * Get a point on a circle\n       * @param {Number} x\n       * @param {Number} y\n       * @param {Number} radius\n       * @param {Number} percentage. Value between 0 (line start) and 1 (line end)\n       * @return {Object} point\n       * @private\n       */\n\n    }, {\n      key: '_pointOnCircle',\n      value: function _pointOnCircle(x, y, radius, percentage) {\n        var angle = percentage * 2 * Math.PI;\n        return {\n          x: x + radius * Math.cos(angle),\n          y: y - radius * Math.sin(angle)\n        };\n      }\n\n      /**\n       * This function uses binary search to look for the point where the circle crosses the border of the node.\n       * @param node\n       * @param ctx\n       * @param options\n       * @returns {*}\n       * @private\n       */\n\n    }, {\n      key: '_findBorderPositionCircle',\n      value: function _findBorderPositionCircle(node, ctx, options) {\n        var x = options.x;\n        var y = options.y;\n        var low = options.low;\n        var high = options.high;\n        var direction = options.direction;\n\n        var maxIterations = 10;\n        var iteration = 0;\n        var radius = this.options.selfReferenceSize;\n        var pos = void 0,\n            angle = void 0,\n            distanceToBorder = void 0,\n            distanceToPoint = void 0,\n            difference = void 0;\n        var threshold = 0.05;\n        var middle = (low + high) * 0.5;\n\n        while (low <= high && iteration < maxIterations) {\n          middle = (low + high) * 0.5;\n\n          pos = this._pointOnCircle(x, y, radius, middle);\n          angle = Math.atan2(node.y - pos.y, node.x - pos.x);\n          distanceToBorder = node.distanceToBorder(ctx, angle);\n          distanceToPoint = Math.sqrt(Math.pow(pos.x - node.x, 2) + Math.pow(pos.y - node.y, 2));\n          difference = distanceToBorder - distanceToPoint;\n          if (Math.abs(difference) < threshold) {\n            break; // found\n          } else if (difference > 0) {\n            // distance to nodes is larger than distance to border --> t needs to be bigger if we're looking at the to node.\n            if (direction > 0) {\n              low = middle;\n            } else {\n              high = middle;\n            }\n          } else {\n            if (direction > 0) {\n              high = middle;\n            } else {\n              low = middle;\n            }\n          }\n          iteration++;\n        }\n        pos.t = middle;\n\n        return pos;\n      }\n\n      /**\n       * Get the line width of the edge. Depends on width and whether one of the\n       * connected nodes is selected.\n       * @return {Number} width\n       * @private\n       */\n\n    }, {\n      key: 'getLineWidth',\n      value: function getLineWidth(selected, hover) {\n        if (selected === true) {\n          return Math.max(this.selectionWidth, 0.3 / this.body.view.scale);\n        } else {\n          if (hover === true) {\n            return Math.max(this.hoverWidth, 0.3 / this.body.view.scale);\n          } else {\n            return Math.max(this.options.width, 0.3 / this.body.view.scale);\n          }\n        }\n      }\n    }, {\n      key: 'getColor',\n      value: function getColor(ctx, selected, hover) {\n        var colorOptions = this.options.color;\n        if (colorOptions.inherit !== false) {\n          // when this is a loop edge, just use the 'from' method\n          if (colorOptions.inherit === 'both' && this.from.id !== this.to.id) {\n            var grd = ctx.createLinearGradient(this.from.x, this.from.y, this.to.x, this.to.y);\n            var fromColor = void 0,\n                toColor = void 0;\n            fromColor = this.from.options.color.highlight.border;\n            toColor = this.to.options.color.highlight.border;\n\n            if (this.from.selected === false && this.to.selected === false) {\n              fromColor = util.overrideOpacity(this.from.options.color.border, this.options.color.opacity);\n              toColor = util.overrideOpacity(this.to.options.color.border, this.options.color.opacity);\n            } else if (this.from.selected === true && this.to.selected === false) {\n              toColor = this.to.options.color.border;\n            } else if (this.from.selected === false && this.to.selected === true) {\n              fromColor = this.from.options.color.border;\n            }\n            grd.addColorStop(0, fromColor);\n            grd.addColorStop(1, toColor);\n\n            // -------------------- this returns -------------------- //\n            return grd;\n          }\n\n          if (this.colorDirty === true) {\n            if (colorOptions.inherit === \"to\") {\n              this.color.highlight = this.to.options.color.highlight.border;\n              this.color.hover = this.to.options.color.hover.border;\n              this.color.color = util.overrideOpacity(this.to.options.color.border, colorOptions.opacity);\n            } else {\n              // (this.options.color.inherit.source === \"from\") {\n              this.color.highlight = this.from.options.color.highlight.border;\n              this.color.hover = this.from.options.color.hover.border;\n              this.color.color = util.overrideOpacity(this.from.options.color.border, colorOptions.opacity);\n            }\n          }\n        } else if (this.colorDirty === true) {\n          this.color.highlight = colorOptions.highlight;\n          this.color.hover = colorOptions.hover;\n          this.color.color = util.overrideOpacity(colorOptions.color, colorOptions.opacity);\n        }\n\n        // if color inherit is on and gradients are used, the function has already returned by now.\n        this.colorDirty = false;\n\n        if (selected === true) {\n          return this.color.highlight;\n        } else if (hover === true) {\n          return this.color.hover;\n        } else {\n          return this.color.color;\n        }\n      }\n\n      /**\n       * Draw a line from a node to itself, a circle\n       * @param {CanvasRenderingContext2D} ctx\n       * @param {Number} x\n       * @param {Number} y\n       * @param {Number} radius\n       * @private\n       */\n\n    }, {\n      key: '_circle',\n      value: function _circle(ctx, x, y, radius) {\n        // draw shadow if enabled\n        this.enableShadow(ctx);\n\n        // draw a circle\n        ctx.beginPath();\n        ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\n        ctx.stroke();\n\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n      }\n\n      /**\n       * Calculate the distance between a point (x3,y3) and a line segment from\n       * (x1,y1) to (x2,y2).\n       * http://stackoverflow.com/questions/849211/shortest-distancae-between-a-point-and-a-line-segment\n       * @param {number} x1\n       * @param {number} y1\n       * @param {number} x2\n       * @param {number} y2\n       * @param {number} x3\n       * @param {number} y3\n       * @private\n       */\n\n    }, {\n      key: 'getDistanceToEdge',\n      value: function getDistanceToEdge(x1, y1, x2, y2, x3, y3, via) {\n        // x3,y3 is the point\n        var returnValue = 0;\n        if (this.from != this.to) {\n          returnValue = this._getDistanceToEdge(x1, y1, x2, y2, x3, y3, via);\n        } else {\n          var _getCircleData10 = this._getCircleData(),\n              _getCircleData11 = _slicedToArray(_getCircleData10, 3),\n              x = _getCircleData11[0],\n              y = _getCircleData11[1],\n              radius = _getCircleData11[2];\n\n          var dx = x - x3;\n          var dy = y - y3;\n          returnValue = Math.abs(Math.sqrt(dx * dx + dy * dy) - radius);\n        }\n\n        if (this.labelModule.size.left < x3 && this.labelModule.size.left + this.labelModule.size.width > x3 && this.labelModule.size.top < y3 && this.labelModule.size.top + this.labelModule.size.height > y3) {\n          return 0;\n        } else {\n          return returnValue;\n        }\n      }\n    }, {\n      key: '_getDistanceToLine',\n      value: function _getDistanceToLine(x1, y1, x2, y2, x3, y3) {\n        var px = x2 - x1;\n        var py = y2 - y1;\n        var something = px * px + py * py;\n        var u = ((x3 - x1) * px + (y3 - y1) * py) / something;\n\n        if (u > 1) {\n          u = 1;\n        } else if (u < 0) {\n          u = 0;\n        }\n\n        var x = x1 + u * px;\n        var y = y1 + u * py;\n        var dx = x - x3;\n        var dy = y - y3;\n\n        //# Note: If the actual distance does not matter,\n        //# if you only want to compare what this function\n        //# returns to other results of this function, you\n        //# can just return the squared distance instead\n        //# (i.e. remove the sqrt) to gain a little performance\n\n        return Math.sqrt(dx * dx + dy * dy);\n      }\n\n      /**\n       *\n       * @param ctx\n       * @param position\n       * @param viaNode\n       */\n\n    }, {\n      key: 'getArrowData',\n      value: function getArrowData(ctx, position, viaNode, selected, hover) {\n        // set lets\n        var angle = void 0;\n        var arrowPoint = void 0;\n        var node1 = void 0;\n        var node2 = void 0;\n        var guideOffset = void 0;\n        var scaleFactor = void 0;\n        var type = void 0;\n        var lineWidth = this.getLineWidth(selected, hover);\n\n        if (position === 'from') {\n          node1 = this.from;\n          node2 = this.to;\n          guideOffset = 0.1;\n          scaleFactor = this.options.arrows.from.scaleFactor;\n          type = this.options.arrows.from.type;\n        } else if (position === 'to') {\n          node1 = this.to;\n          node2 = this.from;\n          guideOffset = -0.1;\n          scaleFactor = this.options.arrows.to.scaleFactor;\n          type = this.options.arrows.to.type;\n        } else {\n          node1 = this.to;\n          node2 = this.from;\n          scaleFactor = this.options.arrows.middle.scaleFactor;\n          type = this.options.arrows.middle.type;\n        }\n\n        // if not connected to itself\n        if (node1 != node2) {\n          if (position !== 'middle') {\n            // draw arrow head\n            if (this.options.smooth.enabled === true) {\n              arrowPoint = this.findBorderPosition(node1, ctx, { via: viaNode });\n              var guidePos = this.getPoint(Math.max(0.0, Math.min(1.0, arrowPoint.t + guideOffset)), viaNode);\n              angle = Math.atan2(arrowPoint.y - guidePos.y, arrowPoint.x - guidePos.x);\n            } else {\n              angle = Math.atan2(node1.y - node2.y, node1.x - node2.x);\n              arrowPoint = this.findBorderPosition(node1, ctx);\n            }\n          } else {\n            angle = Math.atan2(node1.y - node2.y, node1.x - node2.x);\n            arrowPoint = this.getPoint(0.5, viaNode); // this is 0.6 to account for the size of the arrow.\n          }\n        } else {\n          // draw circle\n          var _getCircleData12 = this._getCircleData(ctx),\n              _getCircleData13 = _slicedToArray(_getCircleData12, 3),\n              x = _getCircleData13[0],\n              y = _getCircleData13[1],\n              radius = _getCircleData13[2];\n\n          if (position === 'from') {\n            arrowPoint = this.findBorderPosition(this.from, ctx, { x: x, y: y, low: 0.25, high: 0.6, direction: -1 });\n            angle = arrowPoint.t * -2 * Math.PI + 1.5 * Math.PI + 0.1 * Math.PI;\n          } else if (position === 'to') {\n            arrowPoint = this.findBorderPosition(this.from, ctx, { x: x, y: y, low: 0.6, high: 1.0, direction: 1 });\n            angle = arrowPoint.t * -2 * Math.PI + 1.5 * Math.PI - 1.1 * Math.PI;\n          } else {\n            arrowPoint = this._pointOnCircle(x, y, radius, 0.175);\n            angle = 3.9269908169872414; // === 0.175 * -2 * Math.PI + 1.5 * Math.PI + 0.1 * Math.PI;\n          }\n        }\n\n        var length = 15 * scaleFactor + 3 * lineWidth; // 3* lineWidth is the width of the edge.\n\n        var xi = arrowPoint.x - length * 0.9 * Math.cos(angle);\n        var yi = arrowPoint.y - length * 0.9 * Math.sin(angle);\n        var arrowCore = { x: xi, y: yi };\n\n        return { point: arrowPoint, core: arrowCore, angle: angle, length: length, type: type };\n      }\n\n      /**\n       *\n       * @param ctx\n       * @param selected\n       * @param hover\n       * @param arrowData\n       */\n\n    }, {\n      key: 'drawArrowHead',\n      value: function drawArrowHead(ctx, selected, hover, arrowData) {\n        // set style\n        ctx.strokeStyle = this.getColor(ctx, selected, hover);\n        ctx.fillStyle = ctx.strokeStyle;\n        ctx.lineWidth = this.getLineWidth(selected, hover);\n\n        if (arrowData.type && arrowData.type.toLowerCase() === 'circle') {\n          // draw circle at the end of the line\n          ctx.circleEndpoint(arrowData.point.x, arrowData.point.y, arrowData.angle, arrowData.length);\n        } else {\n          // draw arrow at the end of the line\n          ctx.arrowEndpoint(arrowData.point.x, arrowData.point.y, arrowData.angle, arrowData.length);\n        }\n\n        // draw shadow if enabled\n        this.enableShadow(ctx);\n        ctx.fill();\n        // disable shadows for other elements.\n        this.disableShadow(ctx);\n      }\n    }, {\n      key: 'enableShadow',\n      value: function enableShadow(ctx) {\n        if (this.options.shadow.enabled === true) {\n          ctx.shadowColor = this.options.shadow.color;\n          ctx.shadowBlur = this.options.shadow.size;\n          ctx.shadowOffsetX = this.options.shadow.x;\n          ctx.shadowOffsetY = this.options.shadow.y;\n        }\n      }\n    }, {\n      key: 'disableShadow',\n      value: function disableShadow(ctx) {\n        if (this.options.shadow.enabled === true) {\n          ctx.shadowColor = 'rgba(0,0,0,0)';\n          ctx.shadowBlur = 0;\n          ctx.shadowOffsetX = 0;\n          ctx.shadowOffsetY = 0;\n        }\n      }\n    }]);\n\n    return EdgeBase;\n  }();\n\n  exports.default = EdgeBase;\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _BezierEdgeBase2 = __webpack_require__(90);\n\n  var _BezierEdgeBase3 = _interopRequireDefault(_BezierEdgeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var BezierEdgeDynamic = function (_BezierEdgeBase) {\n    _inherits(BezierEdgeDynamic, _BezierEdgeBase);\n\n    function BezierEdgeDynamic(options, body, labelModule) {\n      _classCallCheck(this, BezierEdgeDynamic);\n\n      // --> this calls the setOptions below\n      var _this = _possibleConstructorReturn(this, (BezierEdgeDynamic.__proto__ || Object.getPrototypeOf(BezierEdgeDynamic)).call(this, options, body, labelModule));\n      //this.via = undefined; // Here for completeness but not allowed to defined before super() is invoked.\n\n\n      _this._boundFunction = function () {\n        _this.positionBezierNode();\n      };\n      _this.body.emitter.on(\"_repositionBezierNodes\", _this._boundFunction);\n      return _this;\n    }\n\n    _createClass(BezierEdgeDynamic, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        // check if the physics has changed.\n        var physicsChange = false;\n        if (this.options.physics !== options.physics) {\n          physicsChange = true;\n        }\n\n        // set the options and the to and from nodes\n        this.options = options;\n        this.id = this.options.id;\n        this.from = this.body.nodes[this.options.from];\n        this.to = this.body.nodes[this.options.to];\n\n        // setup the support node and connect\n        this.setupSupportNode();\n        this.connect();\n\n        // when we change the physics state of the edge, we reposition the support node.\n        if (physicsChange === true) {\n          this.via.setOptions({ physics: this.options.physics });\n          this.positionBezierNode();\n        }\n      }\n    }, {\n      key: \"connect\",\n      value: function connect() {\n        this.from = this.body.nodes[this.options.from];\n        this.to = this.body.nodes[this.options.to];\n        if (this.from === undefined || this.to === undefined || this.options.physics === false) {\n          this.via.setOptions({ physics: false });\n        } else {\n          // fix weird behaviour where a self referencing node has physics enabled\n          if (this.from.id === this.to.id) {\n            this.via.setOptions({ physics: false });\n          } else {\n            this.via.setOptions({ physics: true });\n          }\n        }\n      }\n\n      /**\n       * remove the support nodes\n       * @returns {boolean}\n       */\n\n    }, {\n      key: \"cleanup\",\n      value: function cleanup() {\n        this.body.emitter.off(\"_repositionBezierNodes\", this._boundFunction);\n        if (this.via !== undefined) {\n          delete this.body.nodes[this.via.id];\n          this.via = undefined;\n          return true;\n        }\n        return false;\n      }\n\n      /**\n       * Bezier curves require an anchor point to calculate the smooth flow. These points are nodes. These nodes are invisible but\n       * are used for the force calculation.\n       *\n       * The changed data is not called, if needed, it is returned by the main edge constructor.\n       * @private\n       */\n\n    }, {\n      key: \"setupSupportNode\",\n      value: function setupSupportNode() {\n        if (this.via === undefined) {\n          var nodeId = \"edgeId:\" + this.id;\n          var node = this.body.functions.createNode({\n            id: nodeId,\n            shape: 'circle',\n            physics: true,\n            hidden: true\n          });\n          this.body.nodes[nodeId] = node;\n          this.via = node;\n          this.via.parentEdgeId = this.id;\n          this.positionBezierNode();\n        }\n      }\n    }, {\n      key: \"positionBezierNode\",\n      value: function positionBezierNode() {\n        if (this.via !== undefined && this.from !== undefined && this.to !== undefined) {\n          this.via.x = 0.5 * (this.from.x + this.to.x);\n          this.via.y = 0.5 * (this.from.y + this.to.y);\n        } else if (this.via !== undefined) {\n          this.via.x = 0;\n          this.via.y = 0;\n        }\n      }\n\n      /**\n       * Draw a line between two nodes\n       * @param {CanvasRenderingContext2D} ctx\n       * @private\n       */\n\n    }, {\n      key: \"_line\",\n      value: function _line(ctx, viaNode) {\n        // draw a straight line\n        ctx.beginPath();\n        ctx.moveTo(this.fromPoint.x, this.fromPoint.y);\n        // fallback to normal straight edges\n        if (viaNode.x === undefined) {\n          ctx.lineTo(this.toPoint.x, this.toPoint.y);\n        } else {\n          ctx.quadraticCurveTo(viaNode.x, viaNode.y, this.toPoint.x, this.toPoint.y);\n        }\n        // draw shadow if enabled\n        this.enableShadow(ctx);\n        ctx.stroke();\n        this.disableShadow(ctx);\n      }\n    }, {\n      key: \"getViaNode\",\n      value: function getViaNode() {\n        return this.via;\n      }\n\n      /**\n       * Combined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way\n       * @param percentage\n       * @param viaNode\n       * @returns {{x: number, y: number}}\n       * @private\n       */\n\n    }, {\n      key: \"getPoint\",\n      value: function getPoint(percentage) {\n        var viaNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.via;\n\n        var t = percentage;\n        var x = void 0,\n            y = void 0;\n        if (this.from === this.to) {\n          var _getCircleData = this._getCircleData(this.from),\n              _getCircleData2 = _slicedToArray(_getCircleData, 3),\n              cx = _getCircleData2[0],\n              cy = _getCircleData2[1],\n              cr = _getCircleData2[2];\n\n          var a = 2 * Math.PI * (1 - t);\n          x = cx + cr * Math.sin(a);\n          y = cy + cr - cr * (1 - Math.cos(a));\n        } else {\n          x = Math.pow(1 - t, 2) * this.fromPoint.x + 2 * t * (1 - t) * viaNode.x + Math.pow(t, 2) * this.toPoint.x;\n          y = Math.pow(1 - t, 2) * this.fromPoint.y + 2 * t * (1 - t) * viaNode.y + Math.pow(t, 2) * this.toPoint.y;\n        }\n\n        return { x: x, y: y };\n      }\n    }, {\n      key: \"_findBorderPosition\",\n      value: function _findBorderPosition(nearNode, ctx) {\n        return this._findBorderPositionBezier(nearNode, ctx, this.via);\n      }\n    }, {\n      key: \"_getDistanceToEdge\",\n      value: function _getDistanceToEdge(x1, y1, x2, y2, x3, y3) {\n        // x3,y3 is the point\n        return this._getDistanceToBezierEdge(x1, y1, x2, y2, x3, y3, this.via);\n      }\n    }]);\n\n    return BezierEdgeDynamic;\n  }(_BezierEdgeBase3.default);\n\n  exports.default = BezierEdgeDynamic;\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _BezierEdgeBase2 = __webpack_require__(90);\n\n  var _BezierEdgeBase3 = _interopRequireDefault(_BezierEdgeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var BezierEdgeStatic = function (_BezierEdgeBase) {\n    _inherits(BezierEdgeStatic, _BezierEdgeBase);\n\n    function BezierEdgeStatic(options, body, labelModule) {\n      _classCallCheck(this, BezierEdgeStatic);\n\n      return _possibleConstructorReturn(this, (BezierEdgeStatic.__proto__ || Object.getPrototypeOf(BezierEdgeStatic)).call(this, options, body, labelModule));\n    }\n\n    /**\n     * Draw a line between two nodes\n     * @param {CanvasRenderingContext2D} ctx\n     * @private\n     */\n\n\n    _createClass(BezierEdgeStatic, [{\n      key: '_line',\n      value: function _line(ctx, viaNode) {\n        // draw a straight line\n        ctx.beginPath();\n        ctx.moveTo(this.fromPoint.x, this.fromPoint.y);\n\n        // fallback to normal straight edges\n        if (viaNode.x === undefined) {\n          ctx.lineTo(this.toPoint.x, this.toPoint.y);\n        } else {\n          ctx.quadraticCurveTo(viaNode.x, viaNode.y, this.toPoint.x, this.toPoint.y);\n        }\n        // draw shadow if enabled\n        this.enableShadow(ctx);\n        ctx.stroke();\n        this.disableShadow(ctx);\n      }\n    }, {\n      key: 'getViaNode',\n      value: function getViaNode() {\n        return this._getViaCoordinates();\n      }\n\n      /**\n       * We do not use the to and fromPoints here to make the via nodes the same as edges without arrows.\n       * @returns {{x: undefined, y: undefined}}\n       * @private\n       */\n\n    }, {\n      key: '_getViaCoordinates',\n      value: function _getViaCoordinates() {\n        var xVia = undefined;\n        var yVia = undefined;\n        var factor = this.options.smooth.roundness;\n        var type = this.options.smooth.type;\n        var dx = Math.abs(this.from.x - this.to.x);\n        var dy = Math.abs(this.from.y - this.to.y);\n        if (type === 'discrete' || type === 'diagonalCross') {\n          if (Math.abs(this.from.x - this.to.x) <= Math.abs(this.from.y - this.to.y)) {\n            if (this.from.y >= this.to.y) {\n              if (this.from.x <= this.to.x) {\n                xVia = this.from.x + factor * dy;\n                yVia = this.from.y - factor * dy;\n              } else if (this.from.x > this.to.x) {\n                xVia = this.from.x - factor * dy;\n                yVia = this.from.y - factor * dy;\n              }\n            } else if (this.from.y < this.to.y) {\n              if (this.from.x <= this.to.x) {\n                xVia = this.from.x + factor * dy;\n                yVia = this.from.y + factor * dy;\n              } else if (this.from.x > this.to.x) {\n                xVia = this.from.x - factor * dy;\n                yVia = this.from.y + factor * dy;\n              }\n            }\n            if (type === \"discrete\") {\n              xVia = dx < factor * dy ? this.from.x : xVia;\n            }\n          } else if (Math.abs(this.from.x - this.to.x) > Math.abs(this.from.y - this.to.y)) {\n            if (this.from.y >= this.to.y) {\n              if (this.from.x <= this.to.x) {\n                xVia = this.from.x + factor * dx;\n                yVia = this.from.y - factor * dx;\n              } else if (this.from.x > this.to.x) {\n                xVia = this.from.x - factor * dx;\n                yVia = this.from.y - factor * dx;\n              }\n            } else if (this.from.y < this.to.y) {\n              if (this.from.x <= this.to.x) {\n                xVia = this.from.x + factor * dx;\n                yVia = this.from.y + factor * dx;\n              } else if (this.from.x > this.to.x) {\n                xVia = this.from.x - factor * dx;\n                yVia = this.from.y + factor * dx;\n              }\n            }\n            if (type === \"discrete\") {\n              yVia = dy < factor * dx ? this.from.y : yVia;\n            }\n          }\n        } else if (type === \"straightCross\") {\n          if (Math.abs(this.from.x - this.to.x) <= Math.abs(this.from.y - this.to.y)) {\n            // up - down\n            xVia = this.from.x;\n            if (this.from.y < this.to.y) {\n              yVia = this.to.y - (1 - factor) * dy;\n            } else {\n              yVia = this.to.y + (1 - factor) * dy;\n            }\n          } else if (Math.abs(this.from.x - this.to.x) > Math.abs(this.from.y - this.to.y)) {\n            // left - right\n            if (this.from.x < this.to.x) {\n              xVia = this.to.x - (1 - factor) * dx;\n            } else {\n              xVia = this.to.x + (1 - factor) * dx;\n            }\n            yVia = this.from.y;\n          }\n        } else if (type === 'horizontal') {\n          if (this.from.x < this.to.x) {\n            xVia = this.to.x - (1 - factor) * dx;\n          } else {\n            xVia = this.to.x + (1 - factor) * dx;\n          }\n          yVia = this.from.y;\n        } else if (type === 'vertical') {\n          xVia = this.from.x;\n          if (this.from.y < this.to.y) {\n            yVia = this.to.y - (1 - factor) * dy;\n          } else {\n            yVia = this.to.y + (1 - factor) * dy;\n          }\n        } else if (type === 'curvedCW') {\n          dx = this.to.x - this.from.x;\n          dy = this.from.y - this.to.y;\n          var radius = Math.sqrt(dx * dx + dy * dy);\n          var pi = Math.PI;\n\n          var originalAngle = Math.atan2(dy, dx);\n          var myAngle = (originalAngle + (factor * 0.5 + 0.5) * pi) % (2 * pi);\n\n          xVia = this.from.x + (factor * 0.5 + 0.5) * radius * Math.sin(myAngle);\n          yVia = this.from.y + (factor * 0.5 + 0.5) * radius * Math.cos(myAngle);\n        } else if (type === 'curvedCCW') {\n          dx = this.to.x - this.from.x;\n          dy = this.from.y - this.to.y;\n          var _radius = Math.sqrt(dx * dx + dy * dy);\n          var _pi = Math.PI;\n\n          var _originalAngle = Math.atan2(dy, dx);\n          var _myAngle = (_originalAngle + (-factor * 0.5 + 0.5) * _pi) % (2 * _pi);\n\n          xVia = this.from.x + (factor * 0.5 + 0.5) * _radius * Math.sin(_myAngle);\n          yVia = this.from.y + (factor * 0.5 + 0.5) * _radius * Math.cos(_myAngle);\n        } else {\n          // continuous\n          if (Math.abs(this.from.x - this.to.x) <= Math.abs(this.from.y - this.to.y)) {\n            if (this.from.y >= this.to.y) {\n              if (this.from.x <= this.to.x) {\n                xVia = this.from.x + factor * dy;\n                yVia = this.from.y - factor * dy;\n                xVia = this.to.x < xVia ? this.to.x : xVia;\n              } else if (this.from.x > this.to.x) {\n                xVia = this.from.x - factor * dy;\n                yVia = this.from.y - factor * dy;\n                xVia = this.to.x > xVia ? this.to.x : xVia;\n              }\n            } else if (this.from.y < this.to.y) {\n              if (this.from.x <= this.to.x) {\n                xVia = this.from.x + factor * dy;\n                yVia = this.from.y + factor * dy;\n                xVia = this.to.x < xVia ? this.to.x : xVia;\n              } else if (this.from.x > this.to.x) {\n                xVia = this.from.x - factor * dy;\n                yVia = this.from.y + factor * dy;\n                xVia = this.to.x > xVia ? this.to.x : xVia;\n              }\n            }\n          } else if (Math.abs(this.from.x - this.to.x) > Math.abs(this.from.y - this.to.y)) {\n            if (this.from.y >= this.to.y) {\n              if (this.from.x <= this.to.x) {\n                xVia = this.from.x + factor * dx;\n                yVia = this.from.y - factor * dx;\n                yVia = this.to.y > yVia ? this.to.y : yVia;\n              } else if (this.from.x > this.to.x) {\n                xVia = this.from.x - factor * dx;\n                yVia = this.from.y - factor * dx;\n                yVia = this.to.y > yVia ? this.to.y : yVia;\n              }\n            } else if (this.from.y < this.to.y) {\n              if (this.from.x <= this.to.x) {\n                xVia = this.from.x + factor * dx;\n                yVia = this.from.y + factor * dx;\n                yVia = this.to.y < yVia ? this.to.y : yVia;\n              } else if (this.from.x > this.to.x) {\n                xVia = this.from.x - factor * dx;\n                yVia = this.from.y + factor * dx;\n                yVia = this.to.y < yVia ? this.to.y : yVia;\n              }\n            }\n          }\n        }\n        return { x: xVia, y: yVia };\n      }\n    }, {\n      key: '_findBorderPosition',\n      value: function _findBorderPosition(nearNode, ctx) {\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n        return this._findBorderPositionBezier(nearNode, ctx, options.via);\n      }\n    }, {\n      key: '_getDistanceToEdge',\n      value: function _getDistanceToEdge(x1, y1, x2, y2, x3, y3) {\n        var viaNode = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : this._getViaCoordinates();\n        // x3,y3 is the point\n        return this._getDistanceToBezierEdge(x1, y1, x2, y2, x3, y3, viaNode);\n      }\n\n      /**\n       * Combined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way\n       * @param percentage\n       * @param viaNode\n       * @returns {{x: number, y: number}}\n       * @private\n       */\n\n    }, {\n      key: 'getPoint',\n      value: function getPoint(percentage) {\n        var viaNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._getViaCoordinates();\n\n        var t = percentage;\n        var x = Math.pow(1 - t, 2) * this.fromPoint.x + 2 * t * (1 - t) * viaNode.x + Math.pow(t, 2) * this.toPoint.x;\n        var y = Math.pow(1 - t, 2) * this.fromPoint.y + 2 * t * (1 - t) * viaNode.y + Math.pow(t, 2) * this.toPoint.y;\n\n        return { x: x, y: y };\n      }\n    }]);\n\n    return BezierEdgeStatic;\n  }(_BezierEdgeBase3.default);\n\n  exports.default = BezierEdgeStatic;\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _EdgeBase2 = __webpack_require__(91);\n\n  var _EdgeBase3 = _interopRequireDefault(_EdgeBase2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var StraightEdge = function (_EdgeBase) {\n    _inherits(StraightEdge, _EdgeBase);\n\n    function StraightEdge(options, body, labelModule) {\n      _classCallCheck(this, StraightEdge);\n\n      return _possibleConstructorReturn(this, (StraightEdge.__proto__ || Object.getPrototypeOf(StraightEdge)).call(this, options, body, labelModule));\n    }\n\n    /**\n     * Draw a line between two nodes\n     * @param {CanvasRenderingContext2D} ctx\n     * @private\n     */\n\n\n    _createClass(StraightEdge, [{\n      key: '_line',\n      value: function _line(ctx) {\n        // draw a straight line\n        ctx.beginPath();\n        ctx.moveTo(this.fromPoint.x, this.fromPoint.y);\n        ctx.lineTo(this.toPoint.x, this.toPoint.y);\n        // draw shadow if enabled\n        this.enableShadow(ctx);\n        ctx.stroke();\n        this.disableShadow(ctx);\n      }\n    }, {\n      key: 'getViaNode',\n      value: function getViaNode() {\n        return undefined;\n      }\n\n      /**\n       * Combined function of pointOnLine and pointOnBezier. This gives the coordinates of a point on the line at a certain percentage of the way\n       * @param percentage\n       * @param via\n       * @returns {{x: number, y: number}}\n       * @private\n       */\n\n    }, {\n      key: 'getPoint',\n      value: function getPoint(percentage) {\n        return {\n          x: (1 - percentage) * this.fromPoint.x + percentage * this.toPoint.x,\n          y: (1 - percentage) * this.fromPoint.y + percentage * this.toPoint.y\n        };\n      }\n    }, {\n      key: '_findBorderPosition',\n      value: function _findBorderPosition(nearNode, ctx) {\n        var node1 = this.to;\n        var node2 = this.from;\n        if (nearNode.id === this.from.id) {\n          node1 = this.from;\n          node2 = this.to;\n        }\n\n        var angle = Math.atan2(node1.y - node2.y, node1.x - node2.x);\n        var dx = node1.x - node2.x;\n        var dy = node1.y - node2.y;\n        var edgeSegmentLength = Math.sqrt(dx * dx + dy * dy);\n        var toBorderDist = nearNode.distanceToBorder(ctx, angle);\n        var toBorderPoint = (edgeSegmentLength - toBorderDist) / edgeSegmentLength;\n\n        var borderPos = {};\n        borderPos.x = (1 - toBorderPoint) * node2.x + toBorderPoint * node1.x;\n        borderPos.y = (1 - toBorderPoint) * node2.y + toBorderPoint * node1.y;\n\n        return borderPos;\n      }\n    }, {\n      key: '_getDistanceToEdge',\n      value: function _getDistanceToEdge(x1, y1, x2, y2, x3, y3) {\n        // x3,y3 is the point\n        return this._getDistanceToLine(x1, y1, x2, y2, x3, y3);\n      }\n    }]);\n\n    return StraightEdge;\n  }(_EdgeBase3.default);\n\n  exports.default = StraightEdge;\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _BarnesHutSolver = __webpack_require__(96);\n\n  var _BarnesHutSolver2 = _interopRequireDefault(_BarnesHutSolver);\n\n  var _RepulsionSolver = __webpack_require__(97);\n\n  var _RepulsionSolver2 = _interopRequireDefault(_RepulsionSolver);\n\n  var _HierarchicalRepulsionSolver = __webpack_require__(98);\n\n  var _HierarchicalRepulsionSolver2 = _interopRequireDefault(_HierarchicalRepulsionSolver);\n\n  var _SpringSolver = __webpack_require__(99);\n\n  var _SpringSolver2 = _interopRequireDefault(_SpringSolver);\n\n  var _HierarchicalSpringSolver = __webpack_require__(100);\n\n  var _HierarchicalSpringSolver2 = _interopRequireDefault(_HierarchicalSpringSolver);\n\n  var _CentralGravitySolver = __webpack_require__(101);\n\n  var _CentralGravitySolver2 = _interopRequireDefault(_CentralGravitySolver);\n\n  var _FA2BasedRepulsionSolver = __webpack_require__(102);\n\n  var _FA2BasedRepulsionSolver2 = _interopRequireDefault(_FA2BasedRepulsionSolver);\n\n  var _FA2BasedCentralGravitySolver = __webpack_require__(103);\n\n  var _FA2BasedCentralGravitySolver2 = _interopRequireDefault(_FA2BasedCentralGravitySolver);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n\n  var PhysicsEngine = function () {\n    function PhysicsEngine(body) {\n      _classCallCheck(this, PhysicsEngine);\n\n      this.body = body;\n      this.physicsBody = { physicsNodeIndices: [], physicsEdgeIndices: [], forces: {}, velocities: {} };\n\n      this.physicsEnabled = true;\n      this.simulationInterval = 1000 / 60;\n      this.requiresTimeout = true;\n      this.previousStates = {};\n      this.referenceState = {};\n      this.freezeCache = {};\n      this.renderTimer = undefined;\n\n      // parameters for the adaptive timestep\n      this.adaptiveTimestep = false;\n      this.adaptiveTimestepEnabled = false;\n      this.adaptiveCounter = 0;\n      this.adaptiveInterval = 3;\n\n      this.stabilized = false;\n      this.startedStabilization = false;\n      this.stabilizationIterations = 0;\n      this.ready = false; // will be set to true if the stabilize\n\n      // default options\n      this.options = {};\n      this.defaultOptions = {\n        enabled: true,\n        barnesHut: {\n          theta: 0.5,\n          gravitationalConstant: -2000,\n          centralGravity: 0.3,\n          springLength: 95,\n          springConstant: 0.04,\n          damping: 0.09,\n          avoidOverlap: 0\n        },\n        forceAtlas2Based: {\n          theta: 0.5,\n          gravitationalConstant: -50,\n          centralGravity: 0.01,\n          springConstant: 0.08,\n          springLength: 100,\n          damping: 0.4,\n          avoidOverlap: 0\n        },\n        repulsion: {\n          centralGravity: 0.2,\n          springLength: 200,\n          springConstant: 0.05,\n          nodeDistance: 100,\n          damping: 0.09,\n          avoidOverlap: 0\n        },\n        hierarchicalRepulsion: {\n          centralGravity: 0.0,\n          springLength: 100,\n          springConstant: 0.01,\n          nodeDistance: 120,\n          damping: 0.09\n        },\n        maxVelocity: 50,\n        minVelocity: 0.75, // px/s\n        solver: 'barnesHut',\n        stabilization: {\n          enabled: true,\n          iterations: 1000, // maximum number of iteration to stabilize\n          updateInterval: 50,\n          onlyDynamicEdges: false,\n          fit: true\n        },\n        timestep: 0.5,\n        adaptiveTimestep: true\n      };\n      util.extend(this.options, this.defaultOptions);\n      this.timestep = 0.5;\n      this.layoutFailed = false;\n\n      this.bindEventListeners();\n    }\n\n    _createClass(PhysicsEngine, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this = this;\n\n        this.body.emitter.on('initPhysics', function () {\n          _this.initPhysics();\n        });\n        this.body.emitter.on('_layoutFailed', function () {\n          _this.layoutFailed = true;\n        });\n        this.body.emitter.on('resetPhysics', function () {\n          _this.stopSimulation();_this.ready = false;\n        });\n        this.body.emitter.on('disablePhysics', function () {\n          _this.physicsEnabled = false;_this.stopSimulation();\n        });\n        this.body.emitter.on('restorePhysics', function () {\n          _this.setOptions(_this.options);\n          if (_this.ready === true) {\n            _this.startSimulation();\n          }\n        });\n        this.body.emitter.on('startSimulation', function () {\n          if (_this.ready === true) {\n            _this.startSimulation();\n          }\n        });\n        this.body.emitter.on('stopSimulation', function () {\n          _this.stopSimulation();\n        });\n        this.body.emitter.on('destroy', function () {\n          _this.stopSimulation(false);\n          _this.body.emitter.off();\n        });\n        // this event will trigger a rebuilding of the cache everything. Used when nodes or edges have been added or removed.\n        this.body.emitter.on(\"_dataChanged\", function () {\n          // update shortcut lists\n          _this.updatePhysicsData();\n        });\n\n        // debug: show forces\n        // this.body.emitter.on(\"afterDrawing\", (ctx) => {this._drawForces(ctx);});\n      }\n\n      /**\n       * set the physics options\n       * @param options\n       */\n\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          if (options === false) {\n            this.options.enabled = false;\n            this.physicsEnabled = false;\n            this.stopSimulation();\n          } else {\n            this.physicsEnabled = true;\n            util.selectiveNotDeepExtend(['stabilization'], this.options, options);\n            util.mergeOptions(this.options, options, 'stabilization');\n\n            if (options.enabled === undefined) {\n              this.options.enabled = true;\n            }\n\n            if (this.options.enabled === false) {\n              this.physicsEnabled = false;\n              this.stopSimulation();\n            }\n\n            // set the timestep\n            this.timestep = this.options.timestep;\n          }\n        }\n        this.init();\n      }\n\n      /**\n       * configure the engine.\n       */\n\n    }, {\n      key: 'init',\n      value: function init() {\n        var options;\n        if (this.options.solver === 'forceAtlas2Based') {\n          options = this.options.forceAtlas2Based;\n          this.nodesSolver = new _FA2BasedRepulsionSolver2.default(this.body, this.physicsBody, options);\n          this.edgesSolver = new _SpringSolver2.default(this.body, this.physicsBody, options);\n          this.gravitySolver = new _FA2BasedCentralGravitySolver2.default(this.body, this.physicsBody, options);\n        } else if (this.options.solver === 'repulsion') {\n          options = this.options.repulsion;\n          this.nodesSolver = new _RepulsionSolver2.default(this.body, this.physicsBody, options);\n          this.edgesSolver = new _SpringSolver2.default(this.body, this.physicsBody, options);\n          this.gravitySolver = new _CentralGravitySolver2.default(this.body, this.physicsBody, options);\n        } else if (this.options.solver === 'hierarchicalRepulsion') {\n          options = this.options.hierarchicalRepulsion;\n          this.nodesSolver = new _HierarchicalRepulsionSolver2.default(this.body, this.physicsBody, options);\n          this.edgesSolver = new _HierarchicalSpringSolver2.default(this.body, this.physicsBody, options);\n          this.gravitySolver = new _CentralGravitySolver2.default(this.body, this.physicsBody, options);\n        } else {\n          // barnesHut\n          options = this.options.barnesHut;\n          this.nodesSolver = new _BarnesHutSolver2.default(this.body, this.physicsBody, options);\n          this.edgesSolver = new _SpringSolver2.default(this.body, this.physicsBody, options);\n          this.gravitySolver = new _CentralGravitySolver2.default(this.body, this.physicsBody, options);\n        }\n\n        this.modelOptions = options;\n      }\n\n      /**\n       * initialize the engine\n       */\n\n    }, {\n      key: 'initPhysics',\n      value: function initPhysics() {\n        if (this.physicsEnabled === true && this.options.enabled === true) {\n          if (this.options.stabilization.enabled === true) {\n            this.stabilize();\n          } else {\n            this.stabilized = false;\n            this.ready = true;\n            this.body.emitter.emit('fit', {}, this.layoutFailed); // if the layout failed, we use the approximation for the zoom\n            this.startSimulation();\n          }\n        } else {\n          this.ready = true;\n          this.body.emitter.emit('fit');\n        }\n      }\n\n      /**\n       * Start the simulation\n       */\n\n    }, {\n      key: 'startSimulation',\n      value: function startSimulation() {\n        if (this.physicsEnabled === true && this.options.enabled === true) {\n          this.stabilized = false;\n\n          // when visible, adaptivity is disabled.\n          this.adaptiveTimestep = false;\n\n          // this sets the width of all nodes initially which could be required for the avoidOverlap\n          this.body.emitter.emit(\"_resizeNodes\");\n          if (this.viewFunction === undefined) {\n            this.viewFunction = this.simulationStep.bind(this);\n            this.body.emitter.on('initRedraw', this.viewFunction);\n            this.body.emitter.emit('_startRendering');\n          }\n        } else {\n          this.body.emitter.emit('_redraw');\n        }\n      }\n\n      /**\n       * Stop the simulation, force stabilization.\n       */\n\n    }, {\n      key: 'stopSimulation',\n      value: function stopSimulation() {\n        var emit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n        this.stabilized = true;\n        if (emit === true) {\n          this._emitStabilized();\n        }\n        if (this.viewFunction !== undefined) {\n          this.body.emitter.off('initRedraw', this.viewFunction);\n          this.viewFunction = undefined;\n          if (emit === true) {\n            this.body.emitter.emit('_stopRendering');\n          }\n        }\n      }\n\n      /**\n       * The viewFunction inserts this step into each render loop. It calls the physics tick and handles the cleanup at stabilized.\n       *\n       */\n\n    }, {\n      key: 'simulationStep',\n      value: function simulationStep() {\n        // check if the physics have settled\n        var startTime = Date.now();\n        this.physicsTick();\n        var physicsTime = Date.now() - startTime;\n\n        // run double speed if it is a little graph\n        if ((physicsTime < 0.4 * this.simulationInterval || this.runDoubleSpeed === true) && this.stabilized === false) {\n          this.physicsTick();\n\n          // this makes sure there is no jitter. The decision is taken once to run it at double speed.\n          this.runDoubleSpeed = true;\n        }\n\n        if (this.stabilized === true) {\n          this.stopSimulation();\n        }\n      }\n\n      /**\n       * trigger the stabilized event.\n       * @private\n       */\n\n    }, {\n      key: '_emitStabilized',\n      value: function _emitStabilized() {\n        var _this2 = this;\n\n        var amountOfIterations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.stabilizationIterations;\n\n        if (this.stabilizationIterations > 1 || this.startedStabilization === true) {\n          setTimeout(function () {\n            _this2.body.emitter.emit('stabilized', { iterations: amountOfIterations });\n            _this2.startedStabilization = false;\n            _this2.stabilizationIterations = 0;\n          }, 0);\n        }\n      }\n\n      /**\n       * A single simulation step (or 'tick') in the physics simulation\n       *\n       * @private\n       */\n\n    }, {\n      key: 'physicsTick',\n      value: function physicsTick() {\n        // this is here to ensure that there is no start event when the network is already stable.\n        if (this.startedStabilization === false) {\n          this.body.emitter.emit('startStabilizing');\n          this.startedStabilization = true;\n        }\n\n        if (this.stabilized === false) {\n          // adaptivity means the timestep adapts to the situation, only applicable for stabilization\n          if (this.adaptiveTimestep === true && this.adaptiveTimestepEnabled === true) {\n            // this is the factor for increasing the timestep on success.\n            var factor = 1.2;\n\n            // we assume the adaptive interval is\n            if (this.adaptiveCounter % this.adaptiveInterval === 0) {\n              // we leave the timestep stable for \"interval\" iterations.\n              // first the big step and revert. Revert saves the reference state.\n              this.timestep = 2 * this.timestep;\n              this.calculateForces();\n              this.moveNodes();\n              this.revert();\n\n              // now the normal step. Since this is the last step, it is the more stable one and we will take this.\n              this.timestep = 0.5 * this.timestep;\n\n              // since it's half the step, we do it twice.\n              this.calculateForces();\n              this.moveNodes();\n              this.calculateForces();\n              this.moveNodes();\n\n              // we compare the two steps. if it is acceptable we double the step.\n              if (this._evaluateStepQuality() === true) {\n                this.timestep = factor * this.timestep;\n              } else {\n                // if not, we decrease the step to a minimum of the options timestep.\n                // if the decreased timestep is smaller than the options step, we do not reset the counter\n                // we assume that the options timestep is stable enough.\n                if (this.timestep / factor < this.options.timestep) {\n                  this.timestep = this.options.timestep;\n                } else {\n                  // if the timestep was larger than 2 times the option one we check the adaptivity again to ensure\n                  // that large instabilities do not form.\n                  this.adaptiveCounter = -1; // check again next iteration\n                  this.timestep = Math.max(this.options.timestep, this.timestep / factor);\n                }\n              }\n            } else {\n              // normal step, keeping timestep constant\n              this.calculateForces();\n              this.moveNodes();\n            }\n\n            // increment the counter\n            this.adaptiveCounter += 1;\n          } else {\n            // case for the static timestep, we reset it to the one in options and take a normal step.\n            this.timestep = this.options.timestep;\n            this.calculateForces();\n            this.moveNodes();\n          }\n\n          // determine if the network has stabilzied\n          if (this.stabilized === true) {\n            this.revert();\n          }\n\n          this.stabilizationIterations++;\n        }\n      }\n\n      /**\n       * Nodes and edges can have the physics toggles on or off. A collection of indices is created here so we can skip the check all the time.\n       *\n       * @private\n       */\n\n    }, {\n      key: 'updatePhysicsData',\n      value: function updatePhysicsData() {\n        this.physicsBody.forces = {};\n        this.physicsBody.physicsNodeIndices = [];\n        this.physicsBody.physicsEdgeIndices = [];\n        var nodes = this.body.nodes;\n        var edges = this.body.edges;\n\n        // get node indices for physics\n        for (var nodeId in nodes) {\n          if (nodes.hasOwnProperty(nodeId)) {\n            if (nodes[nodeId].options.physics === true) {\n              this.physicsBody.physicsNodeIndices.push(nodes[nodeId].id);\n            }\n          }\n        }\n\n        // get edge indices for physics\n        for (var edgeId in edges) {\n          if (edges.hasOwnProperty(edgeId)) {\n            if (edges[edgeId].options.physics === true) {\n              this.physicsBody.physicsEdgeIndices.push(edges[edgeId].id);\n            }\n          }\n        }\n\n        // get the velocity and the forces vector\n        for (var i = 0; i < this.physicsBody.physicsNodeIndices.length; i++) {\n          var _nodeId = this.physicsBody.physicsNodeIndices[i];\n          this.physicsBody.forces[_nodeId] = { x: 0, y: 0 };\n\n          // forces can be reset because they are recalculated. Velocities have to persist.\n          if (this.physicsBody.velocities[_nodeId] === undefined) {\n            this.physicsBody.velocities[_nodeId] = { x: 0, y: 0 };\n          }\n        }\n\n        // clean deleted nodes from the velocity vector\n        for (var _nodeId2 in this.physicsBody.velocities) {\n          if (nodes[_nodeId2] === undefined) {\n            delete this.physicsBody.velocities[_nodeId2];\n          }\n        }\n      }\n\n      /**\n       * Revert the simulation one step. This is done so after stabilization, every new start of the simulation will also say stabilized.\n       */\n\n    }, {\n      key: 'revert',\n      value: function revert() {\n        var nodeIds = Object.keys(this.previousStates);\n        var nodes = this.body.nodes;\n        var velocities = this.physicsBody.velocities;\n        this.referenceState = {};\n\n        for (var i = 0; i < nodeIds.length; i++) {\n          var nodeId = nodeIds[i];\n          if (nodes[nodeId] !== undefined) {\n            if (nodes[nodeId].options.physics === true) {\n              this.referenceState[nodeId] = {\n                positions: { x: nodes[nodeId].x, y: nodes[nodeId].y }\n              };\n              velocities[nodeId].x = this.previousStates[nodeId].vx;\n              velocities[nodeId].y = this.previousStates[nodeId].vy;\n              nodes[nodeId].x = this.previousStates[nodeId].x;\n              nodes[nodeId].y = this.previousStates[nodeId].y;\n            }\n          } else {\n            delete this.previousStates[nodeId];\n          }\n        }\n      }\n\n      /**\n       * This compares the reference state to the current state\n       */\n\n    }, {\n      key: '_evaluateStepQuality',\n      value: function _evaluateStepQuality() {\n        var dx = void 0,\n            dy = void 0,\n            dpos = void 0;\n        var nodes = this.body.nodes;\n        var reference = this.referenceState;\n        var posThreshold = 0.3;\n\n        for (var nodeId in this.referenceState) {\n          if (this.referenceState.hasOwnProperty(nodeId) && nodes[nodeId] !== undefined) {\n            dx = nodes[nodeId].x - reference[nodeId].positions.x;\n            dy = nodes[nodeId].y - reference[nodeId].positions.y;\n\n            dpos = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n\n            if (dpos > posThreshold) {\n              return false;\n            }\n          }\n        }\n        return true;\n      }\n\n      /**\n       * move the nodes one timestep and check if they are stabilized\n       * @returns {boolean}\n       */\n\n    }, {\n      key: 'moveNodes',\n      value: function moveNodes() {\n        var nodeIndices = this.physicsBody.physicsNodeIndices;\n        var maxVelocity = this.options.maxVelocity ? this.options.maxVelocity : 1e9;\n        var maxNodeVelocity = 0;\n        var averageNodeVelocity = 0;\n\n        // the velocity threshold (energy in the system) for the adaptivity toggle\n        var velocityAdaptiveThreshold = 5;\n\n        for (var i = 0; i < nodeIndices.length; i++) {\n          var nodeId = nodeIndices[i];\n          var nodeVelocity = this._performStep(nodeId, maxVelocity);\n          // stabilized is true if stabilized is true and velocity is smaller than vmin --> all nodes must be stabilized\n          maxNodeVelocity = Math.max(maxNodeVelocity, nodeVelocity);\n          averageNodeVelocity += nodeVelocity;\n        }\n\n        // evaluating the stabilized and adaptiveTimestepEnabled conditions\n        this.adaptiveTimestepEnabled = averageNodeVelocity / nodeIndices.length < velocityAdaptiveThreshold;\n        this.stabilized = maxNodeVelocity < this.options.minVelocity;\n      }\n\n      /**\n       * Perform the actual step\n       *\n       * @param nodeId\n       * @param maxVelocity\n       * @returns {number}\n       * @private\n       */\n\n    }, {\n      key: '_performStep',\n      value: function _performStep(nodeId, maxVelocity) {\n        var node = this.body.nodes[nodeId];\n        var timestep = this.timestep;\n        var forces = this.physicsBody.forces;\n        var velocities = this.physicsBody.velocities;\n\n        // store the state so we can revert\n        this.previousStates[nodeId] = { x: node.x, y: node.y, vx: velocities[nodeId].x, vy: velocities[nodeId].y };\n\n        if (node.options.fixed.x === false) {\n          var dx = this.modelOptions.damping * velocities[nodeId].x; // damping force\n          var ax = (forces[nodeId].x - dx) / node.options.mass; // acceleration\n          velocities[nodeId].x += ax * timestep; // velocity\n          velocities[nodeId].x = Math.abs(velocities[nodeId].x) > maxVelocity ? velocities[nodeId].x > 0 ? maxVelocity : -maxVelocity : velocities[nodeId].x;\n          node.x += velocities[nodeId].x * timestep; // position\n        } else {\n          forces[nodeId].x = 0;\n          velocities[nodeId].x = 0;\n        }\n\n        if (node.options.fixed.y === false) {\n          var dy = this.modelOptions.damping * velocities[nodeId].y; // damping force\n          var ay = (forces[nodeId].y - dy) / node.options.mass; // acceleration\n          velocities[nodeId].y += ay * timestep; // velocity\n          velocities[nodeId].y = Math.abs(velocities[nodeId].y) > maxVelocity ? velocities[nodeId].y > 0 ? maxVelocity : -maxVelocity : velocities[nodeId].y;\n          node.y += velocities[nodeId].y * timestep; // position\n        } else {\n          forces[nodeId].y = 0;\n          velocities[nodeId].y = 0;\n        }\n\n        var totalVelocity = Math.sqrt(Math.pow(velocities[nodeId].x, 2) + Math.pow(velocities[nodeId].y, 2));\n        return totalVelocity;\n      }\n\n      /**\n       * calculate the forces for one physics iteration.\n       */\n\n    }, {\n      key: 'calculateForces',\n      value: function calculateForces() {\n        this.gravitySolver.solve();\n        this.nodesSolver.solve();\n        this.edgesSolver.solve();\n      }\n\n      /**\n       * When initializing and stabilizing, we can freeze nodes with a predefined position. This greatly speeds up stabilization\n       * because only the supportnodes for the smoothCurves have to settle.\n       *\n       * @private\n       */\n\n    }, {\n      key: '_freezeNodes',\n      value: function _freezeNodes() {\n        var nodes = this.body.nodes;\n        for (var id in nodes) {\n          if (nodes.hasOwnProperty(id)) {\n            if (nodes[id].x && nodes[id].y) {\n              this.freezeCache[id] = { x: nodes[id].options.fixed.x, y: nodes[id].options.fixed.y };\n              nodes[id].options.fixed.x = true;\n              nodes[id].options.fixed.y = true;\n            }\n          }\n        }\n      }\n\n      /**\n       * Unfreezes the nodes that have been frozen by _freezeDefinedNodes.\n       *\n       * @private\n       */\n\n    }, {\n      key: '_restoreFrozenNodes',\n      value: function _restoreFrozenNodes() {\n        var nodes = this.body.nodes;\n        for (var id in nodes) {\n          if (nodes.hasOwnProperty(id)) {\n            if (this.freezeCache[id] !== undefined) {\n              nodes[id].options.fixed.x = this.freezeCache[id].x;\n              nodes[id].options.fixed.y = this.freezeCache[id].y;\n            }\n          }\n        }\n        this.freezeCache = {};\n      }\n\n      /**\n       * Find a stable position for all nodes\n       */\n\n    }, {\n      key: 'stabilize',\n      value: function stabilize() {\n        var _this3 = this;\n\n        var iterations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.stabilization.iterations;\n\n        if (typeof iterations !== 'number') {\n          console.log('The stabilize method needs a numeric amount of iterations. Switching to default: ', this.options.stabilization.iterations);\n          iterations = this.options.stabilization.iterations;\n        }\n\n        if (this.physicsBody.physicsNodeIndices.length === 0) {\n          this.ready = true;\n          return;\n        }\n\n        // enable adaptive timesteps\n        this.adaptiveTimestep = true && this.options.adaptiveTimestep;\n\n        // this sets the width of all nodes initially which could be required for the avoidOverlap\n        this.body.emitter.emit(\"_resizeNodes\");\n\n        // stop the render loop\n        this.stopSimulation();\n\n        // set stabilze to false\n        this.stabilized = false;\n\n        // block redraw requests\n        this.body.emitter.emit('_blockRedraw');\n        this.targetIterations = iterations;\n\n        // start the stabilization\n        if (this.options.stabilization.onlyDynamicEdges === true) {\n          this._freezeNodes();\n        }\n        this.stabilizationIterations = 0;\n\n        setTimeout(function () {\n          return _this3._stabilizationBatch();\n        }, 0);\n      }\n\n      /**\n       * One batch of stabilization\n       * @private\n       */\n\n    }, {\n      key: '_stabilizationBatch',\n      value: function _stabilizationBatch() {\n        // this is here to ensure that there is at least one start event.\n        if (this.startedStabilization === false) {\n          this.body.emitter.emit('startStabilizing');\n          this.startedStabilization = true;\n        }\n\n        var count = 0;\n        while (this.stabilized === false && count < this.options.stabilization.updateInterval && this.stabilizationIterations < this.targetIterations) {\n          this.physicsTick();\n          count++;\n        }\n\n        if (this.stabilized === false && this.stabilizationIterations < this.targetIterations) {\n          this.body.emitter.emit('stabilizationProgress', { iterations: this.stabilizationIterations, total: this.targetIterations });\n          setTimeout(this._stabilizationBatch.bind(this), 0);\n        } else {\n          this._finalizeStabilization();\n        }\n      }\n\n      /**\n       * Wrap up the stabilization, fit and emit the events.\n       * @private\n       */\n\n    }, {\n      key: '_finalizeStabilization',\n      value: function _finalizeStabilization() {\n        this.body.emitter.emit('_allowRedraw');\n        if (this.options.stabilization.fit === true) {\n          this.body.emitter.emit('fit');\n        }\n\n        if (this.options.stabilization.onlyDynamicEdges === true) {\n          this._restoreFrozenNodes();\n        }\n\n        this.body.emitter.emit('stabilizationIterationsDone');\n        this.body.emitter.emit('_requestRedraw');\n\n        if (this.stabilized === true) {\n          this._emitStabilized();\n        } else {\n          this.startSimulation();\n        }\n\n        this.ready = true;\n      }\n    }, {\n      key: '_drawForces',\n      value: function _drawForces(ctx) {\n        for (var i = 0; i < this.physicsBody.physicsNodeIndices.length; i++) {\n          var node = this.body.nodes[this.physicsBody.physicsNodeIndices[i]];\n          var force = this.physicsBody.forces[this.physicsBody.physicsNodeIndices[i]];\n          var factor = 20;\n          var colorFactor = 0.03;\n          var forceSize = Math.sqrt(Math.pow(force.x, 2) + Math.pow(force.x, 2));\n\n          var size = Math.min(Math.max(5, forceSize), 15);\n          var arrowSize = 3 * size;\n\n          var color = util.HSVToHex((180 - Math.min(1, Math.max(0, colorFactor * forceSize)) * 180) / 360, 1, 1);\n\n          ctx.lineWidth = size;\n          ctx.strokeStyle = color;\n          ctx.beginPath();\n          ctx.moveTo(node.x, node.y);\n          ctx.lineTo(node.x + factor * force.x, node.y + factor * force.y);\n          ctx.stroke();\n\n          var angle = Math.atan2(force.y, force.x);\n          ctx.fillStyle = color;\n          ctx.arrowEndpoint(node.x + factor * force.x + Math.cos(angle) * arrowSize, node.y + factor * force.y + Math.sin(angle) * arrowSize, angle, arrowSize);\n          ctx.fill();\n        }\n      }\n    }]);\n\n    return PhysicsEngine;\n  }();\n\n  exports.default = PhysicsEngine;\n\n/***/ },\n/* 96 */\n/***/ function(module, exports) {\n\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var BarnesHutSolver = function () {\n    function BarnesHutSolver(body, physicsBody, options) {\n      _classCallCheck(this, BarnesHutSolver);\n\n      this.body = body;\n      this.physicsBody = physicsBody;\n      this.barnesHutTree;\n      this.setOptions(options);\n      this.randomSeed = 5;\n\n      // debug: show grid\n      //this.body.emitter.on(\"afterDrawing\", (ctx) => {this._debug(ctx,'#ff0000')})\n    }\n\n    _createClass(BarnesHutSolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n        this.thetaInversed = 1 / this.options.theta;\n        this.overlapAvoidanceFactor = 1 - Math.max(0, Math.min(1, this.options.avoidOverlap)); // if 1 then min distance = 0.5, if 0.5 then min distance = 0.5 + 0.5*node.shape.radius\n      }\n    }, {\n      key: \"seededRandom\",\n      value: function seededRandom() {\n        var x = Math.sin(this.randomSeed++) * 10000;\n        return x - Math.floor(x);\n      }\n\n      /**\n       * This function calculates the forces the nodes apply on each other based on a gravitational model.\n       * The Barnes Hut method is used to speed up this N-body simulation.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"solve\",\n      value: function solve() {\n        if (this.options.gravitationalConstant !== 0 && this.physicsBody.physicsNodeIndices.length > 0) {\n          var node = void 0;\n          var nodes = this.body.nodes;\n          var nodeIndices = this.physicsBody.physicsNodeIndices;\n          var nodeCount = nodeIndices.length;\n\n          // create the tree\n          var barnesHutTree = this._formBarnesHutTree(nodes, nodeIndices);\n\n          // for debugging\n          this.barnesHutTree = barnesHutTree;\n\n          // place the nodes one by one recursively\n          for (var i = 0; i < nodeCount; i++) {\n            node = nodes[nodeIndices[i]];\n            if (node.options.mass > 0) {\n              // starting with root is irrelevant, it never passes the BarnesHutSolver condition\n              this._getForceContribution(barnesHutTree.root.children.NW, node);\n              this._getForceContribution(barnesHutTree.root.children.NE, node);\n              this._getForceContribution(barnesHutTree.root.children.SW, node);\n              this._getForceContribution(barnesHutTree.root.children.SE, node);\n            }\n          }\n        }\n      }\n\n      /**\n       * This function traverses the barnesHutTree. It checks when it can approximate distant nodes with their center of mass.\n       * If a region contains a single node, we check if it is not itself, then we apply the force.\n       *\n       * @param parentBranch\n       * @param node\n       * @private\n       */\n\n    }, {\n      key: \"_getForceContribution\",\n      value: function _getForceContribution(parentBranch, node) {\n        // we get no force contribution from an empty region\n        if (parentBranch.childrenCount > 0) {\n          var dx = void 0,\n              dy = void 0,\n              distance = void 0;\n\n          // get the distance from the center of mass to the node.\n          dx = parentBranch.centerOfMass.x - node.x;\n          dy = parentBranch.centerOfMass.y - node.y;\n          distance = Math.sqrt(dx * dx + dy * dy);\n\n          // BarnesHutSolver condition\n          // original condition : s/d < theta = passed  ===  d/s > 1/theta = passed\n          // calcSize = 1/s --> d * 1/s > 1/theta = passed\n          if (distance * parentBranch.calcSize > this.thetaInversed) {\n            this._calculateForces(distance, dx, dy, node, parentBranch);\n          } else {\n            // Did not pass the condition, go into children if available\n            if (parentBranch.childrenCount === 4) {\n              this._getForceContribution(parentBranch.children.NW, node);\n              this._getForceContribution(parentBranch.children.NE, node);\n              this._getForceContribution(parentBranch.children.SW, node);\n              this._getForceContribution(parentBranch.children.SE, node);\n            } else {\n              // parentBranch must have only one node, if it was empty we wouldnt be here\n              if (parentBranch.children.data.id != node.id) {\n                // if it is not self\n                this._calculateForces(distance, dx, dy, node, parentBranch);\n              }\n            }\n          }\n        }\n      }\n\n      /**\n       * Calculate the forces based on the distance.\n       *\n       * @param distance\n       * @param dx\n       * @param dy\n       * @param node\n       * @param parentBranch\n       * @private\n       */\n\n    }, {\n      key: \"_calculateForces\",\n      value: function _calculateForces(distance, dx, dy, node, parentBranch) {\n        if (distance === 0) {\n          distance = 0.1;\n          dx = distance;\n        }\n\n        if (this.overlapAvoidanceFactor < 1 && node.shape.radius) {\n          distance = Math.max(0.1 + this.overlapAvoidanceFactor * node.shape.radius, distance - node.shape.radius);\n        }\n\n        // the dividing by the distance cubed instead of squared allows us to get the fx and fy components without sines and cosines\n        // it is shorthand for gravityforce with distance squared and fx = dx/distance * gravityForce\n        var gravityForce = this.options.gravitationalConstant * parentBranch.mass * node.options.mass / Math.pow(distance, 3);\n        var fx = dx * gravityForce;\n        var fy = dy * gravityForce;\n\n        this.physicsBody.forces[node.id].x += fx;\n        this.physicsBody.forces[node.id].y += fy;\n      }\n\n      /**\n       * This function constructs the barnesHut tree recursively. It creates the root, splits it and starts placing the nodes.\n       *\n       * @param nodes\n       * @param nodeIndices\n       * @private\n       */\n\n    }, {\n      key: \"_formBarnesHutTree\",\n      value: function _formBarnesHutTree(nodes, nodeIndices) {\n        var node = void 0;\n        var nodeCount = nodeIndices.length;\n\n        var minX = nodes[nodeIndices[0]].x;\n        var minY = nodes[nodeIndices[0]].y;\n        var maxX = nodes[nodeIndices[0]].x;\n        var maxY = nodes[nodeIndices[0]].y;\n\n        // get the range of the nodes\n        for (var i = 1; i < nodeCount; i++) {\n          var x = nodes[nodeIndices[i]].x;\n          var y = nodes[nodeIndices[i]].y;\n          if (nodes[nodeIndices[i]].options.mass > 0) {\n            if (x < minX) {\n              minX = x;\n            }\n            if (x > maxX) {\n              maxX = x;\n            }\n            if (y < minY) {\n              minY = y;\n            }\n            if (y > maxY) {\n              maxY = y;\n            }\n          }\n        }\n        // make the range a square\n        var sizeDiff = Math.abs(maxX - minX) - Math.abs(maxY - minY); // difference between X and Y\n        if (sizeDiff > 0) {\n          minY -= 0.5 * sizeDiff;\n          maxY += 0.5 * sizeDiff;\n        } // xSize > ySize\n        else {\n            minX += 0.5 * sizeDiff;\n            maxX -= 0.5 * sizeDiff;\n          } // xSize < ySize\n\n\n        var minimumTreeSize = 1e-5;\n        var rootSize = Math.max(minimumTreeSize, Math.abs(maxX - minX));\n        var halfRootSize = 0.5 * rootSize;\n        var centerX = 0.5 * (minX + maxX),\n            centerY = 0.5 * (minY + maxY);\n\n        // construct the barnesHutTree\n        var barnesHutTree = {\n          root: {\n            centerOfMass: { x: 0, y: 0 },\n            mass: 0,\n            range: {\n              minX: centerX - halfRootSize, maxX: centerX + halfRootSize,\n              minY: centerY - halfRootSize, maxY: centerY + halfRootSize\n            },\n            size: rootSize,\n            calcSize: 1 / rootSize,\n            children: { data: null },\n            maxWidth: 0,\n            level: 0,\n            childrenCount: 4\n          }\n        };\n        this._splitBranch(barnesHutTree.root);\n\n        // place the nodes one by one recursively\n        for (var _i = 0; _i < nodeCount; _i++) {\n          node = nodes[nodeIndices[_i]];\n          if (node.options.mass > 0) {\n            this._placeInTree(barnesHutTree.root, node);\n          }\n        }\n\n        // make global\n        return barnesHutTree;\n      }\n\n      /**\n       * this updates the mass of a branch. this is increased by adding a node.\n       *\n       * @param parentBranch\n       * @param node\n       * @private\n       */\n\n    }, {\n      key: \"_updateBranchMass\",\n      value: function _updateBranchMass(parentBranch, node) {\n        var totalMass = parentBranch.mass + node.options.mass;\n        var totalMassInv = 1 / totalMass;\n\n        parentBranch.centerOfMass.x = parentBranch.centerOfMass.x * parentBranch.mass + node.x * node.options.mass;\n        parentBranch.centerOfMass.x *= totalMassInv;\n\n        parentBranch.centerOfMass.y = parentBranch.centerOfMass.y * parentBranch.mass + node.y * node.options.mass;\n        parentBranch.centerOfMass.y *= totalMassInv;\n\n        parentBranch.mass = totalMass;\n        var biggestSize = Math.max(Math.max(node.height, node.radius), node.width);\n        parentBranch.maxWidth = parentBranch.maxWidth < biggestSize ? biggestSize : parentBranch.maxWidth;\n      }\n\n      /**\n       * determine in which branch the node will be placed.\n       *\n       * @param parentBranch\n       * @param node\n       * @param skipMassUpdate\n       * @private\n       */\n\n    }, {\n      key: \"_placeInTree\",\n      value: function _placeInTree(parentBranch, node, skipMassUpdate) {\n        if (skipMassUpdate != true || skipMassUpdate === undefined) {\n          // update the mass of the branch.\n          this._updateBranchMass(parentBranch, node);\n        }\n\n        if (parentBranch.children.NW.range.maxX > node.x) {\n          // in NW or SW\n          if (parentBranch.children.NW.range.maxY > node.y) {\n            // in NW\n            this._placeInRegion(parentBranch, node, \"NW\");\n          } else {\n            // in SW\n            this._placeInRegion(parentBranch, node, \"SW\");\n          }\n        } else {\n          // in NE or SE\n          if (parentBranch.children.NW.range.maxY > node.y) {\n            // in NE\n            this._placeInRegion(parentBranch, node, \"NE\");\n          } else {\n            // in SE\n            this._placeInRegion(parentBranch, node, \"SE\");\n          }\n        }\n      }\n\n      /**\n       * actually place the node in a region (or branch)\n       *\n       * @param parentBranch\n       * @param node\n       * @param region\n       * @private\n       */\n\n    }, {\n      key: \"_placeInRegion\",\n      value: function _placeInRegion(parentBranch, node, region) {\n        switch (parentBranch.children[region].childrenCount) {\n          case 0:\n            // place node here\n            parentBranch.children[region].children.data = node;\n            parentBranch.children[region].childrenCount = 1;\n            this._updateBranchMass(parentBranch.children[region], node);\n            break;\n          case 1:\n            // convert into children\n            // if there are two nodes exactly overlapping (on init, on opening of cluster etc.)\n            // we move one node a little bit and we do not put it in the tree.\n            if (parentBranch.children[region].children.data.x === node.x && parentBranch.children[region].children.data.y === node.y) {\n              node.x += this.seededRandom();\n              node.y += this.seededRandom();\n            } else {\n              this._splitBranch(parentBranch.children[region]);\n              this._placeInTree(parentBranch.children[region], node);\n            }\n            break;\n          case 4:\n            // place in branch\n            this._placeInTree(parentBranch.children[region], node);\n            break;\n        }\n      }\n\n      /**\n       * this function splits a branch into 4 sub branches. If the branch contained a node, we place it in the subbranch\n       * after the split is complete.\n       *\n       * @param parentBranch\n       * @private\n       */\n\n    }, {\n      key: \"_splitBranch\",\n      value: function _splitBranch(parentBranch) {\n        // if the branch is shaded with a node, replace the node in the new subset.\n        var containedNode = null;\n        if (parentBranch.childrenCount === 1) {\n          containedNode = parentBranch.children.data;\n          parentBranch.mass = 0;\n          parentBranch.centerOfMass.x = 0;\n          parentBranch.centerOfMass.y = 0;\n        }\n        parentBranch.childrenCount = 4;\n        parentBranch.children.data = null;\n        this._insertRegion(parentBranch, \"NW\");\n        this._insertRegion(parentBranch, \"NE\");\n        this._insertRegion(parentBranch, \"SW\");\n        this._insertRegion(parentBranch, \"SE\");\n\n        if (containedNode != null) {\n          this._placeInTree(parentBranch, containedNode);\n        }\n      }\n\n      /**\n       * This function subdivides the region into four new segments.\n       * Specifically, this inserts a single new segment.\n       * It fills the children section of the parentBranch\n       *\n       * @param parentBranch\n       * @param region\n       * @param parentRange\n       * @private\n       */\n\n    }, {\n      key: \"_insertRegion\",\n      value: function _insertRegion(parentBranch, region) {\n        var minX = void 0,\n            maxX = void 0,\n            minY = void 0,\n            maxY = void 0;\n        var childSize = 0.5 * parentBranch.size;\n        switch (region) {\n          case \"NW\":\n            minX = parentBranch.range.minX;\n            maxX = parentBranch.range.minX + childSize;\n            minY = parentBranch.range.minY;\n            maxY = parentBranch.range.minY + childSize;\n            break;\n          case \"NE\":\n            minX = parentBranch.range.minX + childSize;\n            maxX = parentBranch.range.maxX;\n            minY = parentBranch.range.minY;\n            maxY = parentBranch.range.minY + childSize;\n            break;\n          case \"SW\":\n            minX = parentBranch.range.minX;\n            maxX = parentBranch.range.minX + childSize;\n            minY = parentBranch.range.minY + childSize;\n            maxY = parentBranch.range.maxY;\n            break;\n          case \"SE\":\n            minX = parentBranch.range.minX + childSize;\n            maxX = parentBranch.range.maxX;\n            minY = parentBranch.range.minY + childSize;\n            maxY = parentBranch.range.maxY;\n            break;\n        }\n\n        parentBranch.children[region] = {\n          centerOfMass: { x: 0, y: 0 },\n          mass: 0,\n          range: { minX: minX, maxX: maxX, minY: minY, maxY: maxY },\n          size: 0.5 * parentBranch.size,\n          calcSize: 2 * parentBranch.calcSize,\n          children: { data: null },\n          maxWidth: 0,\n          level: parentBranch.level + 1,\n          childrenCount: 0\n        };\n      }\n\n      //---------------------------  DEBUGGING BELOW  ---------------------------//\n\n\n      /**\n       * This function is for debugging purposed, it draws the tree.\n       *\n       * @param ctx\n       * @param color\n       * @private\n       */\n\n    }, {\n      key: \"_debug\",\n      value: function _debug(ctx, color) {\n        if (this.barnesHutTree !== undefined) {\n\n          ctx.lineWidth = 1;\n\n          this._drawBranch(this.barnesHutTree.root, ctx, color);\n        }\n      }\n\n      /**\n       * This function is for debugging purposes. It draws the branches recursively.\n       *\n       * @param branch\n       * @param ctx\n       * @param color\n       * @private\n       */\n\n    }, {\n      key: \"_drawBranch\",\n      value: function _drawBranch(branch, ctx, color) {\n        if (color === undefined) {\n          color = \"#FF0000\";\n        }\n\n        if (branch.childrenCount === 4) {\n          this._drawBranch(branch.children.NW, ctx);\n          this._drawBranch(branch.children.NE, ctx);\n          this._drawBranch(branch.children.SE, ctx);\n          this._drawBranch(branch.children.SW, ctx);\n        }\n        ctx.strokeStyle = color;\n        ctx.beginPath();\n        ctx.moveTo(branch.range.minX, branch.range.minY);\n        ctx.lineTo(branch.range.maxX, branch.range.minY);\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(branch.range.maxX, branch.range.minY);\n        ctx.lineTo(branch.range.maxX, branch.range.maxY);\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(branch.range.maxX, branch.range.maxY);\n        ctx.lineTo(branch.range.minX, branch.range.maxY);\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(branch.range.minX, branch.range.maxY);\n        ctx.lineTo(branch.range.minX, branch.range.minY);\n        ctx.stroke();\n\n        /*\n         if (branch.mass > 0) {\n         ctx.circle(branch.centerOfMass.x, branch.centerOfMass.y, 3*branch.mass);\n         ctx.stroke();\n         }\n         */\n      }\n    }]);\n\n    return BarnesHutSolver;\n  }();\n\n  exports.default = BarnesHutSolver;\n\n/***/ },\n/* 97 */\n/***/ function(module, exports) {\n\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var RepulsionSolver = function () {\n    function RepulsionSolver(body, physicsBody, options) {\n      _classCallCheck(this, RepulsionSolver);\n\n      this.body = body;\n      this.physicsBody = physicsBody;\n      this.setOptions(options);\n    }\n\n    _createClass(RepulsionSolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n      /**\n       * Calculate the forces the nodes apply on each other based on a repulsion field.\n       * This field is linearly approximated.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"solve\",\n      value: function solve() {\n        var dx, dy, distance, fx, fy, repulsingForce, node1, node2;\n\n        var nodes = this.body.nodes;\n        var nodeIndices = this.physicsBody.physicsNodeIndices;\n        var forces = this.physicsBody.forces;\n\n        // repulsing forces between nodes\n        var nodeDistance = this.options.nodeDistance;\n\n        // approximation constants\n        var a = -2 / 3 / nodeDistance;\n        var b = 4 / 3;\n\n        // we loop from i over all but the last entree in the array\n        // j loops from i+1 to the last. This way we do not double count any of the indices, nor i === j\n        for (var i = 0; i < nodeIndices.length - 1; i++) {\n          node1 = nodes[nodeIndices[i]];\n          for (var j = i + 1; j < nodeIndices.length; j++) {\n            node2 = nodes[nodeIndices[j]];\n\n            dx = node2.x - node1.x;\n            dy = node2.y - node1.y;\n            distance = Math.sqrt(dx * dx + dy * dy);\n\n            // same condition as BarnesHutSolver, making sure nodes are never 100% overlapping.\n            if (distance === 0) {\n              distance = 0.1 * Math.random();\n              dx = distance;\n            }\n\n            if (distance < 2 * nodeDistance) {\n              if (distance < 0.5 * nodeDistance) {\n                repulsingForce = 1.0;\n              } else {\n                repulsingForce = a * distance + b; // linear approx of  1 / (1 + Math.exp((distance / nodeDistance - 1) * steepness))\n              }\n              repulsingForce = repulsingForce / distance;\n\n              fx = dx * repulsingForce;\n              fy = dy * repulsingForce;\n\n              forces[node1.id].x -= fx;\n              forces[node1.id].y -= fy;\n              forces[node2.id].x += fx;\n              forces[node2.id].y += fy;\n            }\n          }\n        }\n      }\n    }]);\n\n    return RepulsionSolver;\n  }();\n\n  exports.default = RepulsionSolver;\n\n/***/ },\n/* 98 */\n/***/ function(module, exports) {\n\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var HierarchicalRepulsionSolver = function () {\n    function HierarchicalRepulsionSolver(body, physicsBody, options) {\n      _classCallCheck(this, HierarchicalRepulsionSolver);\n\n      this.body = body;\n      this.physicsBody = physicsBody;\n      this.setOptions(options);\n    }\n\n    _createClass(HierarchicalRepulsionSolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n\n      /**\n       * Calculate the forces the nodes apply on each other based on a repulsion field.\n       * This field is linearly approximated.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"solve\",\n      value: function solve() {\n        var dx, dy, distance, fx, fy, repulsingForce, node1, node2, i, j;\n\n        var nodes = this.body.nodes;\n        var nodeIndices = this.physicsBody.physicsNodeIndices;\n        var forces = this.physicsBody.forces;\n\n        // repulsing forces between nodes\n        var nodeDistance = this.options.nodeDistance;\n\n        // we loop from i over all but the last entree in the array\n        // j loops from i+1 to the last. This way we do not double count any of the indices, nor i === j\n        for (i = 0; i < nodeIndices.length - 1; i++) {\n          node1 = nodes[nodeIndices[i]];\n          for (j = i + 1; j < nodeIndices.length; j++) {\n            node2 = nodes[nodeIndices[j]];\n\n            // nodes only affect nodes on their level\n            if (node1.level === node2.level) {\n              dx = node2.x - node1.x;\n              dy = node2.y - node1.y;\n              distance = Math.sqrt(dx * dx + dy * dy);\n\n              var steepness = 0.05;\n              if (distance < nodeDistance) {\n                repulsingForce = -Math.pow(steepness * distance, 2) + Math.pow(steepness * nodeDistance, 2);\n              } else {\n                repulsingForce = 0;\n              }\n              // normalize force with\n              if (distance === 0) {\n                distance = 0.01;\n              } else {\n                repulsingForce = repulsingForce / distance;\n              }\n              fx = dx * repulsingForce;\n              fy = dy * repulsingForce;\n\n              forces[node1.id].x -= fx;\n              forces[node1.id].y -= fy;\n              forces[node2.id].x += fx;\n              forces[node2.id].y += fy;\n            }\n          }\n        }\n      }\n    }]);\n\n    return HierarchicalRepulsionSolver;\n  }();\n\n  exports.default = HierarchicalRepulsionSolver;\n\n/***/ },\n/* 99 */\n/***/ function(module, exports) {\n\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var SpringSolver = function () {\n    function SpringSolver(body, physicsBody, options) {\n      _classCallCheck(this, SpringSolver);\n\n      this.body = body;\n      this.physicsBody = physicsBody;\n      this.setOptions(options);\n    }\n\n    _createClass(SpringSolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n\n      /**\n       * This function calculates the springforces on the nodes, accounting for the support nodes.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"solve\",\n      value: function solve() {\n        var edgeLength = void 0,\n            edge = void 0;\n        var edgeIndices = this.physicsBody.physicsEdgeIndices;\n        var edges = this.body.edges;\n        var node1 = void 0,\n            node2 = void 0,\n            node3 = void 0;\n\n        // forces caused by the edges, modelled as springs\n        for (var i = 0; i < edgeIndices.length; i++) {\n          edge = edges[edgeIndices[i]];\n          if (edge.connected === true && edge.toId !== edge.fromId) {\n            // only calculate forces if nodes are in the same sector\n            if (this.body.nodes[edge.toId] !== undefined && this.body.nodes[edge.fromId] !== undefined) {\n              if (edge.edgeType.via !== undefined) {\n                edgeLength = edge.options.length === undefined ? this.options.springLength : edge.options.length;\n                node1 = edge.to;\n                node2 = edge.edgeType.via;\n                node3 = edge.from;\n\n                this._calculateSpringForce(node1, node2, 0.5 * edgeLength);\n                this._calculateSpringForce(node2, node3, 0.5 * edgeLength);\n              } else {\n                // the * 1.5 is here so the edge looks as large as a smooth edge. It does not initially because the smooth edges use\n                // the support nodes which exert a repulsive force on the to and from nodes, making the edge appear larger.\n                edgeLength = edge.options.length === undefined ? this.options.springLength * 1.5 : edge.options.length;\n                this._calculateSpringForce(edge.from, edge.to, edgeLength);\n              }\n            }\n          }\n        }\n      }\n\n      /**\n       * This is the code actually performing the calculation for the function above.\n       *\n       * @param node1\n       * @param node2\n       * @param edgeLength\n       * @private\n       */\n\n    }, {\n      key: \"_calculateSpringForce\",\n      value: function _calculateSpringForce(node1, node2, edgeLength) {\n        var dx = node1.x - node2.x;\n        var dy = node1.y - node2.y;\n        var distance = Math.max(Math.sqrt(dx * dx + dy * dy), 0.01);\n\n        // the 1/distance is so the fx and fy can be calculated without sine or cosine.\n        var springForce = this.options.springConstant * (edgeLength - distance) / distance;\n\n        var fx = dx * springForce;\n        var fy = dy * springForce;\n\n        // handle the case where one node is not part of the physcis\n        if (this.physicsBody.forces[node1.id] !== undefined) {\n          this.physicsBody.forces[node1.id].x += fx;\n          this.physicsBody.forces[node1.id].y += fy;\n        }\n\n        if (this.physicsBody.forces[node2.id] !== undefined) {\n          this.physicsBody.forces[node2.id].x -= fx;\n          this.physicsBody.forces[node2.id].y -= fy;\n        }\n      }\n    }]);\n\n    return SpringSolver;\n  }();\n\n  exports.default = SpringSolver;\n\n/***/ },\n/* 100 */\n/***/ function(module, exports) {\n\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var HierarchicalSpringSolver = function () {\n    function HierarchicalSpringSolver(body, physicsBody, options) {\n      _classCallCheck(this, HierarchicalSpringSolver);\n\n      this.body = body;\n      this.physicsBody = physicsBody;\n      this.setOptions(options);\n    }\n\n    _createClass(HierarchicalSpringSolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n\n      /**\n       * This function calculates the springforces on the nodes, accounting for the support nodes.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"solve\",\n      value: function solve() {\n        var edgeLength, edge;\n        var dx, dy, fx, fy, springForce, distance;\n        var edges = this.body.edges;\n        var factor = 0.5;\n\n        var edgeIndices = this.physicsBody.physicsEdgeIndices;\n        var nodeIndices = this.physicsBody.physicsNodeIndices;\n        var forces = this.physicsBody.forces;\n\n        // initialize the spring force counters\n        for (var i = 0; i < nodeIndices.length; i++) {\n          var nodeId = nodeIndices[i];\n          forces[nodeId].springFx = 0;\n          forces[nodeId].springFy = 0;\n        }\n\n        // forces caused by the edges, modelled as springs\n        for (var _i = 0; _i < edgeIndices.length; _i++) {\n          edge = edges[edgeIndices[_i]];\n          if (edge.connected === true) {\n            edgeLength = edge.options.length === undefined ? this.options.springLength : edge.options.length;\n\n            dx = edge.from.x - edge.to.x;\n            dy = edge.from.y - edge.to.y;\n            distance = Math.sqrt(dx * dx + dy * dy);\n            distance = distance === 0 ? 0.01 : distance;\n\n            // the 1/distance is so the fx and fy can be calculated without sine or cosine.\n            springForce = this.options.springConstant * (edgeLength - distance) / distance;\n\n            fx = dx * springForce;\n            fy = dy * springForce;\n\n            if (edge.to.level != edge.from.level) {\n              if (forces[edge.toId] !== undefined) {\n                forces[edge.toId].springFx -= fx;\n                forces[edge.toId].springFy -= fy;\n              }\n              if (forces[edge.fromId] !== undefined) {\n                forces[edge.fromId].springFx += fx;\n                forces[edge.fromId].springFy += fy;\n              }\n            } else {\n              if (forces[edge.toId] !== undefined) {\n                forces[edge.toId].x -= factor * fx;\n                forces[edge.toId].y -= factor * fy;\n              }\n              if (forces[edge.fromId] !== undefined) {\n                forces[edge.fromId].x += factor * fx;\n                forces[edge.fromId].y += factor * fy;\n              }\n            }\n          }\n        }\n\n        // normalize spring forces\n        var springForce = 1;\n        var springFx, springFy;\n        for (var _i2 = 0; _i2 < nodeIndices.length; _i2++) {\n          var _nodeId = nodeIndices[_i2];\n          springFx = Math.min(springForce, Math.max(-springForce, forces[_nodeId].springFx));\n          springFy = Math.min(springForce, Math.max(-springForce, forces[_nodeId].springFy));\n\n          forces[_nodeId].x += springFx;\n          forces[_nodeId].y += springFy;\n        }\n\n        // retain energy balance\n        var totalFx = 0;\n        var totalFy = 0;\n        for (var _i3 = 0; _i3 < nodeIndices.length; _i3++) {\n          var _nodeId2 = nodeIndices[_i3];\n          totalFx += forces[_nodeId2].x;\n          totalFy += forces[_nodeId2].y;\n        }\n        var correctionFx = totalFx / nodeIndices.length;\n        var correctionFy = totalFy / nodeIndices.length;\n\n        for (var _i4 = 0; _i4 < nodeIndices.length; _i4++) {\n          var _nodeId3 = nodeIndices[_i4];\n          forces[_nodeId3].x -= correctionFx;\n          forces[_nodeId3].y -= correctionFy;\n        }\n      }\n    }]);\n\n    return HierarchicalSpringSolver;\n  }();\n\n  exports.default = HierarchicalSpringSolver;\n\n/***/ },\n/* 101 */\n/***/ function(module, exports) {\n\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var CentralGravitySolver = function () {\n    function CentralGravitySolver(body, physicsBody, options) {\n      _classCallCheck(this, CentralGravitySolver);\n\n      this.body = body;\n      this.physicsBody = physicsBody;\n      this.setOptions(options);\n    }\n\n    _createClass(CentralGravitySolver, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        this.options = options;\n      }\n    }, {\n      key: \"solve\",\n      value: function solve() {\n        var dx = void 0,\n            dy = void 0,\n            distance = void 0,\n            node = void 0;\n        var nodes = this.body.nodes;\n        var nodeIndices = this.physicsBody.physicsNodeIndices;\n        var forces = this.physicsBody.forces;\n\n        for (var i = 0; i < nodeIndices.length; i++) {\n          var nodeId = nodeIndices[i];\n          node = nodes[nodeId];\n          dx = -node.x;\n          dy = -node.y;\n          distance = Math.sqrt(dx * dx + dy * dy);\n\n          this._calculateForces(distance, dx, dy, forces, node);\n        }\n      }\n\n      /**\n       * Calculate the forces based on the distance.\n       * @private\n       */\n\n    }, {\n      key: \"_calculateForces\",\n      value: function _calculateForces(distance, dx, dy, forces, node) {\n        var gravityForce = distance === 0 ? 0 : this.options.centralGravity / distance;\n        forces[node.id].x = dx * gravityForce;\n        forces[node.id].y = dy * gravityForce;\n      }\n    }]);\n\n    return CentralGravitySolver;\n  }();\n\n  exports.default = CentralGravitySolver;\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _BarnesHutSolver2 = __webpack_require__(96);\n\n  var _BarnesHutSolver3 = _interopRequireDefault(_BarnesHutSolver2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var ForceAtlas2BasedRepulsionSolver = function (_BarnesHutSolver) {\n    _inherits(ForceAtlas2BasedRepulsionSolver, _BarnesHutSolver);\n\n    function ForceAtlas2BasedRepulsionSolver(body, physicsBody, options) {\n      _classCallCheck(this, ForceAtlas2BasedRepulsionSolver);\n\n      return _possibleConstructorReturn(this, (ForceAtlas2BasedRepulsionSolver.__proto__ || Object.getPrototypeOf(ForceAtlas2BasedRepulsionSolver)).call(this, body, physicsBody, options));\n    }\n\n    /**\n     * Calculate the forces based on the distance.\n     *\n     * @param distance\n     * @param dx\n     * @param dy\n     * @param node\n     * @param parentBranch\n     * @private\n     */\n\n\n    _createClass(ForceAtlas2BasedRepulsionSolver, [{\n      key: \"_calculateForces\",\n      value: function _calculateForces(distance, dx, dy, node, parentBranch) {\n        if (distance === 0) {\n          distance = 0.1 * Math.random();\n          dx = distance;\n        }\n\n        if (this.overlapAvoidanceFactor < 1 && node.shape.radius) {\n          distance = Math.max(0.1 + this.overlapAvoidanceFactor * node.shape.radius, distance - node.shape.radius);\n        }\n\n        var degree = node.edges.length + 1;\n        // the dividing by the distance cubed instead of squared allows us to get the fx and fy components without sines and cosines\n        // it is shorthand for gravityforce with distance squared and fx = dx/distance * gravityForce\n        var gravityForce = this.options.gravitationalConstant * parentBranch.mass * node.options.mass * degree / Math.pow(distance, 2);\n        var fx = dx * gravityForce;\n        var fy = dy * gravityForce;\n\n        this.physicsBody.forces[node.id].x += fx;\n        this.physicsBody.forces[node.id].y += fy;\n      }\n    }]);\n\n    return ForceAtlas2BasedRepulsionSolver;\n  }(_BarnesHutSolver3.default);\n\n  exports.default = ForceAtlas2BasedRepulsionSolver;\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _CentralGravitySolver2 = __webpack_require__(101);\n\n  var _CentralGravitySolver3 = _interopRequireDefault(_CentralGravitySolver2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var ForceAtlas2BasedCentralGravitySolver = function (_CentralGravitySolver) {\n    _inherits(ForceAtlas2BasedCentralGravitySolver, _CentralGravitySolver);\n\n    function ForceAtlas2BasedCentralGravitySolver(body, physicsBody, options) {\n      _classCallCheck(this, ForceAtlas2BasedCentralGravitySolver);\n\n      return _possibleConstructorReturn(this, (ForceAtlas2BasedCentralGravitySolver.__proto__ || Object.getPrototypeOf(ForceAtlas2BasedCentralGravitySolver)).call(this, body, physicsBody, options));\n    }\n\n    /**\n     * Calculate the forces based on the distance.\n     * @private\n     */\n\n\n    _createClass(ForceAtlas2BasedCentralGravitySolver, [{\n      key: \"_calculateForces\",\n      value: function _calculateForces(distance, dx, dy, forces, node) {\n        if (distance > 0) {\n          var degree = node.edges.length + 1;\n          var gravityForce = this.options.centralGravity * degree * node.options.mass;\n          forces[node.id].x = dx * gravityForce;\n          forces[node.id].y = dy * gravityForce;\n        }\n      }\n    }]);\n\n    return ForceAtlas2BasedCentralGravitySolver;\n  }(_CentralGravitySolver3.default);\n\n  exports.default = ForceAtlas2BasedCentralGravitySolver;\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _NetworkUtil = __webpack_require__(105);\n\n  var _NetworkUtil2 = _interopRequireDefault(_NetworkUtil);\n\n  var _Cluster = __webpack_require__(106);\n\n  var _Cluster2 = _interopRequireDefault(_Cluster);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n\n  var ClusterEngine = function () {\n    function ClusterEngine(body) {\n      var _this = this;\n\n      _classCallCheck(this, ClusterEngine);\n\n      this.body = body;\n      this.clusteredNodes = {};\n      this.clusteredEdges = {};\n\n      this.options = {};\n      this.defaultOptions = {};\n      util.extend(this.options, this.defaultOptions);\n\n      this.body.emitter.on('_resetData', function () {\n        _this.clusteredNodes = {};_this.clusteredEdges = {};\n      });\n    }\n\n    /**\n    *\n    * @param hubsize\n    * @param options\n    */\n\n\n    _createClass(ClusterEngine, [{\n      key: 'clusterByHubsize',\n      value: function clusterByHubsize(hubsize, options) {\n        if (hubsize === undefined) {\n          hubsize = this._getHubSize();\n        } else if ((typeof hubsize === 'undefined' ? 'undefined' : _typeof(hubsize)) === \"object\") {\n          options = this._checkOptions(hubsize);\n          hubsize = this._getHubSize();\n        }\n\n        var nodesToCluster = [];\n        for (var i = 0; i < this.body.nodeIndices.length; i++) {\n          var node = this.body.nodes[this.body.nodeIndices[i]];\n          if (node.edges.length >= hubsize) {\n            nodesToCluster.push(node.id);\n          }\n        }\n\n        for (var _i = 0; _i < nodesToCluster.length; _i++) {\n          this.clusterByConnection(nodesToCluster[_i], options, true);\n        }\n\n        this.body.emitter.emit('_dataChanged');\n      }\n\n      /**\n      * loop over all nodes, check if they adhere to the condition and cluster if needed.\n      * @param options\n      * @param refreshData\n      */\n\n    }, {\n      key: 'cluster',\n      value: function cluster() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var refreshData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        if (options.joinCondition === undefined) {\n          throw new Error(\"Cannot call clusterByNodeData without a joinCondition function in the options.\");\n        }\n\n        // check if the options object is fine, append if needed\n        options = this._checkOptions(options);\n\n        var childNodesObj = {};\n        var childEdgesObj = {};\n\n        // collect the nodes that will be in the cluster\n        for (var i = 0; i < this.body.nodeIndices.length; i++) {\n          var nodeId = this.body.nodeIndices[i];\n          var node = this.body.nodes[nodeId];\n          var clonedOptions = _NetworkUtil2.default.cloneOptions(node);\n          if (options.joinCondition(clonedOptions) === true) {\n            childNodesObj[nodeId] = this.body.nodes[nodeId];\n\n            // collect the nodes that will be in the cluster\n            for (var _i2 = 0; _i2 < node.edges.length; _i2++) {\n              var edge = node.edges[_i2];\n              if (this.clusteredEdges[edge.id] === undefined) {\n                childEdgesObj[edge.id] = edge;\n              }\n            }\n          }\n        }\n\n        this._cluster(childNodesObj, childEdgesObj, options, refreshData);\n      }\n\n      /**\n       * Cluster all nodes in the network that have only X edges\n       * @param edgeCount\n       * @param options\n       * @param refreshData\n       */\n\n    }, {\n      key: 'clusterByEdgeCount',\n      value: function clusterByEdgeCount(edgeCount, options) {\n        var refreshData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n        options = this._checkOptions(options);\n        var clusters = [];\n        var usedNodes = {};\n        var edge = void 0,\n            edges = void 0,\n            node = void 0,\n            nodeId = void 0,\n            relevantEdgeCount = void 0;\n        // collect the nodes that will be in the cluster\n        for (var i = 0; i < this.body.nodeIndices.length; i++) {\n          var childNodesObj = {};\n          var childEdgesObj = {};\n          nodeId = this.body.nodeIndices[i];\n\n          // if this node is already used in another cluster this session, we do not have to re-evaluate it.\n          if (usedNodes[nodeId] === undefined) {\n            relevantEdgeCount = 0;\n            node = this.body.nodes[nodeId];\n            edges = [];\n            for (var j = 0; j < node.edges.length; j++) {\n              edge = node.edges[j];\n              if (this.clusteredEdges[edge.id] === undefined) {\n                if (edge.toId !== edge.fromId) {\n                  relevantEdgeCount++;\n                }\n                edges.push(edge);\n              }\n            }\n\n            // this node qualifies, we collect its neighbours to start the clustering process.\n            if (relevantEdgeCount === edgeCount) {\n              var gatheringSuccessful = true;\n              for (var _j = 0; _j < edges.length; _j++) {\n                edge = edges[_j];\n                var childNodeId = this._getConnectedId(edge, nodeId);\n                // add the nodes to the list by the join condition.\n                if (options.joinCondition === undefined) {\n                  childEdgesObj[edge.id] = edge;\n                  childNodesObj[nodeId] = this.body.nodes[nodeId];\n                  childNodesObj[childNodeId] = this.body.nodes[childNodeId];\n                  usedNodes[nodeId] = true;\n                } else {\n                  var clonedOptions = _NetworkUtil2.default.cloneOptions(this.body.nodes[nodeId]);\n                  if (options.joinCondition(clonedOptions) === true) {\n                    childEdgesObj[edge.id] = edge;\n                    childNodesObj[nodeId] = this.body.nodes[nodeId];\n                    usedNodes[nodeId] = true;\n                  } else {\n                    // this node does not qualify after all.\n                    gatheringSuccessful = false;\n                    break;\n                  }\n                }\n              }\n\n              // add to the cluster queue\n              if (Object.keys(childNodesObj).length > 0 && Object.keys(childEdgesObj).length > 0 && gatheringSuccessful === true) {\n                clusters.push({ nodes: childNodesObj, edges: childEdgesObj });\n              }\n            }\n          }\n        }\n\n        for (var _i3 = 0; _i3 < clusters.length; _i3++) {\n          this._cluster(clusters[_i3].nodes, clusters[_i3].edges, options, false);\n        }\n\n        if (refreshData === true) {\n          this.body.emitter.emit('_dataChanged');\n        }\n      }\n\n      /**\n      * Cluster all nodes in the network that have only 1 edge\n      * @param options\n      * @param refreshData\n      */\n\n    }, {\n      key: 'clusterOutliers',\n      value: function clusterOutliers(options) {\n        var refreshData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        this.clusterByEdgeCount(1, options, refreshData);\n      }\n\n      /**\n       * Cluster all nodes in the network that have only 2 edge\n       * @param options\n       * @param refreshData\n       */\n\n    }, {\n      key: 'clusterBridges',\n      value: function clusterBridges(options) {\n        var refreshData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        this.clusterByEdgeCount(2, options, refreshData);\n      }\n\n      /**\n      * suck all connected nodes of a node into the node.\n      * @param nodeId\n      * @param options\n      * @param refreshData\n      */\n\n    }, {\n      key: 'clusterByConnection',\n      value: function clusterByConnection(nodeId, options) {\n        var refreshData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n        // kill conditions\n        if (nodeId === undefined) {\n          throw new Error(\"No nodeId supplied to clusterByConnection!\");\n        }\n        if (this.body.nodes[nodeId] === undefined) {\n          throw new Error(\"The nodeId given to clusterByConnection does not exist!\");\n        }\n\n        var node = this.body.nodes[nodeId];\n        options = this._checkOptions(options, node);\n        if (options.clusterNodeProperties.x === undefined) {\n          options.clusterNodeProperties.x = node.x;\n        }\n        if (options.clusterNodeProperties.y === undefined) {\n          options.clusterNodeProperties.y = node.y;\n        }\n        if (options.clusterNodeProperties.fixed === undefined) {\n          options.clusterNodeProperties.fixed = {};\n          options.clusterNodeProperties.fixed.x = node.options.fixed.x;\n          options.clusterNodeProperties.fixed.y = node.options.fixed.y;\n        }\n\n        var childNodesObj = {};\n        var childEdgesObj = {};\n        var parentNodeId = node.id;\n        var parentClonedOptions = _NetworkUtil2.default.cloneOptions(node);\n        childNodesObj[parentNodeId] = node;\n\n        // collect the nodes that will be in the cluster\n        for (var i = 0; i < node.edges.length; i++) {\n          var edge = node.edges[i];\n          if (this.clusteredEdges[edge.id] === undefined) {\n            var childNodeId = this._getConnectedId(edge, parentNodeId);\n\n            // if the child node is not in a cluster\n            if (this.clusteredNodes[childNodeId] === undefined) {\n              if (childNodeId !== parentNodeId) {\n                if (options.joinCondition === undefined) {\n                  childEdgesObj[edge.id] = edge;\n                  childNodesObj[childNodeId] = this.body.nodes[childNodeId];\n                } else {\n                  // clone the options and insert some additional parameters that could be interesting.\n                  var childClonedOptions = _NetworkUtil2.default.cloneOptions(this.body.nodes[childNodeId]);\n                  if (options.joinCondition(parentClonedOptions, childClonedOptions) === true) {\n                    childEdgesObj[edge.id] = edge;\n                    childNodesObj[childNodeId] = this.body.nodes[childNodeId];\n                  }\n                }\n              } else {\n                // swallow the edge if it is self-referencing.\n                childEdgesObj[edge.id] = edge;\n              }\n            }\n          }\n        }\n        var childNodeIDs = Object.keys(childNodesObj).map(function (childNode) {\n          return childNodesObj[childNode].id;\n        });\n\n        for (childNode in childNodesObj) {\n          var childNode = childNodesObj[childNode];\n          for (var y = 0; y < childNode.edges.length; y++) {\n            var childEdge = childNode.edges[y];\n            if (childNodeIDs.indexOf(this._getConnectedId(childEdge, childNode.id)) > -1) {\n              childEdgesObj[childEdge.id] = childEdge;\n            }\n          }\n        }\n        this._cluster(childNodesObj, childEdgesObj, options, refreshData);\n      }\n\n      /**\n      * This function creates the edges that will be attached to the cluster\n      * It looks for edges that are connected to the nodes from the \"outside' of the cluster.\n      *\n      * @param childNodesObj\n      * @param childEdgesObj\n      * @param clusterNodeProperties\n      * @param clusterEdgeProperties\n      * @private\n      */\n\n    }, {\n      key: '_createClusterEdges',\n      value: function _createClusterEdges(childNodesObj, childEdgesObj, clusterNodeProperties, clusterEdgeProperties) {\n        var edge = void 0,\n            childNodeId = void 0,\n            childNode = void 0,\n            toId = void 0,\n            fromId = void 0,\n            otherNodeId = void 0;\n\n        // loop over all child nodes and their edges to find edges going out of the cluster\n        // these edges will be replaced by clusterEdges.\n        var childKeys = Object.keys(childNodesObj);\n        var createEdges = [];\n        for (var i = 0; i < childKeys.length; i++) {\n          childNodeId = childKeys[i];\n          childNode = childNodesObj[childNodeId];\n\n          // construct new edges from the cluster to others\n          for (var j = 0; j < childNode.edges.length; j++) {\n            edge = childNode.edges[j];\n            // we only handle edges that are visible to the system, not the disabled ones from the clustering process.\n            if (this.clusteredEdges[edge.id] === undefined) {\n              // self-referencing edges will be added to the \"hidden\" list\n              if (edge.toId == edge.fromId) {\n                childEdgesObj[edge.id] = edge;\n              } else {\n                // set up the from and to.\n                if (edge.toId == childNodeId) {\n                  // this is a double equals because ints and strings can be interchanged here.\n                  toId = clusterNodeProperties.id;\n                  fromId = edge.fromId;\n                  otherNodeId = fromId;\n                } else {\n                  toId = edge.toId;\n                  fromId = clusterNodeProperties.id;\n                  otherNodeId = toId;\n                }\n              }\n\n              // Only edges from the cluster outwards are being replaced.\n              if (childNodesObj[otherNodeId] === undefined) {\n                createEdges.push({ edge: edge, fromId: fromId, toId: toId });\n              }\n            }\n          }\n        }\n\n        // here we actually create the replacement edges. We could not do this in the loop above as the creation process\n        // would add an edge to the edges array we are iterating over.\n        for (var _j2 = 0; _j2 < createEdges.length; _j2++) {\n          var _edge = createEdges[_j2].edge;\n          // copy the options of the edge we will replace\n          var clonedOptions = _NetworkUtil2.default.cloneOptions(_edge, 'edge');\n          // make sure the properties of clusterEdges are superimposed on it\n          util.deepExtend(clonedOptions, clusterEdgeProperties);\n\n          // set up the edge\n          clonedOptions.from = createEdges[_j2].fromId;\n          clonedOptions.to = createEdges[_j2].toId;\n          clonedOptions.id = 'clusterEdge:' + util.randomUUID();\n          //clonedOptions.id = '(cf: ' + createEdges[j].fromId + \" to: \" + createEdges[j].toId + \")\" + Math.random();\n\n          // create the edge and give a reference to the one it replaced.\n          var newEdge = this.body.functions.createEdge(clonedOptions);\n          newEdge.clusteringEdgeReplacingId = _edge.id;\n\n          // also reference the new edge in the old edge\n          this.body.edges[_edge.id].edgeReplacedById = newEdge.id;\n\n          // connect the edge.\n          this.body.edges[newEdge.id] = newEdge;\n          newEdge.connect();\n\n          // hide the replaced edge\n          this._backupEdgeOptions(_edge);\n          _edge.setOptions({ physics: false, hidden: true });\n        }\n      }\n\n      /**\n      * This function checks the options that can be supplied to the different cluster functions\n      * for certain fields and inserts defaults if needed\n      * @param options\n      * @returns {*}\n      * @private\n      */\n\n    }, {\n      key: '_checkOptions',\n      value: function _checkOptions() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        if (options.clusterEdgeProperties === undefined) {\n          options.clusterEdgeProperties = {};\n        }\n        if (options.clusterNodeProperties === undefined) {\n          options.clusterNodeProperties = {};\n        }\n\n        return options;\n      }\n\n      /**\n      *\n      * @param {Object}    childNodesObj         | object with node objects, id as keys, same as childNodes except it also contains a source node\n      * @param {Object}    childEdgesObj         | object with edge objects, id as keys\n      * @param {Array}     options               | object with {clusterNodeProperties, clusterEdgeProperties, processProperties}\n      * @param {Boolean}   refreshData | when true, do not wrap up\n      * @private\n      */\n\n    }, {\n      key: '_cluster',\n      value: function _cluster(childNodesObj, childEdgesObj, options) {\n        var refreshData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n        // kill condition: no nodes don't bother\n        if (Object.keys(childNodesObj).length == 0) {\n          return;\n        }\n\n        // allow clusters of 1 if options allow\n        if (Object.keys(childNodesObj).length == 1 && options.clusterNodeProperties.allowSingleNodeCluster != true) {\n          return;\n        }\n\n        // check if this cluster call is not trying to cluster anything that is in another cluster.\n        for (var nodeId in childNodesObj) {\n          if (childNodesObj.hasOwnProperty(nodeId)) {\n            if (this.clusteredNodes[nodeId] !== undefined) {\n              return;\n            }\n          }\n        }\n\n        var clusterNodeProperties = util.deepExtend({}, options.clusterNodeProperties);\n\n        // construct the clusterNodeProperties\n        if (options.processProperties !== undefined) {\n          // get the childNode options\n          var childNodesOptions = [];\n          for (var _nodeId in childNodesObj) {\n            if (childNodesObj.hasOwnProperty(_nodeId)) {\n              var clonedOptions = _NetworkUtil2.default.cloneOptions(childNodesObj[_nodeId]);\n              childNodesOptions.push(clonedOptions);\n            }\n          }\n\n          // get cluster properties based on childNodes\n          var childEdgesOptions = [];\n          for (var edgeId in childEdgesObj) {\n            if (childEdgesObj.hasOwnProperty(edgeId)) {\n              // these cluster edges will be removed on creation of the cluster.\n              if (edgeId.substr(0, 12) !== \"clusterEdge:\") {\n                var _clonedOptions = _NetworkUtil2.default.cloneOptions(childEdgesObj[edgeId], 'edge');\n                childEdgesOptions.push(_clonedOptions);\n              }\n            }\n          }\n\n          clusterNodeProperties = options.processProperties(clusterNodeProperties, childNodesOptions, childEdgesOptions);\n          if (!clusterNodeProperties) {\n            throw new Error(\"The processProperties function does not return properties!\");\n          }\n        }\n\n        // check if we have an unique id;\n        if (clusterNodeProperties.id === undefined) {\n          clusterNodeProperties.id = 'cluster:' + util.randomUUID();\n        }\n        var clusterId = clusterNodeProperties.id;\n\n        if (clusterNodeProperties.label === undefined) {\n          clusterNodeProperties.label = 'cluster';\n        }\n\n        // give the clusterNode a position if it does not have one.\n        var pos = undefined;\n        if (clusterNodeProperties.x === undefined) {\n          pos = this._getClusterPosition(childNodesObj);\n          clusterNodeProperties.x = pos.x;\n        }\n        if (clusterNodeProperties.y === undefined) {\n          if (pos === undefined) {\n            pos = this._getClusterPosition(childNodesObj);\n          }\n          clusterNodeProperties.y = pos.y;\n        }\n\n        // force the ID to remain the same\n        clusterNodeProperties.id = clusterId;\n\n        // create the clusterNode\n        var clusterNode = this.body.functions.createNode(clusterNodeProperties, _Cluster2.default);\n        clusterNode.isCluster = true;\n        clusterNode.containedNodes = childNodesObj;\n        clusterNode.containedEdges = childEdgesObj;\n        // cache a copy from the cluster edge properties if we have to reconnect others later on\n        clusterNode.clusterEdgeProperties = options.clusterEdgeProperties;\n\n        // finally put the cluster node into global\n        this.body.nodes[clusterNodeProperties.id] = clusterNode;\n\n        // create the new edges that will connect to the cluster, all self-referencing edges will be added to childEdgesObject here.\n        this._createClusterEdges(childNodesObj, childEdgesObj, clusterNodeProperties, options.clusterEdgeProperties);\n\n        // disable the childEdges\n        for (var _edgeId in childEdgesObj) {\n          if (childEdgesObj.hasOwnProperty(_edgeId)) {\n            if (this.body.edges[_edgeId] !== undefined) {\n              var edge = this.body.edges[_edgeId];\n              // cache the options before changing\n              this._backupEdgeOptions(edge);\n              // disable physics and hide the edge\n              edge.setOptions({ physics: false, hidden: true });\n            }\n          }\n        }\n\n        // disable the childNodes\n        for (var _nodeId2 in childNodesObj) {\n          if (childNodesObj.hasOwnProperty(_nodeId2)) {\n            this.clusteredNodes[_nodeId2] = { clusterId: clusterNodeProperties.id, node: this.body.nodes[_nodeId2] };\n            this.body.nodes[_nodeId2].setOptions({ hidden: true, physics: false });\n          }\n        }\n\n        // set ID to undefined so no duplicates arise\n        clusterNodeProperties.id = undefined;\n\n        // wrap up\n        if (refreshData === true) {\n          this.body.emitter.emit('_dataChanged');\n        }\n      }\n    }, {\n      key: '_backupEdgeOptions',\n      value: function _backupEdgeOptions(edge) {\n        if (this.clusteredEdges[edge.id] === undefined) {\n          this.clusteredEdges[edge.id] = { physics: edge.options.physics, hidden: edge.options.hidden };\n        }\n      }\n    }, {\n      key: '_restoreEdge',\n      value: function _restoreEdge(edge) {\n        var originalOptions = this.clusteredEdges[edge.id];\n        if (originalOptions !== undefined) {\n          edge.setOptions({ physics: originalOptions.physics, hidden: originalOptions.hidden });\n          delete this.clusteredEdges[edge.id];\n        }\n      }\n\n      /**\n      * Check if a node is a cluster.\n      * @param nodeId\n      * @returns {*}\n      */\n\n    }, {\n      key: 'isCluster',\n      value: function isCluster(nodeId) {\n        if (this.body.nodes[nodeId] !== undefined) {\n          return this.body.nodes[nodeId].isCluster === true;\n        } else {\n          console.log(\"Node does not exist.\");\n          return false;\n        }\n      }\n\n      /**\n      * get the position of the cluster node based on what's inside\n      * @param {object} childNodesObj    | object with node objects, id as keys\n      * @returns {{x: number, y: number}}\n      * @private\n      */\n\n    }, {\n      key: '_getClusterPosition',\n      value: function _getClusterPosition(childNodesObj) {\n        var childKeys = Object.keys(childNodesObj);\n        var minX = childNodesObj[childKeys[0]].x;\n        var maxX = childNodesObj[childKeys[0]].x;\n        var minY = childNodesObj[childKeys[0]].y;\n        var maxY = childNodesObj[childKeys[0]].y;\n        var node = void 0;\n        for (var i = 1; i < childKeys.length; i++) {\n          node = childNodesObj[childKeys[i]];\n          minX = node.x < minX ? node.x : minX;\n          maxX = node.x > maxX ? node.x : maxX;\n          minY = node.y < minY ? node.y : minY;\n          maxY = node.y > maxY ? node.y : maxY;\n        }\n\n        return { x: 0.5 * (minX + maxX), y: 0.5 * (minY + maxY) };\n      }\n\n      /**\n      * Open a cluster by calling this function.\n      * @param {String}  clusterNodeId | the ID of the cluster node\n      * @param {Boolean} refreshData | wrap up afterwards if not true\n      */\n\n    }, {\n      key: 'openCluster',\n      value: function openCluster(clusterNodeId, options) {\n        var refreshData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n        // kill conditions\n        if (clusterNodeId === undefined) {\n          throw new Error(\"No clusterNodeId supplied to openCluster.\");\n        }\n        if (this.body.nodes[clusterNodeId] === undefined) {\n          throw new Error(\"The clusterNodeId supplied to openCluster does not exist.\");\n        }\n        if (this.body.nodes[clusterNodeId].containedNodes === undefined) {\n          console.log(\"The node:\" + clusterNodeId + \" is not a cluster.\");\n          return;\n        }\n        var clusterNode = this.body.nodes[clusterNodeId];\n        var containedNodes = clusterNode.containedNodes;\n        var containedEdges = clusterNode.containedEdges;\n\n        // allow the user to position the nodes after release.\n        if (options !== undefined && options.releaseFunction !== undefined && typeof options.releaseFunction === 'function') {\n          var positions = {};\n          var clusterPosition = { x: clusterNode.x, y: clusterNode.y };\n          for (var nodeId in containedNodes) {\n            if (containedNodes.hasOwnProperty(nodeId)) {\n              var containedNode = this.body.nodes[nodeId];\n              positions[nodeId] = { x: containedNode.x, y: containedNode.y };\n            }\n          }\n          var newPositions = options.releaseFunction(clusterPosition, positions);\n\n          for (var _nodeId3 in containedNodes) {\n            if (containedNodes.hasOwnProperty(_nodeId3)) {\n              var _containedNode = this.body.nodes[_nodeId3];\n              if (newPositions[_nodeId3] !== undefined) {\n                _containedNode.x = newPositions[_nodeId3].x === undefined ? clusterNode.x : newPositions[_nodeId3].x;\n                _containedNode.y = newPositions[_nodeId3].y === undefined ? clusterNode.y : newPositions[_nodeId3].y;\n              }\n            }\n          }\n        } else {\n          // copy the position from the cluster\n          for (var _nodeId4 in containedNodes) {\n            if (containedNodes.hasOwnProperty(_nodeId4)) {\n              var _containedNode2 = this.body.nodes[_nodeId4];\n              _containedNode2 = containedNodes[_nodeId4];\n              // inherit position\n              if (_containedNode2.options.fixed.x === false) {\n                _containedNode2.x = clusterNode.x;\n              }\n              if (_containedNode2.options.fixed.y === false) {\n                _containedNode2.y = clusterNode.y;\n              }\n            }\n          }\n        }\n\n        // release nodes\n        for (var _nodeId5 in containedNodes) {\n          if (containedNodes.hasOwnProperty(_nodeId5)) {\n            var _containedNode3 = this.body.nodes[_nodeId5];\n\n            // inherit speed\n            _containedNode3.vx = clusterNode.vx;\n            _containedNode3.vy = clusterNode.vy;\n\n            // we use these methods to avoid re-instantiating the shape, which happens with setOptions.\n            _containedNode3.setOptions({ hidden: false, physics: true });\n\n            delete this.clusteredNodes[_nodeId5];\n          }\n        }\n\n        // copy the clusterNode edges because we cannot iterate over an object that we add or remove from.\n        var edgesToBeDeleted = [];\n        for (var i = 0; i < clusterNode.edges.length; i++) {\n          edgesToBeDeleted.push(clusterNode.edges[i]);\n        }\n\n        // actually handling the deleting.\n        for (var _i4 = 0; _i4 < edgesToBeDeleted.length; _i4++) {\n          var edge = edgesToBeDeleted[_i4];\n\n          var otherNodeId = this._getConnectedId(edge, clusterNodeId);\n          // if the other node is in another cluster, we transfer ownership of this edge to the other cluster\n          if (this.clusteredNodes[otherNodeId] !== undefined) {\n            // transfer ownership:\n            var otherCluster = this.body.nodes[this.clusteredNodes[otherNodeId].clusterId];\n            var transferEdge = this.body.edges[edge.clusteringEdgeReplacingId];\n            if (transferEdge !== undefined) {\n              otherCluster.containedEdges[transferEdge.id] = transferEdge;\n\n              // delete local reference\n              delete containedEdges[transferEdge.id];\n\n              // create new cluster edge from the otherCluster:\n              // get to and from\n              var fromId = transferEdge.fromId;\n              var toId = transferEdge.toId;\n              if (transferEdge.toId == otherNodeId) {\n                toId = this.clusteredNodes[otherNodeId].clusterId;\n              } else {\n                fromId = this.clusteredNodes[otherNodeId].clusterId;\n              }\n\n              // clone the options and apply the cluster options to them\n              var clonedOptions = _NetworkUtil2.default.cloneOptions(transferEdge, 'edge');\n              util.deepExtend(clonedOptions, otherCluster.clusterEdgeProperties);\n\n              // apply the edge specific options to it.\n              var id = 'clusterEdge:' + util.randomUUID();\n              util.deepExtend(clonedOptions, { from: fromId, to: toId, hidden: false, physics: true, id: id });\n\n              // create it\n              var newEdge = this.body.functions.createEdge(clonedOptions);\n              newEdge.clusteringEdgeReplacingId = transferEdge.id;\n              this.body.edges[id] = newEdge;\n              this.body.edges[id].connect();\n            }\n          } else {\n            var replacedEdge = this.body.edges[edge.clusteringEdgeReplacingId];\n            if (replacedEdge !== undefined) {\n              this._restoreEdge(replacedEdge);\n            }\n          }\n          edge.cleanup();\n          // this removes the edge from node.edges, which is why edgeIds is formed\n          edge.disconnect();\n          delete this.body.edges[edge.id];\n        }\n\n        // handle the releasing of the edges\n        for (var edgeId in containedEdges) {\n          if (containedEdges.hasOwnProperty(edgeId)) {\n            this._restoreEdge(containedEdges[edgeId]);\n          }\n        }\n\n        // remove clusterNode\n        delete this.body.nodes[clusterNodeId];\n\n        if (refreshData === true) {\n          this.body.emitter.emit('_dataChanged');\n        }\n      }\n    }, {\n      key: 'getNodesInCluster',\n      value: function getNodesInCluster(clusterId) {\n        var nodesArray = [];\n        if (this.isCluster(clusterId) === true) {\n          var containedNodes = this.body.nodes[clusterId].containedNodes;\n          for (var nodeId in containedNodes) {\n            if (containedNodes.hasOwnProperty(nodeId)) {\n              nodesArray.push(this.body.nodes[nodeId].id);\n            }\n          }\n        }\n\n        return nodesArray;\n      }\n\n      /**\n      * Get the stack clusterId's that a certain node resides in. cluster A -> cluster B -> cluster C -> node\n      * @param nodeId\n      * @returns {Array}\n      */\n\n    }, {\n      key: 'findNode',\n      value: function findNode(nodeId) {\n        var stack = [];\n        var max = 100;\n        var counter = 0;\n\n        while (this.clusteredNodes[nodeId] !== undefined && counter < max) {\n          stack.push(this.body.nodes[nodeId].id);\n          nodeId = this.clusteredNodes[nodeId].clusterId;\n          counter++;\n        }\n        stack.push(this.body.nodes[nodeId].id);\n        stack.reverse();\n\n        return stack;\n      }\n\n      /**\n      * Using a clustered nodeId, update with the new options\n      * @param clusteredNodeId\n      * @param {object} newOptions\n      */\n\n    }, {\n      key: 'updateClusteredNode',\n      value: function updateClusteredNode(clusteredNodeId, newOptions) {\n        if (clusteredNodeId === undefined) {\n          throw new Error(\"No clusteredNodeId supplied to updateClusteredNode.\");\n        }\n        if (newOptions === undefined) {\n          throw new Error(\"No newOptions supplied to updateClusteredNode.\");\n        }\n        if (this.body.nodes[clusteredNodeId] === undefined) {\n          throw new Error(\"The clusteredNodeId supplied to updateClusteredNode does not exist.\");\n        }\n\n        this.body.nodes[clusteredNodeId].setOptions(newOptions);\n        this.body.emitter.emit('_dataChanged');\n      }\n\n      /**\n      * Using a base edgeId, update all related clustered edges with the new options\n      * @param startEdgeId\n      * @param {object} newOptions\n      */\n\n    }, {\n      key: 'updateEdge',\n      value: function updateEdge(startEdgeId, newOptions) {\n        if (startEdgeId === undefined) {\n          throw new Error(\"No startEdgeId supplied to updateEdge.\");\n        }\n        if (newOptions === undefined) {\n          throw new Error(\"No newOptions supplied to updateEdge.\");\n        }\n        if (this.body.edges[startEdgeId] === undefined) {\n          throw new Error(\"The startEdgeId supplied to updateEdge does not exist.\");\n        }\n\n        var allEdgeIds = this.getClusteredEdges(startEdgeId);\n        for (var i = 0; i < allEdgeIds.length; i++) {\n          var edge = this.body.edges[allEdgeIds[i]];\n          edge.setOptions(newOptions);\n        }\n        this.body.emitter.emit('_dataChanged');\n      }\n\n      /**\n      * Get a stack of clusterEdgeId's (+base edgeid) that a base edge is the same as. cluster edge C -> cluster edge B -> cluster edge A -> base edge(edgeId)\n      * @param edgeId\n      * @returns {Array}\n      */\n\n    }, {\n      key: 'getClusteredEdges',\n      value: function getClusteredEdges(edgeId) {\n        var stack = [];\n        var max = 100;\n        var counter = 0;\n\n        while (edgeId !== undefined && this.body.edges[edgeId] !== undefined && counter < max) {\n          stack.push(this.body.edges[edgeId].id);\n          edgeId = this.body.edges[edgeId].edgeReplacedById;\n          counter++;\n        }\n        stack.reverse();\n        return stack;\n      }\n\n      /**\n      * Get the base edge id of clusterEdgeId. cluster edge (clusteredEdgeId) -> cluster edge B -> cluster edge C -> base edge\n      * @param clusteredEdgeId\n      * @returns baseEdgeId\n      */\n\n    }, {\n      key: 'getBaseEdge',\n      value: function getBaseEdge(clusteredEdgeId) {\n        var baseEdgeId = clusteredEdgeId;\n        var max = 100;\n        var counter = 0;\n\n        while (clusteredEdgeId !== undefined && this.body.edges[clusteredEdgeId] !== undefined && counter < max) {\n          clusteredEdgeId = this.body.edges[clusteredEdgeId].clusteringEdgeReplacingId;\n          counter++;\n          if (clusteredEdgeId !== undefined) {\n            baseEdgeId = clusteredEdgeId;\n          }\n        }\n        return baseEdgeId;\n      }\n\n      /**\n      * Get the Id the node is connected to\n      * @param edge\n      * @param nodeId\n      * @returns {*}\n      * @private\n      */\n\n    }, {\n      key: '_getConnectedId',\n      value: function _getConnectedId(edge, nodeId) {\n        if (edge.toId != nodeId) {\n          return edge.toId;\n        } else if (edge.fromId != nodeId) {\n          return edge.fromId;\n        } else {\n          return edge.fromId;\n        }\n      }\n\n      /**\n      * We determine how many connections denote an important hub.\n      * We take the mean + 2*std as the important hub size. (Assuming a normal distribution of data, ~2.2%)\n      *\n      * @private\n      */\n\n    }, {\n      key: '_getHubSize',\n      value: function _getHubSize() {\n        var average = 0;\n        var averageSquared = 0;\n        var hubCounter = 0;\n        var largestHub = 0;\n\n        for (var i = 0; i < this.body.nodeIndices.length; i++) {\n          var node = this.body.nodes[this.body.nodeIndices[i]];\n          if (node.edges.length > largestHub) {\n            largestHub = node.edges.length;\n          }\n          average += node.edges.length;\n          averageSquared += Math.pow(node.edges.length, 2);\n          hubCounter += 1;\n        }\n        average = average / hubCounter;\n        averageSquared = averageSquared / hubCounter;\n\n        var variance = averageSquared - Math.pow(average, 2);\n        var standardDeviation = Math.sqrt(variance);\n\n        var hubThreshold = Math.floor(average + 2 * standardDeviation);\n\n        // always have at least one to cluster\n        if (hubThreshold > largestHub) {\n          hubThreshold = largestHub;\n        }\n\n        return hubThreshold;\n      }\n    }]);\n\n    return ClusterEngine;\n  }();\n\n  exports.default = ClusterEngine;\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n\n  var NetworkUtil = function () {\n    function NetworkUtil() {\n      _classCallCheck(this, NetworkUtil);\n    }\n\n    /**\n     * Find the center position of the network considering the bounding boxes\n     */\n\n\n    _createClass(NetworkUtil, null, [{\n      key: \"getRange\",\n      value: function getRange(allNodes) {\n        var specificNodes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n        var minY = 1e9,\n            maxY = -1e9,\n            minX = 1e9,\n            maxX = -1e9,\n            node;\n        if (specificNodes.length > 0) {\n          for (var i = 0; i < specificNodes.length; i++) {\n            node = allNodes[specificNodes[i]];\n            if (minX > node.shape.boundingBox.left) {\n              minX = node.shape.boundingBox.left;\n            }\n            if (maxX < node.shape.boundingBox.right) {\n              maxX = node.shape.boundingBox.right;\n            }\n            if (minY > node.shape.boundingBox.top) {\n              minY = node.shape.boundingBox.top;\n            } // top is negative, bottom is positive\n            if (maxY < node.shape.boundingBox.bottom) {\n              maxY = node.shape.boundingBox.bottom;\n            } // top is negative, bottom is positive\n          }\n        }\n\n        if (minX === 1e9 && maxX === -1e9 && minY === 1e9 && maxY === -1e9) {\n          minY = 0, maxY = 0, minX = 0, maxX = 0;\n        }\n        return { minX: minX, maxX: maxX, minY: minY, maxY: maxY };\n      }\n\n      /**\n       * Find the center position of the network\n       */\n\n    }, {\n      key: \"getRangeCore\",\n      value: function getRangeCore(allNodes) {\n        var specificNodes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n        var minY = 1e9,\n            maxY = -1e9,\n            minX = 1e9,\n            maxX = -1e9,\n            node;\n        if (specificNodes.length > 0) {\n          for (var i = 0; i < specificNodes.length; i++) {\n            node = allNodes[specificNodes[i]];\n            if (minX > node.x) {\n              minX = node.x;\n            }\n            if (maxX < node.x) {\n              maxX = node.x;\n            }\n            if (minY > node.y) {\n              minY = node.y;\n            } // top is negative, bottom is positive\n            if (maxY < node.y) {\n              maxY = node.y;\n            } // top is negative, bottom is positive\n          }\n        }\n\n        if (minX === 1e9 && maxX === -1e9 && minY === 1e9 && maxY === -1e9) {\n          minY = 0, maxY = 0, minX = 0, maxX = 0;\n        }\n        return { minX: minX, maxX: maxX, minY: minY, maxY: maxY };\n      }\n\n      /**\n       * @param {object} range = {minX: minX, maxX: maxX, minY: minY, maxY: maxY};\n       * @returns {{x: number, y: number}}\n       */\n\n    }, {\n      key: \"findCenter\",\n      value: function findCenter(range) {\n        return { x: 0.5 * (range.maxX + range.minX),\n          y: 0.5 * (range.maxY + range.minY) };\n      }\n\n      /**\n       * This returns a clone of the options or options of the edge or node to be used for construction of new edges or check functions for new nodes.\n       * @param item\n       * @param type\n       * @returns {{}}\n       */\n\n    }, {\n      key: \"cloneOptions\",\n      value: function cloneOptions(item, type) {\n        var clonedOptions = {};\n        if (type === undefined || type === 'node') {\n          util.deepExtend(clonedOptions, item.options, true);\n          clonedOptions.x = item.x;\n          clonedOptions.y = item.y;\n          clonedOptions.amountOfConnections = item.edges.length;\n        } else {\n          util.deepExtend(clonedOptions, item.options, true);\n        }\n        return clonedOptions;\n      }\n    }]);\n\n    return NetworkUtil;\n  }();\n\n  exports.default = NetworkUtil;\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _Node2 = __webpack_require__(67);\n\n  var _Node3 = _interopRequireDefault(_Node2);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  /**\n   *\n   */\n  var Cluster = function (_Node) {\n    _inherits(Cluster, _Node);\n\n    function Cluster(options, body, imagelist, grouplist, globalOptions) {\n      _classCallCheck(this, Cluster);\n\n      var _this = _possibleConstructorReturn(this, (Cluster.__proto__ || Object.getPrototypeOf(Cluster)).call(this, options, body, imagelist, grouplist, globalOptions));\n\n      _this.isCluster = true;\n      _this.containedNodes = {};\n      _this.containedEdges = {};\n      return _this;\n    }\n\n    return Cluster;\n  }(_Node3.default);\n\n  exports.default = Cluster;\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  if (typeof window !== 'undefined') {\n    window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n  }\n\n  var util = __webpack_require__(1);\n\n  var CanvasRenderer = function () {\n    function CanvasRenderer(body, canvas) {\n      _classCallCheck(this, CanvasRenderer);\n\n      this.body = body;\n      this.canvas = canvas;\n\n      this.redrawRequested = false;\n      this.renderTimer = undefined;\n      this.requiresTimeout = true;\n      this.renderingActive = false;\n      this.renderRequests = 0;\n      this.pixelRatio = undefined;\n      this.allowRedraw = true;\n\n      this.dragging = false;\n      this.options = {};\n      this.defaultOptions = {\n        hideEdgesOnDrag: false,\n        hideNodesOnDrag: false\n      };\n      util.extend(this.options, this.defaultOptions);\n\n      this._determineBrowserMethod();\n      this.bindEventListeners();\n    }\n\n    _createClass(CanvasRenderer, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this = this;\n\n        this.body.emitter.on(\"dragStart\", function () {\n          _this.dragging = true;\n        });\n        this.body.emitter.on(\"dragEnd\", function () {\n          return _this.dragging = false;\n        });\n        this.body.emitter.on(\"_resizeNodes\", function () {\n          return _this._resizeNodes();\n        });\n        this.body.emitter.on(\"_redraw\", function () {\n          if (_this.renderingActive === false) {\n            _this._redraw();\n          }\n        });\n        this.body.emitter.on(\"_blockRedraw\", function () {\n          _this.allowRedraw = false;\n        });\n        this.body.emitter.on(\"_allowRedraw\", function () {\n          _this.allowRedraw = true;_this.redrawRequested = false;\n        });\n        this.body.emitter.on(\"_requestRedraw\", this._requestRedraw.bind(this));\n        this.body.emitter.on(\"_startRendering\", function () {\n          _this.renderRequests += 1;\n          _this.renderingActive = true;\n          _this._startRendering();\n        });\n        this.body.emitter.on(\"_stopRendering\", function () {\n          _this.renderRequests -= 1;\n          _this.renderingActive = _this.renderRequests > 0;\n          _this.renderTimer = undefined;\n        });\n        this.body.emitter.on('destroy', function () {\n          _this.renderRequests = 0;\n          _this.allowRedraw = false;\n          _this.renderingActive = false;\n          if (_this.requiresTimeout === true) {\n            clearTimeout(_this.renderTimer);\n          } else {\n            cancelAnimationFrame(_this.renderTimer);\n          }\n          _this.body.emitter.off();\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          var fields = ['hideEdgesOnDrag', 'hideNodesOnDrag'];\n          util.selectiveDeepExtend(fields, this.options, options);\n        }\n      }\n    }, {\n      key: '_startRendering',\n      value: function _startRendering() {\n        if (this.renderingActive === true) {\n          if (this.renderTimer === undefined) {\n            if (this.requiresTimeout === true) {\n              this.renderTimer = window.setTimeout(this._renderStep.bind(this), this.simulationInterval); // wait this.renderTimeStep milliseconds and perform the animation step function\n            } else {\n              this.renderTimer = window.requestAnimationFrame(this._renderStep.bind(this)); // wait this.renderTimeStep milliseconds and perform the animation step function\n            }\n          }\n        }\n      }\n    }, {\n      key: '_renderStep',\n      value: function _renderStep() {\n        if (this.renderingActive === true) {\n          // reset the renderTimer so a new scheduled animation step can be set\n          this.renderTimer = undefined;\n\n          if (this.requiresTimeout === true) {\n            // this schedules a new simulation step\n            this._startRendering();\n          }\n\n          this._redraw();\n\n          if (this.requiresTimeout === false) {\n            // this schedules a new simulation step\n            this._startRendering();\n          }\n        }\n      }\n\n      /**\n       * Redraw the network with the current data\n       * chart will be resized too.\n       */\n\n    }, {\n      key: 'redraw',\n      value: function redraw() {\n        this.body.emitter.emit('setSize');\n        this._redraw();\n      }\n\n      /**\n       * Redraw the network with the current data\n       * @param hidden | used to get the first estimate of the node sizes. only the nodes are drawn after which they are quickly drawn over.\n       * @private\n       */\n\n    }, {\n      key: '_requestRedraw',\n      value: function _requestRedraw() {\n        var _this2 = this;\n\n        if (this.redrawRequested !== true && this.renderingActive === false && this.allowRedraw === true) {\n          this.redrawRequested = true;\n          if (this.requiresTimeout === true) {\n            window.setTimeout(function () {\n              _this2._redraw(false);\n            }, 0);\n          } else {\n            window.requestAnimationFrame(function () {\n              _this2._redraw(false);\n            });\n          }\n        }\n      }\n    }, {\n      key: '_redraw',\n      value: function _redraw() {\n        var hidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n        if (this.allowRedraw === true) {\n          this.body.emitter.emit(\"initRedraw\");\n\n          this.redrawRequested = false;\n          var ctx = this.canvas.frame.canvas.getContext('2d');\n\n          // when the container div was hidden, this fixes it back up!\n          if (this.canvas.frame.canvas.width === 0 || this.canvas.frame.canvas.height === 0) {\n            this.canvas.setSize();\n          }\n\n          this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1);\n\n          ctx.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\n\n          // clear the canvas\n          var w = this.canvas.frame.canvas.clientWidth;\n          var h = this.canvas.frame.canvas.clientHeight;\n          ctx.clearRect(0, 0, w, h);\n\n          // if the div is hidden, we stop the redraw here for performance.\n          if (this.canvas.frame.clientWidth === 0) {\n            return;\n          }\n\n          // set scaling and translation\n          ctx.save();\n          ctx.translate(this.body.view.translation.x, this.body.view.translation.y);\n          ctx.scale(this.body.view.scale, this.body.view.scale);\n\n          ctx.beginPath();\n          this.body.emitter.emit(\"beforeDrawing\", ctx);\n          ctx.closePath();\n\n          if (hidden === false) {\n            if (this.dragging === false || this.dragging === true && this.options.hideEdgesOnDrag === false) {\n              this._drawEdges(ctx);\n            }\n          }\n\n          if (this.dragging === false || this.dragging === true && this.options.hideNodesOnDrag === false) {\n            this._drawNodes(ctx, hidden);\n          }\n\n          ctx.beginPath();\n          this.body.emitter.emit(\"afterDrawing\", ctx);\n          ctx.closePath();\n\n          // restore original scaling and translation\n          ctx.restore();\n          if (hidden === true) {\n            ctx.clearRect(0, 0, w, h);\n          }\n        }\n      }\n\n      /**\n       * Redraw all nodes\n       * The 2d context of a HTML canvas can be retrieved by canvas.getContext('2d');\n       * @param {CanvasRenderingContext2D}   ctx\n       * @param {Boolean} [alwaysShow]\n       * @private\n       */\n\n    }, {\n      key: '_resizeNodes',\n      value: function _resizeNodes() {\n        var ctx = this.canvas.frame.canvas.getContext('2d');\n        if (this.pixelRatio === undefined) {\n          this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1);\n        }\n        ctx.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\n        ctx.save();\n        ctx.translate(this.body.view.translation.x, this.body.view.translation.y);\n        ctx.scale(this.body.view.scale, this.body.view.scale);\n\n        var nodes = this.body.nodes;\n        var node = void 0;\n\n        // resize all nodes\n        for (var nodeId in nodes) {\n          if (nodes.hasOwnProperty(nodeId)) {\n            node = nodes[nodeId];\n            node.resize(ctx);\n            node.updateBoundingBox(ctx, node.selected);\n          }\n        }\n\n        // restore original scaling and translation\n        ctx.restore();\n      }\n\n      /**\n       * Redraw all nodes\n       * The 2d context of a HTML canvas can be retrieved by canvas.getContext('2d');\n       * @param {CanvasRenderingContext2D}   ctx\n       * @param {Boolean} [alwaysShow]\n       * @private\n       */\n\n    }, {\n      key: '_drawNodes',\n      value: function _drawNodes(ctx) {\n        var alwaysShow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        var nodes = this.body.nodes;\n        var nodeIndices = this.body.nodeIndices;\n        var node = void 0;\n        var selected = [];\n        var margin = 20;\n        var topLeft = this.canvas.DOMtoCanvas({ x: -margin, y: -margin });\n        var bottomRight = this.canvas.DOMtoCanvas({\n          x: this.canvas.frame.canvas.clientWidth + margin,\n          y: this.canvas.frame.canvas.clientHeight + margin\n        });\n        var viewableArea = { top: topLeft.y, left: topLeft.x, bottom: bottomRight.y, right: bottomRight.x };\n\n        // draw unselected nodes;\n        for (var i = 0; i < nodeIndices.length; i++) {\n          node = nodes[nodeIndices[i]];\n          // set selected nodes aside\n          if (node.isSelected()) {\n            selected.push(nodeIndices[i]);\n          } else {\n            if (alwaysShow === true) {\n              node.draw(ctx);\n            } else if (node.isBoundingBoxOverlappingWith(viewableArea) === true) {\n              node.draw(ctx);\n            } else {\n              node.updateBoundingBox(ctx, node.selected);\n            }\n          }\n        }\n\n        // draw the selected nodes on top\n        for (var _i = 0; _i < selected.length; _i++) {\n          node = nodes[selected[_i]];\n          node.draw(ctx);\n        }\n      }\n\n      /**\n       * Redraw all edges\n       * The 2d context of a HTML canvas can be retrieved by canvas.getContext('2d');\n       * @param {CanvasRenderingContext2D}   ctx\n       * @private\n       */\n\n    }, {\n      key: '_drawEdges',\n      value: function _drawEdges(ctx) {\n        var edges = this.body.edges;\n        var edgeIndices = this.body.edgeIndices;\n        var edge = void 0;\n\n        for (var i = 0; i < edgeIndices.length; i++) {\n          edge = edges[edgeIndices[i]];\n          if (edge.connected === true) {\n            edge.draw(ctx);\n          }\n        }\n      }\n\n      /**\n       * Determine if the browser requires a setTimeout or a requestAnimationFrame. This was required because\n       * some implementations (safari and IE9) did not support requestAnimationFrame\n       * @private\n       */\n\n    }, {\n      key: '_determineBrowserMethod',\n      value: function _determineBrowserMethod() {\n        if (typeof window !== 'undefined') {\n          var browserType = navigator.userAgent.toLowerCase();\n          this.requiresTimeout = false;\n          if (browserType.indexOf('msie 9.0') != -1) {\n            // IE 9\n            this.requiresTimeout = true;\n          } else if (browserType.indexOf('safari') != -1) {\n            // safari\n            if (browserType.indexOf('chrome') <= -1) {\n              this.requiresTimeout = true;\n            }\n          }\n        } else {\n          this.requiresTimeout = true;\n        }\n      }\n    }]);\n\n    return CanvasRenderer;\n  }();\n\n  exports.default = CanvasRenderer;\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var Hammer = __webpack_require__(22);\n  var hammerUtil = __webpack_require__(30);\n\n  var util = __webpack_require__(1);\n\n  /**\n   * Create the main frame for the Network.\n   * This function is executed once when a Network object is created. The frame\n   * contains a canvas, and this canvas contains all objects like the axis and\n   * nodes.\n   * @private\n   */\n\n  var Canvas = function () {\n    function Canvas(body) {\n      _classCallCheck(this, Canvas);\n\n      this.body = body;\n      this.pixelRatio = 1;\n      this.resizeTimer = undefined;\n      this.resizeFunction = this._onResize.bind(this);\n      this.cameraState = {};\n      this.initialized = false;\n      this.canvasViewCenter = {};\n\n      this.options = {};\n      this.defaultOptions = {\n        autoResize: true,\n        height: '100%',\n        width: '100%'\n      };\n      util.extend(this.options, this.defaultOptions);\n\n      this.bindEventListeners();\n    }\n\n    _createClass(Canvas, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this = this;\n\n        // bind the events\n        this.body.emitter.once(\"resize\", function (obj) {\n          if (obj.width !== 0) {\n            _this.body.view.translation.x = obj.width * 0.5;\n          }\n          if (obj.height !== 0) {\n            _this.body.view.translation.y = obj.height * 0.5;\n          }\n        });\n        this.body.emitter.on(\"setSize\", this.setSize.bind(this));\n        this.body.emitter.on(\"destroy\", function () {\n          _this.hammerFrame.destroy();\n          _this.hammer.destroy();\n          _this._cleanUp();\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        var _this2 = this;\n\n        if (options !== undefined) {\n          var fields = ['width', 'height', 'autoResize'];\n          util.selectiveDeepExtend(fields, this.options, options);\n        }\n\n        if (this.options.autoResize === true) {\n          // automatically adapt to a changing size of the browser.\n          this._cleanUp();\n          this.resizeTimer = setInterval(function () {\n            var changed = _this2.setSize();\n            if (changed === true) {\n              _this2.body.emitter.emit(\"_requestRedraw\");\n            }\n          }, 1000);\n          this.resizeFunction = this._onResize.bind(this);\n          util.addEventListener(window, 'resize', this.resizeFunction);\n        }\n      }\n    }, {\n      key: '_cleanUp',\n      value: function _cleanUp() {\n        // automatically adapt to a changing size of the browser.\n        if (this.resizeTimer !== undefined) {\n          clearInterval(this.resizeTimer);\n        }\n        util.removeEventListener(window, 'resize', this.resizeFunction);\n        this.resizeFunction = undefined;\n      }\n    }, {\n      key: '_onResize',\n      value: function _onResize() {\n        this.setSize();\n        this.body.emitter.emit(\"_redraw\");\n      }\n\n      /**\n       * Get and store the cameraState\n       * @private\n       */\n\n    }, {\n      key: '_getCameraState',\n      value: function _getCameraState() {\n        var pixelRatio = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.pixelRatio;\n\n        if (this.initialized === true) {\n          this.cameraState.previousWidth = this.frame.canvas.width / pixelRatio;\n          this.cameraState.previousHeight = this.frame.canvas.height / pixelRatio;\n          this.cameraState.scale = this.body.view.scale;\n          this.cameraState.position = this.DOMtoCanvas({\n            x: 0.5 * this.frame.canvas.width / pixelRatio,\n            y: 0.5 * this.frame.canvas.height / pixelRatio\n          });\n        }\n      }\n\n      /**\n       * Set the cameraState\n       * @private\n       */\n\n    }, {\n      key: '_setCameraState',\n      value: function _setCameraState() {\n        if (this.cameraState.scale !== undefined && this.frame.canvas.clientWidth !== 0 && this.frame.canvas.clientHeight !== 0 && this.pixelRatio !== 0 && this.cameraState.previousWidth > 0) {\n\n          var widthRatio = this.frame.canvas.width / this.pixelRatio / this.cameraState.previousWidth;\n          var heightRatio = this.frame.canvas.height / this.pixelRatio / this.cameraState.previousHeight;\n          var newScale = this.cameraState.scale;\n\n          if (widthRatio != 1 && heightRatio != 1) {\n            newScale = this.cameraState.scale * 0.5 * (widthRatio + heightRatio);\n          } else if (widthRatio != 1) {\n            newScale = this.cameraState.scale * widthRatio;\n          } else if (heightRatio != 1) {\n            newScale = this.cameraState.scale * heightRatio;\n          }\n\n          this.body.view.scale = newScale;\n          // this comes from the view module.\n          var currentViewCenter = this.DOMtoCanvas({\n            x: 0.5 * this.frame.canvas.clientWidth,\n            y: 0.5 * this.frame.canvas.clientHeight\n          });\n\n          var distanceFromCenter = { // offset from view, distance view has to change by these x and y to center the node\n            x: currentViewCenter.x - this.cameraState.position.x,\n            y: currentViewCenter.y - this.cameraState.position.y\n          };\n          this.body.view.translation.x += distanceFromCenter.x * this.body.view.scale;\n          this.body.view.translation.y += distanceFromCenter.y * this.body.view.scale;\n        }\n      }\n    }, {\n      key: '_prepareValue',\n      value: function _prepareValue(value) {\n        if (typeof value === 'number') {\n          return value + 'px';\n        } else if (typeof value === 'string') {\n          if (value.indexOf('%') !== -1 || value.indexOf('px') !== -1) {\n            return value;\n          } else if (value.indexOf('%') === -1) {\n            return value + 'px';\n          }\n        }\n        throw new Error('Could not use the value supplied for width or height:' + value);\n      }\n\n      /**\n       * Create the HTML\n       */\n\n    }, {\n      key: '_create',\n      value: function _create() {\n        // remove all elements from the container element.\n        while (this.body.container.hasChildNodes()) {\n          this.body.container.removeChild(this.body.container.firstChild);\n        }\n\n        this.frame = document.createElement('div');\n        this.frame.className = 'vis-network';\n        this.frame.style.position = 'relative';\n        this.frame.style.overflow = 'hidden';\n        this.frame.tabIndex = 900; // tab index is required for keycharm to bind keystrokes to the div instead of the window\n\n        //////////////////////////////////////////////////////////////////\n\n        this.frame.canvas = document.createElement(\"canvas\");\n        this.frame.canvas.style.position = 'relative';\n        this.frame.appendChild(this.frame.canvas);\n\n        if (!this.frame.canvas.getContext) {\n          var noCanvas = document.createElement('DIV');\n          noCanvas.style.color = 'red';\n          noCanvas.style.fontWeight = 'bold';\n          noCanvas.style.padding = '10px';\n          noCanvas.innerHTML = 'Error: your browser does not support HTML canvas';\n          this.frame.canvas.appendChild(noCanvas);\n        } else {\n          var ctx = this.frame.canvas.getContext(\"2d\");\n          this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1);\n\n          this.frame.canvas.getContext(\"2d\").setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\n        }\n\n        // add the frame to the container element\n        this.body.container.appendChild(this.frame);\n\n        this.body.view.scale = 1;\n        this.body.view.translation = { x: 0.5 * this.frame.canvas.clientWidth, y: 0.5 * this.frame.canvas.clientHeight };\n\n        this._bindHammer();\n      }\n\n      /**\n       * This function binds hammer, it can be repeated over and over due to the uniqueness check.\n       * @private\n       */\n\n    }, {\n      key: '_bindHammer',\n      value: function _bindHammer() {\n        var _this3 = this;\n\n        if (this.hammer !== undefined) {\n          this.hammer.destroy();\n        }\n        this.drag = {};\n        this.pinch = {};\n\n        // init hammer\n        this.hammer = new Hammer(this.frame.canvas);\n        this.hammer.get('pinch').set({ enable: true });\n        // enable to get better response, todo: test on mobile.\n        this.hammer.get('pan').set({ threshold: 5, direction: Hammer.DIRECTION_ALL });\n\n        hammerUtil.onTouch(this.hammer, function (event) {\n          _this3.body.eventListeners.onTouch(event);\n        });\n        this.hammer.on('tap', function (event) {\n          _this3.body.eventListeners.onTap(event);\n        });\n        this.hammer.on('doubletap', function (event) {\n          _this3.body.eventListeners.onDoubleTap(event);\n        });\n        this.hammer.on('press', function (event) {\n          _this3.body.eventListeners.onHold(event);\n        });\n        this.hammer.on('panstart', function (event) {\n          _this3.body.eventListeners.onDragStart(event);\n        });\n        this.hammer.on('panmove', function (event) {\n          _this3.body.eventListeners.onDrag(event);\n        });\n        this.hammer.on('panend', function (event) {\n          _this3.body.eventListeners.onDragEnd(event);\n        });\n        this.hammer.on('pinch', function (event) {\n          _this3.body.eventListeners.onPinch(event);\n        });\n\n        // TODO: neatly cleanup these handlers when re-creating the Canvas, IF these are done with hammer, event.stopPropagation will not work?\n        this.frame.canvas.addEventListener('mousewheel', function (event) {\n          _this3.body.eventListeners.onMouseWheel(event);\n        });\n        this.frame.canvas.addEventListener('DOMMouseScroll', function (event) {\n          _this3.body.eventListeners.onMouseWheel(event);\n        });\n\n        this.frame.canvas.addEventListener('mousemove', function (event) {\n          _this3.body.eventListeners.onMouseMove(event);\n        });\n        this.frame.canvas.addEventListener('contextmenu', function (event) {\n          _this3.body.eventListeners.onContext(event);\n        });\n\n        this.hammerFrame = new Hammer(this.frame);\n        hammerUtil.onRelease(this.hammerFrame, function (event) {\n          _this3.body.eventListeners.onRelease(event);\n        });\n      }\n\n      /**\n       * Set a new size for the network\n       * @param {string} width   Width in pixels or percentage (for example '800px'\n       *                         or '50%')\n       * @param {string} height  Height in pixels or percentage  (for example '400px'\n       *                         or '30%')\n       */\n\n    }, {\n      key: 'setSize',\n      value: function setSize() {\n        var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.width;\n        var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.options.height;\n\n        width = this._prepareValue(width);\n        height = this._prepareValue(height);\n\n        var emitEvent = false;\n        var oldWidth = this.frame.canvas.width;\n        var oldHeight = this.frame.canvas.height;\n\n        // update the pixel ratio\n        var ctx = this.frame.canvas.getContext(\"2d\");\n        var previousRatio = this.pixelRatio; // we cache this because the camera state storage needs the old value\n        this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1);\n\n        if (width != this.options.width || height != this.options.height || this.frame.style.width != width || this.frame.style.height != height) {\n          this._getCameraState(previousRatio);\n\n          this.frame.style.width = width;\n          this.frame.style.height = height;\n\n          this.frame.canvas.style.width = '100%';\n          this.frame.canvas.style.height = '100%';\n\n          this.frame.canvas.width = Math.round(this.frame.canvas.clientWidth * this.pixelRatio);\n          this.frame.canvas.height = Math.round(this.frame.canvas.clientHeight * this.pixelRatio);\n\n          this.options.width = width;\n          this.options.height = height;\n\n          this.canvasViewCenter = {\n            x: 0.5 * this.frame.clientWidth,\n            y: 0.5 * this.frame.clientHeight\n          };\n\n          emitEvent = true;\n        } else {\n          // this would adapt the width of the canvas to the width from 100% if and only if\n          // there is a change.\n\n          // store the camera if there is a change in size.\n          if (this.frame.canvas.width != Math.round(this.frame.canvas.clientWidth * this.pixelRatio) || this.frame.canvas.height != Math.round(this.frame.canvas.clientHeight * this.pixelRatio)) {\n            this._getCameraState(previousRatio);\n          }\n\n          if (this.frame.canvas.width != Math.round(this.frame.canvas.clientWidth * this.pixelRatio)) {\n            this.frame.canvas.width = Math.round(this.frame.canvas.clientWidth * this.pixelRatio);\n            emitEvent = true;\n          }\n          if (this.frame.canvas.height != Math.round(this.frame.canvas.clientHeight * this.pixelRatio)) {\n            this.frame.canvas.height = Math.round(this.frame.canvas.clientHeight * this.pixelRatio);\n            emitEvent = true;\n          }\n        }\n\n        if (emitEvent === true) {\n          this.body.emitter.emit('resize', {\n            width: Math.round(this.frame.canvas.width / this.pixelRatio),\n            height: Math.round(this.frame.canvas.height / this.pixelRatio),\n            oldWidth: Math.round(oldWidth / this.pixelRatio),\n            oldHeight: Math.round(oldHeight / this.pixelRatio)\n          });\n\n          // restore the camera on change.\n          this._setCameraState();\n        }\n\n        // set initialized so the get and set camera will work from now on.\n        this.initialized = true;\n        return emitEvent;\n      }\n    }, {\n      key: '_XconvertDOMtoCanvas',\n\n\n      /**\n       * Convert the X coordinate in DOM-space (coordinate point in browser relative to the container div) to\n       * the X coordinate in canvas-space (the simulation sandbox, which the camera looks upon)\n       * @param {number} x\n       * @returns {number}\n       * @private\n       */\n      value: function _XconvertDOMtoCanvas(x) {\n        return (x - this.body.view.translation.x) / this.body.view.scale;\n      }\n\n      /**\n       * Convert the X coordinate in canvas-space (the simulation sandbox, which the camera looks upon) to\n       * the X coordinate in DOM-space (coordinate point in browser relative to the container div)\n       * @param {number} x\n       * @returns {number}\n       * @private\n       */\n\n    }, {\n      key: '_XconvertCanvasToDOM',\n      value: function _XconvertCanvasToDOM(x) {\n        return x * this.body.view.scale + this.body.view.translation.x;\n      }\n\n      /**\n       * Convert the Y coordinate in DOM-space (coordinate point in browser relative to the container div) to\n       * the Y coordinate in canvas-space (the simulation sandbox, which the camera looks upon)\n       * @param {number} y\n       * @returns {number}\n       * @private\n       */\n\n    }, {\n      key: '_YconvertDOMtoCanvas',\n      value: function _YconvertDOMtoCanvas(y) {\n        return (y - this.body.view.translation.y) / this.body.view.scale;\n      }\n\n      /**\n       * Convert the Y coordinate in canvas-space (the simulation sandbox, which the camera looks upon) to\n       * the Y coordinate in DOM-space (coordinate point in browser relative to the container div)\n       * @param {number} y\n       * @returns {number}\n       * @private\n       */\n\n    }, {\n      key: '_YconvertCanvasToDOM',\n      value: function _YconvertCanvasToDOM(y) {\n        return y * this.body.view.scale + this.body.view.translation.y;\n      }\n\n      /**\n       *\n       * @param {object} pos   = {x: number, y: number}\n       * @returns {{x: number, y: number}}\n       * @constructor\n       */\n\n    }, {\n      key: 'canvasToDOM',\n      value: function canvasToDOM(pos) {\n        return { x: this._XconvertCanvasToDOM(pos.x), y: this._YconvertCanvasToDOM(pos.y) };\n      }\n\n      /**\n       *\n       * @param {object} pos   = {x: number, y: number}\n       * @returns {{x: number, y: number}}\n       * @constructor\n       */\n\n    }, {\n      key: 'DOMtoCanvas',\n      value: function DOMtoCanvas(pos) {\n        return { x: this._XconvertDOMtoCanvas(pos.x), y: this._YconvertDOMtoCanvas(pos.y) };\n      }\n    }]);\n\n    return Canvas;\n  }();\n\n  exports.default = Canvas;\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _NetworkUtil = __webpack_require__(105);\n\n  var _NetworkUtil2 = _interopRequireDefault(_NetworkUtil);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n\n  var View = function () {\n    function View(body, canvas) {\n      var _this = this;\n\n      _classCallCheck(this, View);\n\n      this.body = body;\n      this.canvas = canvas;\n\n      this.animationSpeed = 1 / this.renderRefreshRate;\n      this.animationEasingFunction = \"easeInOutQuint\";\n      this.easingTime = 0;\n      this.sourceScale = 0;\n      this.targetScale = 0;\n      this.sourceTranslation = 0;\n      this.targetTranslation = 0;\n      this.lockedOnNodeId = undefined;\n      this.lockedOnNodeOffset = undefined;\n      this.touchTime = 0;\n\n      this.viewFunction = undefined;\n\n      this.body.emitter.on(\"fit\", this.fit.bind(this));\n      this.body.emitter.on(\"animationFinished\", function () {\n        _this.body.emitter.emit(\"_stopRendering\");\n      });\n      this.body.emitter.on(\"unlockNode\", this.releaseNode.bind(this));\n    }\n\n    _createClass(View, [{\n      key: 'setOptions',\n      value: function setOptions() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        this.options = options;\n      }\n\n      /**\n       * This function zooms out to fit all data on screen based on amount of nodes\n       * @param {Object} Options\n       * @param {Boolean} [initialZoom]  | zoom based on fitted formula or range, true = fitted, default = false;\n       */\n\n    }, {\n      key: 'fit',\n      value: function fit() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { nodes: [] };\n        var initialZoom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        var range = void 0;\n        var zoomLevel = void 0;\n        if (options.nodes === undefined || options.nodes.length === 0) {\n          options.nodes = this.body.nodeIndices;\n        }\n\n        if (initialZoom === true) {\n          // check if more than half of the nodes have a predefined position. If so, we use the range, not the approximation.\n          var positionDefined = 0;\n          for (var nodeId in this.body.nodes) {\n            if (this.body.nodes.hasOwnProperty(nodeId)) {\n              var node = this.body.nodes[nodeId];\n              if (node.predefinedPosition === true) {\n                positionDefined += 1;\n              }\n            }\n          }\n          if (positionDefined > 0.5 * this.body.nodeIndices.length) {\n            this.fit(options, false);\n            return;\n          }\n\n          range = _NetworkUtil2.default.getRange(this.body.nodes, options.nodes);\n\n          var numberOfNodes = this.body.nodeIndices.length;\n          zoomLevel = 12.662 / (numberOfNodes + 7.4147) + 0.0964822; // this is obtained from fitting a dataset from 5 points with scale levels that looked good.\n\n          // correct for larger canvasses.\n          var factor = Math.min(this.canvas.frame.canvas.clientWidth / 600, this.canvas.frame.canvas.clientHeight / 600);\n          zoomLevel *= factor;\n        } else {\n          this.body.emitter.emit(\"_resizeNodes\");\n          range = _NetworkUtil2.default.getRange(this.body.nodes, options.nodes);\n\n          var xDistance = Math.abs(range.maxX - range.minX) * 1.1;\n          var yDistance = Math.abs(range.maxY - range.minY) * 1.1;\n\n          var xZoomLevel = this.canvas.frame.canvas.clientWidth / xDistance;\n          var yZoomLevel = this.canvas.frame.canvas.clientHeight / yDistance;\n\n          zoomLevel = xZoomLevel <= yZoomLevel ? xZoomLevel : yZoomLevel;\n        }\n\n        if (zoomLevel > 1.0) {\n          zoomLevel = 1.0;\n        } else if (zoomLevel === 0) {\n          zoomLevel = 1.0;\n        }\n\n        var center = _NetworkUtil2.default.findCenter(range);\n        var animationOptions = { position: center, scale: zoomLevel, animation: options.animation };\n        this.moveTo(animationOptions);\n      }\n\n      // animation\n\n      /**\n       * Center a node in view.\n       *\n       * @param {Number} nodeId\n       * @param {Number} [options]\n       */\n\n    }, {\n      key: 'focus',\n      value: function focus(nodeId) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (this.body.nodes[nodeId] !== undefined) {\n          var nodePosition = { x: this.body.nodes[nodeId].x, y: this.body.nodes[nodeId].y };\n          options.position = nodePosition;\n          options.lockedOnNode = nodeId;\n\n          this.moveTo(options);\n        } else {\n          console.log(\"Node: \" + nodeId + \" cannot be found.\");\n        }\n      }\n\n      /**\n       *\n       * @param {Object} options  |  options.offset   = {x:Number, y:Number}   // offset from the center in DOM pixels\n       *                          |  options.scale    = Number                 // scale to move to\n       *                          |  options.position = {x:Number, y:Number}   // position to move to\n       *                          |  options.animation = {duration:Number, easingFunction:String} || Boolean   // position to move to\n       */\n\n    }, {\n      key: 'moveTo',\n      value: function moveTo(options) {\n        if (options === undefined) {\n          options = {};\n          return;\n        }\n        if (options.offset === undefined) {\n          options.offset = { x: 0, y: 0 };\n        }\n        if (options.offset.x === undefined) {\n          options.offset.x = 0;\n        }\n        if (options.offset.y === undefined) {\n          options.offset.y = 0;\n        }\n        if (options.scale === undefined) {\n          options.scale = this.body.view.scale;\n        }\n        if (options.position === undefined) {\n          options.position = this.getViewPosition();\n        }\n        if (options.animation === undefined) {\n          options.animation = { duration: 0 };\n        }\n        if (options.animation === false) {\n          options.animation = { duration: 0 };\n        }\n        if (options.animation === true) {\n          options.animation = {};\n        }\n        if (options.animation.duration === undefined) {\n          options.animation.duration = 1000;\n        } // default duration\n        if (options.animation.easingFunction === undefined) {\n          options.animation.easingFunction = \"easeInOutQuad\";\n        } // default easing function\n\n        this.animateView(options);\n      }\n\n      /**\n       *\n       * @param {Object} options  |  options.offset   = {x:Number, y:Number}   // offset from the center in DOM pixels\n       *                          |  options.time     = Number                 // animation time in milliseconds\n       *                          |  options.scale    = Number                 // scale to animate to\n       *                          |  options.position = {x:Number, y:Number}   // position to animate to\n       *                          |  options.easingFunction = String           // linear, easeInQuad, easeOutQuad, easeInOutQuad,\n       *                                                                       // easeInCubic, easeOutCubic, easeInOutCubic,\n       *                                                                       // easeInQuart, easeOutQuart, easeInOutQuart,\n       *                                                                       // easeInQuint, easeOutQuint, easeInOutQuint\n       */\n\n    }, {\n      key: 'animateView',\n      value: function animateView(options) {\n        if (options === undefined) {\n          return;\n        }\n        this.animationEasingFunction = options.animation.easingFunction;\n        // release if something focussed on the node\n        this.releaseNode();\n        if (options.locked === true) {\n          this.lockedOnNodeId = options.lockedOnNode;\n          this.lockedOnNodeOffset = options.offset;\n        }\n\n        // forcefully complete the old animation if it was still running\n        if (this.easingTime != 0) {\n          this._transitionRedraw(true); // by setting easingtime to 1, we finish the animation.\n        }\n\n        this.sourceScale = this.body.view.scale;\n        this.sourceTranslation = this.body.view.translation;\n        this.targetScale = options.scale;\n\n        // set the scale so the viewCenter is based on the correct zoom level. This is overridden in the transitionRedraw\n        // but at least then we'll have the target transition\n        this.body.view.scale = this.targetScale;\n        var viewCenter = this.canvas.DOMtoCanvas({ x: 0.5 * this.canvas.frame.canvas.clientWidth, y: 0.5 * this.canvas.frame.canvas.clientHeight });\n\n        var distanceFromCenter = { // offset from view, distance view has to change by these x and y to center the node\n          x: viewCenter.x - options.position.x,\n          y: viewCenter.y - options.position.y\n        };\n        this.targetTranslation = {\n          x: this.sourceTranslation.x + distanceFromCenter.x * this.targetScale + options.offset.x,\n          y: this.sourceTranslation.y + distanceFromCenter.y * this.targetScale + options.offset.y\n        };\n\n        // if the time is set to 0, don't do an animation\n        if (options.animation.duration === 0) {\n          if (this.lockedOnNodeId != undefined) {\n            this.viewFunction = this._lockedRedraw.bind(this);\n            this.body.emitter.on(\"initRedraw\", this.viewFunction);\n          } else {\n            this.body.view.scale = this.targetScale;\n            this.body.view.translation = this.targetTranslation;\n            this.body.emitter.emit(\"_requestRedraw\");\n          }\n        } else {\n          this.animationSpeed = 1 / (60 * options.animation.duration * 0.001) || 1 / 60; // 60 for 60 seconds, 0.001 for milli's\n          this.animationEasingFunction = options.animation.easingFunction;\n\n          this.viewFunction = this._transitionRedraw.bind(this);\n          this.body.emitter.on(\"initRedraw\", this.viewFunction);\n          this.body.emitter.emit(\"_startRendering\");\n        }\n      }\n\n      /**\n       * used to animate smoothly by hijacking the redraw function.\n       * @private\n       */\n\n    }, {\n      key: '_lockedRedraw',\n      value: function _lockedRedraw() {\n        var nodePosition = { x: this.body.nodes[this.lockedOnNodeId].x, y: this.body.nodes[this.lockedOnNodeId].y };\n        var viewCenter = this.canvas.DOMtoCanvas({ x: 0.5 * this.canvas.frame.canvas.clientWidth, y: 0.5 * this.canvas.frame.canvas.clientHeight });\n        var distanceFromCenter = { // offset from view, distance view has to change by these x and y to center the node\n          x: viewCenter.x - nodePosition.x,\n          y: viewCenter.y - nodePosition.y\n        };\n        var sourceTranslation = this.body.view.translation;\n        var targetTranslation = {\n          x: sourceTranslation.x + distanceFromCenter.x * this.body.view.scale + this.lockedOnNodeOffset.x,\n          y: sourceTranslation.y + distanceFromCenter.y * this.body.view.scale + this.lockedOnNodeOffset.y\n        };\n\n        this.body.view.translation = targetTranslation;\n      }\n    }, {\n      key: 'releaseNode',\n      value: function releaseNode() {\n        if (this.lockedOnNodeId !== undefined && this.viewFunction !== undefined) {\n          this.body.emitter.off(\"initRedraw\", this.viewFunction);\n          this.lockedOnNodeId = undefined;\n          this.lockedOnNodeOffset = undefined;\n        }\n      }\n\n      /**\n       *\n       * @param easingTime\n       * @private\n       */\n\n    }, {\n      key: '_transitionRedraw',\n      value: function _transitionRedraw() {\n        var finished = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n        this.easingTime += this.animationSpeed;\n        this.easingTime = finished === true ? 1.0 : this.easingTime;\n\n        var progress = util.easingFunctions[this.animationEasingFunction](this.easingTime);\n\n        this.body.view.scale = this.sourceScale + (this.targetScale - this.sourceScale) * progress;\n        this.body.view.translation = {\n          x: this.sourceTranslation.x + (this.targetTranslation.x - this.sourceTranslation.x) * progress,\n          y: this.sourceTranslation.y + (this.targetTranslation.y - this.sourceTranslation.y) * progress\n        };\n\n        // cleanup\n        if (this.easingTime >= 1.0) {\n          this.body.emitter.off(\"initRedraw\", this.viewFunction);\n          this.easingTime = 0;\n          if (this.lockedOnNodeId != undefined) {\n            this.viewFunction = this._lockedRedraw.bind(this);\n            this.body.emitter.on(\"initRedraw\", this.viewFunction);\n          }\n          this.body.emitter.emit(\"animationFinished\");\n        }\n      }\n    }, {\n      key: 'getScale',\n      value: function getScale() {\n        return this.body.view.scale;\n      }\n    }, {\n      key: 'getViewPosition',\n      value: function getViewPosition() {\n        return this.canvas.DOMtoCanvas({ x: 0.5 * this.canvas.frame.canvas.clientWidth, y: 0.5 * this.canvas.frame.canvas.clientHeight });\n      }\n    }]);\n\n    return View;\n  }();\n\n  exports.default = View;\n\n/***/ },\n/* 110 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _NavigationHandler = __webpack_require__(111);\n\n  var _NavigationHandler2 = _interopRequireDefault(_NavigationHandler);\n\n  var _Popup = __webpack_require__(112);\n\n  var _Popup2 = _interopRequireDefault(_Popup);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n\n  var InteractionHandler = function () {\n    function InteractionHandler(body, canvas, selectionHandler) {\n      _classCallCheck(this, InteractionHandler);\n\n      this.body = body;\n      this.canvas = canvas;\n      this.selectionHandler = selectionHandler;\n      this.navigationHandler = new _NavigationHandler2.default(body, canvas);\n\n      // bind the events from hammer to functions in this object\n      this.body.eventListeners.onTap = this.onTap.bind(this);\n      this.body.eventListeners.onTouch = this.onTouch.bind(this);\n      this.body.eventListeners.onDoubleTap = this.onDoubleTap.bind(this);\n      this.body.eventListeners.onHold = this.onHold.bind(this);\n      this.body.eventListeners.onDragStart = this.onDragStart.bind(this);\n      this.body.eventListeners.onDrag = this.onDrag.bind(this);\n      this.body.eventListeners.onDragEnd = this.onDragEnd.bind(this);\n      this.body.eventListeners.onMouseWheel = this.onMouseWheel.bind(this);\n      this.body.eventListeners.onPinch = this.onPinch.bind(this);\n      this.body.eventListeners.onMouseMove = this.onMouseMove.bind(this);\n      this.body.eventListeners.onRelease = this.onRelease.bind(this);\n      this.body.eventListeners.onContext = this.onContext.bind(this);\n\n      this.touchTime = 0;\n      this.drag = {};\n      this.pinch = {};\n      this.popup = undefined;\n      this.popupObj = undefined;\n      this.popupTimer = undefined;\n\n      this.body.functions.getPointer = this.getPointer.bind(this);\n\n      this.options = {};\n      this.defaultOptions = {\n        dragNodes: true,\n        dragView: true,\n        hover: false,\n        keyboard: {\n          enabled: false,\n          speed: { x: 10, y: 10, zoom: 0.02 },\n          bindToWindow: true\n        },\n        navigationButtons: false,\n        tooltipDelay: 300,\n        zoomView: true\n      };\n      util.extend(this.options, this.defaultOptions);\n\n      this.bindEventListeners();\n    }\n\n    _createClass(InteractionHandler, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this = this;\n\n        this.body.emitter.on('destroy', function () {\n          clearTimeout(_this.popupTimer);\n          delete _this.body.functions.getPointer;\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          // extend all but the values in fields\n          var fields = ['hideEdgesOnDrag', 'hideNodesOnDrag', 'keyboard', 'multiselect', 'selectable', 'selectConnectedEdges'];\n          util.selectiveNotDeepExtend(fields, this.options, options);\n\n          // merge the keyboard options in.\n          util.mergeOptions(this.options, options, 'keyboard');\n\n          if (options.tooltip) {\n            util.extend(this.options.tooltip, options.tooltip);\n            if (options.tooltip.color) {\n              this.options.tooltip.color = util.parseColor(options.tooltip.color);\n            }\n          }\n        }\n\n        this.navigationHandler.setOptions(this.options);\n      }\n\n      /**\n       * Get the pointer location from a touch location\n       * @param {{x: Number, y: Number}} touch\n       * @return {{x: Number, y: Number}} pointer\n       * @private\n       */\n\n    }, {\n      key: 'getPointer',\n      value: function getPointer(touch) {\n        return {\n          x: touch.x - util.getAbsoluteLeft(this.canvas.frame.canvas),\n          y: touch.y - util.getAbsoluteTop(this.canvas.frame.canvas)\n        };\n      }\n\n      /**\n       * On start of a touch gesture, store the pointer\n       * @param event\n       * @private\n       */\n\n    }, {\n      key: 'onTouch',\n      value: function onTouch(event) {\n        if (new Date().valueOf() - this.touchTime > 50) {\n          this.drag.pointer = this.getPointer(event.center);\n          this.drag.pinched = false;\n          this.pinch.scale = this.body.view.scale;\n          // to avoid double fireing of this event because we have two hammer instances. (on canvas and on frame)\n          this.touchTime = new Date().valueOf();\n        }\n      }\n\n      /**\n       * handle tap/click event: select/unselect a node\n       * @private\n       */\n\n    }, {\n      key: 'onTap',\n      value: function onTap(event) {\n        var pointer = this.getPointer(event.center);\n        var multiselect = this.selectionHandler.options.multiselect && (event.changedPointers[0].ctrlKey || event.changedPointers[0].metaKey);\n\n        this.checkSelectionChanges(pointer, event, multiselect);\n        this.selectionHandler._generateClickEvent('click', event, pointer);\n      }\n\n      /**\n       * handle doubletap event\n       * @private\n       */\n\n    }, {\n      key: 'onDoubleTap',\n      value: function onDoubleTap(event) {\n        var pointer = this.getPointer(event.center);\n        this.selectionHandler._generateClickEvent('doubleClick', event, pointer);\n      }\n\n      /**\n       * handle long tap event: multi select nodes\n       * @private\n       */\n\n    }, {\n      key: 'onHold',\n      value: function onHold(event) {\n        var pointer = this.getPointer(event.center);\n        var multiselect = this.selectionHandler.options.multiselect;\n\n        this.checkSelectionChanges(pointer, event, multiselect);\n\n        this.selectionHandler._generateClickEvent('click', event, pointer);\n        this.selectionHandler._generateClickEvent('hold', event, pointer);\n      }\n\n      /**\n       * handle the release of the screen\n       *\n       * @private\n       */\n\n    }, {\n      key: 'onRelease',\n      value: function onRelease(event) {\n        if (new Date().valueOf() - this.touchTime > 10) {\n          var pointer = this.getPointer(event.center);\n          this.selectionHandler._generateClickEvent('release', event, pointer);\n          // to avoid double fireing of this event because we have two hammer instances. (on canvas and on frame)\n          this.touchTime = new Date().valueOf();\n        }\n      }\n    }, {\n      key: 'onContext',\n      value: function onContext(event) {\n        var pointer = this.getPointer({ x: event.clientX, y: event.clientY });\n        this.selectionHandler._generateClickEvent('oncontext', event, pointer);\n      }\n\n      /**\n       *\n       * @param pointer\n       * @param add\n       */\n\n    }, {\n      key: 'checkSelectionChanges',\n      value: function checkSelectionChanges(pointer, event) {\n        var add = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        var previouslySelectedEdgeCount = this.selectionHandler._getSelectedEdgeCount();\n        var previouslySelectedNodeCount = this.selectionHandler._getSelectedNodeCount();\n        var previousSelection = this.selectionHandler.getSelection();\n        var selected = void 0;\n        if (add === true) {\n          selected = this.selectionHandler.selectAdditionalOnPoint(pointer);\n        } else {\n          selected = this.selectionHandler.selectOnPoint(pointer);\n        }\n        var selectedEdgesCount = this.selectionHandler._getSelectedEdgeCount();\n        var selectedNodesCount = this.selectionHandler._getSelectedNodeCount();\n        var currentSelection = this.selectionHandler.getSelection();\n\n        var _determineIfDifferent2 = this._determineIfDifferent(previousSelection, currentSelection),\n            nodesChanged = _determineIfDifferent2.nodesChanged,\n            edgesChanged = _determineIfDifferent2.edgesChanged;\n\n        var nodeSelected = false;\n\n        if (selectedNodesCount - previouslySelectedNodeCount > 0) {\n          // node was selected\n          this.selectionHandler._generateClickEvent('selectNode', event, pointer);\n          selected = true;\n          nodeSelected = true;\n        } else if (nodesChanged === true && selectedNodesCount > 0) {\n          this.selectionHandler._generateClickEvent('deselectNode', event, pointer, previousSelection);\n          this.selectionHandler._generateClickEvent('selectNode', event, pointer);\n          nodeSelected = true;\n          selected = true;\n        } else if (selectedNodesCount - previouslySelectedNodeCount < 0) {\n          // node was deselected\n          this.selectionHandler._generateClickEvent('deselectNode', event, pointer, previousSelection);\n          selected = true;\n        }\n\n        // handle the selected edges\n        if (selectedEdgesCount - previouslySelectedEdgeCount > 0 && nodeSelected === false) {\n          // edge was selected\n          this.selectionHandler._generateClickEvent('selectEdge', event, pointer);\n          selected = true;\n        } else if (selectedEdgesCount > 0 && edgesChanged === true) {\n          this.selectionHandler._generateClickEvent('deselectEdge', event, pointer, previousSelection);\n          this.selectionHandler._generateClickEvent('selectEdge', event, pointer);\n          selected = true;\n        } else if (selectedEdgesCount - previouslySelectedEdgeCount < 0) {\n          // edge was deselected\n          this.selectionHandler._generateClickEvent('deselectEdge', event, pointer, previousSelection);\n          selected = true;\n        }\n\n        // fire the select event if anything has been selected or deselected\n        if (selected === true) {\n          // select or unselect\n          this.selectionHandler._generateClickEvent('select', event, pointer);\n        }\n      }\n\n      /**\n       * This function checks if the nodes and edges previously selected have changed.\n       * @param previousSelection\n       * @param currentSelection\n       * @returns {{nodesChanged: boolean, edgesChanged: boolean}}\n       * @private\n       */\n\n    }, {\n      key: '_determineIfDifferent',\n      value: function _determineIfDifferent(previousSelection, currentSelection) {\n        var nodesChanged = false;\n        var edgesChanged = false;\n\n        for (var i = 0; i < previousSelection.nodes.length; i++) {\n          if (currentSelection.nodes.indexOf(previousSelection.nodes[i]) === -1) {\n            nodesChanged = true;\n          }\n        }\n        for (var _i = 0; _i < currentSelection.nodes.length; _i++) {\n          if (previousSelection.nodes.indexOf(previousSelection.nodes[_i]) === -1) {\n            nodesChanged = true;\n          }\n        }\n        for (var _i2 = 0; _i2 < previousSelection.edges.length; _i2++) {\n          if (currentSelection.edges.indexOf(previousSelection.edges[_i2]) === -1) {\n            edgesChanged = true;\n          }\n        }\n        for (var _i3 = 0; _i3 < currentSelection.edges.length; _i3++) {\n          if (previousSelection.edges.indexOf(previousSelection.edges[_i3]) === -1) {\n            edgesChanged = true;\n          }\n        }\n\n        return { nodesChanged: nodesChanged, edgesChanged: edgesChanged };\n      }\n\n      /**\n       * This function is called by onDragStart.\n       * It is separated out because we can then overload it for the datamanipulation system.\n       *\n       * @private\n       */\n\n    }, {\n      key: 'onDragStart',\n      value: function onDragStart(event) {\n        //in case the touch event was triggered on an external div, do the initial touch now.\n        if (this.drag.pointer === undefined) {\n          this.onTouch(event);\n        }\n\n        // note: drag.pointer is set in onTouch to get the initial touch location\n        var node = this.selectionHandler.getNodeAt(this.drag.pointer);\n\n        this.drag.dragging = true;\n        this.drag.selection = [];\n        this.drag.translation = util.extend({}, this.body.view.translation); // copy the object\n        this.drag.nodeId = undefined;\n\n        if (node !== undefined && this.options.dragNodes === true) {\n          this.drag.nodeId = node.id;\n          // select the clicked node if not yet selected\n          if (node.isSelected() === false) {\n            this.selectionHandler.unselectAll();\n            this.selectionHandler.selectObject(node);\n          }\n\n          // after select to contain the node\n          this.selectionHandler._generateClickEvent('dragStart', event, this.drag.pointer);\n\n          var selection = this.selectionHandler.selectionObj.nodes;\n          // create an array with the selected nodes and their original location and status\n          for (var nodeId in selection) {\n            if (selection.hasOwnProperty(nodeId)) {\n              var object = selection[nodeId];\n              var s = {\n                id: object.id,\n                node: object,\n\n                // store original x, y, xFixed and yFixed, make the node temporarily Fixed\n                x: object.x,\n                y: object.y,\n                xFixed: object.options.fixed.x,\n                yFixed: object.options.fixed.y\n              };\n\n              object.options.fixed.x = true;\n              object.options.fixed.y = true;\n\n              this.drag.selection.push(s);\n            }\n          }\n        } else {\n          // fallback if no node is selected and thus the view is dragged.\n          this.selectionHandler._generateClickEvent('dragStart', event, this.drag.pointer, undefined, true);\n        }\n      }\n\n      /**\n       * handle drag event\n       * @private\n       */\n\n    }, {\n      key: 'onDrag',\n      value: function onDrag(event) {\n        var _this2 = this;\n\n        if (this.drag.pinched === true) {\n          return;\n        }\n\n        // remove the focus on node if it is focussed on by the focusOnNode\n        this.body.emitter.emit('unlockNode');\n\n        var pointer = this.getPointer(event.center);\n\n        var selection = this.drag.selection;\n        if (selection && selection.length && this.options.dragNodes === true) {\n          (function () {\n            _this2.selectionHandler._generateClickEvent('dragging', event, pointer);\n\n            // calculate delta's and new location\n            var deltaX = pointer.x - _this2.drag.pointer.x;\n            var deltaY = pointer.y - _this2.drag.pointer.y;\n\n            // update position of all selected nodes\n            selection.forEach(function (selection) {\n              var node = selection.node;\n              // only move the node if it was not fixed initially\n              if (selection.xFixed === false) {\n                node.x = _this2.canvas._XconvertDOMtoCanvas(_this2.canvas._XconvertCanvasToDOM(selection.x) + deltaX);\n              }\n              // only move the node if it was not fixed initially\n              if (selection.yFixed === false) {\n                node.y = _this2.canvas._YconvertDOMtoCanvas(_this2.canvas._YconvertCanvasToDOM(selection.y) + deltaY);\n              }\n            });\n\n            // start the simulation of the physics\n            _this2.body.emitter.emit('startSimulation');\n          })();\n        } else {\n          // move the network\n          if (this.options.dragView === true) {\n            this.selectionHandler._generateClickEvent('dragging', event, pointer, undefined, true);\n\n            // if the drag was not started properly because the click started outside the network div, start it now.\n            if (this.drag.pointer === undefined) {\n              this.onDragStart(event);\n              return;\n            }\n            var diffX = pointer.x - this.drag.pointer.x;\n            var diffY = pointer.y - this.drag.pointer.y;\n\n            this.body.view.translation = { x: this.drag.translation.x + diffX, y: this.drag.translation.y + diffY };\n            this.body.emitter.emit('_redraw');\n          }\n        }\n      }\n\n      /**\n       * handle drag start event\n       * @private\n       */\n\n    }, {\n      key: 'onDragEnd',\n      value: function onDragEnd(event) {\n        this.drag.dragging = false;\n        var selection = this.drag.selection;\n        if (selection && selection.length) {\n          selection.forEach(function (s) {\n            // restore original xFixed and yFixed\n            s.node.options.fixed.x = s.xFixed;\n            s.node.options.fixed.y = s.yFixed;\n          });\n          this.selectionHandler._generateClickEvent('dragEnd', event, this.getPointer(event.center));\n          this.body.emitter.emit('startSimulation');\n        } else {\n          this.selectionHandler._generateClickEvent('dragEnd', event, this.getPointer(event.center), undefined, true);\n          this.body.emitter.emit('_requestRedraw');\n        }\n      }\n\n      /**\n       * Handle pinch event\n       * @param event\n       * @private\n       */\n\n    }, {\n      key: 'onPinch',\n      value: function onPinch(event) {\n        var pointer = this.getPointer(event.center);\n\n        this.drag.pinched = true;\n        if (this.pinch['scale'] === undefined) {\n          this.pinch.scale = 1;\n        }\n\n        // TODO: enabled moving while pinching?\n        var scale = this.pinch.scale * event.scale;\n        this.zoom(scale, pointer);\n      }\n\n      /**\n       * Zoom the network in or out\n       * @param {Number} scale a number around 1, and between 0.01 and 10\n       * @param {{x: Number, y: Number}} pointer    Position on screen\n       * @return {Number} appliedScale    scale is limited within the boundaries\n       * @private\n       */\n\n    }, {\n      key: 'zoom',\n      value: function zoom(scale, pointer) {\n        if (this.options.zoomView === true) {\n          var scaleOld = this.body.view.scale;\n          if (scale < 0.00001) {\n            scale = 0.00001;\n          }\n          if (scale > 10) {\n            scale = 10;\n          }\n\n          var preScaleDragPointer = undefined;\n          if (this.drag !== undefined) {\n            if (this.drag.dragging === true) {\n              preScaleDragPointer = this.canvas.DOMtoCanvas(this.drag.pointer);\n            }\n          }\n          // + this.canvas.frame.canvas.clientHeight / 2\n          var translation = this.body.view.translation;\n\n          var scaleFrac = scale / scaleOld;\n          var tx = (1 - scaleFrac) * pointer.x + translation.x * scaleFrac;\n          var ty = (1 - scaleFrac) * pointer.y + translation.y * scaleFrac;\n\n          this.body.view.scale = scale;\n          this.body.view.translation = { x: tx, y: ty };\n\n          if (preScaleDragPointer != undefined) {\n            var postScaleDragPointer = this.canvas.canvasToDOM(preScaleDragPointer);\n            this.drag.pointer.x = postScaleDragPointer.x;\n            this.drag.pointer.y = postScaleDragPointer.y;\n          }\n\n          this.body.emitter.emit('_requestRedraw');\n\n          if (scaleOld < scale) {\n            this.body.emitter.emit('zoom', { direction: '+', scale: this.body.view.scale });\n          } else {\n            this.body.emitter.emit('zoom', { direction: '-', scale: this.body.view.scale });\n          }\n        }\n      }\n\n      /**\n       * Event handler for mouse wheel event, used to zoom the timeline\n       * See http://adomas.org/javascript-mouse-wheel/\n       *     https://github.com/EightMedia/hammer.js/issues/256\n       * @param {MouseEvent}  event\n       * @private\n       */\n\n    }, {\n      key: 'onMouseWheel',\n      value: function onMouseWheel(event) {\n        if (this.options.zoomView === true) {\n          // retrieve delta\n          var delta = 0;\n          if (event.wheelDelta) {\n            /* IE/Opera. */\n            delta = event.wheelDelta / 120;\n          } else if (event.detail) {\n            /* Mozilla case. */\n            // In Mozilla, sign of delta is different than in IE.\n            // Also, delta is multiple of 3.\n            delta = -event.detail / 3;\n          }\n\n          // If delta is nonzero, handle it.\n          // Basically, delta is now positive if wheel was scrolled up,\n          // and negative, if wheel was scrolled down.\n          if (delta !== 0) {\n\n            // calculate the new scale\n            var scale = this.body.view.scale;\n            var zoom = delta / 10;\n            if (delta < 0) {\n              zoom = zoom / (1 - zoom);\n            }\n            scale *= 1 + zoom;\n\n            // calculate the pointer location\n            var pointer = this.getPointer({ x: event.clientX, y: event.clientY });\n\n            // apply the new scale\n            this.zoom(scale, pointer);\n          }\n\n          // Prevent default actions caused by mouse wheel.\n          event.preventDefault();\n        }\n      }\n\n      /**\n       * Mouse move handler for checking whether the title moves over a node with a title.\n       * @param  {Event} event\n       * @private\n       */\n\n    }, {\n      key: 'onMouseMove',\n      value: function onMouseMove(event) {\n        var _this3 = this;\n\n        var pointer = this.getPointer({ x: event.clientX, y: event.clientY });\n        var popupVisible = false;\n\n        // check if the previously selected node is still selected\n        if (this.popup !== undefined) {\n          if (this.popup.hidden === false) {\n            this._checkHidePopup(pointer);\n          }\n\n          // if the popup was not hidden above\n          if (this.popup.hidden === false) {\n            popupVisible = true;\n            this.popup.setPosition(pointer.x + 3, pointer.y - 5);\n            this.popup.show();\n          }\n        }\n\n        // if we bind the keyboard to the div, we have to highlight it to use it. This highlights it on mouse over.\n        if (this.options.keyboard.bindToWindow === false && this.options.keyboard.enabled === true) {\n          this.canvas.frame.focus();\n        }\n\n        // start a timeout that will check if the mouse is positioned above an element\n        if (popupVisible === false) {\n          if (this.popupTimer !== undefined) {\n            clearInterval(this.popupTimer); // stop any running calculationTimer\n            this.popupTimer = undefined;\n          }\n          if (!this.drag.dragging) {\n            this.popupTimer = setTimeout(function () {\n              return _this3._checkShowPopup(pointer);\n            }, this.options.tooltipDelay);\n          }\n        }\n\n        /**\n        * Adding hover highlights\n        */\n        if (this.options.hover === true) {\n          // adding hover highlights\n          var obj = this.selectionHandler.getNodeAt(pointer);\n          if (obj === undefined) {\n            obj = this.selectionHandler.getEdgeAt(pointer);\n          }\n          this.selectionHandler.hoverObject(obj);\n        }\n      }\n\n      /**\n       * Check if there is an element on the given position in the network\n       * (a node or edge). If so, and if this element has a title,\n       * show a popup window with its title.\n       *\n       * @param {{x:Number, y:Number}} pointer\n       * @private\n       */\n\n    }, {\n      key: '_checkShowPopup',\n      value: function _checkShowPopup(pointer) {\n        var x = this.canvas._XconvertDOMtoCanvas(pointer.x);\n        var y = this.canvas._YconvertDOMtoCanvas(pointer.y);\n        var pointerObj = {\n          left: x,\n          top: y,\n          right: x,\n          bottom: y\n        };\n\n        var previousPopupObjId = this.popupObj === undefined ? undefined : this.popupObj.id;\n        var nodeUnderCursor = false;\n        var popupType = 'node';\n\n        // check if a node is under the cursor.\n        if (this.popupObj === undefined) {\n          // search the nodes for overlap, select the top one in case of multiple nodes\n          var nodeIndices = this.body.nodeIndices;\n          var nodes = this.body.nodes;\n          var node = void 0;\n          var overlappingNodes = [];\n          for (var i = 0; i < nodeIndices.length; i++) {\n            node = nodes[nodeIndices[i]];\n            if (node.isOverlappingWith(pointerObj) === true) {\n              if (node.getTitle() !== undefined) {\n                overlappingNodes.push(nodeIndices[i]);\n              }\n            }\n          }\n\n          if (overlappingNodes.length > 0) {\n            // if there are overlapping nodes, select the last one, this is the one which is drawn on top of the others\n            this.popupObj = nodes[overlappingNodes[overlappingNodes.length - 1]];\n            // if you hover over a node, the title of the edge is not supposed to be shown.\n            nodeUnderCursor = true;\n          }\n        }\n\n        if (this.popupObj === undefined && nodeUnderCursor === false) {\n          // search the edges for overlap\n          var edgeIndices = this.body.edgeIndices;\n          var edges = this.body.edges;\n          var edge = void 0;\n          var overlappingEdges = [];\n          for (var _i4 = 0; _i4 < edgeIndices.length; _i4++) {\n            edge = edges[edgeIndices[_i4]];\n            if (edge.isOverlappingWith(pointerObj) === true) {\n              if (edge.connected === true && edge.getTitle() !== undefined) {\n                overlappingEdges.push(edgeIndices[_i4]);\n              }\n            }\n          }\n\n          if (overlappingEdges.length > 0) {\n            this.popupObj = edges[overlappingEdges[overlappingEdges.length - 1]];\n            popupType = 'edge';\n          }\n        }\n\n        if (this.popupObj !== undefined) {\n          // show popup message window\n          if (this.popupObj.id !== previousPopupObjId) {\n            if (this.popup === undefined) {\n              this.popup = new _Popup2.default(this.canvas.frame);\n            }\n\n            this.popup.popupTargetType = popupType;\n            this.popup.popupTargetId = this.popupObj.id;\n\n            // adjust a small offset such that the mouse cursor is located in the\n            // bottom left location of the popup, and you can easily move over the\n            // popup area\n            this.popup.setPosition(pointer.x + 3, pointer.y - 5);\n            this.popup.setText(this.popupObj.getTitle());\n            this.popup.show();\n            this.body.emitter.emit('showPopup', this.popupObj.id);\n          }\n        } else {\n          if (this.popup !== undefined) {\n            this.popup.hide();\n            this.body.emitter.emit('hidePopup');\n          }\n        }\n      }\n\n      /**\n       * Check if the popup must be hidden, which is the case when the mouse is no\n       * longer hovering on the object\n       * @param {{x:Number, y:Number}} pointer\n       * @private\n       */\n\n    }, {\n      key: '_checkHidePopup',\n      value: function _checkHidePopup(pointer) {\n        var pointerObj = this.selectionHandler._pointerToPositionObject(pointer);\n\n        var stillOnObj = false;\n        if (this.popup.popupTargetType === 'node') {\n          if (this.body.nodes[this.popup.popupTargetId] !== undefined) {\n            stillOnObj = this.body.nodes[this.popup.popupTargetId].isOverlappingWith(pointerObj);\n\n            // if the mouse is still one the node, we have to check if it is not also on one that is drawn on top of it.\n            // we initially only check stillOnObj because this is much faster.\n            if (stillOnObj === true) {\n              var overNode = this.selectionHandler.getNodeAt(pointer);\n              stillOnObj = overNode.id === this.popup.popupTargetId;\n            }\n          }\n        } else {\n          if (this.selectionHandler.getNodeAt(pointer) === undefined) {\n            if (this.body.edges[this.popup.popupTargetId] !== undefined) {\n              stillOnObj = this.body.edges[this.popup.popupTargetId].isOverlappingWith(pointerObj);\n            }\n          }\n        }\n\n        if (stillOnObj === false) {\n          this.popupObj = undefined;\n          this.popup.hide();\n          this.body.emitter.emit('hidePopup');\n        }\n      }\n    }]);\n\n    return InteractionHandler;\n  }();\n\n  exports.default = InteractionHandler;\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n  var Hammer = __webpack_require__(22);\n  var hammerUtil = __webpack_require__(30);\n  var keycharm = __webpack_require__(25);\n\n  var NavigationHandler = function () {\n    function NavigationHandler(body, canvas) {\n      var _this = this;\n\n      _classCallCheck(this, NavigationHandler);\n\n      this.body = body;\n      this.canvas = canvas;\n\n      this.iconsCreated = false;\n      this.navigationHammers = [];\n      this.boundFunctions = {};\n      this.touchTime = 0;\n      this.activated = false;\n\n      this.body.emitter.on(\"activate\", function () {\n        _this.activated = true;_this.configureKeyboardBindings();\n      });\n      this.body.emitter.on(\"deactivate\", function () {\n        _this.activated = false;_this.configureKeyboardBindings();\n      });\n      this.body.emitter.on(\"destroy\", function () {\n        if (_this.keycharm !== undefined) {\n          _this.keycharm.destroy();\n        }\n      });\n\n      this.options = {};\n    }\n\n    _createClass(NavigationHandler, [{\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          this.options = options;\n          this.create();\n        }\n      }\n    }, {\n      key: 'create',\n      value: function create() {\n        if (this.options.navigationButtons === true) {\n          if (this.iconsCreated === false) {\n            this.loadNavigationElements();\n          }\n        } else if (this.iconsCreated === true) {\n          this.cleanNavigation();\n        }\n\n        this.configureKeyboardBindings();\n      }\n    }, {\n      key: 'cleanNavigation',\n      value: function cleanNavigation() {\n        // clean hammer bindings\n        if (this.navigationHammers.length != 0) {\n          for (var i = 0; i < this.navigationHammers.length; i++) {\n            this.navigationHammers[i].destroy();\n          }\n          this.navigationHammers = [];\n        }\n\n        // clean up previous navigation items\n        if (this.navigationDOM && this.navigationDOM['wrapper'] && this.navigationDOM['wrapper'].parentNode) {\n          this.navigationDOM['wrapper'].parentNode.removeChild(this.navigationDOM['wrapper']);\n        }\n\n        this.iconsCreated = false;\n      }\n\n      /**\n       * Creation of the navigation controls nodes. They are drawn over the rest of the nodes and are not affected by scale and translation\n       * they have a triggerFunction which is called on click. If the position of the navigation controls is dependent\n       * on this.frame.canvas.clientWidth or this.frame.canvas.clientHeight, we flag horizontalAlignLeft and verticalAlignTop false.\n       * This means that the location will be corrected by the _relocateNavigation function on a size change of the canvas.\n       *\n       * @private\n       */\n\n    }, {\n      key: 'loadNavigationElements',\n      value: function loadNavigationElements() {\n        var _this2 = this;\n\n        this.cleanNavigation();\n\n        this.navigationDOM = {};\n        var navigationDivs = ['up', 'down', 'left', 'right', 'zoomIn', 'zoomOut', 'zoomExtends'];\n        var navigationDivActions = ['_moveUp', '_moveDown', '_moveLeft', '_moveRight', '_zoomIn', '_zoomOut', '_fit'];\n\n        this.navigationDOM['wrapper'] = document.createElement('div');\n        this.navigationDOM['wrapper'].className = 'vis-navigation';\n        this.canvas.frame.appendChild(this.navigationDOM['wrapper']);\n\n        for (var i = 0; i < navigationDivs.length; i++) {\n          this.navigationDOM[navigationDivs[i]] = document.createElement('div');\n          this.navigationDOM[navigationDivs[i]].className = 'vis-button vis-' + navigationDivs[i];\n          this.navigationDOM['wrapper'].appendChild(this.navigationDOM[navigationDivs[i]]);\n\n          var hammer = new Hammer(this.navigationDOM[navigationDivs[i]]);\n          if (navigationDivActions[i] === \"_fit\") {\n            hammerUtil.onTouch(hammer, this._fit.bind(this));\n          } else {\n            hammerUtil.onTouch(hammer, this.bindToRedraw.bind(this, navigationDivActions[i]));\n          }\n\n          this.navigationHammers.push(hammer);\n        }\n\n        // use a hammer for the release so we do not require the one used in the rest of the network\n        // the one the rest uses can be overloaded by the manipulation system.\n        var hammerFrame = new Hammer(this.canvas.frame);\n        hammerUtil.onRelease(hammerFrame, function () {\n          _this2._stopMovement();\n        });\n        this.navigationHammers.push(hammerFrame);\n\n        this.iconsCreated = true;\n      }\n    }, {\n      key: 'bindToRedraw',\n      value: function bindToRedraw(action) {\n        if (this.boundFunctions[action] === undefined) {\n          this.boundFunctions[action] = this[action].bind(this);\n          this.body.emitter.on(\"initRedraw\", this.boundFunctions[action]);\n          this.body.emitter.emit(\"_startRendering\");\n        }\n      }\n    }, {\n      key: 'unbindFromRedraw',\n      value: function unbindFromRedraw(action) {\n        if (this.boundFunctions[action] !== undefined) {\n          this.body.emitter.off(\"initRedraw\", this.boundFunctions[action]);\n          this.body.emitter.emit(\"_stopRendering\");\n          delete this.boundFunctions[action];\n        }\n      }\n\n      /**\n       * this stops all movement induced by the navigation buttons\n       *\n       * @private\n       */\n\n    }, {\n      key: '_fit',\n      value: function _fit() {\n        if (new Date().valueOf() - this.touchTime > 700) {\n          // TODO: fix ugly hack to avoid hammer's double fireing of event (because we use release?)\n          this.body.emitter.emit(\"fit\", { duration: 700 });\n          this.touchTime = new Date().valueOf();\n        }\n      }\n\n      /**\n       * this stops all movement induced by the navigation buttons\n       *\n       * @private\n       */\n\n    }, {\n      key: '_stopMovement',\n      value: function _stopMovement() {\n        for (var boundAction in this.boundFunctions) {\n          if (this.boundFunctions.hasOwnProperty(boundAction)) {\n            this.body.emitter.off(\"initRedraw\", this.boundFunctions[boundAction]);\n            this.body.emitter.emit(\"_stopRendering\");\n          }\n        }\n        this.boundFunctions = {};\n      }\n    }, {\n      key: '_moveUp',\n      value: function _moveUp() {\n        this.body.view.translation.y += this.options.keyboard.speed.y;\n      }\n    }, {\n      key: '_moveDown',\n      value: function _moveDown() {\n        this.body.view.translation.y -= this.options.keyboard.speed.y;\n      }\n    }, {\n      key: '_moveLeft',\n      value: function _moveLeft() {\n        this.body.view.translation.x += this.options.keyboard.speed.x;\n      }\n    }, {\n      key: '_moveRight',\n      value: function _moveRight() {\n        this.body.view.translation.x -= this.options.keyboard.speed.x;\n      }\n    }, {\n      key: '_zoomIn',\n      value: function _zoomIn() {\n        var scaleOld = this.body.view.scale;\n        var scale = this.body.view.scale * (1 + this.options.keyboard.speed.zoom);\n        var translation = this.body.view.translation;\n        var scaleFrac = scale / scaleOld;\n        var tx = (1 - scaleFrac) * this.canvas.canvasViewCenter.x + translation.x * scaleFrac;\n        var ty = (1 - scaleFrac) * this.canvas.canvasViewCenter.y + translation.y * scaleFrac;\n\n        this.body.view.scale = scale;\n        this.body.view.translation = { x: tx, y: ty };\n        this.body.emitter.emit('zoom', { direction: '+', scale: this.body.view.scale });\n      }\n    }, {\n      key: '_zoomOut',\n      value: function _zoomOut() {\n        var scaleOld = this.body.view.scale;\n        var scale = this.body.view.scale / (1 + this.options.keyboard.speed.zoom);\n        var translation = this.body.view.translation;\n        var scaleFrac = scale / scaleOld;\n        var tx = (1 - scaleFrac) * this.canvas.canvasViewCenter.x + translation.x * scaleFrac;\n        var ty = (1 - scaleFrac) * this.canvas.canvasViewCenter.y + translation.y * scaleFrac;\n\n        this.body.view.scale = scale;\n        this.body.view.translation = { x: tx, y: ty };\n        this.body.emitter.emit('zoom', { direction: '-', scale: this.body.view.scale });\n      }\n\n      /**\n       * bind all keys using keycharm.\n       */\n\n    }, {\n      key: 'configureKeyboardBindings',\n      value: function configureKeyboardBindings() {\n        var _this3 = this;\n\n        if (this.keycharm !== undefined) {\n          this.keycharm.destroy();\n        }\n\n        if (this.options.keyboard.enabled === true) {\n          if (this.options.keyboard.bindToWindow === true) {\n            this.keycharm = keycharm({ container: window, preventDefault: true });\n          } else {\n            this.keycharm = keycharm({ container: this.canvas.frame, preventDefault: true });\n          }\n\n          this.keycharm.reset();\n\n          if (this.activated === true) {\n            this.keycharm.bind(\"up\", function () {\n              _this3.bindToRedraw(\"_moveUp\");\n            }, \"keydown\");\n            this.keycharm.bind(\"down\", function () {\n              _this3.bindToRedraw(\"_moveDown\");\n            }, \"keydown\");\n            this.keycharm.bind(\"left\", function () {\n              _this3.bindToRedraw(\"_moveLeft\");\n            }, \"keydown\");\n            this.keycharm.bind(\"right\", function () {\n              _this3.bindToRedraw(\"_moveRight\");\n            }, \"keydown\");\n            this.keycharm.bind(\"=\", function () {\n              _this3.bindToRedraw(\"_zoomIn\");\n            }, \"keydown\");\n            this.keycharm.bind(\"num+\", function () {\n              _this3.bindToRedraw(\"_zoomIn\");\n            }, \"keydown\");\n            this.keycharm.bind(\"num-\", function () {\n              _this3.bindToRedraw(\"_zoomOut\");\n            }, \"keydown\");\n            this.keycharm.bind(\"-\", function () {\n              _this3.bindToRedraw(\"_zoomOut\");\n            }, \"keydown\");\n            this.keycharm.bind(\"[\", function () {\n              _this3.bindToRedraw(\"_zoomOut\");\n            }, \"keydown\");\n            this.keycharm.bind(\"]\", function () {\n              _this3.bindToRedraw(\"_zoomIn\");\n            }, \"keydown\");\n            this.keycharm.bind(\"pageup\", function () {\n              _this3.bindToRedraw(\"_zoomIn\");\n            }, \"keydown\");\n            this.keycharm.bind(\"pagedown\", function () {\n              _this3.bindToRedraw(\"_zoomOut\");\n            }, \"keydown\");\n\n            this.keycharm.bind(\"up\", function () {\n              _this3.unbindFromRedraw(\"_moveUp\");\n            }, \"keyup\");\n            this.keycharm.bind(\"down\", function () {\n              _this3.unbindFromRedraw(\"_moveDown\");\n            }, \"keyup\");\n            this.keycharm.bind(\"left\", function () {\n              _this3.unbindFromRedraw(\"_moveLeft\");\n            }, \"keyup\");\n            this.keycharm.bind(\"right\", function () {\n              _this3.unbindFromRedraw(\"_moveRight\");\n            }, \"keyup\");\n            this.keycharm.bind(\"=\", function () {\n              _this3.unbindFromRedraw(\"_zoomIn\");\n            }, \"keyup\");\n            this.keycharm.bind(\"num+\", function () {\n              _this3.unbindFromRedraw(\"_zoomIn\");\n            }, \"keyup\");\n            this.keycharm.bind(\"num-\", function () {\n              _this3.unbindFromRedraw(\"_zoomOut\");\n            }, \"keyup\");\n            this.keycharm.bind(\"-\", function () {\n              _this3.unbindFromRedraw(\"_zoomOut\");\n            }, \"keyup\");\n            this.keycharm.bind(\"[\", function () {\n              _this3.unbindFromRedraw(\"_zoomOut\");\n            }, \"keyup\");\n            this.keycharm.bind(\"]\", function () {\n              _this3.unbindFromRedraw(\"_zoomIn\");\n            }, \"keyup\");\n            this.keycharm.bind(\"pageup\", function () {\n              _this3.unbindFromRedraw(\"_zoomIn\");\n            }, \"keyup\");\n            this.keycharm.bind(\"pagedown\", function () {\n              _this3.unbindFromRedraw(\"_zoomOut\");\n            }, \"keyup\");\n          }\n        }\n      }\n    }]);\n\n    return NavigationHandler;\n  }();\n\n  exports.default = NavigationHandler;\n\n/***/ },\n/* 112 */\n/***/ function(module, exports) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  /**\n   * Popup is a class to create a popup window with some text\n   * @param {Element}  container     The container object.\n   * @param {Number} [x]\n   * @param {Number} [y]\n   * @param {String} [text]\n   * @param {Object} [style]     An object containing borderColor,\n   *                             backgroundColor, etc.\n   */\n  var Popup = function () {\n    function Popup(container) {\n      _classCallCheck(this, Popup);\n\n      this.container = container;\n\n      this.x = 0;\n      this.y = 0;\n      this.padding = 5;\n      this.hidden = false;\n\n      // create the frame\n      this.frame = document.createElement('div');\n      this.frame.className = 'vis-network-tooltip';\n      this.container.appendChild(this.frame);\n    }\n\n    /**\n     * @param {number} x   Horizontal position of the popup window\n     * @param {number} y   Vertical position of the popup window\n     */\n\n\n    _createClass(Popup, [{\n      key: 'setPosition',\n      value: function setPosition(x, y) {\n        this.x = parseInt(x);\n        this.y = parseInt(y);\n      }\n\n      /**\n       * Set the content for the popup window. This can be HTML code or text.\n       * @param {string | Element} content\n       */\n\n    }, {\n      key: 'setText',\n      value: function setText(content) {\n        if (content instanceof Element) {\n          this.frame.innerHTML = '';\n          this.frame.appendChild(content);\n        } else {\n          this.frame.innerHTML = content; // string containing text or HTML\n        }\n      }\n\n      /**\n       * Show the popup window\n       * @param {boolean} [doShow]    Show or hide the window\n       */\n\n    }, {\n      key: 'show',\n      value: function show(doShow) {\n        if (doShow === undefined) {\n          doShow = true;\n        }\n\n        if (doShow === true) {\n          var height = this.frame.clientHeight;\n          var width = this.frame.clientWidth;\n          var maxHeight = this.frame.parentNode.clientHeight;\n          var maxWidth = this.frame.parentNode.clientWidth;\n\n          var top = this.y - height;\n          if (top + height + this.padding > maxHeight) {\n            top = maxHeight - height - this.padding;\n          }\n          if (top < this.padding) {\n            top = this.padding;\n          }\n\n          var left = this.x;\n          if (left + width + this.padding > maxWidth) {\n            left = maxWidth - width - this.padding;\n          }\n          if (left < this.padding) {\n            left = this.padding;\n          }\n\n          this.frame.style.left = left + \"px\";\n          this.frame.style.top = top + \"px\";\n          this.frame.style.visibility = \"visible\";\n          this.hidden = false;\n        } else {\n          this.hide();\n        }\n      }\n\n      /**\n       * Hide the popup window\n       */\n\n    }, {\n      key: 'hide',\n      value: function hide() {\n        this.hidden = true;\n        this.frame.style.visibility = \"hidden\";\n      }\n    }]);\n\n    return Popup;\n  }();\n\n  exports.default = Popup;\n\n/***/ },\n/* 113 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _Node = __webpack_require__(67);\n\n  var _Node2 = _interopRequireDefault(_Node);\n\n  var _Edge = __webpack_require__(87);\n\n  var _Edge2 = _interopRequireDefault(_Edge);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n\n  var SelectionHandler = function () {\n    function SelectionHandler(body, canvas) {\n      var _this = this;\n\n      _classCallCheck(this, SelectionHandler);\n\n      this.body = body;\n      this.canvas = canvas;\n      this.selectionObj = { nodes: [], edges: [] };\n      this.hoverObj = { nodes: {}, edges: {} };\n\n      this.options = {};\n      this.defaultOptions = {\n        multiselect: false,\n        selectable: true,\n        selectConnectedEdges: true,\n        hoverConnectedEdges: true\n      };\n      util.extend(this.options, this.defaultOptions);\n\n      this.body.emitter.on(\"_dataChanged\", function () {\n        _this.updateSelection();\n      });\n    }\n\n    _createClass(SelectionHandler, [{\n      key: 'setOptions',\n      value: function setOptions(options) {\n        if (options !== undefined) {\n          var fields = ['multiselect', 'hoverConnectedEdges', 'selectable', 'selectConnectedEdges'];\n          util.selectiveDeepExtend(fields, this.options, options);\n        }\n      }\n\n      /**\n       * handles the selection part of the tap;\n       *\n       * @param {Object} pointer\n       * @private\n       */\n\n    }, {\n      key: 'selectOnPoint',\n      value: function selectOnPoint(pointer) {\n        var selected = false;\n        if (this.options.selectable === true) {\n          var obj = this.getNodeAt(pointer) || this.getEdgeAt(pointer);\n\n          // unselect after getting the objects in order to restore width and height.\n          this.unselectAll();\n\n          if (obj !== undefined) {\n            selected = this.selectObject(obj);\n          }\n          this.body.emitter.emit(\"_requestRedraw\");\n        }\n        return selected;\n      }\n    }, {\n      key: 'selectAdditionalOnPoint',\n      value: function selectAdditionalOnPoint(pointer) {\n        var selectionChanged = false;\n        if (this.options.selectable === true) {\n          var obj = this.getNodeAt(pointer) || this.getEdgeAt(pointer);\n\n          if (obj !== undefined) {\n            selectionChanged = true;\n            if (obj.isSelected() === true) {\n              this.deselectObject(obj);\n            } else {\n              this.selectObject(obj);\n            }\n\n            this.body.emitter.emit(\"_requestRedraw\");\n          }\n        }\n        return selectionChanged;\n      }\n    }, {\n      key: '_generateClickEvent',\n      value: function _generateClickEvent(eventType, event, pointer, oldSelection) {\n        var emptySelection = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n        var properties = void 0;\n        if (emptySelection === true) {\n          properties = { nodes: [], edges: [] };\n        } else {\n          properties = this.getSelection();\n        }\n        properties['pointer'] = {\n          DOM: { x: pointer.x, y: pointer.y },\n          canvas: this.canvas.DOMtoCanvas(pointer)\n        };\n        properties['event'] = event;\n\n        if (oldSelection !== undefined) {\n          properties['previousSelection'] = oldSelection;\n        }\n        this.body.emitter.emit(eventType, properties);\n      }\n    }, {\n      key: 'selectObject',\n      value: function selectObject(obj) {\n        var highlightEdges = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.options.selectConnectedEdges;\n\n        if (obj !== undefined) {\n          if (obj instanceof _Node2.default) {\n            if (highlightEdges === true) {\n              this._selectConnectedEdges(obj);\n            }\n          }\n          obj.select();\n          this._addToSelection(obj);\n          return true;\n        }\n        return false;\n      }\n    }, {\n      key: 'deselectObject',\n      value: function deselectObject(obj) {\n        if (obj.isSelected() === true) {\n          obj.selected = false;\n          this._removeFromSelection(obj);\n        }\n      }\n\n      /**\n       * retrieve all nodes overlapping with given object\n       * @param {Object} object  An object with parameters left, top, right, bottom\n       * @return {Number[]}   An array with id's of the overlapping nodes\n       * @private\n       */\n\n    }, {\n      key: '_getAllNodesOverlappingWith',\n      value: function _getAllNodesOverlappingWith(object) {\n        var overlappingNodes = [];\n        var nodes = this.body.nodes;\n        for (var i = 0; i < this.body.nodeIndices.length; i++) {\n          var nodeId = this.body.nodeIndices[i];\n          if (nodes[nodeId].isOverlappingWith(object)) {\n            overlappingNodes.push(nodeId);\n          }\n        }\n        return overlappingNodes;\n      }\n\n      /**\n       * Return a position object in canvasspace from a single point in screenspace\n       *\n       * @param pointer\n       * @returns {{left: number, top: number, right: number, bottom: number}}\n       * @private\n       */\n\n    }, {\n      key: '_pointerToPositionObject',\n      value: function _pointerToPositionObject(pointer) {\n        var canvasPos = this.canvas.DOMtoCanvas(pointer);\n        return {\n          left: canvasPos.x - 1,\n          top: canvasPos.y + 1,\n          right: canvasPos.x + 1,\n          bottom: canvasPos.y - 1\n        };\n      }\n\n      /**\n       * Get the top node at the a specific point (like a click)\n       *\n       * @param {{x: Number, y: Number}} pointer\n       * @return {Node | undefined} node\n       */\n\n    }, {\n      key: 'getNodeAt',\n      value: function getNodeAt(pointer) {\n        var returnNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        // we first check if this is an navigation controls element\n        var positionObject = this._pointerToPositionObject(pointer);\n        var overlappingNodes = this._getAllNodesOverlappingWith(positionObject);\n        // if there are overlapping nodes, select the last one, this is the\n        // one which is drawn on top of the others\n        if (overlappingNodes.length > 0) {\n          if (returnNode === true) {\n            return this.body.nodes[overlappingNodes[overlappingNodes.length - 1]];\n          } else {\n            return overlappingNodes[overlappingNodes.length - 1];\n          }\n        } else {\n          return undefined;\n        }\n      }\n\n      /**\n       * retrieve all edges overlapping with given object, selector is around center\n       * @param {Object} object  An object with parameters left, top, right, bottom\n       * @return {Number[]}   An array with id's of the overlapping nodes\n       * @private\n       */\n\n    }, {\n      key: '_getEdgesOverlappingWith',\n      value: function _getEdgesOverlappingWith(object, overlappingEdges) {\n        var edges = this.body.edges;\n        for (var i = 0; i < this.body.edgeIndices.length; i++) {\n          var edgeId = this.body.edgeIndices[i];\n          if (edges[edgeId].isOverlappingWith(object)) {\n            overlappingEdges.push(edgeId);\n          }\n        }\n      }\n\n      /**\n       * retrieve all nodes overlapping with given object\n       * @param {Object} object  An object with parameters left, top, right, bottom\n       * @return {Number[]}   An array with id's of the overlapping nodes\n       * @private\n       */\n\n    }, {\n      key: '_getAllEdgesOverlappingWith',\n      value: function _getAllEdgesOverlappingWith(object) {\n        var overlappingEdges = [];\n        this._getEdgesOverlappingWith(object, overlappingEdges);\n        return overlappingEdges;\n      }\n\n      /**\n       * Place holder. To implement change the getNodeAt to a _getObjectAt. Have the _getObjectAt call\n       * getNodeAt and _getEdgesAt, then priortize the selection to user preferences.\n       *\n       * @param pointer\n       * @returns {undefined}\n       */\n\n    }, {\n      key: 'getEdgeAt',\n      value: function getEdgeAt(pointer) {\n        var returnEdge = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        // Iterate over edges, pick closest within 10\n        var canvasPos = this.canvas.DOMtoCanvas(pointer);\n        var mindist = 10;\n        var overlappingEdge = null;\n        var edges = this.body.edges;\n        for (var i = 0; i < this.body.edgeIndices.length; i++) {\n          var edgeId = this.body.edgeIndices[i];\n          var edge = edges[edgeId];\n          if (edge.connected) {\n            var xFrom = edge.from.x;\n            var yFrom = edge.from.y;\n            var xTo = edge.to.x;\n            var yTo = edge.to.y;\n            var dist = edge.edgeType.getDistanceToEdge(xFrom, yFrom, xTo, yTo, canvasPos.x, canvasPos.y);\n            if (dist < mindist) {\n              overlappingEdge = edgeId;\n              mindist = dist;\n            }\n          }\n        }\n        if (overlappingEdge) {\n          if (returnEdge === true) {\n            return this.body.edges[overlappingEdge];\n          } else {\n            return overlappingEdge;\n          }\n        } else {\n          return undefined;\n        }\n      }\n\n      /**\n       * Add object to the selection array.\n       *\n       * @param obj\n       * @private\n       */\n\n    }, {\n      key: '_addToSelection',\n      value: function _addToSelection(obj) {\n        if (obj instanceof _Node2.default) {\n          this.selectionObj.nodes[obj.id] = obj;\n        } else {\n          this.selectionObj.edges[obj.id] = obj;\n        }\n      }\n\n      /**\n       * Add object to the selection array.\n       *\n       * @param obj\n       * @private\n       */\n\n    }, {\n      key: '_addToHover',\n      value: function _addToHover(obj) {\n        if (obj instanceof _Node2.default) {\n          this.hoverObj.nodes[obj.id] = obj;\n        } else {\n          this.hoverObj.edges[obj.id] = obj;\n        }\n      }\n\n      /**\n       * Remove a single option from selection.\n       *\n       * @param {Object} obj\n       * @private\n       */\n\n    }, {\n      key: '_removeFromSelection',\n      value: function _removeFromSelection(obj) {\n        if (obj instanceof _Node2.default) {\n          delete this.selectionObj.nodes[obj.id];\n          this._unselectConnectedEdges(obj);\n        } else {\n          delete this.selectionObj.edges[obj.id];\n        }\n      }\n\n      /**\n       * Unselect all. The selectionObj is useful for this.\n       */\n\n    }, {\n      key: 'unselectAll',\n      value: function unselectAll() {\n        for (var nodeId in this.selectionObj.nodes) {\n          if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {\n            this.selectionObj.nodes[nodeId].unselect();\n          }\n        }\n        for (var edgeId in this.selectionObj.edges) {\n          if (this.selectionObj.edges.hasOwnProperty(edgeId)) {\n            this.selectionObj.edges[edgeId].unselect();\n          }\n        }\n\n        this.selectionObj = { nodes: {}, edges: {} };\n      }\n\n      /**\n       * return the number of selected nodes\n       *\n       * @returns {number}\n       * @private\n       */\n\n    }, {\n      key: '_getSelectedNodeCount',\n      value: function _getSelectedNodeCount() {\n        var count = 0;\n        for (var nodeId in this.selectionObj.nodes) {\n          if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {\n            count += 1;\n          }\n        }\n        return count;\n      }\n\n      /**\n       * return the selected node\n       *\n       * @returns {number}\n       * @private\n       */\n\n    }, {\n      key: '_getSelectedNode',\n      value: function _getSelectedNode() {\n        for (var nodeId in this.selectionObj.nodes) {\n          if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {\n            return this.selectionObj.nodes[nodeId];\n          }\n        }\n        return undefined;\n      }\n\n      /**\n       * return the selected edge\n       *\n       * @returns {number}\n       * @private\n       */\n\n    }, {\n      key: '_getSelectedEdge',\n      value: function _getSelectedEdge() {\n        for (var edgeId in this.selectionObj.edges) {\n          if (this.selectionObj.edges.hasOwnProperty(edgeId)) {\n            return this.selectionObj.edges[edgeId];\n          }\n        }\n        return undefined;\n      }\n\n      /**\n       * return the number of selected edges\n       *\n       * @returns {number}\n       * @private\n       */\n\n    }, {\n      key: '_getSelectedEdgeCount',\n      value: function _getSelectedEdgeCount() {\n        var count = 0;\n        for (var edgeId in this.selectionObj.edges) {\n          if (this.selectionObj.edges.hasOwnProperty(edgeId)) {\n            count += 1;\n          }\n        }\n        return count;\n      }\n\n      /**\n       * return the number of selected objects.\n       *\n       * @returns {number}\n       * @private\n       */\n\n    }, {\n      key: '_getSelectedObjectCount',\n      value: function _getSelectedObjectCount() {\n        var count = 0;\n        for (var nodeId in this.selectionObj.nodes) {\n          if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {\n            count += 1;\n          }\n        }\n        for (var edgeId in this.selectionObj.edges) {\n          if (this.selectionObj.edges.hasOwnProperty(edgeId)) {\n            count += 1;\n          }\n        }\n        return count;\n      }\n\n      /**\n       * Check if anything is selected\n       *\n       * @returns {boolean}\n       * @private\n       */\n\n    }, {\n      key: '_selectionIsEmpty',\n      value: function _selectionIsEmpty() {\n        for (var nodeId in this.selectionObj.nodes) {\n          if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {\n            return false;\n          }\n        }\n        for (var edgeId in this.selectionObj.edges) {\n          if (this.selectionObj.edges.hasOwnProperty(edgeId)) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      /**\n       * check if one of the selected nodes is a cluster.\n       *\n       * @returns {boolean}\n       * @private\n       */\n\n    }, {\n      key: '_clusterInSelection',\n      value: function _clusterInSelection() {\n        for (var nodeId in this.selectionObj.nodes) {\n          if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {\n            if (this.selectionObj.nodes[nodeId].clusterSize > 1) {\n              return true;\n            }\n          }\n        }\n        return false;\n      }\n\n      /**\n       * select the edges connected to the node that is being selected\n       *\n       * @param {Node} node\n       * @private\n       */\n\n    }, {\n      key: '_selectConnectedEdges',\n      value: function _selectConnectedEdges(node) {\n        for (var i = 0; i < node.edges.length; i++) {\n          var edge = node.edges[i];\n          edge.select();\n          this._addToSelection(edge);\n        }\n      }\n\n      /**\n       * select the edges connected to the node that is being selected\n       *\n       * @param {Node} node\n       * @private\n       */\n\n    }, {\n      key: '_hoverConnectedEdges',\n      value: function _hoverConnectedEdges(node) {\n        for (var i = 0; i < node.edges.length; i++) {\n          var edge = node.edges[i];\n          edge.hover = true;\n          this._addToHover(edge);\n        }\n      }\n\n      /**\n       * unselect the edges connected to the node that is being selected\n       *\n       * @param {Node} node\n       * @private\n       */\n\n    }, {\n      key: '_unselectConnectedEdges',\n      value: function _unselectConnectedEdges(node) {\n        for (var i = 0; i < node.edges.length; i++) {\n          var edge = node.edges[i];\n          edge.unselect();\n          this._removeFromSelection(edge);\n        }\n      }\n\n      /**\n       * This is called when someone clicks on a node. either select or deselect it.\n       * If there is an existing selection and we don't want to append to it, clear the existing selection\n       *\n       * @param {Node || Edge} object\n       * @private\n       */\n\n    }, {\n      key: 'blurObject',\n      value: function blurObject(object) {\n        if (object.hover === true) {\n          object.hover = false;\n          if (object instanceof _Node2.default) {\n            this.body.emitter.emit(\"blurNode\", { node: object.id });\n          } else {\n            this.body.emitter.emit(\"blurEdge\", { edge: object.id });\n          }\n        }\n      }\n\n      /**\n       * This is called when someone clicks on a node. either select or deselect it.\n       * If there is an existing selection and we don't want to append to it, clear the existing selection\n       *\n       * @param {Node || Edge} object\n       * @private\n       */\n\n    }, {\n      key: 'hoverObject',\n      value: function hoverObject(object) {\n        var hoverChanged = false;\n        // remove all node hover highlights\n        for (var nodeId in this.hoverObj.nodes) {\n          if (this.hoverObj.nodes.hasOwnProperty(nodeId)) {\n            if (object === undefined || object instanceof _Node2.default && object.id != nodeId || object instanceof _Edge2.default) {\n              this.blurObject(this.hoverObj.nodes[nodeId]);\n              delete this.hoverObj.nodes[nodeId];\n              hoverChanged = true;\n            }\n          }\n        }\n\n        // removing all edge hover highlights\n        for (var edgeId in this.hoverObj.edges) {\n          if (this.hoverObj.edges.hasOwnProperty(edgeId)) {\n            // if the hover has been changed here it means that the node has been hovered over or off\n            // we then do not use the blurObject method here.\n            if (hoverChanged === true) {\n              this.hoverObj.edges[edgeId].hover = false;\n              delete this.hoverObj.edges[edgeId];\n            }\n            // if the blur remains the same and the object is undefined (mouse off) or another\n            // edge has been hovered, we blur the edge\n            else if (object === undefined || object instanceof _Edge2.default) {\n                this.blurObject(this.hoverObj.edges[edgeId]);\n                delete this.hoverObj.edges[edgeId];\n                hoverChanged = true;\n              }\n          }\n        }\n\n        if (object !== undefined) {\n          if (object.hover === false) {\n            object.hover = true;\n            this._addToHover(object);\n            hoverChanged = true;\n            if (object instanceof _Node2.default) {\n              this.body.emitter.emit(\"hoverNode\", { node: object.id });\n            } else {\n              this.body.emitter.emit(\"hoverEdge\", { edge: object.id });\n            }\n          }\n          if (object instanceof _Node2.default && this.options.hoverConnectedEdges === true) {\n            this._hoverConnectedEdges(object);\n          }\n        }\n\n        if (hoverChanged === true) {\n          this.body.emitter.emit('_requestRedraw');\n        }\n      }\n\n      /**\n       *\n       * retrieve the currently selected objects\n       * @return {{nodes: Array.<String>, edges: Array.<String>}} selection\n       */\n\n    }, {\n      key: 'getSelection',\n      value: function getSelection() {\n        var nodeIds = this.getSelectedNodes();\n        var edgeIds = this.getSelectedEdges();\n        return { nodes: nodeIds, edges: edgeIds };\n      }\n\n      /**\n       *\n       * retrieve the currently selected nodes\n       * @return {String[]} selection    An array with the ids of the\n       *                                            selected nodes.\n       */\n\n    }, {\n      key: 'getSelectedNodes',\n      value: function getSelectedNodes() {\n        var idArray = [];\n        if (this.options.selectable === true) {\n          for (var nodeId in this.selectionObj.nodes) {\n            if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {\n              idArray.push(this.selectionObj.nodes[nodeId].id);\n            }\n          }\n        }\n        return idArray;\n      }\n\n      /**\n       *\n       * retrieve the currently selected edges\n       * @return {Array} selection    An array with the ids of the\n       *                                            selected nodes.\n       */\n\n    }, {\n      key: 'getSelectedEdges',\n      value: function getSelectedEdges() {\n        var idArray = [];\n        if (this.options.selectable === true) {\n          for (var edgeId in this.selectionObj.edges) {\n            if (this.selectionObj.edges.hasOwnProperty(edgeId)) {\n              idArray.push(this.selectionObj.edges[edgeId].id);\n            }\n          }\n        }\n        return idArray;\n      }\n\n      /**\n       * Updates the current selection\n       * @param {{nodes: Array.<String>, edges: Array.<String>}} Selection\n       * @param {Object} options                                 Options\n       */\n\n    }, {\n      key: 'setSelection',\n      value: function setSelection(selection) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        var i = void 0,\n            id = void 0;\n\n        if (!selection || !selection.nodes && !selection.edges) throw 'Selection must be an object with nodes and/or edges properties';\n        // first unselect any selected node, if option is true or undefined\n        if (options.unselectAll || options.unselectAll === undefined) {\n          this.unselectAll();\n        }\n        if (selection.nodes) {\n          for (i = 0; i < selection.nodes.length; i++) {\n            id = selection.nodes[i];\n\n            var node = this.body.nodes[id];\n            if (!node) {\n              throw new RangeError('Node with id \"' + id + '\" not found');\n            }\n            // don't select edges with it\n            this.selectObject(node, options.highlightEdges);\n          }\n        }\n\n        if (selection.edges) {\n          for (i = 0; i < selection.edges.length; i++) {\n            id = selection.edges[i];\n\n            var edge = this.body.edges[id];\n            if (!edge) {\n              throw new RangeError('Edge with id \"' + id + '\" not found');\n            }\n            this.selectObject(edge);\n          }\n        }\n        this.body.emitter.emit('_requestRedraw');\n      }\n\n      /**\n       * select zero or more nodes with the option to highlight edges\n       * @param {Number[] | String[]} selection     An array with the ids of the\n       *                                            selected nodes.\n       * @param {boolean} [highlightEdges]\n       */\n\n    }, {\n      key: 'selectNodes',\n      value: function selectNodes(selection) {\n        var highlightEdges = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        if (!selection || selection.length === undefined) throw 'Selection must be an array with ids';\n\n        this.setSelection({ nodes: selection }, { highlightEdges: highlightEdges });\n      }\n\n      /**\n       * select zero or more edges\n       * @param {Number[] | String[]} selection     An array with the ids of the\n       *                                            selected nodes.\n       */\n\n    }, {\n      key: 'selectEdges',\n      value: function selectEdges(selection) {\n        if (!selection || selection.length === undefined) throw 'Selection must be an array with ids';\n\n        this.setSelection({ edges: selection });\n      }\n\n      /**\n       * Validate the selection: remove ids of nodes which no longer exist\n       * @private\n       */\n\n    }, {\n      key: 'updateSelection',\n      value: function updateSelection() {\n        for (var nodeId in this.selectionObj.nodes) {\n          if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {\n            if (!this.body.nodes.hasOwnProperty(nodeId)) {\n              delete this.selectionObj.nodes[nodeId];\n            }\n          }\n        }\n        for (var edgeId in this.selectionObj.edges) {\n          if (this.selectionObj.edges.hasOwnProperty(edgeId)) {\n            if (!this.body.edges.hasOwnProperty(edgeId)) {\n              delete this.selectionObj.edges[edgeId];\n            }\n          }\n        }\n      }\n    }]);\n\n    return SelectionHandler;\n  }();\n\n  exports.default = SelectionHandler;\n\n/***/ },\n/* 114 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _NetworkUtil = __webpack_require__(105);\n\n  var _NetworkUtil2 = _interopRequireDefault(_NetworkUtil);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n\n  var LayoutEngine = function () {\n    function LayoutEngine(body) {\n      _classCallCheck(this, LayoutEngine);\n\n      this.body = body;\n\n      this.initialRandomSeed = Math.round(Math.random() * 1000000);\n      this.randomSeed = this.initialRandomSeed;\n      this.setPhysics = false;\n      this.options = {};\n      this.optionsBackup = { physics: {} };\n\n      this.defaultOptions = {\n        randomSeed: undefined,\n        improvedLayout: true,\n        hierarchical: {\n          enabled: false,\n          levelSeparation: 150,\n          nodeSpacing: 100,\n          treeSpacing: 200,\n          blockShifting: true,\n          edgeMinimization: true,\n          parentCentralization: true,\n          direction: 'UD', // UD, DU, LR, RL\n          sortMethod: 'hubsize' // hubsize, directed\n        }\n      };\n      util.extend(this.options, this.defaultOptions);\n      this.bindEventListeners();\n    }\n\n    _createClass(LayoutEngine, [{\n      key: 'bindEventListeners',\n      value: function bindEventListeners() {\n        var _this = this;\n\n        this.body.emitter.on('_dataChanged', function () {\n          _this.setupHierarchicalLayout();\n        });\n        this.body.emitter.on('_dataLoaded', function () {\n          _this.layoutNetwork();\n        });\n        this.body.emitter.on('_resetHierarchicalLayout', function () {\n          _this.setupHierarchicalLayout();\n        });\n      }\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options, allOptions) {\n        if (options !== undefined) {\n          var prevHierarchicalState = this.options.hierarchical.enabled;\n          util.selectiveDeepExtend([\"randomSeed\", \"improvedLayout\"], this.options, options);\n          util.mergeOptions(this.options, options, 'hierarchical');\n          if (options.randomSeed !== undefined) {\n            this.initialRandomSeed = options.randomSeed;\n          }\n\n          if (this.options.hierarchical.enabled === true) {\n            if (prevHierarchicalState === true) {\n              // refresh the overridden options for nodes and edges.\n              this.body.emitter.emit('refresh', true);\n            }\n\n            // make sure the level separation is the right way up\n            if (this.options.hierarchical.direction === 'RL' || this.options.hierarchical.direction === 'DU') {\n              if (this.options.hierarchical.levelSeparation > 0) {\n                this.options.hierarchical.levelSeparation *= -1;\n              }\n            } else {\n              if (this.options.hierarchical.levelSeparation < 0) {\n                this.options.hierarchical.levelSeparation *= -1;\n              }\n            }\n\n            this.body.emitter.emit('_resetHierarchicalLayout');\n            // because the hierarchical system needs it's own physics and smooth curve settings, we adapt the other options if needed.\n            return this.adaptAllOptionsForHierarchicalLayout(allOptions);\n          } else {\n            if (prevHierarchicalState === true) {\n              // refresh the overridden options for nodes and edges.\n              this.body.emitter.emit('refresh');\n              return util.deepExtend(allOptions, this.optionsBackup);\n            }\n          }\n        }\n        return allOptions;\n      }\n    }, {\n      key: 'adaptAllOptionsForHierarchicalLayout',\n      value: function adaptAllOptionsForHierarchicalLayout(allOptions) {\n        if (this.options.hierarchical.enabled === true) {\n          // set the physics\n          if (allOptions.physics === undefined || allOptions.physics === true) {\n            allOptions.physics = {\n              enabled: this.optionsBackup.physics.enabled === undefined ? true : this.optionsBackup.physics.enabled,\n              solver: 'hierarchicalRepulsion'\n            };\n            this.optionsBackup.physics.enabled = this.optionsBackup.physics.enabled === undefined ? true : this.optionsBackup.physics.enabled;\n            this.optionsBackup.physics.solver = this.optionsBackup.physics.solver || 'barnesHut';\n          } else if (_typeof(allOptions.physics) === 'object') {\n            this.optionsBackup.physics.enabled = allOptions.physics.enabled === undefined ? true : allOptions.physics.enabled;\n            this.optionsBackup.physics.solver = allOptions.physics.solver || 'barnesHut';\n            allOptions.physics.solver = 'hierarchicalRepulsion';\n          } else if (allOptions.physics !== false) {\n            this.optionsBackup.physics.solver = 'barnesHut';\n            allOptions.physics = { solver: 'hierarchicalRepulsion' };\n          }\n\n          // get the type of static smooth curve in case it is required\n          var type = 'horizontal';\n          if (this.options.hierarchical.direction === 'RL' || this.options.hierarchical.direction === 'LR') {\n            type = 'vertical';\n          }\n\n          // disable smooth curves if nothing is defined. If smooth curves have been turned on, turn them into static smooth curves.\n          if (allOptions.edges === undefined) {\n            this.optionsBackup.edges = { smooth: { enabled: true, type: 'dynamic' } };\n            allOptions.edges = { smooth: false };\n          } else if (allOptions.edges.smooth === undefined) {\n            this.optionsBackup.edges = { smooth: { enabled: true, type: 'dynamic' } };\n            allOptions.edges.smooth = false;\n          } else {\n            if (typeof allOptions.edges.smooth === 'boolean') {\n              this.optionsBackup.edges = { smooth: allOptions.edges.smooth };\n              allOptions.edges.smooth = { enabled: allOptions.edges.smooth, type: type };\n            } else {\n              // allow custom types except for dynamic\n              if (allOptions.edges.smooth.type !== undefined && allOptions.edges.smooth.type !== 'dynamic') {\n                type = allOptions.edges.smooth.type;\n              }\n\n              this.optionsBackup.edges = {\n                smooth: allOptions.edges.smooth.enabled === undefined ? true : allOptions.edges.smooth.enabled,\n                type: allOptions.edges.smooth.type === undefined ? 'dynamic' : allOptions.edges.smooth.type,\n                roundness: allOptions.edges.smooth.roundness === undefined ? 0.5 : allOptions.edges.smooth.roundness,\n                forceDirection: allOptions.edges.smooth.forceDirection === undefined ? false : allOptions.edges.smooth.forceDirection\n              };\n              allOptions.edges.smooth = {\n                enabled: allOptions.edges.smooth.enabled === undefined ? true : allOptions.edges.smooth.enabled,\n                type: type,\n                roundness: allOptions.edges.smooth.roundness === undefined ? 0.5 : allOptions.edges.smooth.roundness,\n                forceDirection: allOptions.edges.smooth.forceDirection === undefined ? false : allOptions.edges.smooth.forceDirection\n              };\n            }\n          }\n\n          // force all edges into static smooth curves. Only applies to edges that do not use the global options for smooth.\n          this.body.emitter.emit('_forceDisableDynamicCurves', type);\n        }\n\n        return allOptions;\n      }\n    }, {\n      key: 'seededRandom',\n      value: function seededRandom() {\n        var x = Math.sin(this.randomSeed++) * 10000;\n        return x - Math.floor(x);\n      }\n    }, {\n      key: 'positionInitially',\n      value: function positionInitially(nodesArray) {\n        if (this.options.hierarchical.enabled !== true) {\n          this.randomSeed = this.initialRandomSeed;\n          for (var i = 0; i < nodesArray.length; i++) {\n            var node = nodesArray[i];\n            var radius = 10 * 0.1 * nodesArray.length + 10;\n            var angle = 2 * Math.PI * this.seededRandom();\n            if (node.x === undefined) {\n              node.x = radius * Math.cos(angle);\n            }\n            if (node.y === undefined) {\n              node.y = radius * Math.sin(angle);\n            }\n          }\n        }\n      }\n\n      /**\n       * Use Kamada Kawai to position nodes. This is quite a heavy algorithm so if there are a lot of nodes we\n       * cluster them first to reduce the amount.\n       */\n\n    }, {\n      key: 'layoutNetwork',\n      value: function layoutNetwork() {\n        if (this.options.hierarchical.enabled !== true && this.options.improvedLayout === true) {\n          // first check if we should Kamada Kawai to layout. The threshold is if less than half of the visible\n          // nodes have predefined positions we use this.\n          var positionDefined = 0;\n          for (var i = 0; i < this.body.nodeIndices.length; i++) {\n            var node = this.body.nodes[this.body.nodeIndices[i]];\n            if (node.predefinedPosition === true) {\n              positionDefined += 1;\n            }\n          }\n\n          // if less than half of the nodes have a predefined position we continue\n          if (positionDefined < 0.5 * this.body.nodeIndices.length) {\n            var MAX_LEVELS = 10;\n            var level = 0;\n            var clusterThreshold = 100;\n            // if there are a lot of nodes, we cluster before we run the algorithm.\n            if (this.body.nodeIndices.length > clusterThreshold) {\n              var startLength = this.body.nodeIndices.length;\n              while (this.body.nodeIndices.length > clusterThreshold) {\n                //console.time(\"clustering\")\n                level += 1;\n                var before = this.body.nodeIndices.length;\n                // if there are many nodes we do a hubsize cluster\n                if (level % 3 === 0) {\n                  this.body.modules.clustering.clusterBridges();\n                } else {\n                  this.body.modules.clustering.clusterOutliers();\n                }\n                var after = this.body.nodeIndices.length;\n                if (before == after && level % 3 !== 0 || level > MAX_LEVELS) {\n                  this._declusterAll();\n                  this.body.emitter.emit(\"_layoutFailed\");\n                  console.info(\"This network could not be positioned by this version of the improved layout algorithm. Please disable improvedLayout for better performance.\");\n                  return;\n                }\n                //console.timeEnd(\"clustering\")\n                //console.log(level,after)\n              }\n              // increase the size of the edges\n              this.body.modules.kamadaKawai.setOptions({ springLength: Math.max(150, 2 * startLength) });\n            }\n\n            // position the system for these nodes and edges\n            this.body.modules.kamadaKawai.solve(this.body.nodeIndices, this.body.edgeIndices, true);\n\n            // shift to center point\n            this._shiftToCenter();\n\n            // perturb the nodes a little bit to force the physics to kick in\n            var offset = 70;\n            for (var _i = 0; _i < this.body.nodeIndices.length; _i++) {\n              // Only perturb the nodes that aren't fixed\n              if (this.body.nodes[this.body.nodeIndices[_i]].predefinedPosition === false) {\n                this.body.nodes[this.body.nodeIndices[_i]].x += (0.5 - this.seededRandom()) * offset;\n                this.body.nodes[this.body.nodeIndices[_i]].y += (0.5 - this.seededRandom()) * offset;\n              }\n            }\n\n            // uncluster all clusters\n            this._declusterAll();\n\n            // reposition all bezier nodes.\n            this.body.emitter.emit(\"_repositionBezierNodes\");\n          }\n        }\n      }\n\n      /**\n       * Move all the nodes towards to the center so gravitational pull wil not move the nodes away from view\n       * @private\n       */\n\n    }, {\n      key: '_shiftToCenter',\n      value: function _shiftToCenter() {\n        var range = _NetworkUtil2.default.getRangeCore(this.body.nodes, this.body.nodeIndices);\n        var center = _NetworkUtil2.default.findCenter(range);\n        for (var i = 0; i < this.body.nodeIndices.length; i++) {\n          this.body.nodes[this.body.nodeIndices[i]].x -= center.x;\n          this.body.nodes[this.body.nodeIndices[i]].y -= center.y;\n        }\n      }\n    }, {\n      key: '_declusterAll',\n      value: function _declusterAll() {\n        var clustersPresent = true;\n        while (clustersPresent === true) {\n          clustersPresent = false;\n          for (var i = 0; i < this.body.nodeIndices.length; i++) {\n            if (this.body.nodes[this.body.nodeIndices[i]].isCluster === true) {\n              clustersPresent = true;\n              this.body.modules.clustering.openCluster(this.body.nodeIndices[i], {}, false);\n            }\n          }\n          if (clustersPresent === true) {\n            this.body.emitter.emit('_dataChanged');\n          }\n        }\n      }\n    }, {\n      key: 'getSeed',\n      value: function getSeed() {\n        return this.initialRandomSeed;\n      }\n\n      /**\n       * This is the main function to layout the nodes in a hierarchical way.\n       * It checks if the node details are supplied correctly\n       *\n       * @private\n       */\n\n    }, {\n      key: 'setupHierarchicalLayout',\n      value: function setupHierarchicalLayout() {\n        if (this.options.hierarchical.enabled === true && this.body.nodeIndices.length > 0) {\n          // get the size of the largest hubs and check if the user has defined a level for a node.\n          var node = void 0,\n              nodeId = void 0;\n          var definedLevel = false;\n          var definedPositions = true;\n          var undefinedLevel = false;\n          this.hierarchicalLevels = {};\n          this.lastNodeOnLevel = {};\n          this.hierarchicalChildrenReference = {};\n          this.hierarchicalParentReference = {};\n          this.hierarchicalTrees = {};\n          this.treeIndex = -1;\n\n          this.distributionOrdering = {};\n          this.distributionIndex = {};\n          this.distributionOrderingPresence = {};\n\n          for (nodeId in this.body.nodes) {\n            if (this.body.nodes.hasOwnProperty(nodeId)) {\n              node = this.body.nodes[nodeId];\n              if (node.options.x === undefined && node.options.y === undefined) {\n                definedPositions = false;\n              }\n              if (node.options.level !== undefined) {\n                definedLevel = true;\n                this.hierarchicalLevels[nodeId] = node.options.level;\n              } else {\n                undefinedLevel = true;\n              }\n            }\n          }\n\n          // if the user defined some levels but not all, alert and run without hierarchical layout\n          if (undefinedLevel === true && definedLevel === true) {\n            throw new Error('To use the hierarchical layout, nodes require either no predefined levels or levels have to be defined for all nodes.');\n            return;\n          } else {\n            // define levels if undefined by the users. Based on hubsize.\n            if (undefinedLevel === true) {\n              if (this.options.hierarchical.sortMethod === 'hubsize') {\n                this._determineLevelsByHubsize();\n              } else if (this.options.hierarchical.sortMethod === 'directed') {\n                this._determineLevelsDirected();\n              } else if (this.options.hierarchical.sortMethod === 'custom') {\n                this._determineLevelsCustomCallback();\n              }\n            }\n\n            // fallback for cases where there are nodes but no edges\n            for (var _nodeId in this.body.nodes) {\n              if (this.body.nodes.hasOwnProperty(_nodeId)) {\n                if (this.hierarchicalLevels[_nodeId] === undefined) {\n                  this.hierarchicalLevels[_nodeId] = 0;\n                }\n              }\n            }\n            // check the distribution of the nodes per level.\n            var distribution = this._getDistribution();\n\n            // get the parent children relations.\n            this._generateMap();\n\n            // place the nodes on the canvas.\n            this._placeNodesByHierarchy(distribution);\n\n            // condense the whitespace.\n            this._condenseHierarchy();\n\n            // shift to center so gravity does not have to do much\n            this._shiftToCenter();\n          }\n        }\n      }\n\n      /**\n       * @private\n       */\n\n    }, {\n      key: '_condenseHierarchy',\n      value: function _condenseHierarchy() {\n        var _this2 = this;\n\n        // Global var in this scope to define when the movement has stopped.\n        var stillShifting = false;\n        var branches = {};\n        // first we have some methods to help shifting trees around.\n        // the main method to shift the trees\n        var shiftTrees = function shiftTrees() {\n          var treeSizes = getTreeSizes();\n          for (var i = 0; i < treeSizes.length - 1; i++) {\n            var diff = treeSizes[i].max - treeSizes[i + 1].min;\n            shiftTree(i + 1, diff + _this2.options.hierarchical.treeSpacing);\n          }\n        };\n\n        // shift a single tree by an offset\n        var shiftTree = function shiftTree(index, offset) {\n          for (var nodeId in _this2.hierarchicalTrees) {\n            if (_this2.hierarchicalTrees.hasOwnProperty(nodeId)) {\n              if (_this2.hierarchicalTrees[nodeId] === index) {\n                var node = _this2.body.nodes[nodeId];\n                var pos = _this2._getPositionForHierarchy(node);\n                _this2._setPositionForHierarchy(node, pos + offset, undefined, true);\n              }\n            }\n          }\n        };\n\n        // get the width of a tree\n        var getTreeSize = function getTreeSize(index) {\n          var min = 1e9;\n          var max = -1e9;\n          for (var nodeId in _this2.hierarchicalTrees) {\n            if (_this2.hierarchicalTrees.hasOwnProperty(nodeId)) {\n              if (_this2.hierarchicalTrees[nodeId] === index) {\n                var pos = _this2._getPositionForHierarchy(_this2.body.nodes[nodeId]);\n                min = Math.min(pos, min);\n                max = Math.max(pos, max);\n              }\n            }\n          }\n          return { min: min, max: max };\n        };\n\n        // get the width of all trees\n        var getTreeSizes = function getTreeSizes() {\n          var treeWidths = [];\n          for (var i = 0; i <= _this2.treeIndex; i++) {\n            treeWidths.push(getTreeSize(i));\n          }\n          return treeWidths;\n        };\n\n        // get a map of all nodes in this branch\n        var getBranchNodes = function getBranchNodes(source, map) {\n          map[source.id] = true;\n          if (_this2.hierarchicalChildrenReference[source.id]) {\n            var children = _this2.hierarchicalChildrenReference[source.id];\n            if (children.length > 0) {\n              for (var i = 0; i < children.length; i++) {\n                getBranchNodes(_this2.body.nodes[children[i]], map);\n              }\n            }\n          }\n        };\n\n        // get a min max width as well as the maximum movement space it has on either sides\n        // we use min max terminology because width and height can interchange depending on the direction of the layout\n        var getBranchBoundary = function getBranchBoundary(branchMap) {\n          var maxLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1e9;\n\n          var minSpace = 1e9;\n          var maxSpace = 1e9;\n          var min = 1e9;\n          var max = -1e9;\n          for (var branchNode in branchMap) {\n            if (branchMap.hasOwnProperty(branchNode)) {\n              var node = _this2.body.nodes[branchNode];\n              var level = _this2.hierarchicalLevels[node.id];\n              var position = _this2._getPositionForHierarchy(node);\n\n              // get the space around the node.\n\n              var _getSpaceAroundNode2 = _this2._getSpaceAroundNode(node, branchMap),\n                  _getSpaceAroundNode3 = _slicedToArray(_getSpaceAroundNode2, 2),\n                  minSpaceNode = _getSpaceAroundNode3[0],\n                  maxSpaceNode = _getSpaceAroundNode3[1];\n\n              minSpace = Math.min(minSpaceNode, minSpace);\n              maxSpace = Math.min(maxSpaceNode, maxSpace);\n\n              // the width is only relevant for the levels two nodes have in common. This is why we filter on this.\n              if (level <= maxLevel) {\n                min = Math.min(position, min);\n                max = Math.max(position, max);\n              }\n            }\n          }\n\n          return [min, max, minSpace, maxSpace];\n        };\n\n        // get the maximum level of a branch.\n        var getMaxLevel = function getMaxLevel(nodeId) {\n          var level = _this2.hierarchicalLevels[nodeId];\n          if (_this2.hierarchicalChildrenReference[nodeId]) {\n            var children = _this2.hierarchicalChildrenReference[nodeId];\n            if (children.length > 0) {\n              for (var i = 0; i < children.length; i++) {\n                level = Math.max(level, getMaxLevel(children[i]));\n              }\n            }\n          }\n          return level;\n        };\n\n        // check what the maximum level is these nodes have in common.\n        var getCollisionLevel = function getCollisionLevel(node1, node2) {\n          var maxLevel1 = getMaxLevel(node1.id);\n          var maxLevel2 = getMaxLevel(node2.id);\n          return Math.min(maxLevel1, maxLevel2);\n        };\n\n        // check if two nodes have the same parent(s)\n        var hasSameParent = function hasSameParent(node1, node2) {\n          var parents1 = _this2.hierarchicalParentReference[node1.id];\n          var parents2 = _this2.hierarchicalParentReference[node2.id];\n          if (parents1 === undefined || parents2 === undefined) {\n            return false;\n          }\n\n          for (var i = 0; i < parents1.length; i++) {\n            for (var j = 0; j < parents2.length; j++) {\n              if (parents1[i] == parents2[j]) {\n                return true;\n              }\n            }\n          }\n          return false;\n        };\n\n        // condense elements. These can be nodes or branches depending on the callback.\n        var shiftElementsCloser = function shiftElementsCloser(callback, levels, centerParents) {\n          for (var i = 0; i < levels.length; i++) {\n            var level = levels[i];\n            var levelNodes = _this2.distributionOrdering[level];\n            if (levelNodes.length > 1) {\n              for (var j = 0; j < levelNodes.length - 1; j++) {\n                if (hasSameParent(levelNodes[j], levelNodes[j + 1]) === true) {\n                  if (_this2.hierarchicalTrees[levelNodes[j].id] === _this2.hierarchicalTrees[levelNodes[j + 1].id]) {\n                    callback(levelNodes[j], levelNodes[j + 1], centerParents);\n                  }\n                }\n              }\n            }\n          }\n        };\n\n        // callback for shifting branches\n        var branchShiftCallback = function branchShiftCallback(node1, node2) {\n          var centerParent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n          //window.CALLBACKS.push(() => {\n          var pos1 = _this2._getPositionForHierarchy(node1);\n          var pos2 = _this2._getPositionForHierarchy(node2);\n          var diffAbs = Math.abs(pos2 - pos1);\n          //console.log(\"NOW CHEcKING:\", node1.id, node2.id, diffAbs);\n          if (diffAbs > _this2.options.hierarchical.nodeSpacing) {\n            var branchNodes1 = {};branchNodes1[node1.id] = true;\n            var branchNodes2 = {};branchNodes2[node2.id] = true;\n\n            getBranchNodes(node1, branchNodes1);\n            getBranchNodes(node2, branchNodes2);\n\n            // check the largest distance between the branches\n            var maxLevel = getCollisionLevel(node1, node2);\n\n            var _getBranchBoundary = getBranchBoundary(branchNodes1, maxLevel),\n                _getBranchBoundary2 = _slicedToArray(_getBranchBoundary, 4),\n                min1 = _getBranchBoundary2[0],\n                max1 = _getBranchBoundary2[1],\n                minSpace1 = _getBranchBoundary2[2],\n                maxSpace1 = _getBranchBoundary2[3];\n\n            var _getBranchBoundary3 = getBranchBoundary(branchNodes2, maxLevel),\n                _getBranchBoundary4 = _slicedToArray(_getBranchBoundary3, 4),\n                min2 = _getBranchBoundary4[0],\n                max2 = _getBranchBoundary4[1],\n                minSpace2 = _getBranchBoundary4[2],\n                maxSpace2 = _getBranchBoundary4[3];\n\n            //console.log(node1.id, getBranchBoundary(branchNodes1, maxLevel), node2.id, getBranchBoundary(branchNodes2, maxLevel), maxLevel);\n\n\n            var diffBranch = Math.abs(max1 - min2);\n            if (diffBranch > _this2.options.hierarchical.nodeSpacing) {\n              var offset = max1 - min2 + _this2.options.hierarchical.nodeSpacing;\n              if (offset < -minSpace2 + _this2.options.hierarchical.nodeSpacing) {\n                offset = -minSpace2 + _this2.options.hierarchical.nodeSpacing;\n                //console.log(\"RESETTING OFFSET\", max1 - min2 + this.options.hierarchical.nodeSpacing, -minSpace2, offset);\n              }\n              if (offset < 0) {\n                //console.log(\"SHIFTING\", node2.id, offset);\n                _this2._shiftBlock(node2.id, offset);\n                stillShifting = true;\n\n                if (centerParent === true) _this2._centerParent(node2);\n              }\n            }\n          }\n          //this.body.emitter.emit(\"_redraw\");})\n        };\n\n        var minimizeEdgeLength = function minimizeEdgeLength(iterations, node) {\n          //window.CALLBACKS.push(() => {\n          //  console.log(\"ts\",node.id);\n          var nodeId = node.id;\n          var allEdges = node.edges;\n          var nodeLevel = _this2.hierarchicalLevels[node.id];\n\n          // gather constants\n          var C2 = _this2.options.hierarchical.levelSeparation * _this2.options.hierarchical.levelSeparation;\n          var referenceNodes = {};\n          var aboveEdges = [];\n          for (var i = 0; i < allEdges.length; i++) {\n            var edge = allEdges[i];\n            if (edge.toId != edge.fromId) {\n              var otherNode = edge.toId == nodeId ? edge.from : edge.to;\n              referenceNodes[allEdges[i].id] = otherNode;\n              if (_this2.hierarchicalLevels[otherNode.id] < nodeLevel) {\n                aboveEdges.push(edge);\n              }\n            }\n          }\n\n          // differentiated sum of lengths based on only moving one node over one axis\n          var getFx = function getFx(point, edges) {\n            var sum = 0;\n            for (var _i2 = 0; _i2 < edges.length; _i2++) {\n              if (referenceNodes[edges[_i2].id] !== undefined) {\n                var a = _this2._getPositionForHierarchy(referenceNodes[edges[_i2].id]) - point;\n                sum += a / Math.sqrt(a * a + C2);\n              }\n            }\n            return sum;\n          };\n\n          // doubly differentiated sum of lengths based on only moving one node over one axis\n          var getDFx = function getDFx(point, edges) {\n            var sum = 0;\n            for (var _i3 = 0; _i3 < edges.length; _i3++) {\n              if (referenceNodes[edges[_i3].id] !== undefined) {\n                var a = _this2._getPositionForHierarchy(referenceNodes[edges[_i3].id]) - point;\n                sum -= C2 * Math.pow(a * a + C2, -1.5);\n              }\n            }\n            return sum;\n          };\n\n          var getGuess = function getGuess(iterations, edges) {\n            var guess = _this2._getPositionForHierarchy(node);\n            // Newton's method for optimization\n            var guessMap = {};\n            for (var _i4 = 0; _i4 < iterations; _i4++) {\n              var fx = getFx(guess, edges);\n              var dfx = getDFx(guess, edges);\n\n              // we limit the movement to avoid instability.\n              var limit = 40;\n              var ratio = Math.max(-limit, Math.min(limit, Math.round(fx / dfx)));\n              guess = guess - ratio;\n              // reduce duplicates\n              if (guessMap[guess] !== undefined) {\n                break;\n              }\n              guessMap[guess] = _i4;\n            }\n            return guess;\n          };\n\n          var moveBranch = function moveBranch(guess) {\n            // position node if there is space\n            var nodePosition = _this2._getPositionForHierarchy(node);\n\n            // check movable area of the branch\n            if (branches[node.id] === undefined) {\n              var branchNodes = {};\n              branchNodes[node.id] = true;\n              getBranchNodes(node, branchNodes);\n              branches[node.id] = branchNodes;\n            }\n\n            var _getBranchBoundary5 = getBranchBoundary(branches[node.id]),\n                _getBranchBoundary6 = _slicedToArray(_getBranchBoundary5, 4),\n                minBranch = _getBranchBoundary6[0],\n                maxBranch = _getBranchBoundary6[1],\n                minSpaceBranch = _getBranchBoundary6[2],\n                maxSpaceBranch = _getBranchBoundary6[3];\n\n            var diff = guess - nodePosition;\n\n            // check if we are allowed to move the node:\n            var branchOffset = 0;\n            if (diff > 0) {\n              branchOffset = Math.min(diff, maxSpaceBranch - _this2.options.hierarchical.nodeSpacing);\n            } else if (diff < 0) {\n              branchOffset = -Math.min(-diff, minSpaceBranch - _this2.options.hierarchical.nodeSpacing);\n            }\n\n            if (branchOffset != 0) {\n              //console.log(\"moving branch:\",branchOffset, maxSpaceBranch, minSpaceBranch)\n              _this2._shiftBlock(node.id, branchOffset);\n              //this.body.emitter.emit(\"_redraw\");\n              stillShifting = true;\n            }\n          };\n\n          var moveNode = function moveNode(guess) {\n            var nodePosition = _this2._getPositionForHierarchy(node);\n\n            // position node if there is space\n\n            var _getSpaceAroundNode4 = _this2._getSpaceAroundNode(node),\n                _getSpaceAroundNode5 = _slicedToArray(_getSpaceAroundNode4, 2),\n                minSpace = _getSpaceAroundNode5[0],\n                maxSpace = _getSpaceAroundNode5[1];\n\n            var diff = guess - nodePosition;\n            // check if we are allowed to move the node:\n            var newPosition = nodePosition;\n            if (diff > 0) {\n              newPosition = Math.min(nodePosition + (maxSpace - _this2.options.hierarchical.nodeSpacing), guess);\n            } else if (diff < 0) {\n              newPosition = Math.max(nodePosition - (minSpace - _this2.options.hierarchical.nodeSpacing), guess);\n            }\n\n            if (newPosition !== nodePosition) {\n              //console.log(\"moving Node:\",diff, minSpace, maxSpace);\n              _this2._setPositionForHierarchy(node, newPosition, undefined, true);\n              //this.body.emitter.emit(\"_redraw\");\n              stillShifting = true;\n            }\n          };\n\n          var guess = getGuess(iterations, aboveEdges);\n          moveBranch(guess);\n          guess = getGuess(iterations, allEdges);\n          moveNode(guess);\n          //})\n        };\n\n        // method to remove whitespace between branches. Because we do bottom up, we can center the parents.\n        var minimizeEdgeLengthBottomUp = function minimizeEdgeLengthBottomUp(iterations) {\n          var levels = Object.keys(_this2.distributionOrdering);\n          levels = levels.reverse();\n          for (var i = 0; i < iterations; i++) {\n            stillShifting = false;\n            for (var j = 0; j < levels.length; j++) {\n              var level = levels[j];\n              var levelNodes = _this2.distributionOrdering[level];\n              for (var k = 0; k < levelNodes.length; k++) {\n                minimizeEdgeLength(1000, levelNodes[k]);\n              }\n            }\n            if (stillShifting !== true) {\n              //console.log(\"FINISHED minimizeEdgeLengthBottomUp IN \" + i);\n              break;\n            }\n          }\n        };\n\n        // method to remove whitespace between branches. Because we do bottom up, we can center the parents.\n        var shiftBranchesCloserBottomUp = function shiftBranchesCloserBottomUp(iterations) {\n          var levels = Object.keys(_this2.distributionOrdering);\n          levels = levels.reverse();\n          for (var i = 0; i < iterations; i++) {\n            stillShifting = false;\n            shiftElementsCloser(branchShiftCallback, levels, true);\n            if (stillShifting !== true) {\n              //console.log(\"FINISHED shiftBranchesCloserBottomUp IN \" + (i+1));\n              break;\n            }\n          }\n        };\n\n        // center all parents\n        var centerAllParents = function centerAllParents() {\n          for (var nodeId in _this2.body.nodes) {\n            if (_this2.body.nodes.hasOwnProperty(nodeId)) _this2._centerParent(_this2.body.nodes[nodeId]);\n          }\n        };\n\n        // center all parents\n        var centerAllParentsBottomUp = function centerAllParentsBottomUp() {\n          var levels = Object.keys(_this2.distributionOrdering);\n          levels = levels.reverse();\n          for (var i = 0; i < levels.length; i++) {\n            var level = levels[i];\n            var levelNodes = _this2.distributionOrdering[level];\n            for (var j = 0; j < levelNodes.length; j++) {\n              _this2._centerParent(levelNodes[j]);\n            }\n          }\n        };\n\n        // the actual work is done here.\n        if (this.options.hierarchical.blockShifting === true) {\n          shiftBranchesCloserBottomUp(5);\n          centerAllParents();\n        }\n\n        // minimize edge length\n        if (this.options.hierarchical.edgeMinimization === true) {\n          minimizeEdgeLengthBottomUp(20);\n        }\n\n        if (this.options.hierarchical.parentCentralization === true) {\n          centerAllParentsBottomUp();\n        }\n\n        shiftTrees();\n      }\n\n      /**\n       * This gives the space around the node. IF a map is supplied, it will only check against nodes NOT in the map.\n       * This is used to only get the distances to nodes outside of a branch.\n       * @param node\n       * @param map\n       * @returns {*[]}\n       * @private\n       */\n\n    }, {\n      key: '_getSpaceAroundNode',\n      value: function _getSpaceAroundNode(node, map) {\n        var useMap = true;\n        if (map === undefined) {\n          useMap = false;\n        }\n        var level = this.hierarchicalLevels[node.id];\n        if (level !== undefined) {\n          var index = this.distributionIndex[node.id];\n          var position = this._getPositionForHierarchy(node);\n          var minSpace = 1e9;\n          var maxSpace = 1e9;\n          if (index !== 0) {\n            var prevNode = this.distributionOrdering[level][index - 1];\n            if (useMap === true && map[prevNode.id] === undefined || useMap === false) {\n              var prevPos = this._getPositionForHierarchy(prevNode);\n              minSpace = position - prevPos;\n            }\n          }\n\n          if (index != this.distributionOrdering[level].length - 1) {\n            var nextNode = this.distributionOrdering[level][index + 1];\n            if (useMap === true && map[nextNode.id] === undefined || useMap === false) {\n              var nextPos = this._getPositionForHierarchy(nextNode);\n              maxSpace = Math.min(maxSpace, nextPos - position);\n            }\n          }\n\n          return [minSpace, maxSpace];\n        } else {\n          return [0, 0];\n        }\n      }\n\n      /**\n       * We use this method to center a parent node and check if it does not cross other nodes when it does.\n       * @param node\n       * @private\n       */\n\n    }, {\n      key: '_centerParent',\n      value: function _centerParent(node) {\n        if (this.hierarchicalParentReference[node.id]) {\n          var parents = this.hierarchicalParentReference[node.id];\n          for (var i = 0; i < parents.length; i++) {\n            var parentId = parents[i];\n            var parentNode = this.body.nodes[parentId];\n            if (this.hierarchicalChildrenReference[parentId]) {\n              // get the range of the children\n              var minPos = 1e9;\n              var maxPos = -1e9;\n              var children = this.hierarchicalChildrenReference[parentId];\n              if (children.length > 0) {\n                for (var _i5 = 0; _i5 < children.length; _i5++) {\n                  var childNode = this.body.nodes[children[_i5]];\n                  minPos = Math.min(minPos, this._getPositionForHierarchy(childNode));\n                  maxPos = Math.max(maxPos, this._getPositionForHierarchy(childNode));\n                }\n              }\n\n              var position = this._getPositionForHierarchy(parentNode);\n\n              var _getSpaceAroundNode6 = this._getSpaceAroundNode(parentNode),\n                  _getSpaceAroundNode7 = _slicedToArray(_getSpaceAroundNode6, 2),\n                  minSpace = _getSpaceAroundNode7[0],\n                  maxSpace = _getSpaceAroundNode7[1];\n\n              var newPosition = 0.5 * (minPos + maxPos);\n              var diff = position - newPosition;\n              if (diff < 0 && Math.abs(diff) < maxSpace - this.options.hierarchical.nodeSpacing || diff > 0 && Math.abs(diff) < minSpace - this.options.hierarchical.nodeSpacing) {\n                this._setPositionForHierarchy(parentNode, newPosition, undefined, true);\n              }\n            }\n          }\n        }\n      }\n\n      /**\n       * This function places the nodes on the canvas based on the hierarchial distribution.\n       *\n       * @param {Object} distribution | obtained by the function this._getDistribution()\n       * @private\n       */\n\n    }, {\n      key: '_placeNodesByHierarchy',\n      value: function _placeNodesByHierarchy(distribution) {\n        this.positionedNodes = {};\n        // start placing all the level 0 nodes first. Then recursively position their branches.\n        for (var level in distribution) {\n          if (distribution.hasOwnProperty(level)) {\n            // sort nodes in level by position:\n            var nodeArray = Object.keys(distribution[level]);\n            nodeArray = this._indexArrayToNodes(nodeArray);\n            this._sortNodeArray(nodeArray);\n            var handledNodeCount = 0;\n\n            for (var i = 0; i < nodeArray.length; i++) {\n              var node = nodeArray[i];\n              if (this.positionedNodes[node.id] === undefined) {\n                var pos = this.options.hierarchical.nodeSpacing * handledNodeCount;\n                // we get the X or Y values we need and store them in pos and previousPos. The get and set make sure we get X or Y\n                if (handledNodeCount > 0) {\n                  pos = this._getPositionForHierarchy(nodeArray[i - 1]) + this.options.hierarchical.nodeSpacing;\n                }\n                this._setPositionForHierarchy(node, pos, level);\n                this._validataPositionAndContinue(node, level, pos);\n\n                handledNodeCount++;\n              }\n            }\n          }\n        }\n      }\n\n      /**\n       * This is a recursively called function to enumerate the branches from the largest hubs and place the nodes\n       * on a X position that ensures there will be no overlap.\n       *\n       * @param parentId\n       * @param parentLevel\n       * @private\n       */\n\n    }, {\n      key: '_placeBranchNodes',\n      value: function _placeBranchNodes(parentId, parentLevel) {\n        // if this is not a parent, cancel the placing. This can happen with multiple parents to one child.\n        if (this.hierarchicalChildrenReference[parentId] === undefined) {\n          return;\n        }\n\n        // get a list of childNodes\n        var childNodes = [];\n        for (var i = 0; i < this.hierarchicalChildrenReference[parentId].length; i++) {\n          childNodes.push(this.body.nodes[this.hierarchicalChildrenReference[parentId][i]]);\n        }\n\n        // use the positions to order the nodes.\n        this._sortNodeArray(childNodes);\n\n        // position the childNodes\n        for (var _i6 = 0; _i6 < childNodes.length; _i6++) {\n          var childNode = childNodes[_i6];\n          var childNodeLevel = this.hierarchicalLevels[childNode.id];\n          // check if the child node is below the parent node and if it has already been positioned.\n          if (childNodeLevel > parentLevel && this.positionedNodes[childNode.id] === undefined) {\n            // get the amount of space required for this node. If parent the width is based on the amount of children.\n            var pos = void 0;\n\n            // we get the X or Y values we need and store them in pos and previousPos. The get and set make sure we get X or Y\n            if (_i6 === 0) {\n              pos = this._getPositionForHierarchy(this.body.nodes[parentId]);\n            } else {\n              pos = this._getPositionForHierarchy(childNodes[_i6 - 1]) + this.options.hierarchical.nodeSpacing;\n            }\n            this._setPositionForHierarchy(childNode, pos, childNodeLevel);\n            this._validataPositionAndContinue(childNode, childNodeLevel, pos);\n          } else {\n            return;\n          }\n        }\n\n        // center the parent nodes.\n        var minPos = 1e9;\n        var maxPos = -1e9;\n        for (var _i7 = 0; _i7 < childNodes.length; _i7++) {\n          var childNodeId = childNodes[_i7].id;\n          minPos = Math.min(minPos, this._getPositionForHierarchy(this.body.nodes[childNodeId]));\n          maxPos = Math.max(maxPos, this._getPositionForHierarchy(this.body.nodes[childNodeId]));\n        }\n        this._setPositionForHierarchy(this.body.nodes[parentId], 0.5 * (minPos + maxPos), parentLevel);\n      }\n\n      /**\n       * This method checks for overlap and if required shifts the branch. It also keeps records of positioned nodes.\n       * Finally it will call _placeBranchNodes to place the branch nodes.\n       * @param node\n       * @param level\n       * @param pos\n       * @private\n       */\n\n    }, {\n      key: '_validataPositionAndContinue',\n      value: function _validataPositionAndContinue(node, level, pos) {\n        // if overlap has been detected, we shift the branch\n        if (this.lastNodeOnLevel[level] !== undefined) {\n          var previousPos = this._getPositionForHierarchy(this.body.nodes[this.lastNodeOnLevel[level]]);\n          if (pos - previousPos < this.options.hierarchical.nodeSpacing) {\n            var diff = previousPos + this.options.hierarchical.nodeSpacing - pos;\n            var sharedParent = this._findCommonParent(this.lastNodeOnLevel[level], node.id);\n            this._shiftBlock(sharedParent.withChild, diff);\n          }\n        }\n\n        // store change in position.\n        this.lastNodeOnLevel[level] = node.id;\n\n        this.positionedNodes[node.id] = true;\n\n        this._placeBranchNodes(node.id, level);\n      }\n\n      /**\n       * Receives an array with node indices and returns an array with the actual node references. Used for sorting based on\n       * node properties.\n       * @param idArray\n       */\n\n    }, {\n      key: '_indexArrayToNodes',\n      value: function _indexArrayToNodes(idArray) {\n        var array = [];\n        for (var i = 0; i < idArray.length; i++) {\n          array.push(this.body.nodes[idArray[i]]);\n        }\n        return array;\n      }\n\n      /**\n       * This function get the distribution of levels based on hubsize\n       *\n       * @returns {Object}\n       * @private\n       */\n\n    }, {\n      key: '_getDistribution',\n      value: function _getDistribution() {\n        var distribution = {};\n        var nodeId = void 0,\n            node = void 0;\n\n        // we fix Y because the hierarchy is vertical, we fix X so we do not give a node an x position for a second time.\n        // the fix of X is removed after the x value has been set.\n        for (nodeId in this.body.nodes) {\n          if (this.body.nodes.hasOwnProperty(nodeId)) {\n            node = this.body.nodes[nodeId];\n            var level = this.hierarchicalLevels[nodeId] === undefined ? 0 : this.hierarchicalLevels[nodeId];\n            if (this.options.hierarchical.direction === 'UD' || this.options.hierarchical.direction === 'DU') {\n              node.y = this.options.hierarchical.levelSeparation * level;\n              node.options.fixed.y = true;\n            } else {\n              node.x = this.options.hierarchical.levelSeparation * level;\n              node.options.fixed.x = true;\n            }\n            if (distribution[level] === undefined) {\n              distribution[level] = {};\n            }\n            distribution[level][nodeId] = node;\n          }\n        }\n        return distribution;\n      }\n\n      /**\n       * Get the hubsize from all remaining unlevelled nodes.\n       *\n       * @returns {number}\n       * @private\n       */\n\n    }, {\n      key: '_getHubSize',\n      value: function _getHubSize() {\n        var hubSize = 0;\n        for (var nodeId in this.body.nodes) {\n          if (this.body.nodes.hasOwnProperty(nodeId)) {\n            var node = this.body.nodes[nodeId];\n            if (this.hierarchicalLevels[nodeId] === undefined) {\n              hubSize = node.edges.length < hubSize ? hubSize : node.edges.length;\n            }\n          }\n        }\n        return hubSize;\n      }\n\n      /**\n       * this function allocates nodes in levels based on the recursive branching from the largest hubs.\n       *\n       * @param hubsize\n       * @private\n       */\n\n    }, {\n      key: '_determineLevelsByHubsize',\n      value: function _determineLevelsByHubsize() {\n        var _this3 = this;\n\n        var hubSize = 1;\n\n        var levelDownstream = function levelDownstream(nodeA, nodeB) {\n          if (_this3.hierarchicalLevels[nodeB.id] === undefined) {\n            // set initial level\n            if (_this3.hierarchicalLevels[nodeA.id] === undefined) {\n              _this3.hierarchicalLevels[nodeA.id] = 0;\n            }\n            // set level\n            _this3.hierarchicalLevels[nodeB.id] = _this3.hierarchicalLevels[nodeA.id] + 1;\n          }\n        };\n\n        while (hubSize > 0) {\n          // determine hubs\n          hubSize = this._getHubSize();\n          if (hubSize === 0) break;\n\n          for (var nodeId in this.body.nodes) {\n            if (this.body.nodes.hasOwnProperty(nodeId)) {\n              var node = this.body.nodes[nodeId];\n              if (node.edges.length === hubSize) {\n                this._crawlNetwork(levelDownstream, nodeId);\n              }\n            }\n          }\n        }\n      }\n\n      /**\n       * TODO: release feature\n       * @private\n       */\n\n    }, {\n      key: '_determineLevelsCustomCallback',\n      value: function _determineLevelsCustomCallback() {\n        var _this4 = this;\n\n        var minLevel = 100000;\n\n        // TODO: this should come from options.\n        var customCallback = function customCallback(nodeA, nodeB, edge) {};\n\n        var levelByDirection = function levelByDirection(nodeA, nodeB, edge) {\n          var levelA = _this4.hierarchicalLevels[nodeA.id];\n          // set initial level\n          if (levelA === undefined) {\n            _this4.hierarchicalLevels[nodeA.id] = minLevel;\n          }\n\n          var diff = customCallback(_NetworkUtil2.default.cloneOptions(nodeA, 'node'), _NetworkUtil2.default.cloneOptions(nodeB, 'node'), _NetworkUtil2.default.cloneOptions(edge, 'edge'));\n\n          _this4.hierarchicalLevels[nodeB.id] = _this4.hierarchicalLevels[nodeA.id] + diff;\n        };\n\n        this._crawlNetwork(levelByDirection);\n        this._setMinLevelToZero();\n      }\n\n      /**\n       * this function allocates nodes in levels based on the direction of the edges\n       *\n       * @param hubsize\n       * @private\n       */\n\n    }, {\n      key: '_determineLevelsDirected',\n      value: function _determineLevelsDirected() {\n        var _this5 = this;\n\n        var minLevel = 10000;\n        var levelByDirection = function levelByDirection(nodeA, nodeB, edge) {\n          var levelA = _this5.hierarchicalLevels[nodeA.id];\n          // set initial level\n          if (levelA === undefined) {\n            _this5.hierarchicalLevels[nodeA.id] = minLevel;\n          }\n          if (edge.toId == nodeB.id) {\n            _this5.hierarchicalLevels[nodeB.id] = _this5.hierarchicalLevels[nodeA.id] + 1;\n          } else {\n            _this5.hierarchicalLevels[nodeB.id] = _this5.hierarchicalLevels[nodeA.id] - 1;\n          }\n        };\n        this._crawlNetwork(levelByDirection);\n        this._setMinLevelToZero();\n      }\n\n      /**\n       * Small util method to set the minimum levels of the nodes to zero.\n       * @private\n       */\n\n    }, {\n      key: '_setMinLevelToZero',\n      value: function _setMinLevelToZero() {\n        var minLevel = 1e9;\n        // get the minimum level\n        for (var nodeId in this.body.nodes) {\n          if (this.body.nodes.hasOwnProperty(nodeId)) {\n            if (this.hierarchicalLevels[nodeId] !== undefined) {\n              minLevel = Math.min(this.hierarchicalLevels[nodeId], minLevel);\n            }\n          }\n        }\n\n        // subtract the minimum from the set so we have a range starting from 0\n        for (var _nodeId2 in this.body.nodes) {\n          if (this.body.nodes.hasOwnProperty(_nodeId2)) {\n            if (this.hierarchicalLevels[_nodeId2] !== undefined) {\n              this.hierarchicalLevels[_nodeId2] -= minLevel;\n            }\n          }\n        }\n      }\n\n      /**\n       * Update the bookkeeping of parent and child.\n       * @private\n       */\n\n    }, {\n      key: '_generateMap',\n      value: function _generateMap() {\n        var _this6 = this;\n\n        var fillInRelations = function fillInRelations(parentNode, childNode) {\n          if (_this6.hierarchicalLevels[childNode.id] > _this6.hierarchicalLevels[parentNode.id]) {\n            var parentNodeId = parentNode.id;\n            var childNodeId = childNode.id;\n            if (_this6.hierarchicalChildrenReference[parentNodeId] === undefined) {\n              _this6.hierarchicalChildrenReference[parentNodeId] = [];\n            }\n            _this6.hierarchicalChildrenReference[parentNodeId].push(childNodeId);\n            if (_this6.hierarchicalParentReference[childNodeId] === undefined) {\n              _this6.hierarchicalParentReference[childNodeId] = [];\n            }\n            _this6.hierarchicalParentReference[childNodeId].push(parentNodeId);\n          }\n        };\n\n        this._crawlNetwork(fillInRelations);\n      }\n\n      /**\n       * Crawl over the entire network and use a callback on each node couple that is connected to each other.\n       * @param callback          | will receive nodeA nodeB and the connecting edge. A and B are unique.\n       * @param startingNodeId\n       * @private\n       */\n\n    }, {\n      key: '_crawlNetwork',\n      value: function _crawlNetwork() {\n        var _this7 = this;\n\n        var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n        var startingNodeId = arguments[1];\n\n        var progress = {};\n        var treeIndex = 0;\n\n        var crawler = function crawler(node, tree) {\n          if (progress[node.id] === undefined) {\n\n            if (_this7.hierarchicalTrees[node.id] === undefined) {\n              _this7.hierarchicalTrees[node.id] = tree;\n              _this7.treeIndex = Math.max(tree, _this7.treeIndex);\n            }\n\n            progress[node.id] = true;\n            var childNode = void 0;\n            for (var i = 0; i < node.edges.length; i++) {\n              if (node.edges[i].connected === true) {\n                if (node.edges[i].toId === node.id) {\n                  childNode = node.edges[i].from;\n                } else {\n                  childNode = node.edges[i].to;\n                }\n\n                if (node.id !== childNode.id) {\n                  callback(node, childNode, node.edges[i]);\n                  crawler(childNode, tree);\n                }\n              }\n            }\n          }\n        };\n\n        // we can crawl from a specific node or over all nodes.\n        if (startingNodeId === undefined) {\n          for (var i = 0; i < this.body.nodeIndices.length; i++) {\n            var node = this.body.nodes[this.body.nodeIndices[i]];\n            if (progress[node.id] === undefined) {\n              crawler(node, treeIndex);\n              treeIndex += 1;\n            }\n          }\n        } else {\n          var _node = this.body.nodes[startingNodeId];\n          if (_node === undefined) {\n            console.error(\"Node not found:\", startingNodeId);\n            return;\n          }\n          crawler(_node);\n        }\n      }\n\n      /**\n       * Shift a branch a certain distance\n       * @param parentId\n       * @param diff\n       * @private\n       */\n\n    }, {\n      key: '_shiftBlock',\n      value: function _shiftBlock(parentId, diff) {\n        if (this.options.hierarchical.direction === 'UD' || this.options.hierarchical.direction === 'DU') {\n          this.body.nodes[parentId].x += diff;\n        } else {\n          this.body.nodes[parentId].y += diff;\n        }\n        if (this.hierarchicalChildrenReference[parentId] !== undefined) {\n          for (var i = 0; i < this.hierarchicalChildrenReference[parentId].length; i++) {\n            this._shiftBlock(this.hierarchicalChildrenReference[parentId][i], diff);\n          }\n        }\n      }\n\n      /**\n       * Find a common parent between branches.\n       * @param childA\n       * @param childB\n       * @returns {{foundParent, withChild}}\n       * @private\n       */\n\n    }, {\n      key: '_findCommonParent',\n      value: function _findCommonParent(childA, childB) {\n        var _this8 = this;\n\n        var parents = {};\n        var iterateParents = function iterateParents(parents, child) {\n          if (_this8.hierarchicalParentReference[child] !== undefined) {\n            for (var i = 0; i < _this8.hierarchicalParentReference[child].length; i++) {\n              var parent = _this8.hierarchicalParentReference[child][i];\n              parents[parent] = true;\n              iterateParents(parents, parent);\n            }\n          }\n        };\n        var findParent = function findParent(parents, child) {\n          if (_this8.hierarchicalParentReference[child] !== undefined) {\n            for (var i = 0; i < _this8.hierarchicalParentReference[child].length; i++) {\n              var parent = _this8.hierarchicalParentReference[child][i];\n              if (parents[parent] !== undefined) {\n                return { foundParent: parent, withChild: child };\n              }\n              var branch = findParent(parents, parent);\n              if (branch.foundParent !== null) {\n                return branch;\n              }\n            }\n          }\n          return { foundParent: null, withChild: child };\n        };\n\n        iterateParents(parents, childA);\n        return findParent(parents, childB);\n      }\n\n      /**\n       * Abstract the getting of the position so we won't have to repeat the check for direction all the time\n       * @param node\n       * @param position\n       * @param level\n       * @private\n       */\n\n    }, {\n      key: '_setPositionForHierarchy',\n      value: function _setPositionForHierarchy(node, position, level) {\n        var doNotUpdate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        //console.log('_setPositionForHierarchy',node.id, position)\n        if (doNotUpdate !== true) {\n          if (this.distributionOrdering[level] === undefined) {\n            this.distributionOrdering[level] = [];\n            this.distributionOrderingPresence[level] = {};\n          }\n\n          if (this.distributionOrderingPresence[level][node.id] === undefined) {\n            this.distributionOrdering[level].push(node);\n            this.distributionIndex[node.id] = this.distributionOrdering[level].length - 1;\n          }\n          this.distributionOrderingPresence[level][node.id] = true;\n        }\n\n        if (this.options.hierarchical.direction === 'UD' || this.options.hierarchical.direction === 'DU') {\n          node.x = position;\n        } else {\n          node.y = position;\n        }\n      }\n\n      /**\n       * Abstract the getting of the position of a node so we do not have to repeat the direction check all the time.\n       * @param node\n       * @returns {number|*}\n       * @private\n       */\n\n    }, {\n      key: '_getPositionForHierarchy',\n      value: function _getPositionForHierarchy(node) {\n        if (this.options.hierarchical.direction === 'UD' || this.options.hierarchical.direction === 'DU') {\n          return node.x;\n        } else {\n          return node.y;\n        }\n      }\n\n      /**\n       * Use the x or y value to sort the array, allowing users to specify order.\n       * @param nodeArray\n       * @private\n       */\n\n    }, {\n      key: '_sortNodeArray',\n      value: function _sortNodeArray(nodeArray) {\n        if (nodeArray.length > 1) {\n          if (this.options.hierarchical.direction === 'UD' || this.options.hierarchical.direction === 'DU') {\n            nodeArray.sort(function (a, b) {\n              return a.x - b.x;\n            });\n          } else {\n            nodeArray.sort(function (a, b) {\n              return a.y - b.y;\n            });\n          }\n        }\n      }\n    }]);\n\n    return LayoutEngine;\n  }();\n\n  exports.default = LayoutEngine;\n\n/***/ },\n/* 115 */\n/***/ function(module, exports, __webpack_require__) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  var util = __webpack_require__(1);\n  var Hammer = __webpack_require__(22);\n  var hammerUtil = __webpack_require__(30);\n\n  /**\n   * clears the toolbar div element of children\n   *\n   * @private\n   */\n\n  var ManipulationSystem = function () {\n    function ManipulationSystem(body, canvas, selectionHandler) {\n      var _this = this;\n\n      _classCallCheck(this, ManipulationSystem);\n\n      this.body = body;\n      this.canvas = canvas;\n      this.selectionHandler = selectionHandler;\n\n      this.editMode = false;\n      this.manipulationDiv = undefined;\n      this.editModeDiv = undefined;\n      this.closeDiv = undefined;\n\n      this.manipulationHammers = [];\n      this.temporaryUIFunctions = {};\n      this.temporaryEventFunctions = [];\n\n      this.touchTime = 0;\n      this.temporaryIds = { nodes: [], edges: [] };\n      this.guiEnabled = false;\n      this.inMode = false;\n      this.selectedControlNode = undefined;\n\n      this.options = {};\n      this.defaultOptions = {\n        enabled: false,\n        initiallyActive: false,\n        addNode: true,\n        addEdge: true,\n        editNode: undefined,\n        editEdge: true,\n        deleteNode: true,\n        deleteEdge: true,\n        controlNodeStyle: {\n          shape: 'dot',\n          size: 6,\n          color: { background: '#ff0000', border: '#3c3c3c', highlight: { background: '#07f968', border: '#3c3c3c' } },\n          borderWidth: 2,\n          borderWidthSelected: 2\n        }\n      };\n      util.extend(this.options, this.defaultOptions);\n\n      this.body.emitter.on('destroy', function () {\n        _this._clean();\n      });\n      this.body.emitter.on('_dataChanged', this._restore.bind(this));\n      this.body.emitter.on('_resetData', this._restore.bind(this));\n    }\n\n    /**\n     * If something changes in the data during editing, switch back to the initial datamanipulation state and close all edit modes.\n     * @private\n     */\n\n\n    _createClass(ManipulationSystem, [{\n      key: '_restore',\n      value: function _restore() {\n        if (this.inMode !== false) {\n          if (this.options.initiallyActive === true) {\n            this.enableEditMode();\n          } else {\n            this.disableEditMode();\n          }\n        }\n      }\n\n      /**\n       * Set the Options\n       * @param options\n       */\n\n    }, {\n      key: 'setOptions',\n      value: function setOptions(options, allOptions, globalOptions) {\n        if (allOptions !== undefined) {\n          if (allOptions.locale !== undefined) {\n            this.options.locale = allOptions.locale;\n          } else {\n            this.options.locale = globalOptions.locale;\n          }\n          if (allOptions.locales !== undefined) {\n            this.options.locales = allOptions.locales;\n          } else {\n            this.options.locales = globalOptions.locales;\n          }\n        }\n\n        if (options !== undefined) {\n          if (typeof options === 'boolean') {\n            this.options.enabled = options;\n          } else {\n            this.options.enabled = true;\n            util.deepExtend(this.options, options);\n          }\n          if (this.options.initiallyActive === true) {\n            this.editMode = true;\n          }\n          this._setup();\n        }\n      }\n\n      /**\n       * Enable or disable edit-mode. Draws the DOM required and cleans up after itself.\n       *\n       * @private\n       */\n\n    }, {\n      key: 'toggleEditMode',\n      value: function toggleEditMode() {\n        if (this.editMode === true) {\n          this.disableEditMode();\n        } else {\n          this.enableEditMode();\n        }\n      }\n    }, {\n      key: 'enableEditMode',\n      value: function enableEditMode() {\n        this.editMode = true;\n\n        this._clean();\n        if (this.guiEnabled === true) {\n          this.manipulationDiv.style.display = 'block';\n          this.closeDiv.style.display = 'block';\n          this.editModeDiv.style.display = 'none';\n          this.showManipulatorToolbar();\n        }\n      }\n    }, {\n      key: 'disableEditMode',\n      value: function disableEditMode() {\n        this.editMode = false;\n\n        this._clean();\n        if (this.guiEnabled === true) {\n          this.manipulationDiv.style.display = 'none';\n          this.closeDiv.style.display = 'none';\n          this.editModeDiv.style.display = 'block';\n          this._createEditButton();\n        }\n      }\n\n      /**\n       * Creates the main toolbar. Removes functions bound to the select event. Binds all the buttons of the toolbar.\n       *\n       * @private\n       */\n\n    }, {\n      key: 'showManipulatorToolbar',\n      value: function showManipulatorToolbar() {\n        // restore the state of any bound functions or events, remove control nodes, restore physics\n        this._clean();\n\n        // reset global variables\n        this.manipulationDOM = {};\n\n        // if the gui is enabled, draw all elements.\n        if (this.guiEnabled === true) {\n          // a _restore will hide these menus\n          this.editMode = true;\n          this.manipulationDiv.style.display = 'block';\n          this.closeDiv.style.display = 'block';\n\n          var selectedNodeCount = this.selectionHandler._getSelectedNodeCount();\n          var selectedEdgeCount = this.selectionHandler._getSelectedEdgeCount();\n          var selectedTotalCount = selectedNodeCount + selectedEdgeCount;\n          var locale = this.options.locales[this.options.locale];\n          var needSeperator = false;\n\n          if (this.options.addNode !== false) {\n            this._createAddNodeButton(locale);\n            needSeperator = true;\n          }\n          if (this.options.addEdge !== false) {\n            if (needSeperator === true) {\n              this._createSeperator(1);\n            } else {\n              needSeperator = true;\n            }\n            this._createAddEdgeButton(locale);\n          }\n\n          if (selectedNodeCount === 1 && typeof this.options.editNode === 'function') {\n            if (needSeperator === true) {\n              this._createSeperator(2);\n            } else {\n              needSeperator = true;\n            }\n            this._createEditNodeButton(locale);\n          } else if (selectedEdgeCount === 1 && selectedNodeCount === 0 && this.options.editEdge !== false) {\n            if (needSeperator === true) {\n              this._createSeperator(3);\n            } else {\n              needSeperator = true;\n            }\n            this._createEditEdgeButton(locale);\n          }\n\n          // remove buttons\n          if (selectedTotalCount !== 0) {\n            if (selectedNodeCount > 0 && this.options.deleteNode !== false) {\n              if (needSeperator === true) {\n                this._createSeperator(4);\n              }\n              this._createDeleteButton(locale);\n            } else if (selectedNodeCount === 0 && this.options.deleteEdge !== false) {\n              if (needSeperator === true) {\n                this._createSeperator(4);\n              }\n              this._createDeleteButton(locale);\n            }\n          }\n\n          // bind the close button\n          this._bindHammerToDiv(this.closeDiv, this.toggleEditMode.bind(this));\n\n          // refresh this bar based on what has been selected\n          this._temporaryBindEvent('select', this.showManipulatorToolbar.bind(this));\n        }\n\n        // redraw to show any possible changes\n        this.body.emitter.emit('_redraw');\n      }\n\n      /**\n       * Create the toolbar for adding Nodes\n       */\n\n    }, {\n      key: 'addNodeMode',\n      value: function addNodeMode() {\n        // when using the gui, enable edit mode if it wasnt already.\n        if (this.editMode !== true) {\n          this.enableEditMode();\n        }\n\n        // restore the state of any bound functions or events, remove control nodes, restore physics\n        this._clean();\n\n        this.inMode = 'addNode';\n        if (this.guiEnabled === true) {\n          var locale = this.options.locales[this.options.locale];\n          this.manipulationDOM = {};\n          this._createBackButton(locale);\n          this._createSeperator();\n          this._createDescription(locale['addDescription'] || this.options.locales['en']['addDescription']);\n\n          // bind the close button\n          this._bindHammerToDiv(this.closeDiv, this.toggleEditMode.bind(this));\n        }\n\n        this._temporaryBindEvent('click', this._performAddNode.bind(this));\n      }\n\n      /**\n       * call the bound function to handle the editing of the node. The node has to be selected.\n       */\n\n    }, {\n      key: 'editNode',\n      value: function editNode() {\n        var _this2 = this;\n\n        // when using the gui, enable edit mode if it wasnt already.\n        if (this.editMode !== true) {\n          this.enableEditMode();\n        }\n\n        // restore the state of any bound functions or events, remove control nodes, restore physics\n        this._clean();\n        var node = this.selectionHandler._getSelectedNode();\n        if (node !== undefined) {\n          this.inMode = 'editNode';\n          if (typeof this.options.editNode === 'function') {\n            if (node.isCluster !== true) {\n              var data = util.deepExtend({}, node.options, false);\n              data.x = node.x;\n              data.y = node.y;\n\n              if (this.options.editNode.length === 2) {\n                this.options.editNode(data, function (finalizedData) {\n                  if (finalizedData !== null && finalizedData !== undefined && _this2.inMode === 'editNode') {\n                    // if for whatever reason the mode has changes (due to dataset change) disregard the callback) {\n                    _this2.body.data.nodes.getDataSet().update(finalizedData);\n                  }\n                  _this2.showManipulatorToolbar();\n                });\n              } else {\n                throw new Error('The function for edit does not support two arguments (data, callback)');\n              }\n            } else {\n              alert(this.options.locales[this.options.locale]['editClusterError'] || this.options.locales['en']['editClusterError']);\n            }\n          } else {\n            throw new Error('No function has been configured to handle the editing of nodes.');\n          }\n        } else {\n          this.showManipulatorToolbar();\n        }\n      }\n\n      /**\n       * create the toolbar to connect nodes\n       */\n\n    }, {\n      key: 'addEdgeMode',\n      value: function addEdgeMode() {\n        // when using the gui, enable edit mode if it wasnt already.\n        if (this.editMode !== true) {\n          this.enableEditMode();\n        }\n\n        // restore the state of any bound functions or events, remove control nodes, restore physics\n        this._clean();\n\n        this.inMode = 'addEdge';\n        if (this.guiEnabled === true) {\n          var locale = this.options.locales[this.options.locale];\n          this.manipulationDOM = {};\n          this._createBackButton(locale);\n          this._createSeperator();\n          this._createDescription(locale['edgeDescription'] || this.options.locales['en']['edgeDescription']);\n\n          // bind the close button\n          this._bindHammerToDiv(this.closeDiv, this.toggleEditMode.bind(this));\n        }\n\n        // temporarily overload functions\n        this._temporaryBindUI('onTouch', this._handleConnect.bind(this));\n        this._temporaryBindUI('onDragEnd', this._finishConnect.bind(this));\n        this._temporaryBindUI('onDrag', this._dragControlNode.bind(this));\n        this._temporaryBindUI('onRelease', this._finishConnect.bind(this));\n\n        this._temporaryBindUI('onDragStart', function () {});\n        this._temporaryBindUI('onHold', function () {});\n      }\n\n      /**\n       * create the toolbar to edit edges\n       */\n\n    }, {\n      key: 'editEdgeMode',\n      value: function editEdgeMode() {\n        var _this3 = this;\n\n        // when using the gui, enable edit mode if it wasn't already.\n        if (this.editMode !== true) {\n          this.enableEditMode();\n        }\n\n        // restore the state of any bound functions or events, remove control nodes, restore physics\n        this._clean();\n\n        this.inMode = 'editEdge';\n        if (this.guiEnabled === true) {\n          var locale = this.options.locales[this.options.locale];\n          this.manipulationDOM = {};\n          this._createBackButton(locale);\n          this._createSeperator();\n          this._createDescription(locale['editEdgeDescription'] || this.options.locales['en']['editEdgeDescription']);\n\n          // bind the close button\n          this._bindHammerToDiv(this.closeDiv, this.toggleEditMode.bind(this));\n        }\n\n        this.edgeBeingEditedId = this.selectionHandler.getSelectedEdges()[0];\n        if (this.edgeBeingEditedId !== undefined) {\n          (function () {\n            var edge = _this3.body.edges[_this3.edgeBeingEditedId];\n\n            // create control nodes\n            var controlNodeFrom = _this3._getNewTargetNode(edge.from.x, edge.from.y);\n            var controlNodeTo = _this3._getNewTargetNode(edge.to.x, edge.to.y);\n\n            _this3.temporaryIds.nodes.push(controlNodeFrom.id);\n            _this3.temporaryIds.nodes.push(controlNodeTo.id);\n\n            _this3.body.nodes[controlNodeFrom.id] = controlNodeFrom;\n            _this3.body.nodeIndices.push(controlNodeFrom.id);\n            _this3.body.nodes[controlNodeTo.id] = controlNodeTo;\n            _this3.body.nodeIndices.push(controlNodeTo.id);\n\n            // temporarily overload UI functions, cleaned up automatically because of _temporaryBindUI\n            _this3._temporaryBindUI('onTouch', _this3._controlNodeTouch.bind(_this3)); // used to get the position\n            _this3._temporaryBindUI('onTap', function () {}); // disabled\n            _this3._temporaryBindUI('onHold', function () {}); // disabled\n            _this3._temporaryBindUI('onDragStart', _this3._controlNodeDragStart.bind(_this3)); // used to select control node\n            _this3._temporaryBindUI('onDrag', _this3._controlNodeDrag.bind(_this3)); // used to drag control node\n            _this3._temporaryBindUI('onDragEnd', _this3._controlNodeDragEnd.bind(_this3)); // used to connect or revert control nodes\n            _this3._temporaryBindUI('onMouseMove', function () {}); // disabled\n\n            // create function to position control nodes correctly on movement\n            // automatically cleaned up because we use the temporary bind\n            _this3._temporaryBindEvent('beforeDrawing', function (ctx) {\n              var positions = edge.edgeType.findBorderPositions(ctx);\n              if (controlNodeFrom.selected === false) {\n                controlNodeFrom.x = positions.from.x;\n                controlNodeFrom.y = positions.from.y;\n              }\n              if (controlNodeTo.selected === false) {\n                controlNodeTo.x = positions.to.x;\n                controlNodeTo.y = positions.to.y;\n              }\n            });\n\n            _this3.body.emitter.emit('_redraw');\n          })();\n        } else {\n          this.showManipulatorToolbar();\n        }\n      }\n\n      /**\n       * delete everything in the selection\n       */\n\n    }, {\n      key: 'deleteSelected',\n      value: function deleteSelected() {\n        var _this4 = this;\n\n        // when using the gui, enable edit mode if it wasnt already.\n        if (this.editMode !== true) {\n          this.enableEditMode();\n        }\n\n        // restore the state of any bound functions or events, remove control nodes, restore physics\n        this._clean();\n\n        this.inMode = 'delete';\n        var selectedNodes = this.selectionHandler.getSelectedNodes();\n        var selectedEdges = this.selectionHandler.getSelectedEdges();\n        var deleteFunction = undefined;\n        if (selectedNodes.length > 0) {\n          for (var i = 0; i < selectedNodes.length; i++) {\n            if (this.body.nodes[selectedNodes[i]].isCluster === true) {\n              alert(this.options.locales[this.options.locale]['deleteClusterError'] || this.options.locales['en']['deleteClusterError']);\n              return;\n            }\n          }\n\n          if (typeof this.options.deleteNode === 'function') {\n            deleteFunction = this.options.deleteNode;\n          }\n        } else if (selectedEdges.length > 0) {\n          if (typeof this.options.deleteEdge === 'function') {\n            deleteFunction = this.options.deleteEdge;\n          }\n        }\n\n        if (typeof deleteFunction === 'function') {\n          var data = { nodes: selectedNodes, edges: selectedEdges };\n          if (deleteFunction.length === 2) {\n            deleteFunction(data, function (finalizedData) {\n              if (finalizedData !== null && finalizedData !== undefined && _this4.inMode === 'delete') {\n                // if for whatever reason the mode has changes (due to dataset change) disregard the callback) {\n                _this4.body.data.edges.getDataSet().remove(finalizedData.edges);\n                _this4.body.data.nodes.getDataSet().remove(finalizedData.nodes);\n                _this4.body.emitter.emit('startSimulation');\n                _this4.showManipulatorToolbar();\n              } else {\n                _this4.body.emitter.emit('startSimulation');\n                _this4.showManipulatorToolbar();\n              }\n            });\n          } else {\n            throw new Error('The function for delete does not support two arguments (data, callback)');\n          }\n        } else {\n          this.body.data.edges.getDataSet().remove(selectedEdges);\n          this.body.data.nodes.getDataSet().remove(selectedNodes);\n          this.body.emitter.emit('startSimulation');\n          this.showManipulatorToolbar();\n        }\n      }\n\n      //********************************************** PRIVATE ***************************************//\n\n      /**\n       * draw or remove the DOM\n       * @private\n       */\n\n    }, {\n      key: '_setup',\n      value: function _setup() {\n        if (this.options.enabled === true) {\n          // Enable the GUI\n          this.guiEnabled = true;\n\n          this._createWrappers();\n          if (this.editMode === false) {\n            this._createEditButton();\n          } else {\n            this.showManipulatorToolbar();\n          }\n        } else {\n          this._removeManipulationDOM();\n\n          // disable the gui\n          this.guiEnabled = false;\n        }\n      }\n\n      /**\n       * create the div overlays that contain the DOM\n       * @private\n       */\n\n    }, {\n      key: '_createWrappers',\n      value: function _createWrappers() {\n        // load the manipulator HTML elements. All styling done in css.\n        if (this.manipulationDiv === undefined) {\n          this.manipulationDiv = document.createElement('div');\n          this.manipulationDiv.className = 'vis-manipulation';\n          if (this.editMode === true) {\n            this.manipulationDiv.style.display = 'block';\n          } else {\n            this.manipulationDiv.style.display = 'none';\n          }\n          this.canvas.frame.appendChild(this.manipulationDiv);\n        }\n\n        // container for the edit button.\n        if (this.editModeDiv === undefined) {\n          this.editModeDiv = document.createElement('div');\n          this.editModeDiv.className = 'vis-edit-mode';\n          if (this.editMode === true) {\n            this.editModeDiv.style.display = 'none';\n          } else {\n            this.editModeDiv.style.display = 'block';\n          }\n          this.canvas.frame.appendChild(this.editModeDiv);\n        }\n\n        // container for the close div button\n        if (this.closeDiv === undefined) {\n          this.closeDiv = document.createElement('div');\n          this.closeDiv.className = 'vis-close';\n          this.closeDiv.style.display = this.manipulationDiv.style.display;\n          this.canvas.frame.appendChild(this.closeDiv);\n        }\n      }\n\n      /**\n       * generate a new target node. Used for creating new edges and editing edges\n       * @param x\n       * @param y\n       * @returns {*}\n       * @private\n       */\n\n    }, {\n      key: '_getNewTargetNode',\n      value: function _getNewTargetNode(x, y) {\n        var controlNodeStyle = util.deepExtend({}, this.options.controlNodeStyle);\n\n        controlNodeStyle.id = 'targetNode' + util.randomUUID();\n        controlNodeStyle.hidden = false;\n        controlNodeStyle.physics = false;\n        controlNodeStyle.x = x;\n        controlNodeStyle.y = y;\n\n        // we have to define the bounding box in order for the nodes to be drawn immediately\n        var node = this.body.functions.createNode(controlNodeStyle);\n        node.shape.boundingBox = { left: x, right: x, top: y, bottom: y };\n\n        return node;\n      }\n\n      /**\n       * Create the edit button\n       */\n\n    }, {\n      key: '_createEditButton',\n      value: function _createEditButton() {\n        // restore everything to it's original state (if applicable)\n        this._clean();\n\n        // reset the manipulationDOM\n        this.manipulationDOM = {};\n\n        // empty the editModeDiv\n        util.recursiveDOMDelete(this.editModeDiv);\n\n        // create the contents for the editMode button\n        var locale = this.options.locales[this.options.locale];\n        var button = this._createButton('editMode', 'vis-button vis-edit vis-edit-mode', locale['edit'] || this.options.locales['en']['edit']);\n        this.editModeDiv.appendChild(button);\n\n        // bind a hammer listener to the button, calling the function toggleEditMode.\n        this._bindHammerToDiv(button, this.toggleEditMode.bind(this));\n      }\n\n      /**\n       * this function cleans up after everything this module does. Temporary elements, functions and events are removed, physics restored, hammers removed.\n       * @private\n       */\n\n    }, {\n      key: '_clean',\n      value: function _clean() {\n        // not in mode\n        this.inMode = false;\n\n        // _clean the divs\n        if (this.guiEnabled === true) {\n          util.recursiveDOMDelete(this.editModeDiv);\n          util.recursiveDOMDelete(this.manipulationDiv);\n\n          // removes all the bindings and overloads\n          this._cleanManipulatorHammers();\n        }\n\n        // remove temporary nodes and edges\n        this._cleanupTemporaryNodesAndEdges();\n\n        // restore overloaded UI functions\n        this._unbindTemporaryUIs();\n\n        // remove the temporaryEventFunctions\n        this._unbindTemporaryEvents();\n\n        // restore the physics if required\n        this.body.emitter.emit('restorePhysics');\n      }\n\n      /**\n       * Each dom element has it's own hammer. They are stored in this.manipulationHammers. This cleans them up.\n       * @private\n       */\n\n    }, {\n      key: '_cleanManipulatorHammers',\n      value: function _cleanManipulatorHammers() {\n        // _clean hammer bindings\n        if (this.manipulationHammers.length != 0) {\n          for (var i = 0; i < this.manipulationHammers.length; i++) {\n            this.manipulationHammers[i].destroy();\n          }\n          this.manipulationHammers = [];\n        }\n      }\n\n      /**\n       * Remove all DOM elements created by this module.\n       * @private\n       */\n\n    }, {\n      key: '_removeManipulationDOM',\n      value: function _removeManipulationDOM() {\n        // removes all the bindings and overloads\n        this._clean();\n\n        // empty the manipulation divs\n        util.recursiveDOMDelete(this.manipulationDiv);\n        util.recursiveDOMDelete(this.editModeDiv);\n        util.recursiveDOMDelete(this.closeDiv);\n\n        // remove the manipulation divs\n        if (this.manipulationDiv) {\n          this.canvas.frame.removeChild(this.manipulationDiv);\n        }\n        if (this.editModeDiv) {\n          this.canvas.frame.removeChild(this.editModeDiv);\n        }\n        if (this.closeDiv) {\n          this.canvas.frame.removeChild(this.closeDiv);\n        }\n\n        // set the references to undefined\n        this.manipulationDiv = undefined;\n        this.editModeDiv = undefined;\n        this.closeDiv = undefined;\n      }\n\n      /**\n       * create a seperator line. the index is to differentiate in the manipulation dom\n       * @param index\n       * @private\n       */\n\n    }, {\n      key: '_createSeperator',\n      value: function _createSeperator() {\n        var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n        this.manipulationDOM['seperatorLineDiv' + index] = document.createElement('div');\n        this.manipulationDOM['seperatorLineDiv' + index].className = 'vis-separator-line';\n        this.manipulationDiv.appendChild(this.manipulationDOM['seperatorLineDiv' + index]);\n      }\n\n      // ----------------------    DOM functions for buttons    --------------------------//\n\n    }, {\n      key: '_createAddNodeButton',\n      value: function _createAddNodeButton(locale) {\n        var button = this._createButton('addNode', 'vis-button vis-add', locale['addNode'] || this.options.locales['en']['addNode']);\n        this.manipulationDiv.appendChild(button);\n        this._bindHammerToDiv(button, this.addNodeMode.bind(this));\n      }\n    }, {\n      key: '_createAddEdgeButton',\n      value: function _createAddEdgeButton(locale) {\n        var button = this._createButton('addEdge', 'vis-button vis-connect', locale['addEdge'] || this.options.locales['en']['addEdge']);\n        this.manipulationDiv.appendChild(button);\n        this._bindHammerToDiv(button, this.addEdgeMode.bind(this));\n      }\n    }, {\n      key: '_createEditNodeButton',\n      value: function _createEditNodeButton(locale) {\n        var button = this._createButton('editNode', 'vis-button vis-edit', locale['editNode'] || this.options.locales['en']['editNode']);\n        this.manipulationDiv.appendChild(button);\n        this._bindHammerToDiv(button, this.editNode.bind(this));\n      }\n    }, {\n      key: '_createEditEdgeButton',\n      value: function _createEditEdgeButton(locale) {\n        var button = this._createButton('editEdge', 'vis-button vis-edit', locale['editEdge'] || this.options.locales['en']['editEdge']);\n        this.manipulationDiv.appendChild(button);\n        this._bindHammerToDiv(button, this.editEdgeMode.bind(this));\n      }\n    }, {\n      key: '_createDeleteButton',\n      value: function _createDeleteButton(locale) {\n        if (this.options.rtl) {\n          var deleteBtnClass = 'vis-button vis-delete-rtl';\n        } else {\n          var deleteBtnClass = 'vis-button vis-delete';\n        }\n        var button = this._createButton('delete', deleteBtnClass, locale['del'] || this.options.locales['en']['del']);\n        this.manipulationDiv.appendChild(button);\n        this._bindHammerToDiv(button, this.deleteSelected.bind(this));\n      }\n    }, {\n      key: '_createBackButton',\n      value: function _createBackButton(locale) {\n        var button = this._createButton('back', 'vis-button vis-back', locale['back'] || this.options.locales['en']['back']);\n        this.manipulationDiv.appendChild(button);\n        this._bindHammerToDiv(button, this.showManipulatorToolbar.bind(this));\n      }\n    }, {\n      key: '_createButton',\n      value: function _createButton(id, className, label) {\n        var labelClassName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'vis-label';\n\n\n        this.manipulationDOM[id + 'Div'] = document.createElement('div');\n        this.manipulationDOM[id + 'Div'].className = className;\n        this.manipulationDOM[id + 'Label'] = document.createElement('div');\n        this.manipulationDOM[id + 'Label'].className = labelClassName;\n        this.manipulationDOM[id + 'Label'].innerHTML = label;\n        this.manipulationDOM[id + 'Div'].appendChild(this.manipulationDOM[id + 'Label']);\n        return this.manipulationDOM[id + 'Div'];\n      }\n    }, {\n      key: '_createDescription',\n      value: function _createDescription(label) {\n        this.manipulationDiv.appendChild(this._createButton('description', 'vis-button vis-none', label));\n      }\n\n      // -------------------------- End of DOM functions for buttons ------------------------------//\n\n      /**\n       * this binds an event until cleanup by the clean functions.\n       * @param event\n       * @param newFunction\n       * @private\n       */\n\n    }, {\n      key: '_temporaryBindEvent',\n      value: function _temporaryBindEvent(event, newFunction) {\n        this.temporaryEventFunctions.push({ event: event, boundFunction: newFunction });\n        this.body.emitter.on(event, newFunction);\n      }\n\n      /**\n       * this overrides an UI function until cleanup by the clean function\n       * @param UIfunctionName\n       * @param newFunction\n       * @private\n       */\n\n    }, {\n      key: '_temporaryBindUI',\n      value: function _temporaryBindUI(UIfunctionName, newFunction) {\n        if (this.body.eventListeners[UIfunctionName] !== undefined) {\n          this.temporaryUIFunctions[UIfunctionName] = this.body.eventListeners[UIfunctionName];\n          this.body.eventListeners[UIfunctionName] = newFunction;\n        } else {\n          throw new Error('This UI function does not exist. Typo? You tried: ' + UIfunctionName + ' possible are: ' + JSON.stringify(Object.keys(this.body.eventListeners)));\n        }\n      }\n\n      /**\n       * Restore the overridden UI functions to their original state.\n       *\n       * @private\n       */\n\n    }, {\n      key: '_unbindTemporaryUIs',\n      value: function _unbindTemporaryUIs() {\n        for (var functionName in this.temporaryUIFunctions) {\n          if (this.temporaryUIFunctions.hasOwnProperty(functionName)) {\n            this.body.eventListeners[functionName] = this.temporaryUIFunctions[functionName];\n            delete this.temporaryUIFunctions[functionName];\n          }\n        }\n        this.temporaryUIFunctions = {};\n      }\n\n      /**\n       * Unbind the events created by _temporaryBindEvent\n       * @private\n       */\n\n    }, {\n      key: '_unbindTemporaryEvents',\n      value: function _unbindTemporaryEvents() {\n        for (var i = 0; i < this.temporaryEventFunctions.length; i++) {\n          var eventName = this.temporaryEventFunctions[i].event;\n          var boundFunction = this.temporaryEventFunctions[i].boundFunction;\n          this.body.emitter.off(eventName, boundFunction);\n        }\n        this.temporaryEventFunctions = [];\n      }\n\n      /**\n       * Bind an hammer instance to a DOM element.\n       * @param domElement\n       * @param funct\n       */\n\n    }, {\n      key: '_bindHammerToDiv',\n      value: function _bindHammerToDiv(domElement, boundFunction) {\n        var hammer = new Hammer(domElement, {});\n        hammerUtil.onTouch(hammer, boundFunction);\n        this.manipulationHammers.push(hammer);\n      }\n\n      /**\n       * Neatly clean up temporary edges and nodes\n       * @private\n       */\n\n    }, {\n      key: '_cleanupTemporaryNodesAndEdges',\n      value: function _cleanupTemporaryNodesAndEdges() {\n        // _clean temporary edges\n        for (var i = 0; i < this.temporaryIds.edges.length; i++) {\n          this.body.edges[this.temporaryIds.edges[i]].disconnect();\n          delete this.body.edges[this.temporaryIds.edges[i]];\n          var indexTempEdge = this.body.edgeIndices.indexOf(this.temporaryIds.edges[i]);\n          if (indexTempEdge !== -1) {\n            this.body.edgeIndices.splice(indexTempEdge, 1);\n          }\n        }\n\n        // _clean temporary nodes\n        for (var _i = 0; _i < this.temporaryIds.nodes.length; _i++) {\n          delete this.body.nodes[this.temporaryIds.nodes[_i]];\n          var indexTempNode = this.body.nodeIndices.indexOf(this.temporaryIds.nodes[_i]);\n          if (indexTempNode !== -1) {\n            this.body.nodeIndices.splice(indexTempNode, 1);\n          }\n        }\n\n        this.temporaryIds = { nodes: [], edges: [] };\n      }\n\n      // ------------------------------------------ EDIT EDGE FUNCTIONS -----------------------------------------//\n\n      /**\n       * the touch is used to get the position of the initial click\n       * @param event\n       * @private\n       */\n\n    }, {\n      key: '_controlNodeTouch',\n      value: function _controlNodeTouch(event) {\n        this.selectionHandler.unselectAll();\n        this.lastTouch = this.body.functions.getPointer(event.center);\n        this.lastTouch.translation = util.extend({}, this.body.view.translation); // copy the object\n      }\n\n      /**\n       * the drag start is used to mark one of the control nodes as selected.\n       * @param event\n       * @private\n       */\n\n    }, {\n      key: '_controlNodeDragStart',\n      value: function _controlNodeDragStart(event) {\n        var pointer = this.lastTouch;\n        var pointerObj = this.selectionHandler._pointerToPositionObject(pointer);\n        var from = this.body.nodes[this.temporaryIds.nodes[0]];\n        var to = this.body.nodes[this.temporaryIds.nodes[1]];\n        var edge = this.body.edges[this.edgeBeingEditedId];\n        this.selectedControlNode = undefined;\n\n        var fromSelect = from.isOverlappingWith(pointerObj);\n        var toSelect = to.isOverlappingWith(pointerObj);\n\n        if (fromSelect === true) {\n          this.selectedControlNode = from;\n          edge.edgeType.from = from;\n        } else if (toSelect === true) {\n          this.selectedControlNode = to;\n          edge.edgeType.to = to;\n        }\n\n        // we use the selection to find the node that is being dragged. We explicitly select it here.\n        if (this.selectedControlNode !== undefined) {\n          this.selectionHandler.selectObject(this.selectedControlNode);\n        }\n\n        this.body.emitter.emit('_redraw');\n      }\n\n      /**\n       * dragging the control nodes or the canvas\n       * @param event\n       * @private\n       */\n\n    }, {\n      key: '_controlNodeDrag',\n      value: function _controlNodeDrag(event) {\n        this.body.emitter.emit('disablePhysics');\n        var pointer = this.body.functions.getPointer(event.center);\n        var pos = this.canvas.DOMtoCanvas(pointer);\n        if (this.selectedControlNode !== undefined) {\n          this.selectedControlNode.x = pos.x;\n          this.selectedControlNode.y = pos.y;\n        } else {\n          // if the drag was not started properly because the click started outside the network div, start it now.\n          var diffX = pointer.x - this.lastTouch.x;\n          var diffY = pointer.y - this.lastTouch.y;\n          this.body.view.translation = { x: this.lastTouch.translation.x + diffX, y: this.lastTouch.translation.y + diffY };\n        }\n        this.body.emitter.emit('_redraw');\n      }\n\n      /**\n       * connecting or restoring the control nodes.\n       * @param event\n       * @private\n       */\n\n    }, {\n      key: '_controlNodeDragEnd',\n      value: function _controlNodeDragEnd(event) {\n        var pointer = this.body.functions.getPointer(event.center);\n        var pointerObj = this.selectionHandler._pointerToPositionObject(pointer);\n        var edge = this.body.edges[this.edgeBeingEditedId];\n        // if the node that was dragged is not a control node, return\n        if (this.selectedControlNode === undefined) {\n          return;\n        }\n\n        // we use the selection to find the node that is being dragged. We explicitly DEselect the control node here.\n        this.selectionHandler.unselectAll();\n        var overlappingNodeIds = this.selectionHandler._getAllNodesOverlappingWith(pointerObj);\n        var node = undefined;\n        for (var i = overlappingNodeIds.length - 1; i >= 0; i--) {\n          if (overlappingNodeIds[i] !== this.selectedControlNode.id) {\n            node = this.body.nodes[overlappingNodeIds[i]];\n            break;\n          }\n        }\n        // perform the connection\n        if (node !== undefined && this.selectedControlNode !== undefined) {\n          if (node.isCluster === true) {\n            alert(this.options.locales[this.options.locale]['createEdgeError'] || this.options.locales['en']['createEdgeError']);\n          } else {\n            var from = this.body.nodes[this.temporaryIds.nodes[0]];\n            if (this.selectedControlNode.id === from.id) {\n              this._performEditEdge(node.id, edge.to.id);\n            } else {\n              this._performEditEdge(edge.from.id, node.id);\n            }\n          }\n        } else {\n          edge.updateEdgeType();\n          this.body.emitter.emit('restorePhysics');\n        }\n        this.body.emitter.emit('_redraw');\n      }\n\n      // ------------------------------------ END OF EDIT EDGE FUNCTIONS -----------------------------------------//\n\n\n      // ------------------------------------------- ADD EDGE FUNCTIONS -----------------------------------------//\n      /**\n       * the function bound to the selection event. It checks if you want to connect a cluster and changes the description\n       * to walk the user through the process.\n       *\n       * @private\n       */\n\n    }, {\n      key: '_handleConnect',\n      value: function _handleConnect(event) {\n        // check to avoid double fireing of this function.\n        if (new Date().valueOf() - this.touchTime > 100) {\n          this.lastTouch = this.body.functions.getPointer(event.center);\n          this.lastTouch.translation = util.extend({}, this.body.view.translation); // copy the object\n\n          var pointer = this.lastTouch;\n          var node = this.selectionHandler.getNodeAt(pointer);\n\n          if (node !== undefined) {\n            if (node.isCluster === true) {\n              alert(this.options.locales[this.options.locale]['createEdgeError'] || this.options.locales['en']['createEdgeError']);\n            } else {\n              // create a node the temporary line can look at\n              var targetNode = this._getNewTargetNode(node.x, node.y);\n              this.body.nodes[targetNode.id] = targetNode;\n              this.body.nodeIndices.push(targetNode.id);\n\n              // create a temporary edge\n              var connectionEdge = this.body.functions.createEdge({\n                id: 'connectionEdge' + util.randomUUID(),\n                from: node.id,\n                to: targetNode.id,\n                physics: false,\n                smooth: {\n                  enabled: true,\n                  type: 'continuous',\n                  roundness: 0.5\n                }\n              });\n              this.body.edges[connectionEdge.id] = connectionEdge;\n              this.body.edgeIndices.push(connectionEdge.id);\n\n              this.temporaryIds.nodes.push(targetNode.id);\n              this.temporaryIds.edges.push(connectionEdge.id);\n            }\n          }\n          this.touchTime = new Date().valueOf();\n        }\n      }\n    }, {\n      key: '_dragControlNode',\n      value: function _dragControlNode(event) {\n        var pointer = this.body.functions.getPointer(event.center);\n        if (this.temporaryIds.nodes[0] !== undefined) {\n          var targetNode = this.body.nodes[this.temporaryIds.nodes[0]]; // there is only one temp node in the add edge mode.\n          targetNode.x = this.canvas._XconvertDOMtoCanvas(pointer.x);\n          targetNode.y = this.canvas._YconvertDOMtoCanvas(pointer.y);\n          this.body.emitter.emit('_redraw');\n        } else {\n          var diffX = pointer.x - this.lastTouch.x;\n          var diffY = pointer.y - this.lastTouch.y;\n          this.body.view.translation = { x: this.lastTouch.translation.x + diffX, y: this.lastTouch.translation.y + diffY };\n        }\n      }\n\n      /**\n       * Connect the new edge to the target if one exists, otherwise remove temp line\n       * @param event\n       * @private\n       */\n\n    }, {\n      key: '_finishConnect',\n      value: function _finishConnect(event) {\n        var pointer = this.body.functions.getPointer(event.center);\n        var pointerObj = this.selectionHandler._pointerToPositionObject(pointer);\n\n        // remember the edge id\n        var connectFromId = undefined;\n        if (this.temporaryIds.edges[0] !== undefined) {\n          connectFromId = this.body.edges[this.temporaryIds.edges[0]].fromId;\n        }\n\n        // get the overlapping node but NOT the temporary node;\n        var overlappingNodeIds = this.selectionHandler._getAllNodesOverlappingWith(pointerObj);\n        var node = undefined;\n        for (var i = overlappingNodeIds.length - 1; i >= 0; i--) {\n          // if the node id is NOT a temporary node, accept the node.\n          if (this.temporaryIds.nodes.indexOf(overlappingNodeIds[i]) === -1) {\n            node = this.body.nodes[overlappingNodeIds[i]];\n            break;\n          }\n        }\n\n        // clean temporary nodes and edges.\n        this._cleanupTemporaryNodesAndEdges();\n\n        // perform the connection\n        if (node !== undefined) {\n          if (node.isCluster === true) {\n            alert(this.options.locales[this.options.locale]['createEdgeError'] || this.options.locales['en']['createEdgeError']);\n          } else {\n            if (this.body.nodes[connectFromId] !== undefined && this.body.nodes[node.id] !== undefined) {\n              this._performAddEdge(connectFromId, node.id);\n            }\n          }\n        }\n        this.body.emitter.emit('_redraw');\n      }\n\n      // --------------------------------------- END OF ADD EDGE FUNCTIONS -------------------------------------//\n\n\n      // ------------------------------ Performing all the actual data manipulation ------------------------//\n\n      /**\n       * Adds a node on the specified location\n       */\n\n    }, {\n      key: '_performAddNode',\n      value: function _performAddNode(clickData) {\n        var _this5 = this;\n\n        var defaultData = {\n          id: util.randomUUID(),\n          x: clickData.pointer.canvas.x,\n          y: clickData.pointer.canvas.y,\n          label: 'new'\n        };\n\n        if (typeof this.options.addNode === 'function') {\n          if (this.options.addNode.length === 2) {\n            this.options.addNode(defaultData, function (finalizedData) {\n              if (finalizedData !== null && finalizedData !== undefined && _this5.inMode === 'addNode') {\n                // if for whatever reason the mode has changes (due to dataset change) disregard the callback\n                _this5.body.data.nodes.getDataSet().add(finalizedData);\n                _this5.showManipulatorToolbar();\n              }\n            });\n          } else {\n            throw new Error('The function for add does not support two arguments (data,callback)');\n            this.showManipulatorToolbar();\n          }\n        } else {\n          this.body.data.nodes.getDataSet().add(defaultData);\n          this.showManipulatorToolbar();\n        }\n      }\n\n      /**\n       * connect two nodes with a new edge.\n       *\n       * @private\n       */\n\n    }, {\n      key: '_performAddEdge',\n      value: function _performAddEdge(sourceNodeId, targetNodeId) {\n        var _this6 = this;\n\n        var defaultData = { from: sourceNodeId, to: targetNodeId };\n        if (typeof this.options.addEdge === 'function') {\n          if (this.options.addEdge.length === 2) {\n            this.options.addEdge(defaultData, function (finalizedData) {\n              if (finalizedData !== null && finalizedData !== undefined && _this6.inMode === 'addEdge') {\n                // if for whatever reason the mode has changes (due to dataset change) disregard the callback\n                _this6.body.data.edges.getDataSet().add(finalizedData);\n                _this6.selectionHandler.unselectAll();\n                _this6.showManipulatorToolbar();\n              }\n            });\n          } else {\n            throw new Error('The function for connect does not support two arguments (data,callback)');\n          }\n        } else {\n          this.body.data.edges.getDataSet().add(defaultData);\n          this.selectionHandler.unselectAll();\n          this.showManipulatorToolbar();\n        }\n      }\n\n      /**\n       * connect two nodes with a new edge.\n       *\n       * @private\n       */\n\n    }, {\n      key: '_performEditEdge',\n      value: function _performEditEdge(sourceNodeId, targetNodeId) {\n        var _this7 = this;\n\n        var defaultData = { id: this.edgeBeingEditedId, from: sourceNodeId, to: targetNodeId };\n        if (typeof this.options.editEdge === 'function') {\n          if (this.options.editEdge.length === 2) {\n            this.options.editEdge(defaultData, function (finalizedData) {\n              if (finalizedData === null || finalizedData === undefined || _this7.inMode !== 'editEdge') {\n                // if for whatever reason the mode has changes (due to dataset change) disregard the callback) {\n                _this7.body.edges[defaultData.id].updateEdgeType();\n                _this7.body.emitter.emit('_redraw');\n              } else {\n                _this7.body.data.edges.getDataSet().update(finalizedData);\n                _this7.selectionHandler.unselectAll();\n                _this7.showManipulatorToolbar();\n              }\n            });\n          } else {\n            throw new Error('The function for edit does not support two arguments (data, callback)');\n          }\n        } else {\n          this.body.data.edges.getDataSet().update(defaultData);\n          this.selectionHandler.unselectAll();\n          this.showManipulatorToolbar();\n        }\n      }\n    }]);\n\n    return ManipulationSystem;\n  }();\n\n  exports.default = ManipulationSystem;\n\n/***/ },\n/* 116 */\n/***/ function(module, exports) {\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * This object contains all possible options. It will check if the types are correct, if required if the option is one\n   * of the allowed values.\n   *\n   * __any__ means that the name of the property does not matter.\n   * __type__ is a required field for all objects and contains the allowed types of all objects\n   */\n  var string = 'string';\n  var boolean = 'boolean';\n  var number = 'number';\n  var array = 'array';\n  var object = 'object'; // should only be in a __type__ property\n  var dom = 'dom';\n  var any = 'any';\n\n  var allOptions = {\n    configure: {\n      enabled: { boolean: boolean },\n      filter: { boolean: boolean, string: string, array: array, 'function': 'function' },\n      container: { dom: dom },\n      showButton: { boolean: boolean },\n      __type__: { object: object, boolean: boolean, string: string, array: array, 'function': 'function' }\n    },\n    edges: {\n      arrows: {\n        to: { enabled: { boolean: boolean }, scaleFactor: { number: number }, type: { string: ['arrow', 'circle'] }, __type__: { object: object, boolean: boolean } },\n        middle: { enabled: { boolean: boolean }, scaleFactor: { number: number }, type: { string: ['arrow', 'circle'] }, __type__: { object: object, boolean: boolean } },\n        from: { enabled: { boolean: boolean }, scaleFactor: { number: number }, type: { string: ['arrow', 'circle'] }, __type__: { object: object, boolean: boolean } },\n        __type__: { string: ['from', 'to', 'middle'], object: object }\n      },\n      arrowStrikethrough: { boolean: boolean },\n      color: {\n        color: { string: string },\n        highlight: { string: string },\n        hover: { string: string },\n        inherit: { string: ['from', 'to', 'both'], boolean: boolean },\n        opacity: { number: number },\n        __type__: { object: object, string: string }\n      },\n      dashes: { boolean: boolean, array: array },\n      font: {\n        color: { string: string },\n        size: { number: number }, // px\n        face: { string: string },\n        background: { string: string },\n        strokeWidth: { number: number }, // px\n        strokeColor: { string: string },\n        align: { string: ['horizontal', 'top', 'middle', 'bottom'] },\n        __type__: { object: object, string: string }\n      },\n      hidden: { boolean: boolean },\n      hoverWidth: { 'function': 'function', number: number },\n      label: { string: string, 'undefined': 'undefined' },\n      labelHighlightBold: { boolean: boolean },\n      length: { number: number, 'undefined': 'undefined' },\n      physics: { boolean: boolean },\n      scaling: {\n        min: { number: number },\n        max: { number: number },\n        label: {\n          enabled: { boolean: boolean },\n          min: { number: number },\n          max: { number: number },\n          maxVisible: { number: number },\n          drawThreshold: { number: number },\n          __type__: { object: object, boolean: boolean }\n        },\n        customScalingFunction: { 'function': 'function' },\n        __type__: { object: object }\n      },\n      selectionWidth: { 'function': 'function', number: number },\n      selfReferenceSize: { number: number },\n      shadow: {\n        enabled: { boolean: boolean },\n        color: { string: string },\n        size: { number: number },\n        x: { number: number },\n        y: { number: number },\n        __type__: { object: object, boolean: boolean }\n      },\n      smooth: {\n        enabled: { boolean: boolean },\n        type: { string: ['dynamic', 'continuous', 'discrete', 'diagonalCross', 'straightCross', 'horizontal', 'vertical', 'curvedCW', 'curvedCCW', 'cubicBezier'] },\n        roundness: { number: number },\n        forceDirection: { string: ['horizontal', 'vertical', 'none'], boolean: boolean },\n        __type__: { object: object, boolean: boolean }\n      },\n      title: { string: string, 'undefined': 'undefined' },\n      width: { number: number },\n      value: { number: number, 'undefined': 'undefined' },\n      __type__: { object: object }\n    },\n    groups: {\n      useDefaultGroups: { boolean: boolean },\n      __any__: 'get from nodes, will be overwritten below',\n      __type__: { object: object }\n    },\n    interaction: {\n      dragNodes: { boolean: boolean },\n      dragView: { boolean: boolean },\n      hideEdgesOnDrag: { boolean: boolean },\n      hideNodesOnDrag: { boolean: boolean },\n      hover: { boolean: boolean },\n      keyboard: {\n        enabled: { boolean: boolean },\n        speed: { x: { number: number }, y: { number: number }, zoom: { number: number }, __type__: { object: object } },\n        bindToWindow: { boolean: boolean },\n        __type__: { object: object, boolean: boolean }\n      },\n      multiselect: { boolean: boolean },\n      navigationButtons: { boolean: boolean },\n      selectable: { boolean: boolean },\n      selectConnectedEdges: { boolean: boolean },\n      hoverConnectedEdges: { boolean: boolean },\n      tooltipDelay: { number: number },\n      zoomView: { boolean: boolean },\n      __type__: { object: object }\n    },\n    layout: {\n      randomSeed: { 'undefined': 'undefined', number: number },\n      improvedLayout: { boolean: boolean },\n      hierarchical: {\n        enabled: { boolean: boolean },\n        levelSeparation: { number: number },\n        nodeSpacing: { number: number },\n        treeSpacing: { number: number },\n        blockShifting: { boolean: boolean },\n        edgeMinimization: { boolean: boolean },\n        parentCentralization: { boolean: boolean },\n        direction: { string: ['UD', 'DU', 'LR', 'RL'] }, // UD, DU, LR, RL\n        sortMethod: { string: ['hubsize', 'directed'] }, // hubsize, directed\n        __type__: { object: object, boolean: boolean }\n      },\n      __type__: { object: object }\n    },\n    manipulation: {\n      enabled: { boolean: boolean },\n      initiallyActive: { boolean: boolean },\n      addNode: { boolean: boolean, 'function': 'function' },\n      addEdge: { boolean: boolean, 'function': 'function' },\n      editNode: { 'function': 'function' },\n      editEdge: { boolean: boolean, 'function': 'function' },\n      deleteNode: { boolean: boolean, 'function': 'function' },\n      deleteEdge: { boolean: boolean, 'function': 'function' },\n      controlNodeStyle: 'get from nodes, will be overwritten below',\n      __type__: { object: object, boolean: boolean }\n    },\n    nodes: {\n      borderWidth: { number: number },\n      borderWidthSelected: { number: number, 'undefined': 'undefined' },\n      brokenImage: { string: string, 'undefined': 'undefined' },\n      color: {\n        border: { string: string },\n        background: { string: string },\n        highlight: {\n          border: { string: string },\n          background: { string: string },\n          __type__: { object: object, string: string }\n        },\n        hover: {\n          border: { string: string },\n          background: { string: string },\n          __type__: { object: object, string: string }\n        },\n        __type__: { object: object, string: string }\n      },\n      fixed: {\n        x: { boolean: boolean },\n        y: { boolean: boolean },\n        __type__: { object: object, boolean: boolean }\n      },\n      font: {\n        align: { string: string },\n        color: { string: string },\n        size: { number: number }, // px\n        face: { string: string },\n        background: { string: string },\n        strokeWidth: { number: number }, // px\n        strokeColor: { string: string },\n        __type__: { object: object, string: string }\n      },\n      group: { string: string, number: number, 'undefined': 'undefined' },\n      hidden: { boolean: boolean },\n      icon: {\n        face: { string: string },\n        code: { string: string }, //'\\uf007',\n        size: { number: number }, //50,\n        color: { string: string },\n        __type__: { object: object }\n      },\n      id: { string: string, number: number },\n      image: { string: string, 'undefined': 'undefined' }, // --> URL\n      label: { string: string, 'undefined': 'undefined' },\n      labelHighlightBold: { boolean: boolean },\n      level: { number: number, 'undefined': 'undefined' },\n      mass: { number: number },\n      physics: { boolean: boolean },\n      scaling: {\n        min: { number: number },\n        max: { number: number },\n        label: {\n          enabled: { boolean: boolean },\n          min: { number: number },\n          max: { number: number },\n          maxVisible: { number: number },\n          drawThreshold: { number: number },\n          __type__: { object: object, boolean: boolean }\n        },\n        customScalingFunction: { 'function': 'function' },\n        __type__: { object: object }\n      },\n      shadow: {\n        enabled: { boolean: boolean },\n        color: { string: string },\n        size: { number: number },\n        x: { number: number },\n        y: { number: number },\n        __type__: { object: object, boolean: boolean }\n      },\n      shape: { string: ['ellipse', 'circle', 'database', 'box', 'text', 'image', 'circularImage', 'diamond', 'dot', 'star', 'triangle', 'triangleDown', 'square', 'icon'] },\n      shapeProperties: {\n        borderDashes: { boolean: boolean, array: array },\n        borderRadius: { number: number },\n        interpolation: { boolean: boolean },\n        useImageSize: { boolean: boolean },\n        useBorderWithImage: { boolean: boolean },\n        __type__: { object: object }\n      },\n      size: { number: number },\n      title: { string: string, 'undefined': 'undefined' },\n      value: { number: number, 'undefined': 'undefined' },\n      x: { number: number },\n      y: { number: number },\n      __type__: { object: object }\n    },\n    physics: {\n      enabled: { boolean: boolean },\n      barnesHut: {\n        gravitationalConstant: { number: number },\n        centralGravity: { number: number },\n        springLength: { number: number },\n        springConstant: { number: number },\n        damping: { number: number },\n        avoidOverlap: { number: number },\n        __type__: { object: object }\n      },\n      forceAtlas2Based: {\n        gravitationalConstant: { number: number },\n        centralGravity: { number: number },\n        springLength: { number: number },\n        springConstant: { number: number },\n        damping: { number: number },\n        avoidOverlap: { number: number },\n        __type__: { object: object }\n      },\n      repulsion: {\n        centralGravity: { number: number },\n        springLength: { number: number },\n        springConstant: { number: number },\n        nodeDistance: { number: number },\n        damping: { number: number },\n        __type__: { object: object }\n      },\n      hierarchicalRepulsion: {\n        centralGravity: { number: number },\n        springLength: { number: number },\n        springConstant: { number: number },\n        nodeDistance: { number: number },\n        damping: { number: number },\n        __type__: { object: object }\n      },\n      maxVelocity: { number: number },\n      minVelocity: { number: number }, // px/s\n      solver: { string: ['barnesHut', 'repulsion', 'hierarchicalRepulsion', 'forceAtlas2Based'] },\n      stabilization: {\n        enabled: { boolean: boolean },\n        iterations: { number: number }, // maximum number of iteration to stabilize\n        updateInterval: { number: number },\n        onlyDynamicEdges: { boolean: boolean },\n        fit: { boolean: boolean },\n        __type__: { object: object, boolean: boolean }\n      },\n      timestep: { number: number },\n      adaptiveTimestep: { boolean: boolean },\n      __type__: { object: object, boolean: boolean }\n    },\n\n    //globals :\n    autoResize: { boolean: boolean },\n    clickToUse: { boolean: boolean },\n    locale: { string: string },\n    locales: {\n      __any__: { any: any },\n      __type__: { object: object }\n    },\n    height: { string: string },\n    width: { string: string },\n    __type__: { object: object }\n  };\n\n  allOptions.groups.__any__ = allOptions.nodes;\n  allOptions.manipulation.controlNodeStyle = allOptions.nodes;\n\n  var configureOptions = {\n    nodes: {\n      borderWidth: [1, 0, 10, 1],\n      borderWidthSelected: [2, 0, 10, 1],\n      color: {\n        border: ['color', '#2B7CE9'],\n        background: ['color', '#97C2FC'],\n        highlight: {\n          border: ['color', '#2B7CE9'],\n          background: ['color', '#D2E5FF']\n        },\n        hover: {\n          border: ['color', '#2B7CE9'],\n          background: ['color', '#D2E5FF']\n        }\n      },\n      fixed: {\n        x: false,\n        y: false\n      },\n      font: {\n        color: ['color', '#343434'],\n        size: [14, 0, 100, 1], // px\n        face: ['arial', 'verdana', 'tahoma'],\n        background: ['color', 'none'],\n        strokeWidth: [0, 0, 50, 1], // px\n        strokeColor: ['color', '#ffffff']\n      },\n      //group: 'string',\n      hidden: false,\n      labelHighlightBold: true,\n      //icon: {\n      //  face: 'string',  //'FontAwesome',\n      //  code: 'string',  //'\\uf007',\n      //  size: [50, 0, 200, 1],  //50,\n      //  color: ['color','#2B7CE9']   //'#aa00ff'\n      //},\n      //image: 'string', // --> URL\n      physics: true,\n      scaling: {\n        min: [10, 0, 200, 1],\n        max: [30, 0, 200, 1],\n        label: {\n          enabled: false,\n          min: [14, 0, 200, 1],\n          max: [30, 0, 200, 1],\n          maxVisible: [30, 0, 200, 1],\n          drawThreshold: [5, 0, 20, 1]\n        }\n      },\n      shadow: {\n        enabled: false,\n        color: 'rgba(0,0,0,0.5)',\n        size: [10, 0, 20, 1],\n        x: [5, -30, 30, 1],\n        y: [5, -30, 30, 1]\n      },\n      shape: ['ellipse', 'box', 'circle', 'database', 'diamond', 'dot', 'square', 'star', 'text', 'triangle', 'triangleDown'],\n      shapeProperties: {\n        borderDashes: false,\n        borderRadius: [6, 0, 20, 1],\n        interpolation: true,\n        useImageSize: false\n      },\n      size: [25, 0, 200, 1]\n    },\n    edges: {\n      arrows: {\n        to: { enabled: false, scaleFactor: [1, 0, 3, 0.05], type: 'arrow' },\n        middle: { enabled: false, scaleFactor: [1, 0, 3, 0.05], type: 'arrow' },\n        from: { enabled: false, scaleFactor: [1, 0, 3, 0.05], type: 'arrow' }\n      },\n      arrowStrikethrough: true,\n      color: {\n        color: ['color', '#848484'],\n        highlight: ['color', '#848484'],\n        hover: ['color', '#848484'],\n        inherit: ['from', 'to', 'both', true, false],\n        opacity: [1, 0, 1, 0.05]\n      },\n      dashes: false,\n      font: {\n        color: ['color', '#343434'],\n        size: [14, 0, 100, 1], // px\n        face: ['arial', 'verdana', 'tahoma'],\n        background: ['color', 'none'],\n        strokeWidth: [2, 0, 50, 1], // px\n        strokeColor: ['color', '#ffffff'],\n        align: ['horizontal', 'top', 'middle', 'bottom']\n      },\n      hidden: false,\n      hoverWidth: [1.5, 0, 5, 0.1],\n      labelHighlightBold: true,\n      physics: true,\n      scaling: {\n        min: [1, 0, 100, 1],\n        max: [15, 0, 100, 1],\n        label: {\n          enabled: true,\n          min: [14, 0, 200, 1],\n          max: [30, 0, 200, 1],\n          maxVisible: [30, 0, 200, 1],\n          drawThreshold: [5, 0, 20, 1]\n        }\n      },\n      selectionWidth: [1.5, 0, 5, 0.1],\n      selfReferenceSize: [20, 0, 200, 1],\n      shadow: {\n        enabled: false,\n        color: 'rgba(0,0,0,0.5)',\n        size: [10, 0, 20, 1],\n        x: [5, -30, 30, 1],\n        y: [5, -30, 30, 1]\n      },\n      smooth: {\n        enabled: true,\n        type: ['dynamic', 'continuous', 'discrete', 'diagonalCross', 'straightCross', 'horizontal', 'vertical', 'curvedCW', 'curvedCCW', 'cubicBezier'],\n        forceDirection: ['horizontal', 'vertical', 'none'],\n        roundness: [0.5, 0, 1, 0.05]\n      },\n      width: [1, 0, 30, 1]\n    },\n    layout: {\n      //randomSeed: [0, 0, 500, 1],\n      //improvedLayout: true,\n      hierarchical: {\n        enabled: false,\n        levelSeparation: [150, 20, 500, 5],\n        nodeSpacing: [100, 20, 500, 5],\n        treeSpacing: [200, 20, 500, 5],\n        blockShifting: true,\n        edgeMinimization: true,\n        parentCentralization: true,\n        direction: ['UD', 'DU', 'LR', 'RL'], // UD, DU, LR, RL\n        sortMethod: ['hubsize', 'directed'] // hubsize, directed\n      }\n    },\n    interaction: {\n      dragNodes: true,\n      dragView: true,\n      hideEdgesOnDrag: false,\n      hideNodesOnDrag: false,\n      hover: false,\n      keyboard: {\n        enabled: false,\n        speed: { x: [10, 0, 40, 1], y: [10, 0, 40, 1], zoom: [0.02, 0, 0.1, 0.005] },\n        bindToWindow: true\n      },\n      multiselect: false,\n      navigationButtons: false,\n      selectable: true,\n      selectConnectedEdges: true,\n      hoverConnectedEdges: true,\n      tooltipDelay: [300, 0, 1000, 25],\n      zoomView: true\n    },\n    manipulation: {\n      enabled: false,\n      initiallyActive: false\n    },\n    physics: {\n      enabled: true,\n      barnesHut: {\n        //theta: [0.5, 0.1, 1, 0.05],\n        gravitationalConstant: [-2000, -30000, 0, 50],\n        centralGravity: [0.3, 0, 10, 0.05],\n        springLength: [95, 0, 500, 5],\n        springConstant: [0.04, 0, 1.2, 0.005],\n        damping: [0.09, 0, 1, 0.01],\n        avoidOverlap: [0, 0, 1, 0.01]\n      },\n      forceAtlas2Based: {\n        //theta: [0.5, 0.1, 1, 0.05],\n        gravitationalConstant: [-50, -500, 0, 1],\n        centralGravity: [0.01, 0, 1, 0.005],\n        springLength: [95, 0, 500, 5],\n        springConstant: [0.08, 0, 1.2, 0.005],\n        damping: [0.4, 0, 1, 0.01],\n        avoidOverlap: [0, 0, 1, 0.01]\n      },\n      repulsion: {\n        centralGravity: [0.2, 0, 10, 0.05],\n        springLength: [200, 0, 500, 5],\n        springConstant: [0.05, 0, 1.2, 0.005],\n        nodeDistance: [100, 0, 500, 5],\n        damping: [0.09, 0, 1, 0.01]\n      },\n      hierarchicalRepulsion: {\n        centralGravity: [0.2, 0, 10, 0.05],\n        springLength: [100, 0, 500, 5],\n        springConstant: [0.01, 0, 1.2, 0.005],\n        nodeDistance: [120, 0, 500, 5],\n        damping: [0.09, 0, 1, 0.01]\n      },\n      maxVelocity: [50, 0, 150, 1],\n      minVelocity: [0.1, 0.01, 0.5, 0.01],\n      solver: ['barnesHut', 'forceAtlas2Based', 'repulsion', 'hierarchicalRepulsion'],\n      timestep: [0.5, 0.01, 1, 0.01]\n    }\n  };\n\n  exports.allOptions = allOptions;\n  exports.configureOptions = configureOptions;\n\n/***/ },\n/* 117 */\n/***/ function(module, exports, __webpack_require__) {\n\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // distance finding algorithm\n\n\n  var _FloydWarshall = __webpack_require__(118);\n\n  var _FloydWarshall2 = _interopRequireDefault(_FloydWarshall);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  /**\n   * KamadaKawai positions the nodes initially based on\n   *\n   * \"AN ALGORITHM FOR DRAWING GENERAL UNDIRECTED GRAPHS\"\n   * -- Tomihisa KAMADA and Satoru KAWAI in 1989\n   *\n   * Possible optimizations in the distance calculation can be implemented.\n   */\n  var KamadaKawai = function () {\n    function KamadaKawai(body, edgeLength, edgeStrength) {\n      _classCallCheck(this, KamadaKawai);\n\n      this.body = body;\n      this.springLength = edgeLength;\n      this.springConstant = edgeStrength;\n      this.distanceSolver = new _FloydWarshall2.default();\n    }\n\n    /**\n     * Not sure if needed but can be used to update the spring length and spring constant\n     * @param options\n     */\n\n\n    _createClass(KamadaKawai, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        if (options) {\n          if (options.springLength) {\n            this.springLength = options.springLength;\n          }\n          if (options.springConstant) {\n            this.springConstant = options.springConstant;\n          }\n        }\n      }\n\n      /**\n       * Position the system\n       * @param nodesArray\n       * @param edgesArray\n       */\n\n    }, {\n      key: \"solve\",\n      value: function solve(nodesArray, edgesArray) {\n        var ignoreClusters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        // get distance matrix\n        var D_matrix = this.distanceSolver.getDistances(this.body, nodesArray, edgesArray); // distance matrix\n\n        // get the L Matrix\n        this._createL_matrix(D_matrix);\n\n        // get the K Matrix\n        this._createK_matrix(D_matrix);\n\n        // calculate positions\n        var threshold = 0.01;\n        var innerThreshold = 1;\n        var iterations = 0;\n        var maxIterations = Math.max(1000, Math.min(10 * this.body.nodeIndices.length, 6000));\n        var maxInnerIterations = 5;\n\n        var maxEnergy = 1e9;\n        var highE_nodeId = 0,\n            dE_dx = 0,\n            dE_dy = 0,\n            delta_m = 0,\n            subIterations = 0;\n\n        while (maxEnergy > threshold && iterations < maxIterations) {\n          iterations += 1;\n\n          var _getHighestEnergyNode2 = this._getHighestEnergyNode(ignoreClusters);\n\n          var _getHighestEnergyNode3 = _slicedToArray(_getHighestEnergyNode2, 4);\n\n          highE_nodeId = _getHighestEnergyNode3[0];\n          maxEnergy = _getHighestEnergyNode3[1];\n          dE_dx = _getHighestEnergyNode3[2];\n          dE_dy = _getHighestEnergyNode3[3];\n\n          delta_m = maxEnergy;\n          subIterations = 0;\n          while (delta_m > innerThreshold && subIterations < maxInnerIterations) {\n            subIterations += 1;\n            this._moveNode(highE_nodeId, dE_dx, dE_dy);\n\n            var _getEnergy2 = this._getEnergy(highE_nodeId);\n\n            var _getEnergy3 = _slicedToArray(_getEnergy2, 3);\n\n            delta_m = _getEnergy3[0];\n            dE_dx = _getEnergy3[1];\n            dE_dy = _getEnergy3[2];\n          }\n        }\n      }\n\n      /**\n       * get the node with the highest energy\n       * @returns {*[]}\n       * @private\n       */\n\n    }, {\n      key: \"_getHighestEnergyNode\",\n      value: function _getHighestEnergyNode(ignoreClusters) {\n        var nodesArray = this.body.nodeIndices;\n        var nodes = this.body.nodes;\n        var maxEnergy = 0;\n        var maxEnergyNodeId = nodesArray[0];\n        var dE_dx_max = 0,\n            dE_dy_max = 0;\n\n        for (var nodeIdx = 0; nodeIdx < nodesArray.length; nodeIdx++) {\n          var m = nodesArray[nodeIdx];\n          // by not evaluating nodes with predefined positions we should only move nodes that have no positions.\n          if (nodes[m].predefinedPosition === false || nodes[m].isCluster === true && ignoreClusters === true || nodes[m].options.fixed.x === true || nodes[m].options.fixed.y === true) {\n            var _getEnergy4 = this._getEnergy(m),\n                _getEnergy5 = _slicedToArray(_getEnergy4, 3),\n                delta_m = _getEnergy5[0],\n                dE_dx = _getEnergy5[1],\n                dE_dy = _getEnergy5[2];\n\n            if (maxEnergy < delta_m) {\n              maxEnergy = delta_m;\n              maxEnergyNodeId = m;\n              dE_dx_max = dE_dx;\n              dE_dy_max = dE_dy;\n            }\n          }\n        }\n\n        return [maxEnergyNodeId, maxEnergy, dE_dx_max, dE_dy_max];\n      }\n\n      /**\n       * calculate the energy of a single node\n       * @param m\n       * @returns {*[]}\n       * @private\n       */\n\n    }, {\n      key: \"_getEnergy\",\n      value: function _getEnergy(m) {\n        var nodesArray = this.body.nodeIndices;\n        var nodes = this.body.nodes;\n\n        var x_m = nodes[m].x;\n        var y_m = nodes[m].y;\n        var dE_dx = 0;\n        var dE_dy = 0;\n        for (var iIdx = 0; iIdx < nodesArray.length; iIdx++) {\n          var i = nodesArray[iIdx];\n          if (i !== m) {\n            var x_i = nodes[i].x;\n            var y_i = nodes[i].y;\n            var denominator = 1.0 / Math.sqrt(Math.pow(x_m - x_i, 2) + Math.pow(y_m - y_i, 2));\n            dE_dx += this.K_matrix[m][i] * (x_m - x_i - this.L_matrix[m][i] * (x_m - x_i) * denominator);\n            dE_dy += this.K_matrix[m][i] * (y_m - y_i - this.L_matrix[m][i] * (y_m - y_i) * denominator);\n          }\n        }\n\n        var delta_m = Math.sqrt(Math.pow(dE_dx, 2) + Math.pow(dE_dy, 2));\n        return [delta_m, dE_dx, dE_dy];\n      }\n\n      /**\n       * move the node based on it's energy\n       * the dx and dy are calculated from the linear system proposed by Kamada and Kawai\n       * @param m\n       * @param dE_dx\n       * @param dE_dy\n       * @private\n       */\n\n    }, {\n      key: \"_moveNode\",\n      value: function _moveNode(m, dE_dx, dE_dy) {\n        var nodesArray = this.body.nodeIndices;\n        var nodes = this.body.nodes;\n        var d2E_dx2 = 0;\n        var d2E_dxdy = 0;\n        var d2E_dy2 = 0;\n\n        var x_m = nodes[m].x;\n        var y_m = nodes[m].y;\n        for (var iIdx = 0; iIdx < nodesArray.length; iIdx++) {\n          var i = nodesArray[iIdx];\n          if (i !== m) {\n            var x_i = nodes[i].x;\n            var y_i = nodes[i].y;\n            var denominator = 1.0 / Math.pow(Math.pow(x_m - x_i, 2) + Math.pow(y_m - y_i, 2), 1.5);\n            d2E_dx2 += this.K_matrix[m][i] * (1 - this.L_matrix[m][i] * Math.pow(y_m - y_i, 2) * denominator);\n            d2E_dxdy += this.K_matrix[m][i] * (this.L_matrix[m][i] * (x_m - x_i) * (y_m - y_i) * denominator);\n            d2E_dy2 += this.K_matrix[m][i] * (1 - this.L_matrix[m][i] * Math.pow(x_m - x_i, 2) * denominator);\n          }\n        }\n        // make the variable names easier to make the solving of the linear system easier to read\n        var A = d2E_dx2,\n            B = d2E_dxdy,\n            C = dE_dx,\n            D = d2E_dy2,\n            E = dE_dy;\n\n        // solve the linear system for dx and dy\n        var dy = (C / A + E / B) / (B / A - D / B);\n        var dx = -(B * dy + C) / A;\n\n        // move the node\n        nodes[m].x += dx;\n        nodes[m].y += dy;\n      }\n\n      /**\n       * Create the L matrix: edge length times shortest path\n       * @param D_matrix\n       * @private\n       */\n\n    }, {\n      key: \"_createL_matrix\",\n      value: function _createL_matrix(D_matrix) {\n        var nodesArray = this.body.nodeIndices;\n        var edgeLength = this.springLength;\n\n        this.L_matrix = [];\n        for (var i = 0; i < nodesArray.length; i++) {\n          this.L_matrix[nodesArray[i]] = {};\n          for (var j = 0; j < nodesArray.length; j++) {\n            this.L_matrix[nodesArray[i]][nodesArray[j]] = edgeLength * D_matrix[nodesArray[i]][nodesArray[j]];\n          }\n        }\n      }\n\n      /**\n       * Create the K matrix: spring constants times shortest path\n       * @param D_matrix\n       * @private\n       */\n\n    }, {\n      key: \"_createK_matrix\",\n      value: function _createK_matrix(D_matrix) {\n        var nodesArray = this.body.nodeIndices;\n        var edgeStrength = this.springConstant;\n\n        this.K_matrix = [];\n        for (var i = 0; i < nodesArray.length; i++) {\n          this.K_matrix[nodesArray[i]] = {};\n          for (var j = 0; j < nodesArray.length; j++) {\n            this.K_matrix[nodesArray[i]][nodesArray[j]] = edgeStrength * Math.pow(D_matrix[nodesArray[i]][nodesArray[j]], -2);\n          }\n        }\n      }\n    }]);\n\n    return KamadaKawai;\n  }();\n\n  exports.default = KamadaKawai;\n\n/***/ },\n/* 118 */\n/***/ function(module, exports) {\n\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  /**\n   * Created by Alex on 10-Aug-15.\n   */\n\n  var FloydWarshall = function () {\n    function FloydWarshall() {\n      _classCallCheck(this, FloydWarshall);\n    }\n\n    _createClass(FloydWarshall, [{\n      key: \"getDistances\",\n      value: function getDistances(body, nodesArray, edgesArray) {\n        var D_matrix = {};\n        var edges = body.edges;\n\n        // prepare matrix with large numbers\n        for (var i = 0; i < nodesArray.length; i++) {\n          D_matrix[nodesArray[i]] = {};\n          D_matrix[nodesArray[i]] = {};\n          for (var j = 0; j < nodesArray.length; j++) {\n            D_matrix[nodesArray[i]][nodesArray[j]] = i == j ? 0 : 1e9;\n            D_matrix[nodesArray[i]][nodesArray[j]] = i == j ? 0 : 1e9;\n          }\n        }\n\n        // put the weights for the edges in. This assumes unidirectionality.\n        for (var _i = 0; _i < edgesArray.length; _i++) {\n          var edge = edges[edgesArray[_i]];\n          // edge has to be connected if it counts to the distances. If it is connected to inner clusters it will crash so we also check if it is in the D_matrix\n          if (edge.connected === true && D_matrix[edge.fromId] !== undefined && D_matrix[edge.toId] !== undefined) {\n            D_matrix[edge.fromId][edge.toId] = 1;\n            D_matrix[edge.toId][edge.fromId] = 1;\n          }\n        }\n\n        var nodeCount = nodesArray.length;\n\n        // Adapted FloydWarshall based on unidirectionality to greatly reduce complexity.\n        for (var k = 0; k < nodeCount; k++) {\n          for (var _i2 = 0; _i2 < nodeCount - 1; _i2++) {\n            for (var _j = _i2 + 1; _j < nodeCount; _j++) {\n              D_matrix[nodesArray[_i2]][nodesArray[_j]] = Math.min(D_matrix[nodesArray[_i2]][nodesArray[_j]], D_matrix[nodesArray[_i2]][nodesArray[k]] + D_matrix[nodesArray[k]][nodesArray[_j]]);\n              D_matrix[nodesArray[_j]][nodesArray[_i2]] = D_matrix[nodesArray[_i2]][nodesArray[_j]];\n            }\n          }\n        }\n\n        return D_matrix;\n      }\n    }]);\n\n    return FloydWarshall;\n  }();\n\n  exports.default = FloydWarshall;\n\n/***/ },\n/* 119 */\n/***/ function(module, exports) {\n\n  'use strict';\n\n  /**\n   * Canvas shapes used by Network\n   */\n  if (typeof CanvasRenderingContext2D !== 'undefined') {\n\n    /**\n     * Draw a circle shape\n     */\n    CanvasRenderingContext2D.prototype.circle = function (x, y, r) {\n      this.beginPath();\n      this.arc(x, y, r, 0, 2 * Math.PI, false);\n      this.closePath();\n    };\n\n    /**\n     * Draw a square shape\n     * @param {Number} x horizontal center\n     * @param {Number} y vertical center\n     * @param {Number} r   size, width and height of the square\n     */\n    CanvasRenderingContext2D.prototype.square = function (x, y, r) {\n      this.beginPath();\n      this.rect(x - r, y - r, r * 2, r * 2);\n      this.closePath();\n    };\n\n    /**\n     * Draw a triangle shape\n     * @param {Number} x horizontal center\n     * @param {Number} y vertical center\n     * @param {Number} r   radius, half the length of the sides of the triangle\n     */\n    CanvasRenderingContext2D.prototype.triangle = function (x, y, r) {\n      // http://en.wikipedia.org/wiki/Equilateral_triangle\n      this.beginPath();\n\n      // the change in radius and the offset is here to center the shape\n      r *= 1.15;\n      y += 0.275 * r;\n\n      var s = r * 2;\n      var s2 = s / 2;\n      var ir = Math.sqrt(3) / 6 * s; // radius of inner circle\n      var h = Math.sqrt(s * s - s2 * s2); // height\n\n\n      this.moveTo(x, y - (h - ir));\n      this.lineTo(x + s2, y + ir);\n      this.lineTo(x - s2, y + ir);\n      this.lineTo(x, y - (h - ir));\n      this.closePath();\n    };\n\n    /**\n     * Draw a triangle shape in downward orientation\n     * @param {Number} x horizontal center\n     * @param {Number} y vertical center\n     * @param {Number} r radius\n     */\n    CanvasRenderingContext2D.prototype.triangleDown = function (x, y, r) {\n      // http://en.wikipedia.org/wiki/Equilateral_triangle\n      this.beginPath();\n\n      // the change in radius and the offset is here to center the shape\n      r *= 1.15;\n      y -= 0.275 * r;\n\n      var s = r * 2;\n      var s2 = s / 2;\n      var ir = Math.sqrt(3) / 6 * s; // radius of inner circle\n      var h = Math.sqrt(s * s - s2 * s2); // height\n\n      this.moveTo(x, y + (h - ir));\n      this.lineTo(x + s2, y - ir);\n      this.lineTo(x - s2, y - ir);\n      this.lineTo(x, y + (h - ir));\n      this.closePath();\n    };\n\n    /**\n     * Draw a star shape, a star with 5 points\n     * @param {Number} x horizontal center\n     * @param {Number} y vertical center\n     * @param {Number} r   radius, half the length of the sides of the triangle\n     */\n    CanvasRenderingContext2D.prototype.star = function (x, y, r) {\n      // http://www.html5canvastutorials.com/labs/html5-canvas-star-spinner/\n      this.beginPath();\n\n      // the change in radius and the offset is here to center the shape\n      r *= 0.82;\n      y += 0.1 * r;\n\n      for (var n = 0; n < 10; n++) {\n        var radius = n % 2 === 0 ? r * 1.3 : r * 0.5;\n        this.lineTo(x + radius * Math.sin(n * 2 * Math.PI / 10), y - radius * Math.cos(n * 2 * Math.PI / 10));\n      }\n\n      this.closePath();\n    };\n\n    /**\n     * Draw a Diamond shape\n     * @param {Number} x horizontal center\n     * @param {Number} y vertical center\n     * @param {Number} r   radius, half the length of the sides of the triangle\n     */\n    CanvasRenderingContext2D.prototype.diamond = function (x, y, r) {\n      // http://www.html5canvastutorials.com/labs/html5-canvas-star-spinner/\n      this.beginPath();\n\n      this.lineTo(x, y + r);\n      this.lineTo(x + r, y);\n      this.lineTo(x, y - r);\n      this.lineTo(x - r, y);\n\n      this.closePath();\n    };\n\n    /**\n     * http://stackoverflow.com/questions/1255512/how-to-draw-a-rounded-rectangle-on-html-canvas\n     */\n    CanvasRenderingContext2D.prototype.roundRect = function (x, y, w, h, r) {\n      var r2d = Math.PI / 180;\n      if (w - 2 * r < 0) {\n        r = w / 2;\n      } //ensure that the radius isn't too large for x\n      if (h - 2 * r < 0) {\n        r = h / 2;\n      } //ensure that the radius isn't too large for y\n      this.beginPath();\n      this.moveTo(x + r, y);\n      this.lineTo(x + w - r, y);\n      this.arc(x + w - r, y + r, r, r2d * 270, r2d * 360, false);\n      this.lineTo(x + w, y + h - r);\n      this.arc(x + w - r, y + h - r, r, 0, r2d * 90, false);\n      this.lineTo(x + r, y + h);\n      this.arc(x + r, y + h - r, r, r2d * 90, r2d * 180, false);\n      this.lineTo(x, y + r);\n      this.arc(x + r, y + r, r, r2d * 180, r2d * 270, false);\n      this.closePath();\n    };\n\n    /**\n     * http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n     */\n    CanvasRenderingContext2D.prototype.ellipse = function (x, y, w, h) {\n      var kappa = .5522848,\n          ox = w / 2 * kappa,\n          // control point offset horizontal\n      oy = h / 2 * kappa,\n          // control point offset vertical\n      xe = x + w,\n          // x-end\n      ye = y + h,\n          // y-end\n      xm = x + w / 2,\n          // x-middle\n      ym = y + h / 2; // y-middle\n\n      this.beginPath();\n      this.moveTo(x, ym);\n      this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n      this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n      this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n      this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n      this.closePath();\n    };\n\n    /**\n     * http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n     */\n    CanvasRenderingContext2D.prototype.database = function (x, y, w, h) {\n      var f = 1 / 3;\n      var wEllipse = w;\n      var hEllipse = h * f;\n\n      var kappa = .5522848,\n          ox = wEllipse / 2 * kappa,\n          // control point offset horizontal\n      oy = hEllipse / 2 * kappa,\n          // control point offset vertical\n      xe = x + wEllipse,\n          // x-end\n      ye = y + hEllipse,\n          // y-end\n      xm = x + wEllipse / 2,\n          // x-middle\n      ym = y + hEllipse / 2,\n          // y-middle\n      ymb = y + (h - hEllipse / 2),\n          // y-midlle, bottom ellipse\n      yeb = y + h; // y-end, bottom ellipse\n\n      this.beginPath();\n      this.moveTo(xe, ym);\n\n      this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n      this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\n      this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n      this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n\n      this.lineTo(xe, ymb);\n\n      this.bezierCurveTo(xe, ymb + oy, xm + ox, yeb, xm, yeb);\n      this.bezierCurveTo(xm - ox, yeb, x, ymb + oy, x, ymb);\n\n      this.lineTo(x, ym);\n    };\n\n    /**\n     * Draw an arrow at the end of a line with the given angle.\n     */\n    CanvasRenderingContext2D.prototype.arrowEndpoint = function (x, y, angle, length) {\n      // tail\n      var xt = x - length * Math.cos(angle);\n      var yt = y - length * Math.sin(angle);\n\n      // inner tail\n      var xi = x - length * 0.9 * Math.cos(angle);\n      var yi = y - length * 0.9 * Math.sin(angle);\n\n      // left\n      var xl = xt + length / 3 * Math.cos(angle + 0.5 * Math.PI);\n      var yl = yt + length / 3 * Math.sin(angle + 0.5 * Math.PI);\n\n      // right\n      var xr = xt + length / 3 * Math.cos(angle - 0.5 * Math.PI);\n      var yr = yt + length / 3 * Math.sin(angle - 0.5 * Math.PI);\n\n      this.beginPath();\n      this.moveTo(x, y);\n      this.lineTo(xl, yl);\n      this.lineTo(xi, yi);\n      this.lineTo(xr, yr);\n      this.closePath();\n    };\n\n    /**\n     * Draw an circle an the end of an line with the given angle.\n     */\n    CanvasRenderingContext2D.prototype.circleEndpoint = function (x, y, angle, length) {\n      var radius = length * 0.4;\n      var xc = x - radius * Math.cos(angle);\n      var yc = y - radius * Math.sin(angle);\n      this.circle(xc, yc, radius);\n    };\n\n    /**\n     * Sets up the dashedLine functionality for drawing\n     * Original code came from http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\n     * @author David Jordan\n     * @date 2012-08-08\n     */\n    CanvasRenderingContext2D.prototype.dashedLine = function (x, y, x2, y2, pattern) {\n      this.beginPath();\n      this.moveTo(x, y);\n\n      var patternLength = pattern.length;\n      var dx = x2 - x;\n      var dy = y2 - y;\n      var slope = dy / dx;\n      var distRemaining = Math.sqrt(dx * dx + dy * dy);\n      var patternIndex = 0;\n      var draw = true;\n      var xStep = 0;\n      var dashLength = pattern[0];\n\n      while (distRemaining >= 0.1) {\n        dashLength = pattern[patternIndex++ % patternLength];\n        if (dashLength > distRemaining) {\n          dashLength = distRemaining;\n        }\n\n        xStep = Math.sqrt(dashLength * dashLength / (1 + slope * slope));\n        xStep = dx < 0 ? -xStep : xStep;\n        x += xStep;\n        y += slope * xStep;\n\n        if (draw === true) {\n          this.lineTo(x, y);\n        } else {\n          this.moveTo(x, y);\n        }\n\n        distRemaining -= dashLength;\n        draw = !draw;\n      }\n    };\n  }\n\n/***/ },\n/* 120 */\n/***/ function(module, exports) {\n\n  'use strict';\n\n  /**\n   * Parse a text source containing data in DOT language into a JSON object.\n   * The object contains two lists: one with nodes and one with edges.\n   *\n   * DOT language reference: http://www.graphviz.org/doc/info/lang.html\n   *\n   * DOT language attributes: http://graphviz.org/content/attrs\n   *\n   * @param {String} data     Text containing a graph in DOT-notation\n   * @return {Object} graph   An object containing two parameters:\n   *                          {Object[]} nodes\n   *                          {Object[]} edges\n   */\n  function parseDOT(data) {\n    dot = data;\n    return parseGraph();\n  }\n\n  // mapping of attributes from DOT (the keys) to vis.js (the values)\n  var NODE_ATTR_MAPPING = {\n    'fontsize': 'font.size',\n    'fontcolor': 'font.color',\n    'labelfontcolor': 'font.color',\n    'fontname': 'font.face',\n    'color': ['color.border', 'color.background'],\n    'fillcolor': 'color.background',\n    'tooltip': 'title',\n    'labeltooltip': 'title'\n  };\n  var EDGE_ATTR_MAPPING = Object.create(NODE_ATTR_MAPPING);\n  EDGE_ATTR_MAPPING.color = 'color.color';\n\n  // token types enumeration\n  var TOKENTYPE = {\n    NULL: 0,\n    DELIMITER: 1,\n    IDENTIFIER: 2,\n    UNKNOWN: 3\n  };\n\n  // map with all delimiters\n  var DELIMITERS = {\n    '{': true,\n    '}': true,\n    '[': true,\n    ']': true,\n    ';': true,\n    '=': true,\n    ',': true,\n\n    '->': true,\n    '--': true\n  };\n\n  var dot = ''; // current dot file\n  var index = 0; // current index in dot file\n  var c = ''; // current token character in expr\n  var token = ''; // current token\n  var tokenType = TOKENTYPE.NULL; // type of the token\n\n  /**\n   * Get the first character from the dot file.\n   * The character is stored into the char c. If the end of the dot file is\n   * reached, the function puts an empty string in c.\n   */\n  function first() {\n    index = 0;\n    c = dot.charAt(0);\n  }\n\n  /**\n   * Get the next character from the dot file.\n   * The character is stored into the char c. If the end of the dot file is\n   * reached, the function puts an empty string in c.\n   */\n  function next() {\n    index++;\n    c = dot.charAt(index);\n  }\n\n  /**\n   * Preview the next character from the dot file.\n   * @return {String} cNext\n   */\n  function nextPreview() {\n    return dot.charAt(index + 1);\n  }\n\n  /**\n   * Test whether given character is alphabetic or numeric\n   * @param {String} c\n   * @return {Boolean} isAlphaNumeric\n   */\n  var regexAlphaNumeric = /[a-zA-Z_0-9.:#]/;\n  function isAlphaNumeric(c) {\n    return regexAlphaNumeric.test(c);\n  }\n\n  /**\n   * Merge all options of object b into object b\n   * @param {Object} a\n   * @param {Object} b\n   * @return {Object} a\n   */\n  function merge(a, b) {\n    if (!a) {\n      a = {};\n    }\n\n    if (b) {\n      for (var name in b) {\n        if (b.hasOwnProperty(name)) {\n          a[name] = b[name];\n        }\n      }\n    }\n    return a;\n  }\n\n  /**\n   * Set a value in an object, where the provided parameter name can be a\n   * path with nested parameters. For example:\n   *\n   *     var obj = {a: 2};\n   *     setValue(obj, 'b.c', 3);     // obj = {a: 2, b: {c: 3}}\n   *\n   * @param {Object} obj\n   * @param {String} path  A parameter name or dot-separated parameter path,\n   *                      like \"color.highlight.border\".\n   * @param {*} value\n   */\n  function setValue(obj, path, value) {\n    var keys = path.split('.');\n    var o = obj;\n    while (keys.length) {\n      var key = keys.shift();\n      if (keys.length) {\n        // this isn't the end point\n        if (!o[key]) {\n          o[key] = {};\n        }\n        o = o[key];\n      } else {\n        // this is the end point\n        o[key] = value;\n      }\n    }\n  }\n\n  /**\n   * Add a node to a graph object. If there is already a node with\n   * the same id, their attributes will be merged.\n   * @param {Object} graph\n   * @param {Object} node\n   */\n  function addNode(graph, node) {\n    var i, len;\n    var current = null;\n\n    // find root graph (in case of subgraph)\n    var graphs = [graph]; // list with all graphs from current graph to root graph\n    var root = graph;\n    while (root.parent) {\n      graphs.push(root.parent);\n      root = root.parent;\n    }\n\n    // find existing node (at root level) by its id\n    if (root.nodes) {\n      for (i = 0, len = root.nodes.length; i < len; i++) {\n        if (node.id === root.nodes[i].id) {\n          current = root.nodes[i];\n          break;\n        }\n      }\n    }\n\n    if (!current) {\n      // this is a new node\n      current = {\n        id: node.id\n      };\n      if (graph.node) {\n        // clone default attributes\n        current.attr = merge(current.attr, graph.node);\n      }\n    }\n\n    // add node to this (sub)graph and all its parent graphs\n    for (i = graphs.length - 1; i >= 0; i--) {\n      var g = graphs[i];\n\n      if (!g.nodes) {\n        g.nodes = [];\n      }\n      if (g.nodes.indexOf(current) === -1) {\n        g.nodes.push(current);\n      }\n    }\n\n    // merge attributes\n    if (node.attr) {\n      current.attr = merge(current.attr, node.attr);\n    }\n  }\n\n  /**\n   * Add an edge to a graph object\n   * @param {Object} graph\n   * @param {Object} edge\n   */\n  function addEdge(graph, edge) {\n    if (!graph.edges) {\n      graph.edges = [];\n    }\n    graph.edges.push(edge);\n    if (graph.edge) {\n      var attr = merge({}, graph.edge); // clone default attributes\n      edge.attr = merge(attr, edge.attr); // merge attributes\n    }\n  }\n\n  /**\n   * Create an edge to a graph object\n   * @param {Object} graph\n   * @param {String | Number | Object} from\n   * @param {String | Number | Object} to\n   * @param {String} type\n   * @param {Object | null} attr\n   * @return {Object} edge\n   */\n  function createEdge(graph, from, to, type, attr) {\n    var edge = {\n      from: from,\n      to: to,\n      type: type\n    };\n\n    if (graph.edge) {\n      edge.attr = merge({}, graph.edge); // clone default attributes\n    }\n    edge.attr = merge(edge.attr || {}, attr); // merge attributes\n\n    return edge;\n  }\n\n  /**\n   * Get next token in the current dot file.\n   * The token and token type are available as token and tokenType\n   */\n  function getToken() {\n    tokenType = TOKENTYPE.NULL;\n    token = '';\n\n    // skip over whitespaces\n    while (c === ' ' || c === '\\t' || c === '\\n' || c === '\\r') {\n      // space, tab, enter\n      next();\n    }\n\n    do {\n      var isComment = false;\n\n      // skip comment\n      if (c === '#') {\n        // find the previous non-space character\n        var i = index - 1;\n        while (dot.charAt(i) === ' ' || dot.charAt(i) === '\\t') {\n          i--;\n        }\n        if (dot.charAt(i) === '\\n' || dot.charAt(i) === '') {\n          // the # is at the start of a line, this is indeed a line comment\n          while (c != '' && c != '\\n') {\n            next();\n          }\n          isComment = true;\n        }\n      }\n      if (c === '/' && nextPreview() === '/') {\n        // skip line comment\n        while (c != '' && c != '\\n') {\n          next();\n        }\n        isComment = true;\n      }\n      if (c === '/' && nextPreview() === '*') {\n        // skip block comment\n        while (c != '') {\n          if (c === '*' && nextPreview() === '/') {\n            // end of block comment found. skip these last two characters\n            next();\n            next();\n            break;\n          } else {\n            next();\n          }\n        }\n        isComment = true;\n      }\n\n      // skip over whitespaces\n      while (c === ' ' || c === '\\t' || c === '\\n' || c === '\\r') {\n        // space, tab, enter\n        next();\n      }\n    } while (isComment);\n\n    // check for end of dot file\n    if (c === '') {\n      // token is still empty\n      tokenType = TOKENTYPE.DELIMITER;\n      return;\n    }\n\n    // check for delimiters consisting of 2 characters\n    var c2 = c + nextPreview();\n    if (DELIMITERS[c2]) {\n      tokenType = TOKENTYPE.DELIMITER;\n      token = c2;\n      next();\n      next();\n      return;\n    }\n\n    // check for delimiters consisting of 1 character\n    if (DELIMITERS[c]) {\n      tokenType = TOKENTYPE.DELIMITER;\n      token = c;\n      next();\n      return;\n    }\n\n    // check for an identifier (number or string)\n    // TODO: more precise parsing of numbers/strings (and the port separator ':')\n    if (isAlphaNumeric(c) || c === '-') {\n      token += c;\n      next();\n\n      while (isAlphaNumeric(c)) {\n        token += c;\n        next();\n      }\n      if (token === 'false') {\n        token = false; // convert to boolean\n      } else if (token === 'true') {\n        token = true; // convert to boolean\n      } else if (!isNaN(Number(token))) {\n        token = Number(token); // convert to number\n      }\n      tokenType = TOKENTYPE.IDENTIFIER;\n      return;\n    }\n\n    // check for a string enclosed by double quotes\n    if (c === '\"') {\n      next();\n      while (c != '' && (c != '\"' || c === '\"' && nextPreview() === '\"')) {\n        token += c;\n        if (c === '\"') {\n          // skip the escape character\n          next();\n        }\n        next();\n      }\n      if (c != '\"') {\n        throw newSyntaxError('End of string \" expected');\n      }\n      next();\n      tokenType = TOKENTYPE.IDENTIFIER;\n      return;\n    }\n\n    // something unknown is found, wrong characters, a syntax error\n    tokenType = TOKENTYPE.UNKNOWN;\n    while (c != '') {\n      token += c;\n      next();\n    }\n    throw new SyntaxError('Syntax error in part \"' + chop(token, 30) + '\"');\n  }\n\n  /**\n   * Parse a graph.\n   * @returns {Object} graph\n   */\n  function parseGraph() {\n    var graph = {};\n\n    first();\n    getToken();\n\n    // optional strict keyword\n    if (token === 'strict') {\n      graph.strict = true;\n      getToken();\n    }\n\n    // graph or digraph keyword\n    if (token === 'graph' || token === 'digraph') {\n      graph.type = token;\n      getToken();\n    }\n\n    // optional graph id\n    if (tokenType === TOKENTYPE.IDENTIFIER) {\n      graph.id = token;\n      getToken();\n    }\n\n    // open angle bracket\n    if (token != '{') {\n      throw newSyntaxError('Angle bracket { expected');\n    }\n    getToken();\n\n    // statements\n    parseStatements(graph);\n\n    // close angle bracket\n    if (token != '}') {\n      throw newSyntaxError('Angle bracket } expected');\n    }\n    getToken();\n\n    // end of file\n    if (token !== '') {\n      throw newSyntaxError('End of file expected');\n    }\n    getToken();\n\n    // remove temporary default options\n    delete graph.node;\n    delete graph.edge;\n    delete graph.graph;\n\n    return graph;\n  }\n\n  /**\n   * Parse a list with statements.\n   * @param {Object} graph\n   */\n  function parseStatements(graph) {\n    while (token !== '' && token != '}') {\n      parseStatement(graph);\n      if (token === ';') {\n        getToken();\n      }\n    }\n  }\n\n  /**\n   * Parse a single statement. Can be a an attribute statement, node\n   * statement, a series of node statements and edge statements, or a\n   * parameter.\n   * @param {Object} graph\n   */\n  function parseStatement(graph) {\n    // parse subgraph\n    var subgraph = parseSubgraph(graph);\n    if (subgraph) {\n      // edge statements\n      parseEdge(graph, subgraph);\n\n      return;\n    }\n\n    // parse an attribute statement\n    var attr = parseAttributeStatement(graph);\n    if (attr) {\n      return;\n    }\n\n    // parse node\n    if (tokenType != TOKENTYPE.IDENTIFIER) {\n      throw newSyntaxError('Identifier expected');\n    }\n    var id = token; // id can be a string or a number\n    getToken();\n\n    if (token === '=') {\n      // id statement\n      getToken();\n      if (tokenType != TOKENTYPE.IDENTIFIER) {\n        throw newSyntaxError('Identifier expected');\n      }\n      graph[id] = token;\n      getToken();\n      // TODO: implement comma separated list with \"a_list: ID=ID [','] [a_list] \"\n    } else {\n      parseNodeStatement(graph, id);\n    }\n  }\n\n  /**\n   * Parse a subgraph\n   * @param {Object} graph    parent graph object\n   * @return {Object | null} subgraph\n   */\n  function parseSubgraph(graph) {\n    var subgraph = null;\n\n    // optional subgraph keyword\n    if (token === 'subgraph') {\n      subgraph = {};\n      subgraph.type = 'subgraph';\n      getToken();\n\n      // optional graph id\n      if (tokenType === TOKENTYPE.IDENTIFIER) {\n        subgraph.id = token;\n        getToken();\n      }\n    }\n\n    // open angle bracket\n    if (token === '{') {\n      getToken();\n\n      if (!subgraph) {\n        subgraph = {};\n      }\n      subgraph.parent = graph;\n      subgraph.node = graph.node;\n      subgraph.edge = graph.edge;\n      subgraph.graph = graph.graph;\n\n      // statements\n      parseStatements(subgraph);\n\n      // close angle bracket\n      if (token != '}') {\n        throw newSyntaxError('Angle bracket } expected');\n      }\n      getToken();\n\n      // remove temporary default options\n      delete subgraph.node;\n      delete subgraph.edge;\n      delete subgraph.graph;\n      delete subgraph.parent;\n\n      // register at the parent graph\n      if (!graph.subgraphs) {\n        graph.subgraphs = [];\n      }\n      graph.subgraphs.push(subgraph);\n    }\n\n    return subgraph;\n  }\n\n  /**\n   * parse an attribute statement like \"node [shape=circle fontSize=16]\".\n   * Available keywords are 'node', 'edge', 'graph'.\n   * The previous list with default attributes will be replaced\n   * @param {Object} graph\n   * @returns {String | null} keyword Returns the name of the parsed attribute\n   *                                  (node, edge, graph), or null if nothing\n   *                                  is parsed.\n   */\n  function parseAttributeStatement(graph) {\n    // attribute statements\n    if (token === 'node') {\n      getToken();\n\n      // node attributes\n      graph.node = parseAttributeList();\n      return 'node';\n    } else if (token === 'edge') {\n      getToken();\n\n      // edge attributes\n      graph.edge = parseAttributeList();\n      return 'edge';\n    } else if (token === 'graph') {\n      getToken();\n\n      // graph attributes\n      graph.graph = parseAttributeList();\n      return 'graph';\n    }\n\n    return null;\n  }\n\n  /**\n   * parse a node statement\n   * @param {Object} graph\n   * @param {String | Number} id\n   */\n  function parseNodeStatement(graph, id) {\n    // node statement\n    var node = {\n      id: id\n    };\n    var attr = parseAttributeList();\n    if (attr) {\n      node.attr = attr;\n    }\n    addNode(graph, node);\n\n    // edge statements\n    parseEdge(graph, id);\n  }\n\n  /**\n   * Parse an edge or a series of edges\n   * @param {Object} graph\n   * @param {String | Number} from        Id of the from node\n   */\n  function parseEdge(graph, from) {\n    while (token === '->' || token === '--') {\n      var to;\n      var type = token;\n      getToken();\n\n      var subgraph = parseSubgraph(graph);\n      if (subgraph) {\n        to = subgraph;\n      } else {\n        if (tokenType != TOKENTYPE.IDENTIFIER) {\n          throw newSyntaxError('Identifier or subgraph expected');\n        }\n        to = token;\n        addNode(graph, {\n          id: to\n        });\n        getToken();\n      }\n\n      // parse edge attributes\n      var attr = parseAttributeList();\n\n      // create edge\n      var edge = createEdge(graph, from, to, type, attr);\n      addEdge(graph, edge);\n\n      from = to;\n    }\n  }\n\n  /**\n   * Parse a set with attributes,\n   * for example [label=\"1.000\", shape=solid]\n   * @return {Object | null} attr\n   */\n  function parseAttributeList() {\n    var attr = null;\n\n    while (token === '[') {\n      getToken();\n      attr = {};\n      while (token !== '' && token != ']') {\n        if (tokenType != TOKENTYPE.IDENTIFIER) {\n          throw newSyntaxError('Attribute name expected');\n        }\n        var name = token;\n\n        getToken();\n        if (token != '=') {\n          throw newSyntaxError('Equal sign = expected');\n        }\n        getToken();\n\n        if (tokenType != TOKENTYPE.IDENTIFIER) {\n          throw newSyntaxError('Attribute value expected');\n        }\n        var value = token;\n        setValue(attr, name, value); // name can be a path\n\n        getToken();\n        if (token == ',') {\n          getToken();\n        }\n      }\n\n      if (token != ']') {\n        throw newSyntaxError('Bracket ] expected');\n      }\n      getToken();\n    }\n\n    return attr;\n  }\n\n  /**\n   * Create a syntax error with extra information on current token and index.\n   * @param {String} message\n   * @returns {SyntaxError} err\n   */\n  function newSyntaxError(message) {\n    return new SyntaxError(message + ', got \"' + chop(token, 30) + '\" (char ' + index + ')');\n  }\n\n  /**\n   * Chop off text after a maximum length\n   * @param {String} text\n   * @param {Number} maxLength\n   * @returns {String}\n   */\n  function chop(text, maxLength) {\n    return text.length <= maxLength ? text : text.substr(0, 27) + '...';\n  }\n\n  /**\n   * Execute a function fn for each pair of elements in two arrays\n   * @param {Array | *} array1\n   * @param {Array | *} array2\n   * @param {function} fn\n   */\n  function forEach2(array1, array2, fn) {\n    if (Array.isArray(array1)) {\n      array1.forEach(function (elem1) {\n        if (Array.isArray(array2)) {\n          array2.forEach(function (elem2) {\n            fn(elem1, elem2);\n          });\n        } else {\n          fn(elem1, array2);\n        }\n      });\n    } else {\n      if (Array.isArray(array2)) {\n        array2.forEach(function (elem2) {\n          fn(array1, elem2);\n        });\n      } else {\n        fn(array1, array2);\n      }\n    }\n  }\n\n  /**\n   * Set a nested property on an object\n   * When nested objects are missing, they will be created.\n   * For example setProp({}, 'font.color', 'red') will return {font: {color: 'red'}}\n   * @param {Object} object\n   * @param {string} path   A dot separated string like 'font.color'\n   * @param {*} value       Value for the property\n   * @return {Object} Returns the original object, allows for chaining.\n   */\n  function setProp(object, path, value) {\n    var names = path.split('.');\n    var prop = names.pop();\n\n    // traverse over the nested objects\n    var obj = object;\n    for (var i = 0; i < names.length; i++) {\n      var name = names[i];\n      if (!(name in obj)) {\n        obj[name] = {};\n      }\n      obj = obj[name];\n    }\n\n    // set the property value\n    obj[prop] = value;\n\n    return object;\n  }\n\n  /**\n   * Convert an object with DOT attributes to their vis.js equivalents.\n   * @param {Object} attr     Object with DOT attributes\n   * @param {Object} mapping\n   * @return {Object}         Returns an object with vis.js attributes\n   */\n  function convertAttr(attr, mapping) {\n    var converted = {};\n\n    for (var prop in attr) {\n      if (attr.hasOwnProperty(prop)) {\n        var visProp = mapping[prop];\n        if (Array.isArray(visProp)) {\n          visProp.forEach(function (visPropI) {\n            setProp(converted, visPropI, attr[prop]);\n          });\n        } else if (typeof visProp === 'string') {\n          setProp(converted, visProp, attr[prop]);\n        } else {\n          setProp(converted, prop, attr[prop]);\n        }\n      }\n    }\n\n    return converted;\n  }\n\n  /**\n   * Convert a string containing a graph in DOT language into a map containing\n   * with nodes and edges in the format of graph.\n   * @param {String} data         Text containing a graph in DOT-notation\n   * @return {Object} graphData\n   */\n  function DOTToGraph(data) {\n    // parse the DOT file\n    var dotData = parseDOT(data);\n    var graphData = {\n      nodes: [],\n      edges: [],\n      options: {}\n    };\n\n    // copy the nodes\n    if (dotData.nodes) {\n      dotData.nodes.forEach(function (dotNode) {\n        var graphNode = {\n          id: dotNode.id,\n          label: String(dotNode.label || dotNode.id)\n        };\n        merge(graphNode, convertAttr(dotNode.attr, NODE_ATTR_MAPPING));\n        if (graphNode.image) {\n          graphNode.shape = 'image';\n        }\n        graphData.nodes.push(graphNode);\n      });\n    }\n\n    // copy the edges\n    if (dotData.edges) {\n      /**\n       * Convert an edge in DOT format to an edge with VisGraph format\n       * @param {Object} dotEdge\n       * @returns {Object} graphEdge\n       */\n      var convertEdge = function convertEdge(dotEdge) {\n        var graphEdge = {\n          from: dotEdge.from,\n          to: dotEdge.to\n        };\n        merge(graphEdge, convertAttr(dotEdge.attr, EDGE_ATTR_MAPPING));\n        graphEdge.arrows = dotEdge.type === '->' ? 'to' : undefined;\n\n        return graphEdge;\n      };\n\n      dotData.edges.forEach(function (dotEdge) {\n        var from, to;\n        if (dotEdge.from instanceof Object) {\n          from = dotEdge.from.nodes;\n        } else {\n          from = {\n            id: dotEdge.from\n          };\n        }\n\n        // TODO: support of solid/dotted/dashed edges (attr = 'style')\n        // TODO: support for attributes 'dir' and 'arrowhead' (edge arrows)\n\n        if (dotEdge.to instanceof Object) {\n          to = dotEdge.to.nodes;\n        } else {\n          to = {\n            id: dotEdge.to\n          };\n        }\n\n        if (dotEdge.from instanceof Object && dotEdge.from.edges) {\n          dotEdge.from.edges.forEach(function (subEdge) {\n            var graphEdge = convertEdge(subEdge);\n            graphData.edges.push(graphEdge);\n          });\n        }\n\n        forEach2(from, to, function (from, to) {\n          var subEdge = createEdge(graphData, from.id, to.id, dotEdge.type, dotEdge.attr);\n          var graphEdge = convertEdge(subEdge);\n          graphData.edges.push(graphEdge);\n        });\n\n        if (dotEdge.to instanceof Object && dotEdge.to.edges) {\n          dotEdge.to.edges.forEach(function (subEdge) {\n            var graphEdge = convertEdge(subEdge);\n            graphData.edges.push(graphEdge);\n          });\n        }\n      });\n    }\n\n    // copy the options\n    if (dotData.attr) {\n      graphData.options = dotData.attr;\n    }\n\n    return graphData;\n  }\n\n  // exports\n  exports.parseDOT = parseDOT;\n  exports.DOTToGraph = DOTToGraph;\n\n/***/ },\n/* 121 */\n/***/ function(module, exports) {\n\n  'use strict';\n\n  function parseGephi(gephiJSON, optionsObj) {\n    var edges = [];\n    var nodes = [];\n    var options = {\n      edges: {\n        inheritColor: false\n      },\n      nodes: {\n        fixed: false,\n        parseColor: false\n      }\n    };\n\n    if (optionsObj !== undefined) {\n      if (optionsObj.fixed !== undefined) {\n        options.nodes.fixed = optionsObj.fixed;\n      }\n      if (optionsObj.parseColor !== undefined) {\n        options.nodes.parseColor = optionsObj.parseColor;\n      }\n      if (optionsObj.inheritColor !== undefined) {\n        options.edges.inheritColor = optionsObj.inheritColor;\n      }\n    }\n\n    var gEdges = gephiJSON.edges;\n    var gNodes = gephiJSON.nodes;\n    for (var i = 0; i < gEdges.length; i++) {\n      var edge = {};\n      var gEdge = gEdges[i];\n      edge['id'] = gEdge.id;\n      edge['from'] = gEdge.source;\n      edge['to'] = gEdge.target;\n      edge['attributes'] = gEdge.attributes;\n      edge['label'] = gEdge.label;\n      edge['title'] = gEdge.attributes !== undefined ? gEdge.attributes.title : undefined;\n      if (gEdge['type'] === 'Directed') {\n        edge['arrows'] = 'to';\n      }\n      //    edge['value'] = gEdge.attributes !== undefined ? gEdge.attributes.Weight : undefined;\n      //    edge['width'] = edge['value'] !== undefined ? undefined : edgegEdge.size;\n      if (gEdge.color && options.inheritColor === false) {\n        edge['color'] = gEdge.color;\n      }\n      edges.push(edge);\n    }\n\n    for (var i = 0; i < gNodes.length; i++) {\n      var node = {};\n      var gNode = gNodes[i];\n      node['id'] = gNode.id;\n      node['attributes'] = gNode.attributes;\n      node['title'] = gNode.title;\n      node['x'] = gNode.x;\n      node['y'] = gNode.y;\n      node['label'] = gNode.label;\n      node['title'] = gNode.attributes !== undefined ? gNode.attributes.title : undefined;\n      if (options.nodes.parseColor === true) {\n        node['color'] = gNode.color;\n      } else {\n        node['color'] = gNode.color !== undefined ? { background: gNode.color, border: gNode.color, highlight: { background: gNode.color, border: gNode.color }, hover: { background: gNode.color, border: gNode.color } } : undefined;\n      }\n      node['size'] = gNode.size;\n      node['fixed'] = options.nodes.fixed && gNode.x !== undefined && gNode.y !== undefined;\n      nodes.push(node);\n    }\n\n    return { nodes: nodes, edges: edges };\n  }\n\n  exports.parseGephi = parseGephi;\n\n/***/ },\n/* 122 */\n/***/ function(module, exports) {\n\n  'use strict';\n\n  // English\n  exports['en'] = {\n    edit: 'Edit',\n    del: 'Delete selected',\n    back: 'Back',\n    addNode: 'Add Node',\n    addEdge: 'Add Edge',\n    editNode: 'Edit Node',\n    editEdge: 'Edit Edge',\n    addDescription: 'Click in an empty space to place a new node.',\n    edgeDescription: 'Click on a node and drag the edge to another node to connect them.',\n    editEdgeDescription: 'Click on the control points and drag them to a node to connect to it.',\n    createEdgeError: 'Cannot link edges to a cluster.',\n    deleteClusterError: 'Clusters cannot be deleted.',\n    editClusterError: 'Clusters cannot be edited.'\n  };\n  exports['en_EN'] = exports['en'];\n  exports['en_US'] = exports['en'];\n\n  // German\n  exports['de'] = {\n    edit: 'Editieren',\n    del: 'L\\xF6sche Auswahl',\n    back: 'Zur\\xFCck',\n    addNode: 'Knoten hinzuf\\xFCgen',\n    addEdge: 'Kante hinzuf\\xFCgen',\n    editNode: 'Knoten editieren',\n    editEdge: 'Kante editieren',\n    addDescription: 'Klicke auf eine freie Stelle, um einen neuen Knoten zu plazieren.',\n    edgeDescription: 'Klicke auf einen Knoten und ziehe die Kante zu einem anderen Knoten, um diese zu verbinden.',\n    editEdgeDescription: 'Klicke auf die Verbindungspunkte und ziehe diese auf einen Knoten, um sie zu verbinden.',\n    createEdgeError: 'Es ist nicht m\\xF6glich, Kanten mit Clustern zu verbinden.',\n    deleteClusterError: 'Cluster k\\xF6nnen nicht gel\\xF6scht werden.',\n    editClusterError: 'Cluster k\\xF6nnen nicht editiert werden.'\n  };\n  exports['de_DE'] = exports['de'];\n\n  // Spanish\n  exports['es'] = {\n    edit: 'Editar',\n    del: 'Eliminar selecci\\xF3n',\n    back: '\\xC1tras',\n    addNode: 'A\\xF1adir nodo',\n    addEdge: 'A\\xF1adir arista',\n    editNode: 'Editar nodo',\n    editEdge: 'Editar arista',\n    addDescription: 'Haga clic en un lugar vac\\xEDo para colocar un nuevo nodo.',\n    edgeDescription: 'Haga clic en un nodo y arrastre la arista hacia otro nodo para conectarlos.',\n    editEdgeDescription: 'Haga clic en un punto de control y arrastrelo a un nodo para conectarlo.',\n    createEdgeError: 'No se puede conectar una arista a un grupo.',\n    deleteClusterError: 'No es posible eliminar grupos.',\n    editClusterError: 'No es posible editar grupos.'\n  };\n  exports['es_ES'] = exports['es'];\n\n  //Italiano\n  exports['it'] = {\n    edit: 'Modifica',\n    del: 'Cancella la selezione',\n    back: 'Indietro',\n    addNode: 'Aggiungi un nodo',\n    addEdge: 'Aggiungi un vertice',\n    editNode: 'Modifica il nodo',\n    editEdge: 'Modifica il vertice',\n    addDescription: 'Clicca per aggiungere un nuovo nodo',\n    edgeDescription: 'Clicca su un nodo e trascinalo ad un altro nodo per connetterli.',\n    editEdgeDescription: 'Clicca sui Punti di controllo e trascinali ad un nodo per connetterli.',\n    createEdgeError: 'Non si possono collegare vertici ad un cluster',\n    deleteClusterError: 'I cluster non possono essere cancellati',\n    editClusterError: 'I clusters non possono essere modificati.'\n  };\n  exports['it_IT'] = exports['it'];\n\n  // Dutch\n  exports['nl'] = {\n    edit: 'Wijzigen',\n    del: 'Selectie verwijderen',\n    back: 'Terug',\n    addNode: 'Node toevoegen',\n    addEdge: 'Link toevoegen',\n    editNode: 'Node wijzigen',\n    editEdge: 'Link wijzigen',\n    addDescription: 'Klik op een leeg gebied om een nieuwe node te maken.',\n    edgeDescription: 'Klik op een node en sleep de link naar een andere node om ze te verbinden.',\n    editEdgeDescription: 'Klik op de verbindingspunten en sleep ze naar een node om daarmee te verbinden.',\n    createEdgeError: 'Kan geen link maken naar een cluster.',\n    deleteClusterError: 'Clusters kunnen niet worden verwijderd.',\n    editClusterError: 'Clusters kunnen niet worden aangepast.'\n  };\n  exports['nl_NL'] = exports['nl'];\n  exports['nl_BE'] = exports['nl'];\n\n  // Portuguese Brazil\n  exports['pt-br'] = {\n    edit: 'Editar',\n    del: 'Remover selecionado',\n    back: 'Voltar',\n    addNode: 'Adicionar nó',\n    addEdge: 'Adicionar aresta',\n    editNode: 'Editar nó',\n    editEdge: 'Editar aresta',\n    addDescription: 'Clique em um espaço em branco para adicionar um novo nó',\n    edgeDescription: 'Clique em um nó e arraste a aresta até outro nó para conectá-los',\n    editEdgeDescription: 'Clique nos pontos de controle e os arraste para um nó para conectá-los',\n    createEdgeError: 'Não foi possível linkar arestas a um cluster.',\n    deleteClusterError: 'Clusters não puderam ser removidos.',\n    editClusterError: 'Clusters não puderam ser editados.'\n  };\n  exports['pt-BR'] = exports['pt-br'];\n  exports['pt_BR'] = exports['pt-br'];\n  exports['pt_br'] = exports['pt-br'];\n\n  // Russian\n  exports['ru'] = {\n    edit: 'Редактировать',\n    del: 'Удалить выбранное',\n    back: 'Назад',\n    addNode: 'Добавить узел',\n    addEdge: 'Добавить ребро',\n    editNode: 'Редактировать узел',\n    editEdge: 'Редактировать ребро',\n    addDescription: 'Кликните в свободное место, чтобы добавить новый узел.',\n    edgeDescription: 'Кликните на узел и протяните ребро к другому узлу, чтобы соединить их.',\n    editEdgeDescription: 'Кликните на контрольные точки и перетащите их в узел, чтобы подключиться к нему.',\n    createEdgeError: 'Невозможно соединить ребра в кластер.',\n    deleteClusterError: 'Кластеры не могут быть удалены',\n    editClusterError: 'Кластеры недоступны для редактирования.'\n  };\n  exports['ru_RU'] = exports['ru'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vis/dist/vis.js\n ** module id = 83\n ** module chunks = 2\n **/","/**\n * @license Angular v2.2.4\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs/operator/toPromise'), require('rxjs/Subject'), require('rxjs/Observable'), require('rxjs/observable/fromPromise')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/operator/toPromise', 'rxjs/Subject', 'rxjs/Observable', 'rxjs/observable/fromPromise'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.forms = global.ng.forms || {}),global.ng.core,global.Rx.Observable.prototype,global.Rx,global.Rx,global.Rx.Observable));\n}(this, function (exports,_angular_core,rxjs_operator_toPromise,rxjs_Subject,rxjs_Observable,rxjs_observable_fromPromise) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for control directives.\n     *\n     * Only used internally in the forms module.\n     *\n     * @stable\n     */\n    var AbstractControlDirective = (function () {\n        function AbstractControlDirective() {\n        }\n        Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n            get: function () { throw new Error('unimplemented'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n            get: function () { return this.control ? this.control.value : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n            get: function () { return this.control ? this.control.valid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n            get: function () { return this.control ? this.control.invalid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n            get: function () { return this.control ? this.control.pending : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n            get: function () { return this.control ? this.control.errors : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n            get: function () { return this.control ? this.control.pristine : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n            get: function () { return this.control ? this.control.dirty : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n            get: function () { return this.control ? this.control.touched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n            get: function () { return this.control ? this.control.untouched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n            get: function () { return this.control ? this.control.disabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n            get: function () { return this.control ? this.control.enabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n            get: function () { return this.control ? this.control.statusChanges : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n            get: function () { return this.control ? this.control.valueChanges : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        AbstractControlDirective.prototype.reset = function (value) {\n            if (value === void 0) { value = undefined; }\n            if (this.control)\n                this.control.reset(value);\n        };\n        AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return this.control ? this.control.hasError(errorCode, path) : false;\n        };\n        AbstractControlDirective.prototype.getError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return this.control ? this.control.getError(errorCode, path) : null;\n        };\n        return AbstractControlDirective;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * A directive that contains multiple {@link NgControl}s.\n     *\n     * Only used by the forms module.\n     *\n     * @stable\n     */\n    var ControlContainer = (function (_super) {\n        __extends$1(ControlContainer, _super);\n        function ControlContainer() {\n            _super.apply(this, arguments);\n        }\n        Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n            /**\n             * Get the form to which this container belongs.\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ControlContainer.prototype, \"path\", {\n            /**\n             * Get the path to this container.\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return ControlContainer;\n    }(AbstractControlDirective));\n\n    function isPresent(obj) {\n        return obj != null;\n    }\n    function isBlank(obj) {\n        return obj == null;\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    function isPrimitive(obj) {\n        return !isJsObject(obj);\n    }\n\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        StringMapWrapper.merge = function (m1, m2) {\n            var m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        StringMapWrapper.equals = function (m1, m2) {\n            var k1 = Object.keys(m1);\n            var k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var i = 0; i < k1.length; i++) {\n                var key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        ListWrapper.removeAll = function (list, items) {\n            for (var i = 0; i < items.length; ++i) {\n                var index = list.indexOf(items[i]);\n                if (index > -1) {\n                    list.splice(index, 1);\n                }\n            }\n        };\n        ListWrapper.remove = function (list, el) {\n            var index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        ListWrapper.flatten = function (list) {\n            return list.reduce(function (flat, item) {\n                var flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n                return flat.concat(flatItem);\n            }, []);\n        };\n        return ListWrapper;\n    }());\n\n    var isPromise = _angular_core.__core_private__.isPromise;\n\n    function isEmptyInputValue(value) {\n        return value == null || typeof value === 'string' && value.length === 0;\n    }\n    /**\n     * Providers for validators to be used for {@link FormControl}s in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * ### Example\n     *\n     * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n     * @stable\n     */\n    var NG_VALIDATORS = new _angular_core.OpaqueToken('NgValidators');\n    /**\n     * Providers for asynchronous validators to be used for {@link FormControl}s\n     * in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * See {@link NG_VALIDATORS} for more details.\n     *\n     * @stable\n     */\n    var NG_ASYNC_VALIDATORS = new _angular_core.OpaqueToken('NgAsyncValidators');\n    /**\n     * Provides a set of validators used by form controls.\n     *\n     * A validator is a function that processes a {@link FormControl} or collection of\n     * controls and returns a map of errors. A null map means that validation has passed.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * var loginControl = new FormControl(\"\", Validators.required)\n     * ```\n     *\n     * @stable\n     */\n    var Validators = (function () {\n        function Validators() {\n        }\n        /**\n         * Validator that requires controls to have a non-empty value.\n         */\n        Validators.required = function (control) {\n            return isEmptyInputValue(control.value) ? { 'required': true } : null;\n        };\n        /**\n         * Validator that requires controls to have a value of a minimum length.\n         */\n        Validators.minLength = function (minLength) {\n            return function (control) {\n                if (isEmptyInputValue(control.value)) {\n                    return null; // don't validate empty values to allow optional controls\n                }\n                var length = typeof control.value === 'string' ? control.value.length : 0;\n                return length < minLength ?\n                    { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                    null;\n            };\n        };\n        /**\n         * Validator that requires controls to have a value of a maximum length.\n         */\n        Validators.maxLength = function (maxLength) {\n            return function (control) {\n                var length = typeof control.value === 'string' ? control.value.length : 0;\n                return length > maxLength ?\n                    { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                    null;\n            };\n        };\n        /**\n         * Validator that requires a control to match a regex to its value.\n         */\n        Validators.pattern = function (pattern) {\n            if (!pattern)\n                return Validators.nullValidator;\n            var regex;\n            var regexStr;\n            if (typeof pattern === 'string') {\n                regexStr = \"^\" + pattern + \"$\";\n                regex = new RegExp(regexStr);\n            }\n            else {\n                regexStr = pattern.toString();\n                regex = pattern;\n            }\n            return function (control) {\n                if (isEmptyInputValue(control.value)) {\n                    return null; // don't validate empty values to allow optional controls\n                }\n                var value = control.value;\n                return regex.test(value) ? null :\n                    { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n            };\n        };\n        /**\n         * No-op validator.\n         */\n        Validators.nullValidator = function (c) { return null; };\n        /**\n         * Compose multiple validators into a single function that returns the union\n         * of the individual error maps.\n         */\n        Validators.compose = function (validators) {\n            if (!validators)\n                return null;\n            var presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                return _mergeErrors(_executeValidators(control, presentValidators));\n            };\n        };\n        Validators.composeAsync = function (validators) {\n            if (!validators)\n                return null;\n            var presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                var promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n                return Promise.all(promises).then(_mergeErrors);\n            };\n        };\n        return Validators;\n    }());\n    function _convertToPromise(obj) {\n        return isPromise(obj) ? obj : rxjs_operator_toPromise.toPromise.call(obj);\n    }\n    function _executeValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    function _executeAsyncValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    function _mergeErrors(arrayOfErrors) {\n        var res = arrayOfErrors.reduce(function (res, errors) {\n            return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n        }, {});\n        return Object.keys(res).length === 0 ? null : res;\n    }\n\n    /**\n     * Used to provide a {@link ControlValueAccessor} for form controls.\n     *\n     * See {@link DefaultValueAccessor} for how to implement one.\n     * @stable\n     */\n    var NG_VALUE_ACCESSOR = new _angular_core.OpaqueToken('NgValueAccessor');\n\n    var CHECKBOX_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return CheckboxControlValueAccessor; }),\n        multi: true,\n    };\n    /**\n     * The accessor for writing a value and listening to changes on a checkbox input element.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n     *  ```\n     *\n     *  @stable\n     */\n    var CheckboxControlValueAccessor = (function () {\n        function CheckboxControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n        };\n        CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        CheckboxControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                        host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                        providers: [CHECKBOX_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        CheckboxControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return CheckboxControlValueAccessor;\n    }());\n\n    var DEFAULT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return DefaultValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The default accessor for writing a value and listening to changes that is used by the\n     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"text\" name=\"searchQuery\" ngModel>\n     *  ```\n     *\n     *  @stable\n     */\n    var DefaultValueAccessor = (function () {\n        function DefaultValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        DefaultValueAccessor.prototype.writeValue = function (value) {\n            var normalizedValue = value == null ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        DefaultValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                        // TODO: vsavkin replace the above selector with the one below it once\n                        // https://github.com/angular/angular/issues/3011 is implemented\n                        // selector: '[ngControl],[ngModel],[ngFormControl]',\n                        host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [DEFAULT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        DefaultValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return DefaultValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeValidator(validator) {\n        if (validator.validate) {\n            return function (c) { return validator.validate(c); };\n        }\n        else {\n            return validator;\n        }\n    }\n    function normalizeAsyncValidator(validator) {\n        if (validator.validate) {\n            return function (c) { return validator.validate(c); };\n        }\n        else {\n            return validator;\n        }\n    }\n\n    var NUMBER_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return NumberValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The accessor for writing a number value and listening to changes that is used by the\n     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"number\" [(ngModel)]=\"age\">\n     *  ```\n     */\n    var NumberValueAccessor = (function () {\n        function NumberValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        NumberValueAccessor.prototype.writeValue = function (value) {\n            // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n            var normalizedValue = value == null ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        NumberValueAccessor.prototype.registerOnChange = function (fn) {\n            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n        };\n        NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        NumberValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                        host: {\n                            '(change)': 'onChange($event.target.value)',\n                            '(input)': 'onChange($event.target.value)',\n                            '(blur)': 'onTouched()'\n                        },\n                        providers: [NUMBER_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        NumberValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return NumberValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    function unimplemented() {\n        throw new Error('unimplemented');\n    }\n    /**\n     * A base class that all control directive extend.\n     * It binds a {@link FormControl} object to a DOM element.\n     *\n     * Used internally by Angular forms.\n     *\n     * @stable\n     */\n    var NgControl = (function (_super) {\n        __extends$2(NgControl, _super);\n        function NgControl() {\n            _super.apply(this, arguments);\n            /** @internal */\n            this._parent = null;\n            this.name = null;\n            this.valueAccessor = null;\n            /** @internal */\n            this._rawValidators = [];\n            /** @internal */\n            this._rawAsyncValidators = [];\n        }\n        Object.defineProperty(NgControl.prototype, \"validator\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return NgControl;\n    }(AbstractControlDirective));\n\n    var RADIO_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return RadioControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     * Internal class used by Angular to uncheck radio buttons with the matching name.\n     */\n    var RadioControlRegistry = (function () {\n        function RadioControlRegistry() {\n            this._accessors = [];\n        }\n        RadioControlRegistry.prototype.add = function (control, accessor) {\n            this._accessors.push([control, accessor]);\n        };\n        RadioControlRegistry.prototype.remove = function (accessor) {\n            for (var i = this._accessors.length - 1; i >= 0; --i) {\n                if (this._accessors[i][1] === accessor) {\n                    this._accessors.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        RadioControlRegistry.prototype.select = function (accessor) {\n            var _this = this;\n            this._accessors.forEach(function (c) {\n                if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                    c[1].fireUncheck(accessor.value);\n                }\n            });\n        };\n        RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n            if (!controlPair[0].control)\n                return false;\n            return controlPair[0]._parent === accessor._control._parent &&\n                controlPair[1].name === accessor.name;\n        };\n        RadioControlRegistry.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        RadioControlRegistry.ctorParameters = [];\n        return RadioControlRegistry;\n    }());\n    /**\n     * @whatItDoes  Writes radio control values and listens to radio control changes.\n     *\n     * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n     * to keep the view synced with the {@link FormControl} model.\n     *\n     * @howToUse\n     *\n     * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n     * value accessor will be active on any radio control that has a form directive. You do\n     * **not** need to add a special selector to activate it.\n     *\n     * ### How to use radio buttons with form directives\n     *\n     * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n     * in the same group have the same `name` attribute.  Radio buttons with different `name`\n     * attributes do not affect each other.\n     *\n     * {@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n     *\n     * When using radio buttons in a reactive form, radio buttons in the same group should have the\n     * same `formControlName`. You can also add a `name` attribute, but it's optional.\n     *\n     * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n     *\n     *  * **npm package**: `@angular/forms`\n     *\n     *  @stable\n     */\n    var RadioControlValueAccessor = (function () {\n        function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this._registry = _registry;\n            this._injector = _injector;\n            this.onChange = function () { };\n            this.onTouched = function () { };\n        }\n        RadioControlValueAccessor.prototype.ngOnInit = function () {\n            this._control = this._injector.get(NgControl);\n            this._checkName();\n            this._registry.add(this._control, this);\n        };\n        RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n        RadioControlValueAccessor.prototype.writeValue = function (value) {\n            this._state = value === this.value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n        };\n        RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this._fn = fn;\n            this.onChange = function () {\n                fn(_this.value);\n                _this._registry.select(_this);\n            };\n        };\n        RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n        RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        RadioControlValueAccessor.prototype._checkName = function () {\n            if (this.name && this.formControlName && this.name !== this.formControlName) {\n                this._throwNameError();\n            }\n            if (!this.name && this.formControlName)\n                this.name = this.formControlName;\n        };\n        RadioControlValueAccessor.prototype._throwNameError = function () {\n            throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n        };\n        RadioControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                        host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                        providers: [RADIO_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        RadioControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n            { type: RadioControlRegistry, },\n            { type: _angular_core.Injector, },\n        ];\n        RadioControlValueAccessor.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'formControlName': [{ type: _angular_core.Input },],\n            'value': [{ type: _angular_core.Input },],\n        };\n        return RadioControlValueAccessor;\n    }());\n\n    var RANGE_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return RangeValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The accessor for writing a range value and listening to changes that is used by the\n     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"range\" [(ngModel)]=\"age\" >\n     *  ```\n     */\n    var RangeValueAccessor = (function () {\n        function RangeValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        RangeValueAccessor.prototype.writeValue = function (value) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n        };\n        RangeValueAccessor.prototype.registerOnChange = function (fn) {\n            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n        };\n        RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        RangeValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                        host: {\n                            '(change)': 'onChange($event.target.value)',\n                            '(input)': 'onChange($event.target.value)',\n                            '(blur)': 'onTouched()'\n                        },\n                        providers: [RANGE_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        RangeValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return RangeValueAccessor;\n    }());\n\n    var SELECT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectControlValueAccessor; }),\n        multi: true\n    };\n    function _buildValueString(id, value) {\n        if (id == null)\n            return \"\" + value;\n        if (!isPrimitive(value))\n            value = 'Object';\n        return (id + \": \" + value).slice(0, 50);\n    }\n    function _extractId(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     * @whatItDoes Writes values and listens to changes on a select element.\n     *\n     * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n     * to keep the view synced with the {@link FormControl} model.\n     *\n     * @howToUse\n     *\n     * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n     * value accessor will be active on any select control that has a form directive. You do\n     * **not** need to add a special selector to activate it.\n     *\n     * ### How to use select controls with form directives\n     *\n     * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n     * attribute to the main `<select>` tag.\n     *\n     * If your option values are simple strings, you can bind to the normal `value` property\n     * on the option.  If your option values happen to be objects (and you'd like to save the\n     * selection in your form as an object), use `ngValue` instead:\n     *\n     * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n     *\n     * In reactive forms, you'll also want to add your form directive (`formControlName` or\n     * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n     * choice of binding to the  `value` or `ngValue` property on the select's options.\n     *\n     * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n     *\n     * Note: We listen to the 'change' event because 'input' events aren't fired\n     * for selects in Firefox and IE:\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n     * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var SelectControlValueAccessor = (function () {\n        function SelectControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        SelectControlValueAccessor.prototype.writeValue = function (value) {\n            this.value = value;\n            var valueString = _buildValueString(this._getOptionId(value), value);\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n        };\n        SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (valueString) {\n                _this.value = valueString;\n                fn(_this._getOptionValue(valueString));\n            };\n        };\n        SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /** @internal */\n        SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n        /** @internal */\n        SelectControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id), value))\n                    return id;\n            }\n            return null;\n        };\n        /** @internal */\n        SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var id = _extractId(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n        };\n        SelectControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                        host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return SelectControlValueAccessor;\n    }());\n    /**\n     * @whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n     *\n     * @howToUse\n     *\n     * See docs for {@link SelectControlValueAccessor} for usage examples.\n     *\n     * @stable\n     */\n    var NgSelectOption = (function () {\n        function NgSelectOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select)\n                this.id = this._select._registerOption();\n        }\n        Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._select._optionMap.set(this.id, value);\n                this._setElementValue(_buildValueString(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectOption.prototype, \"value\", {\n            set: function (value) {\n                this._setElementValue(value);\n                if (this._select)\n                    this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        NgSelectOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        NgSelectOption.prototype.ngOnDestroy = function () {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectOption.ctorParameters = [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ];\n        NgSelectOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectOption;\n    }());\n\n    var SELECT_MULTIPLE_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n        multi: true\n    };\n    function _buildValueString$1(id, value) {\n        if (id == null)\n            return \"\" + value;\n        if (typeof value === 'string')\n            value = \"'\" + value + \"'\";\n        if (!isPrimitive(value))\n            value = 'Object';\n        return (id + \": \" + value).slice(0, 50);\n    }\n    function _extractId$1(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     * The accessor for writing a value and listening to changes on a select element.\n     *\n     * @stable\n     */\n    var SelectMultipleControlValueAccessor = (function () {\n        function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n            var _this = this;\n            this.value = value;\n            if (value == null)\n                return;\n            var values = value;\n            // convert values to ids\n            var ids = values.map(function (v) { return _this._getOptionId(v); });\n            this._optionMap.forEach(function (opt, o) { opt._setSelected(ids.indexOf(o.toString()) > -1); });\n        };\n        SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (_) {\n                var selected = [];\n                if (_.hasOwnProperty('selectedOptions')) {\n                    var options = _.selectedOptions;\n                    for (var i = 0; i < options.length; i++) {\n                        var opt = options.item(i);\n                        var val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n                else {\n                    var options = _.options;\n                    for (var i = 0; i < options.length; i++) {\n                        var opt = options.item(i);\n                        if (opt.selected) {\n                            var val = _this._getOptionValue(opt.value);\n                            selected.push(val);\n                        }\n                    }\n                }\n                fn(selected);\n            };\n        };\n        SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /** @internal */\n        SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n            var id = (this._idCounter++).toString();\n            this._optionMap.set(id, value);\n            return id;\n        };\n        /** @internal */\n        SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id)._value, value))\n                    return id;\n            }\n            return null;\n        };\n        /** @internal */\n        SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var id = _extractId$1(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n        };\n        SelectMultipleControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                        host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectMultipleControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return SelectMultipleControlValueAccessor;\n    }());\n    /**\n     * Marks `<option>` as dynamic, so Angular can be notified when options change.\n     *\n     * ### Example\n     *\n     * ```\n     * <select multiple name=\"city\" ngModel>\n     *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n     * </select>\n     * ```\n     */\n    var NgSelectMultipleOption = (function () {\n        function NgSelectMultipleOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select) {\n                this.id = this._select._registerOption(this);\n            }\n        }\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n            set: function (value) {\n                if (this._select) {\n                    this._value = value;\n                    this._setElementValue(_buildValueString$1(this.id, value));\n                    this._select.writeValue(this._select.value);\n                }\n                else {\n                    this._setElementValue(value);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        NgSelectMultipleOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        /** @internal */\n        NgSelectMultipleOption.prototype._setSelected = function (selected) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n        };\n        NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectMultipleOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectMultipleOption.ctorParameters = [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectMultipleControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ];\n        NgSelectMultipleOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectMultipleOption;\n    }());\n\n    function controlPath(name, parent) {\n        return parent.path.concat([name]);\n    }\n    function setUpControl(control, dir) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwError(dir, 'No value accessor for form control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n        dir.valueAccessor.writeValue(control.value);\n        // view -> model\n        dir.valueAccessor.registerOnChange(function (newValue) {\n            dir.viewToModelUpdate(newValue);\n            control.markAsDirty();\n            control.setValue(newValue, { emitModelToViewChange: false });\n        });\n        // touched\n        dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n        control.registerOnChange(function (newValue, emitModelEvent) {\n            // control -> view\n            dir.valueAccessor.writeValue(newValue);\n            // control -> ngModel\n            if (emitModelEvent)\n                dir.viewToModelUpdate(newValue);\n        });\n        if (dir.valueAccessor.setDisabledState) {\n            control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n        }\n        // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n        dir._rawValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange)\n                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n        dir._rawAsyncValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange)\n                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n    }\n    function cleanUpControl(control, dir) {\n        dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n        dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n        dir._rawValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange) {\n                validator.registerOnValidatorChange(null);\n            }\n        });\n        dir._rawAsyncValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange) {\n                validator.registerOnValidatorChange(null);\n            }\n        });\n        if (control)\n            control._clearChangeFns();\n    }\n    function setUpFormContainer(control, dir) {\n        if (isBlank(control))\n            _throwError(dir, 'Cannot find control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    }\n    function _noControlError(dir) {\n        return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n    }\n    function _throwError(dir, message) {\n        var messageEnd;\n        if (dir.path.length > 1) {\n            messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n        }\n        else if (dir.path[0]) {\n            messageEnd = \"name: '\" + dir.path + \"'\";\n        }\n        else {\n            messageEnd = 'unspecified name attribute';\n        }\n        throw new Error(message + \" \" + messageEnd);\n    }\n    function composeValidators(validators) {\n        return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n    }\n    function composeAsyncValidators(validators) {\n        return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n            null;\n    }\n    function isPropertyUpdated(changes, viewModel) {\n        if (!changes.hasOwnProperty('model'))\n            return false;\n        var change = changes['model'];\n        if (change.isFirstChange())\n            return true;\n        return !looseIdentical(viewModel, change.currentValue);\n    }\n    var BUILTIN_ACCESSORS = [\n        CheckboxControlValueAccessor,\n        RangeValueAccessor,\n        NumberValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n    ];\n    function isBuiltInAccessor(valueAccessor) {\n        return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n    }\n    // TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\n    function selectValueAccessor(dir, valueAccessors) {\n        if (!valueAccessors)\n            return null;\n        var defaultAccessor;\n        var builtinAccessor;\n        var customAccessor;\n        valueAccessors.forEach(function (v) {\n            if (v.constructor === DefaultValueAccessor) {\n                defaultAccessor = v;\n            }\n            else if (isBuiltInAccessor(v)) {\n                if (builtinAccessor)\n                    _throwError(dir, 'More than one built-in value accessor matches form control with');\n                builtinAccessor = v;\n            }\n            else {\n                if (customAccessor)\n                    _throwError(dir, 'More than one custom value accessor matches form control with');\n                customAccessor = v;\n            }\n        });\n        if (customAccessor)\n            return customAccessor;\n        if (builtinAccessor)\n            return builtinAccessor;\n        if (defaultAccessor)\n            return defaultAccessor;\n        _throwError(dir, 'No valid value accessor for form control with');\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n     *\n     * @stable\n     */\n    var AbstractFormGroupDirective = (function (_super) {\n        __extends(AbstractFormGroupDirective, _super);\n        function AbstractFormGroupDirective() {\n            _super.apply(this, arguments);\n        }\n        AbstractFormGroupDirective.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormGroup(this);\n        };\n        AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormGroup(this);\n            }\n        };\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n            /**\n             * Get the {@link FormGroup} backing this binding.\n             */\n            get: function () { return this.formDirective.getFormGroup(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n            /**\n             * Get the path to this control group.\n             */\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n            /**\n             * Get the {@link Form} to which this group belongs.\n             */\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        AbstractFormGroupDirective.prototype._checkParentType = function () { };\n        return AbstractFormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var AbstractControlStatus = (function () {\n        function AbstractControlStatus(cd) {\n            this._cd = cd;\n        }\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n            get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n            get: function () { return this._cd.control ? this._cd.control.touched : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n            get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n            get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n            get: function () { return this._cd.control ? this._cd.control.valid : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n            get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n            get: function () { return this._cd.control ? this._cd.control.pending : false; },\n            enumerable: true,\n            configurable: true\n        });\n        return AbstractControlStatus;\n    }());\n    var ngControlStatusHost = {\n        '[class.ng-untouched]': 'ngClassUntouched',\n        '[class.ng-touched]': 'ngClassTouched',\n        '[class.ng-pristine]': 'ngClassPristine',\n        '[class.ng-dirty]': 'ngClassDirty',\n        '[class.ng-valid]': 'ngClassValid',\n        '[class.ng-invalid]': 'ngClassInvalid',\n        '[class.ng-pending]': 'ngClassPending',\n    };\n    /**\n     * Directive automatically applied to Angular form controls that sets CSS classes\n     * based on control status (valid/invalid/dirty/etc).\n     *\n     * @stable\n     */\n    var NgControlStatus = (function (_super) {\n        __extends$3(NgControlStatus, _super);\n        function NgControlStatus(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatus.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n        ];\n        /** @nocollapse */\n        NgControlStatus.ctorParameters = [\n            { type: NgControl, decorators: [{ type: _angular_core.Self },] },\n        ];\n        return NgControlStatus;\n    }(AbstractControlStatus));\n    /**\n     * Directive automatically applied to Angular form groups that sets CSS classes\n     * based on control status (valid/invalid/dirty/etc).\n     *\n     * @stable\n     */\n    var NgControlStatusGroup = (function (_super) {\n        __extends$3(NgControlStatusGroup, _super);\n        function NgControlStatusGroup(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatusGroup.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                        host: ngControlStatusHost\n                    },] },\n        ];\n        /** @nocollapse */\n        NgControlStatusGroup.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Self },] },\n        ];\n        return NgControlStatusGroup;\n    }(AbstractControlStatus));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     * @stable\n     */\n    var EventEmitter = (function (_super) {\n        __extends$5(EventEmitter, _super);\n        /**\n         * Creates an instance of [EventEmitter], which depending on [isAsync],\n         * delivers events synchronously or asynchronously.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            _super.call(this);\n            this.__isAsync = isAsync;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        };\n        return EventEmitter;\n    }(rxjs_Subject.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n     */\n    var VALID = 'VALID';\n    /**\n     * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n     */\n    var INVALID = 'INVALID';\n    /**\n     * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n     * errors are not yet available for the input value.\n     */\n    var PENDING = 'PENDING';\n    /**\n     * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n     * calculations of validity or value.\n     */\n    var DISABLED = 'DISABLED';\n    function _find(control, path, delimiter) {\n        if (path == null)\n            return null;\n        if (!(path instanceof Array)) {\n            path = path.split(delimiter);\n        }\n        if (path instanceof Array && (path.length === 0))\n            return null;\n        return path.reduce(function (v, name) {\n            if (v instanceof FormGroup) {\n                return v.controls[name] || null;\n            }\n            if (v instanceof FormArray) {\n                return v.at(name) || null;\n            }\n            return null;\n        }, control);\n    }\n    function toObservable(r) {\n        return isPromise(r) ? rxjs_observable_fromPromise.fromPromise(r) : r;\n    }\n    function coerceToValidator(validator) {\n        return Array.isArray(validator) ? composeValidators(validator) : validator;\n    }\n    function coerceToAsyncValidator(asyncValidator) {\n        return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n    }\n    /**\n     * @whatItDoes This is the base class for {@link FormControl}, {@link FormGroup}, and\n     * {@link FormArray}.\n     *\n     * It provides some of the shared behavior that all controls and groups of controls have, like\n     * running validators, calculating status, and resetting state. It also defines the properties\n     * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n     * instantiated directly.\n     *\n     * @stable\n     */\n    var AbstractControl = (function () {\n        function AbstractControl(validator, asyncValidator) {\n            this.validator = validator;\n            this.asyncValidator = asyncValidator;\n            /** @internal */\n            this._onCollectionChange = function () { };\n            this._pristine = true;\n            this._touched = false;\n            /** @internal */\n            this._onDisabledChange = [];\n        }\n        Object.defineProperty(AbstractControl.prototype, \"value\", {\n            /**\n             * The value of the control.\n             */\n            get: function () { return this._value; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"parent\", {\n            /**\n             * The parent control.\n             */\n            get: function () { return this._parent; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"status\", {\n            /**\n             * The validation status of the control. There are four possible\n             * validation statuses:\n             *\n             * * **VALID**:  control has passed all validation checks\n             * * **INVALID**: control has failed at least one validation check\n             * * **PENDING**: control is in the midst of conducting a validation check\n             * * **DISABLED**: control is exempt from validation checks\n             *\n             * These statuses are mutually exclusive, so a control cannot be\n             * both valid AND invalid or invalid AND disabled.\n             */\n            get: function () { return this._status; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valid\", {\n            /**\n             * A control is `valid` when its `status === VALID`.\n             *\n             * In order to have this status, the control must have passed all its\n             * validation checks.\n             */\n            get: function () { return this._status === VALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n            /**\n             * A control is `invalid` when its `status === INVALID`.\n             *\n             * In order to have this status, the control must have failed\n             * at least one of its validation checks.\n             */\n            get: function () { return this._status === INVALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pending\", {\n            /**\n             * A control is `pending` when its `status === PENDING`.\n             *\n             * In order to have this status, the control must be in the\n             * middle of conducting a validation check.\n             */\n            get: function () { return this._status == PENDING; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n            /**\n             * A control is `disabled` when its `status === DISABLED`.\n             *\n             * Disabled controls are exempt from validation checks and\n             * are not included in the aggregate value of their ancestor\n             * controls.\n             */\n            get: function () { return this._status === DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n            /**\n             * A control is `enabled` as long as its `status !== DISABLED`.\n             *\n             * In other words, it has a status of `VALID`, `INVALID`, or\n             * `PENDING`.\n             */\n            get: function () { return this._status !== DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"errors\", {\n            /**\n             * Returns any errors generated by failing validation. If there\n             * are no errors, it will return null.\n             */\n            get: function () { return this._errors; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n            /**\n             * A control is `pristine` if the user has not yet changed\n             * the value in the UI.\n             *\n             * Note that programmatic changes to a control's value will\n             * *not* mark it dirty.\n             */\n            get: function () { return this._pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n            /**\n             * A control is `dirty` if the user has changed the value\n             * in the UI.\n             *\n             * Note that programmatic changes to a control's value will\n             * *not* mark it dirty.\n             */\n            get: function () { return !this.pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"touched\", {\n            /**\n            * A control is marked `touched` once the user has triggered\n            * a `blur` event on it.\n            */\n            get: function () { return this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n            /**\n             * A control is `untouched` if the user has not yet triggered\n             * a `blur` event on it.\n             */\n            get: function () { return !this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n            /**\n             * Emits an event every time the value of the control changes, in\n             * the UI or programmatically.\n             */\n            get: function () { return this._valueChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n            /**\n             * Emits an event every time the validation status of the control\n             * is re-calculated.\n             */\n            get: function () { return this._statusChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Sets the synchronous validators that are active on this control.  Calling\n         * this will overwrite any existing sync validators.\n         */\n        AbstractControl.prototype.setValidators = function (newValidator) {\n            this.validator = coerceToValidator(newValidator);\n        };\n        /**\n         * Sets the async validators that are active on this control. Calling this\n         * will overwrite any existing async validators.\n         */\n        AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n            this.asyncValidator = coerceToAsyncValidator(newValidator);\n        };\n        /**\n         * Empties out the sync validator list.\n         */\n        AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n        /**\n         * Empties out the async validator list.\n         */\n        AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n        /**\n         * Marks the control as `touched`.\n         *\n         * This will also mark all direct ancestors as `touched` to maintain\n         * the model.\n         */\n        AbstractControl.prototype.markAsTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = true;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `untouched`.\n         *\n         * If the control has any children, it will also mark all children as `untouched`\n         * to maintain the model, and re-calculate the `touched` status of all parent\n         * controls.\n         */\n        AbstractControl.prototype.markAsUntouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = false;\n            this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n            if (this._parent && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `dirty`.\n         *\n         * This will also mark all direct ancestors as `dirty` to maintain\n         * the model.\n         */\n        AbstractControl.prototype.markAsDirty = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = false;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsDirty({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `pristine`.\n         *\n         * If the control has any children, it will also mark all children as `pristine`\n         * to maintain the model, and re-calculate the `pristine` status of all parent\n         * controls.\n         */\n        AbstractControl.prototype.markAsPristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = true;\n            this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n            if (this._parent && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `pending`.\n         */\n        AbstractControl.prototype.markAsPending = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._status = PENDING;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsPending({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Disables the control. This means the control will be exempt from validation checks and\n         * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n         *\n         * If the control has children, all children will be disabled to maintain the model.\n         */\n        AbstractControl.prototype.disable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._status = DISABLED;\n            this._errors = null;\n            this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n            this._updateValue();\n            if (emitEvent !== false) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n        };\n        /**\n         * Enables the control. This means the control will be included in validation checks and\n         * the aggregate value of its parent. Its status is re-calculated based on its value and\n         * its validators.\n         *\n         * If the control has children, all children will be enabled.\n         */\n        AbstractControl.prototype.enable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._status = VALID;\n            this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n        };\n        AbstractControl.prototype._updateAncestors = function (onlySelf) {\n            if (this._parent && !onlySelf) {\n                this._parent.updateValueAndValidity();\n                this._parent._updatePristine();\n                this._parent._updateTouched();\n            }\n        };\n        AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n        /**\n         * Re-calculates the value and validation status of the control.\n         *\n         * By default, it will also update the value and validity of its ancestors.\n         */\n        AbstractControl.prototype.updateValueAndValidity = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._setInitialStatus();\n            this._updateValue();\n            if (this.enabled) {\n                this._errors = this._runValidator();\n                this._status = this._calculateStatus();\n                if (this._status === VALID || this._status === PENDING) {\n                    this._runAsyncValidator(emitEvent);\n                }\n            }\n            if (emitEvent !== false) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            if (this._parent && !onlySelf) {\n                this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._updateTreeValidity = function (_a) {\n            var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n            this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n        };\n        AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n        AbstractControl.prototype._runValidator = function () {\n            return this.validator ? this.validator(this) : null;\n        };\n        AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n            var _this = this;\n            if (this.asyncValidator) {\n                this._status = PENDING;\n                this._cancelExistingSubscription();\n                var obs = toObservable(this.asyncValidator(this));\n                this._asyncValidationSubscription =\n                    obs.subscribe({ next: function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); } });\n            }\n        };\n        AbstractControl.prototype._cancelExistingSubscription = function () {\n            if (this._asyncValidationSubscription) {\n                this._asyncValidationSubscription.unsubscribe();\n            }\n        };\n        /**\n         * Sets errors on a form control.\n         *\n         * This is used when validations are run manually by the user, rather than automatically.\n         *\n         * Calling `setErrors` will also update the validity of the parent control.\n         *\n         * ### Example\n         *\n         * ```\n         * const login = new FormControl(\"someLogin\");\n         * login.setErrors({\n         *   \"notUnique\": true\n         * });\n         *\n         * expect(login.valid).toEqual(false);\n         * expect(login.errors).toEqual({\"notUnique\": true});\n         *\n         * login.setValue(\"someOtherLogin\");\n         *\n         * expect(login.valid).toEqual(true);\n         * ```\n         */\n        AbstractControl.prototype.setErrors = function (errors, _a) {\n            var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n            this._errors = errors;\n            this._updateControlsErrors(emitEvent !== false);\n        };\n        /**\n         * Retrieves a child control given the control's name or path.\n         *\n         * Paths can be passed in as an array or a string delimited by a dot.\n         *\n         * To get a control nested within a `person` sub-group:\n         *\n         * * `this.form.get('person.name');`\n         *\n         * -OR-\n         *\n         * * `this.form.get(['person', 'name']);`\n         */\n        AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n        /**\n         * Returns true if the control with the given path has the error specified. Otherwise\n         * returns null or undefined.\n         *\n         * If no path is given, it checks for the error on the present control.\n         */\n        AbstractControl.prototype.getError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            var control = path ? this.get(path) : this;\n            return control && control._errors ? control._errors[errorCode] : null;\n        };\n        /**\n         * Returns true if the control with the given path has the error specified. Otherwise\n         * returns false.\n         *\n         * If no path is given, it checks for the error on the present control.\n         */\n        AbstractControl.prototype.hasError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return !!this.getError(errorCode, path);\n        };\n        Object.defineProperty(AbstractControl.prototype, \"root\", {\n            /**\n             * Retrieves the top-level ancestor of this control.\n             */\n            get: function () {\n                var x = this;\n                while (x._parent) {\n                    x = x._parent;\n                }\n                return x;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n            this._status = this._calculateStatus();\n            if (emitEvent) {\n                this._statusChanges.emit(this._status);\n            }\n            if (this._parent) {\n                this._parent._updateControlsErrors(emitEvent);\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._initObservables = function () {\n            this._valueChanges = new EventEmitter();\n            this._statusChanges = new EventEmitter();\n        };\n        AbstractControl.prototype._calculateStatus = function () {\n            if (this._allControlsDisabled())\n                return DISABLED;\n            if (this._errors)\n                return INVALID;\n            if (this._anyControlsHaveStatus(PENDING))\n                return PENDING;\n            if (this._anyControlsHaveStatus(INVALID))\n                return INVALID;\n            return VALID;\n        };\n        /** @internal */\n        AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n            return this._anyControls(function (control) { return control.status === status; });\n        };\n        /** @internal */\n        AbstractControl.prototype._anyControlsDirty = function () {\n            return this._anyControls(function (control) { return control.dirty; });\n        };\n        /** @internal */\n        AbstractControl.prototype._anyControlsTouched = function () {\n            return this._anyControls(function (control) { return control.touched; });\n        };\n        /** @internal */\n        AbstractControl.prototype._updatePristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = !this._anyControlsDirty();\n            if (this._parent && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._updateTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = this._anyControlsTouched();\n            if (this._parent && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._isBoxedValue = function (formState) {\n            return typeof formState === 'object' && formState !== null &&\n                Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n        };\n        /** @internal */\n        AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n        return AbstractControl;\n    }());\n    /**\n     * @whatItDoes Tracks the value and validation status of an individual form control.\n     *\n     * It is one of the three fundamental building blocks of Angular forms, along with\n     * {@link FormGroup} and {@link FormArray}.\n     *\n     * @howToUse\n     *\n     * When instantiating a {@link FormControl}, you can pass in an initial value as the\n     * first argument. Example:\n     *\n     * ```ts\n     * const ctrl = new FormControl('some value');\n     * console.log(ctrl.value);     // 'some value'\n     *```\n     *\n     * You can also initialize the control with a form state object on instantiation,\n     * which includes both the value and whether or not the control is disabled.\n     * You can't use the value key without the disabled key; both are required\n     * to use this way of initialization.\n     *\n     * ```ts\n     * const ctrl = new FormControl({value: 'n/a', disabled: true});\n     * console.log(ctrl.value);     // 'n/a'\n     * console.log(ctrl.status);   // 'DISABLED'\n     * ```\n     *\n     * To include a sync validator (or an array of sync validators) with the control,\n     * pass it in as the second argument. Async validators are also supported, but\n     * have to be passed in separately as the third arg.\n     *\n     * ```ts\n     * const ctrl = new FormControl('', Validators.required);\n     * console.log(ctrl.value);     // ''\n     * console.log(ctrl.status);   // 'INVALID'\n     * ```\n     *\n     * See its superclass, {@link AbstractControl}, for more properties and methods.\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var FormControl = (function (_super) {\n        __extends$6(FormControl, _super);\n        function FormControl(formState, validator, asyncValidator) {\n            if (formState === void 0) { formState = null; }\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n            /** @internal */\n            this._onChange = [];\n            this._applyFormState(formState);\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n            this._initObservables();\n        }\n        /**\n         * Set the value of the form control to `value`.\n         *\n         * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n         * and not its parent component. This defaults to false.\n         *\n         * If `emitEvent` is `true`, this\n         * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n         * to true (as it falls through to `updateValueAndValidity`).\n         *\n         * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n         * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n         * specified.\n         *\n         * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n         * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n         */\n        FormControl.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n            this._value = value;\n            if (this._onChange.length && emitModelToViewChange !== false) {\n                this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange !== false); });\n            }\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * Patches the value of a control.\n         *\n         * This function is functionally the same as {@link FormControl.setValue} at this level.\n         * It exists for symmetry with {@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n         * where it does behave differently.\n         */\n        FormControl.prototype.patchValue = function (value, options) {\n            if (options === void 0) { options = {}; }\n            this.setValue(value, options);\n        };\n        /**\n         * Resets the form control. This means by default:\n         *\n         * * it is marked as `pristine`\n         * * it is marked as `untouched`\n         * * value is set to null\n         *\n         * You can also reset to a specific form state by passing through a standalone\n         * value or a form state object that contains both a value and a disabled state\n         * (these are the only two properties that cannot be calculated).\n         *\n         * Ex:\n         *\n         * ```ts\n         * this.control.reset('Nancy');\n         *\n         * console.log(this.control.value);  // 'Nancy'\n         * ```\n         *\n         * OR\n         *\n         * ```\n         * this.control.reset({value: 'Nancy', disabled: true});\n         *\n         * console.log(this.control.value);  // 'Nancy'\n         * console.log(this.control.status);  // 'DISABLED'\n         * ```\n         */\n        FormControl.prototype.reset = function (formState, _a) {\n            if (formState === void 0) { formState = null; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._applyFormState(formState);\n            this.markAsPristine({ onlySelf: onlySelf });\n            this.markAsUntouched({ onlySelf: onlySelf });\n            this.setValue(this._value, { onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * @internal\n         */\n        FormControl.prototype._updateValue = function () { };\n        /**\n         * @internal\n         */\n        FormControl.prototype._anyControls = function (condition) { return false; };\n        /**\n         * @internal\n         */\n        FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n        /**\n         * Register a listener for change events.\n         */\n        FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n        /**\n         * @internal\n         */\n        FormControl.prototype._clearChangeFns = function () {\n            this._onChange = [];\n            this._onDisabledChange = [];\n            this._onCollectionChange = function () { };\n        };\n        /**\n         * Register a listener for disabled events.\n         */\n        FormControl.prototype.registerOnDisabledChange = function (fn) {\n            this._onDisabledChange.push(fn);\n        };\n        /**\n         * @internal\n         */\n        FormControl.prototype._forEachChild = function (cb) { };\n        FormControl.prototype._applyFormState = function (formState) {\n            if (this._isBoxedValue(formState)) {\n                this._value = formState.value;\n                formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                    this.enable({ onlySelf: true, emitEvent: false });\n            }\n            else {\n                this._value = formState;\n            }\n        };\n        return FormControl;\n    }(AbstractControl));\n    /**\n     * @whatItDoes Tracks the value and validity state of a group of {@link FormControl}\n     * instances.\n     *\n     * A `FormGroup` aggregates the values of each child {@link FormControl} into one object,\n     * with each control name as the key.  It calculates its status by reducing the statuses\n     * of its children. For example, if one of the controls in a group is invalid, the entire\n     * group becomes invalid.\n     *\n     * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n     * along with {@link FormControl} and {@link FormArray}.\n     *\n     * @howToUse\n     *\n     * When instantiating a {@link FormGroup}, pass in a collection of child controls as the first\n     * argument. The key for each child will be the name under which it is registered.\n     *\n     * ### Example\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('Nancy', Validators.minLength(2)),\n     *   last: new FormControl('Drew'),\n     * });\n     *\n     * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n     * console.log(form.status);  // 'VALID'\n     * ```\n     *\n     * You can also include group-level validators as the second arg, or group-level async\n     * validators as the third arg. These come in handy when you want to perform validation\n     * that considers the value of more than one child control.\n     *\n     * ### Example\n     *\n     * ```\n     * const form = new FormGroup({\n     *   password: new FormControl('', Validators.minLength(2)),\n     *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n     * }, passwordMatchValidator);\n     *\n     *\n     * function passwordMatchValidator(g: FormGroup) {\n     *    return g.get('password').value === g.get('passwordConfirm').value\n     *       ? null : {'mismatch': true};\n     * }\n     * ```\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var FormGroup = (function (_super) {\n        __extends$6(FormGroup, _super);\n        function FormGroup(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         * Registers a control with the group's list of controls.\n         *\n         * This method does not update value or validity of the control, so for\n         * most cases you'll want to use {@link FormGroup.addControl} instead.\n         */\n        FormGroup.prototype.registerControl = function (name, control) {\n            if (this.controls[name])\n                return this.controls[name];\n            this.controls[name] = control;\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n            return control;\n        };\n        /**\n         * Add a control to this group.\n         */\n        FormGroup.prototype.addControl = function (name, control) {\n            this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Remove a control from this group.\n         */\n        FormGroup.prototype.removeControl = function (name) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            delete (this.controls[name]);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Replace an existing control.\n         */\n        FormGroup.prototype.setControl = function (name, control) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            delete (this.controls[name]);\n            if (control)\n                this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Check whether there is an enabled control with the given name in the group.\n         *\n         * It will return false for disabled controls. If you'd like to check for\n         * existence in the group only, use {@link AbstractControl.get} instead.\n         */\n        FormGroup.prototype.contains = function (controlName) {\n            return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n        };\n        /**\n         *  Sets the value of the {@link FormGroup}. It accepts an object that matches\n         *  the structure of the group, with control names as keys.\n         *\n         * This method performs strict checks, so it will throw an error if you try\n         * to set the value of a control that doesn't exist or if you exclude the\n         * value of a control.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const form = new FormGroup({\n         *     first: new FormControl(),\n         *     last: new FormControl()\n         *  });\n         *  console.log(form.value);   // {first: null, last: null}\n         *\n         *  form.setValue({first: 'Nancy', last: 'Drew'});\n         *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n         *\n         *  ```\n         */\n        FormGroup.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._checkAllValuesPresent(value);\n            Object.keys(value).forEach(function (name) {\n                _this._throwIfControlMissing(name);\n                _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Patches the value of the {@link FormGroup}. It accepts an object with control\n         *  names as keys, and will do its best to match the values to the correct controls\n         *  in the group.\n         *\n         *  It accepts both super-sets and sub-sets of the group without throwing an error.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const form = new FormGroup({\n         *     first: new FormControl(),\n         *     last: new FormControl()\n         *  });\n         *  console.log(form.value);   // {first: null, last: null}\n         *\n         *  form.patchValue({first: 'Nancy'});\n         *  console.log(form.value);   // {first: 'Nancy', last: null}\n         *\n         *  ```\n         */\n        FormGroup.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            Object.keys(value).forEach(function (name) {\n                if (_this.controls[name]) {\n                    _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * Resets the {@link FormGroup}. This means by default:\n         *\n         * * The group and all descendants are marked `pristine`\n         * * The group and all descendants are marked `untouched`\n         * * The value of all descendants will be null or null maps\n         *\n         * You can also reset to a specific form state by passing in a map of states\n         * that matches the structure of your form, with control names as keys. The state\n         * can be a standalone value or a form state object with both a value and a disabled\n         * status.\n         *\n         * ### Example\n         *\n         * ```ts\n         * this.form.reset({first: 'name', last: 'last name'});\n         *\n         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n         * ```\n         *\n         * - OR -\n         *\n         * ```\n         * this.form.reset({\n         *   first: {value: 'name', disabled: true},\n         *   last: 'last'\n         * });\n         *\n         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n         * console.log(this.form.get('first').status);  // 'DISABLED'\n         * ```\n         */\n        FormGroup.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = {}; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._forEachChild(function (control, name) {\n                control.reset(value[name], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         * The aggregate value of the {@link FormGroup}, including any disabled controls.\n         *\n         * If you'd like to include all values regardless of disabled status, use this method.\n         * Otherwise, the `value` property is the best way to get the value of the group.\n         */\n        FormGroup.prototype.getRawValue = function () {\n            return this._reduceChildren({}, function (acc, control, name) {\n                acc[name] = control.value;\n                return acc;\n            });\n        };\n        /** @internal */\n        FormGroup.prototype._throwIfControlMissing = function (name) {\n            if (!Object.keys(this.controls).length) {\n                throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.controls[name]) {\n                throw new Error(\"Cannot find form control with name: \" + name + \".\");\n            }\n        };\n        /** @internal */\n        FormGroup.prototype._forEachChild = function (cb) {\n            var _this = this;\n            Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n        };\n        /** @internal */\n        FormGroup.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) {\n                control.setParent(_this);\n                control._registerOnCollectionChange(_this._onCollectionChange);\n            });\n        };\n        /** @internal */\n        FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n        /** @internal */\n        FormGroup.prototype._anyControls = function (condition) {\n            var _this = this;\n            var res = false;\n            this._forEachChild(function (control, name) {\n                res = res || (_this.contains(name) && condition(control));\n            });\n            return res;\n        };\n        /** @internal */\n        FormGroup.prototype._reduceValue = function () {\n            var _this = this;\n            return this._reduceChildren({}, function (acc, control, name) {\n                if (control.enabled || _this.disabled) {\n                    acc[name] = control.value;\n                }\n                return acc;\n            });\n        };\n        /** @internal */\n        FormGroup.prototype._reduceChildren = function (initValue, fn) {\n            var res = initValue;\n            this._forEachChild(function (control, name) { res = fn(res, control, name); });\n            return res;\n        };\n        /** @internal */\n        FormGroup.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n                var controlName = _a[_i];\n                if (this.controls[controlName].enabled) {\n                    return false;\n                }\n            }\n            return Object.keys(this.controls).length > 0 || this.disabled;\n        };\n        /** @internal */\n        FormGroup.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, name) {\n                if (value[name] === undefined) {\n                    throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n                }\n            });\n        };\n        return FormGroup;\n    }(AbstractControl));\n    /**\n     * @whatItDoes Tracks the value and validity state of an array of {@link FormControl}\n     * instances.\n     *\n     * A `FormArray` aggregates the values of each child {@link FormControl} into an array.\n     * It calculates its status by reducing the statuses of its children. For example, if one of\n     * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n     *\n     * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n     * along with {@link FormControl} and {@link FormGroup}.\n     *\n     * @howToUse\n     *\n     * When instantiating a {@link FormArray}, pass in an array of child controls as the first\n     * argument.\n     *\n     * ### Example\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl('Nancy', Validators.minLength(2)),\n     *   new FormControl('Drew'),\n     * ]);\n     *\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * console.log(arr.status);  // 'VALID'\n     * ```\n     *\n     * You can also include array-level validators as the second arg, or array-level async\n     * validators as the third arg. These come in handy when you want to perform validation\n     * that considers the value of more than one child control.\n     *\n     * ### Adding or removing controls\n     *\n     * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n     * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n     * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n     * the `FormArray` directly, as that will result in strange and unexpected behavior such\n     * as broken change detection.\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var FormArray = (function (_super) {\n        __extends$6(FormArray, _super);\n        function FormArray(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         * Get the {@link AbstractControl} at the given `index` in the array.\n         */\n        FormArray.prototype.at = function (index) { return this.controls[index]; };\n        /**\n         * Insert a new {@link AbstractControl} at the end of the array.\n         */\n        FormArray.prototype.push = function (control) {\n            this.controls.push(control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Insert a new {@link AbstractControl} at the given `index` in the array.\n         */\n        FormArray.prototype.insert = function (index, control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Remove the control at the given `index` in the array.\n         */\n        FormArray.prototype.removeAt = function (index) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            this.controls.splice(index, 1);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Replace an existing control.\n         */\n        FormArray.prototype.setControl = function (index, control) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            this.controls.splice(index, 1);\n            if (control) {\n                this.controls.splice(index, 0, control);\n                this._registerControl(control);\n            }\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        Object.defineProperty(FormArray.prototype, \"length\", {\n            /**\n             * Length of the control array.\n             */\n            get: function () { return this.controls.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         *  Sets the value of the {@link FormArray}. It accepts an array that matches\n         *  the structure of the control.\n         *\n         * This method performs strict checks, so it will throw an error if you try\n         * to set the value of a control that doesn't exist or if you exclude the\n         * value of a control.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const arr = new FormArray([\n         *     new FormControl(),\n         *     new FormControl()\n         *  ]);\n         *  console.log(arr.value);   // [null, null]\n         *\n         *  arr.setValue(['Nancy', 'Drew']);\n         *  console.log(arr.value);   // ['Nancy', 'Drew']\n         *  ```\n         */\n        FormArray.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._checkAllValuesPresent(value);\n            value.forEach(function (newValue, index) {\n                _this._throwIfControlMissing(index);\n                _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Patches the value of the {@link FormArray}. It accepts an array that matches the\n         *  structure of the control, and will do its best to match the values to the correct\n         *  controls in the group.\n         *\n         *  It accepts both super-sets and sub-sets of the array without throwing an error.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const arr = new FormArray([\n         *     new FormControl(),\n         *     new FormControl()\n         *  ]);\n         *  console.log(arr.value);   // [null, null]\n         *\n         *  arr.patchValue(['Nancy']);\n         *  console.log(arr.value);   // ['Nancy', null]\n         *  ```\n         */\n        FormArray.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            value.forEach(function (newValue, index) {\n                if (_this.at(index)) {\n                    _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * Resets the {@link FormArray}. This means by default:\n         *\n         * * The array and all descendants are marked `pristine`\n         * * The array and all descendants are marked `untouched`\n         * * The value of all descendants will be null or null maps\n         *\n         * You can also reset to a specific form state by passing in an array of states\n         * that matches the structure of the control. The state can be a standalone value\n         * or a form state object with both a value and a disabled status.\n         *\n         * ### Example\n         *\n         * ```ts\n         * this.arr.reset(['name', 'last name']);\n         *\n         * console.log(this.arr.value);  // ['name', 'last name']\n         * ```\n         *\n         * - OR -\n         *\n         * ```\n         * this.arr.reset([\n         *   {value: 'name', disabled: true},\n         *   'last'\n         * ]);\n         *\n         * console.log(this.arr.value);  // ['name', 'last name']\n         * console.log(this.arr.get(0).status);  // 'DISABLED'\n         * ```\n         */\n        FormArray.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = []; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._forEachChild(function (control, index) {\n                control.reset(value[index], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         * The aggregate value of the array, including any disabled controls.\n         *\n         * If you'd like to include all values regardless of disabled status, use this method.\n         * Otherwise, the `value` property is the best way to get the value of the array.\n         */\n        FormArray.prototype.getRawValue = function () { return this.controls.map(function (control) { return control.value; }); };\n        /** @internal */\n        FormArray.prototype._throwIfControlMissing = function (index) {\n            if (!this.controls.length) {\n                throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.at(index)) {\n                throw new Error(\"Cannot find form control at index \" + index);\n            }\n        };\n        /** @internal */\n        FormArray.prototype._forEachChild = function (cb) {\n            this.controls.forEach(function (control, index) { cb(control, index); });\n        };\n        /** @internal */\n        FormArray.prototype._updateValue = function () {\n            var _this = this;\n            this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n                .map(function (control) { return control.value; });\n        };\n        /** @internal */\n        FormArray.prototype._anyControls = function (condition) {\n            return this.controls.some(function (control) { return control.enabled && condition(control); });\n        };\n        /** @internal */\n        FormArray.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) { return _this._registerControl(control); });\n        };\n        /** @internal */\n        FormArray.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, i) {\n                if (value[i] === undefined) {\n                    throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n                }\n            });\n        };\n        /** @internal */\n        FormArray.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n                var control = _a[_i];\n                if (control.enabled)\n                    return false;\n            }\n            return this.controls.length > 0 || this.disabled;\n        };\n        FormArray.prototype._registerControl = function (control) {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        };\n        return FormArray;\n    }(AbstractControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formDirectiveProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgForm; })\n    };\n    var resolvedPromise = Promise.resolve(null);\n    /**\n     * @whatItDoes Creates a top-level {@link FormGroup} instance and binds it to a form\n     * to track aggregate form value and validation status.\n     *\n     * @howToUse\n     *\n     * As soon as you import the `FormsModule`, this directive becomes active by default on\n     * all `<form>` tags.  You don't need to add a special selector.\n     *\n     * You can export the directive into a local template variable using `ngForm` as the key\n     * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n     * {@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n     * will give you access to the aggregate value and validity status of the form, as well as\n     * user interaction properties like `dirty` and `touched`.\n     *\n     * To register child controls with the form, you'll want to use {@link NgModel} with a\n     * `name` attribute.  You can also use {@link NgModelGroup} if you'd like to create\n     * sub-groups within the form.\n     *\n     * You can listen to the directive's `ngSubmit` event to be notified when the user has\n     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n     * submission event.\n     *\n     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `FormsModule`\n     *\n     *  @stable\n     */\n    var NgForm = (function (_super) {\n        __extends$4(NgForm, _super);\n        function NgForm(validators, asyncValidators) {\n            _super.call(this);\n            this._submitted = false;\n            this.ngSubmit = new EventEmitter();\n            this.form =\n                new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        }\n        Object.defineProperty(NgForm.prototype, \"submitted\", {\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"formDirective\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"control\", {\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"path\", {\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"controls\", {\n            get: function () { return this.form.controls; },\n            enumerable: true,\n            configurable: true\n        });\n        NgForm.prototype.addControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                dir._control = container.registerControl(dir.name, dir.control);\n                setUpControl(dir.control, dir);\n                dir.control.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        NgForm.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n        NgForm.prototype.removeControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        NgForm.prototype.addFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                var group = new FormGroup({});\n                setUpFormContainer(group, dir);\n                container.registerControl(dir.name, group);\n                group.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        NgForm.prototype.removeFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        NgForm.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n        NgForm.prototype.updateModel = function (dir, value) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var ctrl = _this.form.get(dir.path);\n                ctrl.setValue(value);\n            });\n        };\n        NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n        NgForm.prototype.onSubmit = function ($event) {\n            this._submitted = true;\n            this.ngSubmit.emit($event);\n            return false;\n        };\n        NgForm.prototype.onReset = function () { this.resetForm(); };\n        NgForm.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /** @internal */\n        NgForm.prototype._findContainer = function (path) {\n            path.pop();\n            return path.length ? this.form.get(path) : this.form;\n        };\n        NgForm.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                        providers: [formDirectiveProvider],\n                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                        outputs: ['ngSubmit'],\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgForm.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        return NgForm;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Examples = {\n        formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n        formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n        formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; let i=index\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n        ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n        ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n    };\n\n    var TemplateDrivenErrors = (function () {\n        function TemplateDrivenErrors() {\n        }\n        TemplateDrivenErrors.modelParentException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + Examples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + Examples.ngModelWithFormGroup);\n        };\n        TemplateDrivenErrors.formGroupNameException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        TemplateDrivenErrors.missingNameException = function () {\n            throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n        };\n        TemplateDrivenErrors.modelGroupParentException = function () {\n            throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        return TemplateDrivenErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var modelGroupProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgModelGroup; })\n    };\n    /**\n     * @whatItDoes Creates and binds a {@link FormGroup} instance to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive can only be used as a child of {@link NgForm} (or in other words,\n     * within `<form>` tags).\n     *\n     * Use this directive if you'd like to create a sub-group within a form. This can\n     * come in handy if you want to validate a sub-group of your form separately from\n     * the rest of your form, or if some values in your domain model make more sense to\n     * consume together in a nested object.\n     *\n     * Pass in the name you'd like this sub-group to have and it will become the key\n     * for the sub-group in the form's full value. You can also export the directive into\n     * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n     *\n     * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `FormsModule`\n     *\n     * @stable\n     */\n    var NgModelGroup = (function (_super) {\n        __extends$8(NgModelGroup, _super);\n        function NgModelGroup(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /** @internal */\n        NgModelGroup.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelGroupParentException();\n            }\n        };\n        NgModelGroup.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n        ];\n        /** @nocollapse */\n        NgModelGroup.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        NgModelGroup.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['ngModelGroup',] },],\n        };\n        return NgModelGroup;\n    }(AbstractFormGroupDirective));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formControlBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return NgModel; })\n    };\n    /**\n     * `ngModel` forces an additional change detection run when its inputs change:\n     * E.g.:\n     * ```\n     * <div>{{myModel.valid}}</div>\n     * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n     * ```\n     * I.e. `ngModel` can export itself on the element and then be used in the template.\n     * Normally, this would result in expressions before the `input` that use the exported directive\n     * to have and old value as they have been\n     * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n     * detection run.\n     *\n     * Notes:\n     * - this is just one extra run no matter how many `ngModel` have been changed.\n     * - this is a general problem when using `exportAs` for directives!\n     */\n    var resolvedPromise$1 = Promise.resolve(null);\n    /**\n     * @whatItDoes Creates a {@link FormControl} instance from a domain model and binds it\n     * to a form control element.\n     *\n     * The {@link FormControl} instance will track the value, user interaction, and\n     * validation status of the control and keep the view synced with the model. If used\n     * within a parent form, the directive will also register itself with the form as a child\n     * control.\n     *\n     * @howToUse\n     *\n     * This directive can be used by itself or as part of a larger form. All you need is the\n     * `ngModel` selector to activate it.\n     *\n     * It accepts a domain model as an optional {@link @Input}. If you have a one-way binding\n     * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n     * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n     * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n     * the domain model in your class as well.\n     *\n     * If you wish to inspect the properties of the associated {@link FormControl} (like\n     * validity state), you can also export the directive into a local template variable using\n     * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n     * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n     * will fall through to the control anyway, so you can access them directly. You can see a\n     * full list of properties directly available in {@link AbstractControlDirective}.\n     *\n     * The following is an example of a simple standalone control using `ngModel`:\n     *\n     * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n     *\n     * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n     * so that the control can be registered with the parent form under that name.\n     *\n     * It's worth noting that in the context of a parent form, you often can skip one-way or\n     * two-way binding because the parent form will sync the value for you. You can access\n     * its properties by exporting it into a local template variable using `ngForm` (ex:\n     * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n     *\n     * If you do need to populate initial values into your form, using a one-way binding for\n     * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n     * than the domain model's value on submit.\n     *\n     * Take a look at an example of using `ngModel` within a form:\n     *\n     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n     *\n     * To see `ngModel` examples with different form control types, see:\n     *\n     * * Radio buttons: {@link RadioControlValueAccessor}\n     * * Selects: {@link SelectControlValueAccessor}\n     *\n     * **npm package**: `@angular/forms`\n     *\n     * **NgModule**: `FormsModule`\n     *\n     *  @stable\n     */\n    var NgModel = (function (_super) {\n        __extends$7(NgModel, _super);\n        function NgModel(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            /** @internal */\n            this._control = new FormControl();\n            /** @internal */\n            this._registered = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        NgModel.prototype.ngOnChanges = function (changes) {\n            this._checkForErrors();\n            if (!this._registered)\n                this._setUpControl();\n            if ('isDisabled' in changes) {\n                this._updateDisabled(changes);\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this._updateValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n        Object.defineProperty(NgModel.prototype, \"control\", {\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"path\", {\n            get: function () {\n                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"formDirective\", {\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"validator\", {\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModel.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        NgModel.prototype._setUpControl = function () {\n            this._isStandalone() ? this._setUpStandalone() :\n                this.formDirective.addControl(this);\n            this._registered = true;\n        };\n        NgModel.prototype._isStandalone = function () {\n            return !this._parent || (this.options && this.options.standalone);\n        };\n        NgModel.prototype._setUpStandalone = function () {\n            setUpControl(this._control, this);\n            this._control.updateValueAndValidity({ emitEvent: false });\n        };\n        NgModel.prototype._checkForErrors = function () {\n            if (!this._isStandalone()) {\n                this._checkParentType();\n            }\n            this._checkName();\n        };\n        NgModel.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                TemplateDrivenErrors.formGroupNameException();\n            }\n            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelParentException();\n            }\n        };\n        NgModel.prototype._checkName = function () {\n            if (this.options && this.options.name)\n                this.name = this.options.name;\n            if (!this._isStandalone() && !this.name) {\n                TemplateDrivenErrors.missingNameException();\n            }\n        };\n        NgModel.prototype._updateValue = function (value) {\n            var _this = this;\n            resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n        };\n        NgModel.prototype._updateDisabled = function (changes) {\n            var _this = this;\n            var disabledValue = changes['isDisabled'].currentValue;\n            var isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n            resolvedPromise$1.then(function () {\n                if (isDisabled && !_this.control.disabled) {\n                    _this.control.disable();\n                }\n                else if (!isDisabled && _this.control.disabled) {\n                    _this.control.enable();\n                }\n            });\n        };\n        NgModel.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[ngModel]:not([formControlName]):not([formControl])',\n                        providers: [formControlBinding],\n                        exportAs: 'ngModel'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgModel.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ];\n        NgModel.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'options': [{ type: _angular_core.Input, args: ['ngModelOptions',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n        };\n        return NgModel;\n    }(NgControl));\n\n    var ReactiveErrors = (function () {\n        function ReactiveErrors() {\n        }\n        ReactiveErrors.controlParentException = function () {\n            throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formControlName);\n        };\n        ReactiveErrors.ngModelGroupException = function () {\n            throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + Examples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + Examples.ngModelGroup);\n        };\n        ReactiveErrors.missingFormException = function () {\n            throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + Examples.formControlName);\n        };\n        ReactiveErrors.groupParentException = function () {\n            throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formGroupName);\n        };\n        ReactiveErrors.arrayParentException = function () {\n            throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + Examples.formArrayName);\n        };\n        ReactiveErrors.disabledAttrWarning = function () {\n            console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n        };\n        return ReactiveErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$9 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formControlBinding$1 = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlDirective; })\n    };\n    /**\n     * @whatItDoes Syncs a standalone {@link FormControl} instance to a form control element.\n     *\n     * In other words, this directive ensures that any values written to the {@link FormControl}\n     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n     * any values written to the DOM element through user input will be reflected in the\n     * {@link FormControl} instance (view -> model).\n     *\n     * @howToUse\n     *\n     * Use this directive if you'd like to create and manage a {@link FormControl} instance directly.\n     * Simply create a {@link FormControl}, save it to your component class, and pass it into the\n     * {@link FormControlDirective}.\n     *\n     * This directive is designed to be used as a standalone control.  Unlike {@link FormControlName},\n     * it does not require that your {@link FormControl} instance be part of any parent\n     * {@link FormGroup}, and it won't be registered to any {@link FormGroupDirective} that\n     * exists above it.\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {@link FormControl} instance. See a full list of available properties in\n     * {@link AbstractControl}.\n     *\n     * **Set the value**: You can pass in an initial value when instantiating the {@link FormControl},\n     * or you can set it programmatically later using {@link AbstractControl.setValue} or\n     * {@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     *  @stable\n     */\n    var FormControlDirective = (function (_super) {\n        __extends$9(FormControlDirective, _super);\n        function FormControlDirective(validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this.update = new EventEmitter();\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlDirective.prototype.ngOnChanges = function (changes) {\n            if (this._isControlChanged(changes)) {\n                setUpControl(this.form, this);\n                if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                    this.valueAccessor.setDisabledState(true);\n                }\n                this.form.updateValueAndValidity({ emitEvent: false });\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.form.setValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        Object.defineProperty(FormControlDirective.prototype, \"path\", {\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"control\", {\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        FormControlDirective.prototype._isControlChanged = function (changes) {\n            return changes.hasOwnProperty('form');\n        };\n        FormControlDirective.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n        ];\n        /** @nocollapse */\n        FormControlDirective.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ];\n        FormControlDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formControl',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlDirective;\n    }(NgControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$11 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formDirectiveProvider$1 = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupDirective; })\n    };\n    /**\n     * @whatItDoes Binds an existing {@link FormGroup} to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive accepts an existing {@link FormGroup} instance. It will then use this\n     * {@link FormGroup} instance to match any child {@link FormControl}, {@link FormGroup},\n     * and {@link FormArray} instances to child {@link FormControlName}, {@link FormGroupName},\n     * and {@link FormArrayName} directives.\n     *\n     * **Set value**: You can set the form's initial value when instantiating the\n     * {@link FormGroup}, or you can set it programmatically later using the {@link FormGroup}'s\n     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue} methods.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n     * to the {@link FormGroup}'s {@link AbstractControl.valueChanges} event.  You can also listen to\n     * its {@link AbstractControl.statusChanges} event to be notified when the validation status is\n     * re-calculated.\n     *\n     * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n     * submission event.\n     *\n     * ### Example\n     *\n     * In this example, we create form controls for first name and last name.\n     *\n     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n     *\n     * **npm package**: `@angular/forms`\n     *\n     * **NgModule**: {@link ReactiveFormsModule}\n     *\n     *  @stable\n     */\n    var FormGroupDirective = (function (_super) {\n        __extends$11(FormGroupDirective, _super);\n        function FormGroupDirective(_validators, _asyncValidators) {\n            _super.call(this);\n            this._validators = _validators;\n            this._asyncValidators = _asyncValidators;\n            this._submitted = false;\n            this.directives = [];\n            this.form = null;\n            this.ngSubmit = new EventEmitter();\n        }\n        FormGroupDirective.prototype.ngOnChanges = function (changes) {\n            this._checkFormPresent();\n            if (changes.hasOwnProperty('form')) {\n                this._updateValidators();\n                this._updateDomValue();\n                this._updateRegistrations();\n            }\n        };\n        Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        FormGroupDirective.prototype.addControl = function (dir) {\n            var ctrl = this.form.get(dir.path);\n            setUpControl(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n            this.directives.push(dir);\n            return ctrl;\n        };\n        FormGroupDirective.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n        FormGroupDirective.prototype.removeControl = function (dir) { ListWrapper.remove(this.directives, dir); };\n        FormGroupDirective.prototype.addFormGroup = function (dir) {\n            var ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n        FormGroupDirective.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n        FormGroupDirective.prototype.addFormArray = function (dir) {\n            var ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        FormGroupDirective.prototype.removeFormArray = function (dir) { };\n        FormGroupDirective.prototype.getFormArray = function (dir) { return this.form.get(dir.path); };\n        FormGroupDirective.prototype.updateModel = function (dir, value) {\n            var ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        };\n        FormGroupDirective.prototype.onSubmit = function ($event) {\n            this._submitted = true;\n            this.ngSubmit.emit($event);\n            return false;\n        };\n        FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n        FormGroupDirective.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /** @internal */\n        FormGroupDirective.prototype._updateDomValue = function () {\n            var _this = this;\n            this.directives.forEach(function (dir) {\n                var newCtrl = _this.form.get(dir.path);\n                if (dir._control !== newCtrl) {\n                    cleanUpControl(dir._control, dir);\n                    if (newCtrl)\n                        setUpControl(newCtrl, dir);\n                    dir._control = newCtrl;\n                }\n            });\n            this.form._updateTreeValidity({ emitEvent: false });\n        };\n        FormGroupDirective.prototype._updateRegistrations = function () {\n            var _this = this;\n            this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n            if (this._oldForm)\n                this._oldForm._registerOnCollectionChange(function () { });\n            this._oldForm = this.form;\n        };\n        FormGroupDirective.prototype._updateValidators = function () {\n            var sync = composeValidators(this._validators);\n            this.form.validator = Validators.compose([this.form.validator, sync]);\n            var async = composeAsyncValidators(this._asyncValidators);\n            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n        };\n        FormGroupDirective.prototype._checkFormPresent = function () {\n            if (!this.form) {\n                ReactiveErrors.missingFormException();\n            }\n        };\n        FormGroupDirective.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroup]',\n                        providers: [formDirectiveProvider$1],\n                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        FormGroupDirective.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        FormGroupDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formGroup',] },],\n            'ngSubmit': [{ type: _angular_core.Output },],\n        };\n        return FormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$12 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formGroupNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupName; })\n    };\n    /**\n     * @whatItDoes Syncs a nested {@link FormGroup} to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive can only be used with a parent {@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the nested {@link FormGroup} you want to link, and\n     * will look for a {@link FormGroup} registered with that name in the parent\n     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n     *\n     * Nested form groups can come in handy when you want to validate a sub-group of a\n     * form separately from the rest or when you'd like to group the values of certain\n     * controls into their own nested object.\n     *\n     * **Access the group**: You can access the associated {@link FormGroup} using the\n     * {@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n     *\n     * You can also access individual controls within the group using dot syntax.\n     * Ex: `this.form.get('name.first')`\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {@link FormGroup}. See a full list of available properties in {@link AbstractControl}.\n     *\n     * **Set the value**: You can set an initial value for each child control when instantiating\n     * the {@link FormGroup}, or you can set it programmatically later using\n     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the group, you can\n     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     * @stable\n     */\n    var FormGroupName = (function (_super) {\n        __extends$12(FormGroupName, _super);\n        function FormGroupName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /** @internal */\n        FormGroupName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.groupParentException();\n            }\n        };\n        FormGroupName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormGroupName.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        FormGroupName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formGroupName',] },],\n        };\n        return FormGroupName;\n    }(AbstractFormGroupDirective));\n    var formArrayNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormArrayName; })\n    };\n    /**\n     * @whatItDoes Syncs a nested {@link FormArray} to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the nested {@link FormArray} you want to link, and\n     * will look for a {@link FormArray} registered with that name in the parent\n     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n     *\n     * Nested form arrays can come in handy when you have a group of form controls but\n     * you're not sure how many there will be. Form arrays allow you to create new\n     * form controls dynamically.\n     *\n     * **Access the array**: You can access the associated {@link FormArray} using the\n     * {@link AbstractControl.get} method on the parent {@link FormGroup}.\n     * Ex: `this.form.get('cities')`.\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {@link FormArray}. See a full list of available properties in {@link AbstractControl}.\n     *\n     * **Set the value**: You can set an initial value for each child control when instantiating\n     * the {@link FormArray}, or you can set the value programmatically later using the\n     * {@link FormArray}'s {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}\n     * methods.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the array, you can\n     * subscribe to the {@link FormArray}'s {@link AbstractControl.valueChanges} event.  You can also\n     * listen to its {@link AbstractControl.statusChanges} event to be notified when the validation\n     * status is re-calculated.\n     *\n     * **Add new controls**: You can add new controls to the {@link FormArray} dynamically by\n     * calling its {@link FormArray.push} method.\n     *  Ex: `this.form.get('cities').push(new FormControl());`\n     *\n     * ### Example\n     *\n     * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     * @stable\n     */\n    var FormArrayName = (function (_super) {\n        __extends$12(FormArrayName, _super);\n        function FormArrayName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        FormArrayName.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormArray(this);\n        };\n        FormArrayName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormArray(this);\n            }\n        };\n        Object.defineProperty(FormArrayName.prototype, \"control\", {\n            get: function () { return this.formDirective.getFormArray(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n            get: function () {\n                return this._parent ? this._parent.formDirective : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"path\", {\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"validator\", {\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        FormArrayName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.arrayParentException();\n            }\n        };\n        FormArrayName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormArrayName.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        FormArrayName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formArrayName',] },],\n        };\n        return FormArrayName;\n    }(ControlContainer));\n    function _hasInvalidParent(parent) {\n        return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n            !(parent instanceof FormArrayName);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$10 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var controlNameBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlName; })\n    };\n    /**\n     * @whatItDoes  Syncs a {@link FormControl} in an existing {@link FormGroup} to a form control\n     * element by name.\n     *\n     * In other words, this directive ensures that any values written to the {@link FormControl}\n     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n     * any values written to the DOM element through user input will be reflected in the\n     * {@link FormControl} instance (view -> model).\n     *\n     * @howToUse\n     *\n     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the {@link FormControl} instance you want to\n     * link, and will look for a {@link FormControl} registered with that name in the\n     * closest {@link FormGroup} or {@link FormArray} above it.\n     *\n     * **Access the control**: You can access the {@link FormControl} associated with\n     * this directive by using the {@link AbstractControl.get} method.\n     * Ex: `this.form.get('first');`\n     *\n     * **Get value**: the `value` property is always synced and available on the {@link FormControl}.\n     * See a full list of available properties in {@link AbstractControl}.\n     *\n     *  **Set value**: You can set an initial value for the control when instantiating the\n     *  {@link FormControl}, or you can set it programmatically later using\n     *  {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * In this example, we create form controls for first name and last name.\n     *\n     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n     *\n     * To see `formControlName` examples with different form control types, see:\n     *\n     * * Radio buttons: {@link RadioControlValueAccessor}\n     * * Selects: {@link SelectControlValueAccessor}\n     *\n     * **npm package**: `@angular/forms`\n     *\n     * **NgModule**: {@link ReactiveFormsModule}\n     *\n     *  @stable\n     */\n    var FormControlName = (function (_super) {\n        __extends$10(FormControlName, _super);\n        function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this._added = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlName.prototype.ngOnChanges = function (changes) {\n            if (!this._added)\n                this._setUpControl();\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.viewModel = this.model;\n                this.formDirective.updateModel(this, this.model);\n            }\n        };\n        FormControlName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeControl(this);\n            }\n        };\n        FormControlName.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        Object.defineProperty(FormControlName.prototype, \"path\", {\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"validator\", {\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"control\", {\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlName.prototype._checkParentType = function () {\n            if (!(this._parent instanceof FormGroupName) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                ReactiveErrors.ngModelGroupException();\n            }\n            else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n                !(this._parent instanceof FormArrayName)) {\n                ReactiveErrors.controlParentException();\n            }\n        };\n        FormControlName.prototype._setUpControl = function () {\n            this._checkParentType();\n            this._control = this.formDirective.addControl(this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this._added = true;\n        };\n        FormControlName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n        ];\n        /** @nocollapse */\n        FormControlName.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ];\n        FormControlName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formControlName',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlName;\n    }(NgControl));\n\n    var REQUIRED_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return RequiredValidator; }),\n        multi: true\n    };\n    /**\n     * A Directive that adds the `required` validator to any controls marked with the\n     * `required` attribute, via the {@link NG_VALIDATORS} binding.\n     *\n     * ### Example\n     *\n     * ```\n     * <input name=\"fullName\" ngModel required>\n     * ```\n     *\n     * @stable\n     */\n    var RequiredValidator = (function () {\n        function RequiredValidator() {\n        }\n        Object.defineProperty(RequiredValidator.prototype, \"required\", {\n            get: function () { return this._required; },\n            set: function (value) {\n                this._required = value != null && value !== false && \"\" + value !== 'false';\n                if (this._onChange)\n                    this._onChange();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RequiredValidator.prototype.validate = function (c) {\n            return this.required ? Validators.required(c) : null;\n        };\n        RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        RequiredValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[required][formControlName],[required][formControl],[required][ngModel]',\n                        providers: [REQUIRED_VALIDATOR],\n                        host: { '[attr.required]': 'required ? \"\" : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        RequiredValidator.ctorParameters = [];\n        RequiredValidator.propDecorators = {\n            'required': [{ type: _angular_core.Input },],\n        };\n        return RequiredValidator;\n    }());\n    /**\n     * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='min'}\n     */\n    var MIN_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MinLengthValidator; }),\n        multi: true\n    };\n    /**\n     * A directive which installs the {@link MinLengthValidator} for any `formControlName`,\n     * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n     *\n     * @stable\n     */\n    var MinLengthValidator = (function () {\n        function MinLengthValidator() {\n        }\n        MinLengthValidator.prototype.ngOnChanges = function (changes) {\n            if ('minlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        MinLengthValidator.prototype.validate = function (c) {\n            return this.minlength == null ? null : this._validator(c);\n        };\n        MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        MinLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.minLength(parseInt(this.minlength, 10));\n        };\n        MinLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                        providers: [MIN_LENGTH_VALIDATOR],\n                        host: { '[attr.minlength]': 'minlength ? minlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MinLengthValidator.ctorParameters = [];\n        MinLengthValidator.propDecorators = {\n            'minlength': [{ type: _angular_core.Input },],\n        };\n        return MinLengthValidator;\n    }());\n    /**\n     * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='max'}\n     */\n    var MAX_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MaxLengthValidator; }),\n        multi: true\n    };\n    /**\n     * A directive which installs the {@link MaxLengthValidator} for any `formControlName,\n     * `formControl`,\n     * or control with `ngModel` that also has a `maxlength` attribute.\n     *\n     * @stable\n     */\n    var MaxLengthValidator = (function () {\n        function MaxLengthValidator() {\n        }\n        MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n            if ('maxlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        MaxLengthValidator.prototype.validate = function (c) {\n            return this.maxlength != null ? this._validator(c) : null;\n        };\n        MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        MaxLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n        };\n        MaxLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                        providers: [MAX_LENGTH_VALIDATOR],\n                        host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MaxLengthValidator.ctorParameters = [];\n        MaxLengthValidator.propDecorators = {\n            'maxlength': [{ type: _angular_core.Input },],\n        };\n        return MaxLengthValidator;\n    }());\n    var PATTERN_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return PatternValidator; }),\n        multi: true\n    };\n    /**\n     * A Directive that adds the `pattern` validator to any controls marked with the\n     * `pattern` attribute, via the {@link NG_VALIDATORS} binding. Uses attribute value\n     * as the regex to validate Control value against.  Follows pattern attribute\n     * semantics; i.e. regex must match entire Control value.\n     *\n     * ### Example\n     *\n     * ```\n     * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n     * ```\n     * @stable\n     */\n    var PatternValidator = (function () {\n        function PatternValidator() {\n        }\n        PatternValidator.prototype.ngOnChanges = function (changes) {\n            if ('pattern' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n        PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n        PatternValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                        providers: [PATTERN_VALIDATOR],\n                        host: { '[attr.pattern]': 'pattern ? pattern : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        PatternValidator.ctorParameters = [];\n        PatternValidator.propDecorators = {\n            'pattern': [{ type: _angular_core.Input },],\n        };\n        return PatternValidator;\n    }());\n\n    /**\n     * @whatItDoes Creates an {@link AbstractControl} from a user-specified configuration.\n     *\n     * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n     * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n     * forms.\n     *\n     * @howToUse\n     *\n     * To use, inject `FormBuilder` into your component class. You can then call its methods\n     * directly.\n     *\n     * {@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n     *\n     *  * **npm package**: `@angular/forms`\n     *\n     *  * **NgModule**: {@link ReactiveFormsModule}\n     *\n     * @stable\n     */\n    var FormBuilder = (function () {\n        function FormBuilder() {\n        }\n        /**\n         * Construct a new {@link FormGroup} with the given map of configuration.\n         * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n         *\n         * See the {@link FormGroup} constructor for more details.\n         */\n        FormBuilder.prototype.group = function (controlsConfig, extra) {\n            if (extra === void 0) { extra = null; }\n            var controls = this._reduceControls(controlsConfig);\n            var validator = isPresent(extra) ? extra['validator'] : null;\n            var asyncValidator = isPresent(extra) ? extra['asyncValidator'] : null;\n            return new FormGroup(controls, validator, asyncValidator);\n        };\n        /**\n         * Construct a new {@link FormControl} with the given `formState`,`validator`, and\n         * `asyncValidator`.\n         *\n         * `formState` can either be a standalone value for the form control or an object\n         * that contains both a value and a disabled status.\n         *\n         */\n        FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            return new FormControl(formState, validator, asyncValidator);\n        };\n        /**\n         * Construct a {@link FormArray} from the given `controlsConfig` array of\n         * configuration, with the given optional `validator` and `asyncValidator`.\n         */\n        FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n            var _this = this;\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            var controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n            return new FormArray(controls, validator, asyncValidator);\n        };\n        /** @internal */\n        FormBuilder.prototype._reduceControls = function (controlsConfig) {\n            var _this = this;\n            var controls = {};\n            Object.keys(controlsConfig).forEach(function (controlName) {\n                controls[controlName] = _this._createControl(controlsConfig[controlName]);\n            });\n            return controls;\n        };\n        /** @internal */\n        FormBuilder.prototype._createControl = function (controlConfig) {\n            if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n                controlConfig instanceof FormArray) {\n                return controlConfig;\n            }\n            else if (Array.isArray(controlConfig)) {\n                var value = controlConfig[0];\n                var validator = controlConfig.length > 1 ? controlConfig[1] : null;\n                var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n                return this.control(value, validator, asyncValidator);\n            }\n            else {\n                return this.control(controlConfig);\n            }\n        };\n        FormBuilder.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        FormBuilder.ctorParameters = [];\n        return FormBuilder;\n    }());\n\n    var SHARED_FORM_DIRECTIVES = [\n        NgSelectOption, NgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor,\n        RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus,\n        NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator\n    ];\n    var TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n    var REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n    /**\n     * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n     */\n    var InternalFormsSharedModule = (function () {\n        function InternalFormsSharedModule() {\n        }\n        InternalFormsSharedModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: SHARED_FORM_DIRECTIVES,\n                        exports: SHARED_FORM_DIRECTIVES,\n                    },] },\n        ];\n        /** @nocollapse */\n        InternalFormsSharedModule.ctorParameters = [];\n        return InternalFormsSharedModule;\n    }());\n\n    /**\n     * The ng module for forms.\n     * @stable\n     */\n    var FormsModule = (function () {\n        function FormsModule() {\n        }\n        FormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                        providers: [RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        FormsModule.ctorParameters = [];\n        return FormsModule;\n    }());\n    /**\n     * The ng module for reactive forms.\n     * @stable\n     */\n    var ReactiveFormsModule = (function () {\n        function ReactiveFormsModule() {\n        }\n        ReactiveFormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                        providers: [FormBuilder, RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        ReactiveFormsModule.ctorParameters = [];\n        return ReactiveFormsModule;\n    }());\n\n    exports.AbstractControlDirective = AbstractControlDirective;\n    exports.AbstractFormGroupDirective = AbstractFormGroupDirective;\n    exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;\n    exports.ControlContainer = ControlContainer;\n    exports.NG_VALUE_ACCESSOR = NG_VALUE_ACCESSOR;\n    exports.DefaultValueAccessor = DefaultValueAccessor;\n    exports.NgControl = NgControl;\n    exports.NgControlStatus = NgControlStatus;\n    exports.NgControlStatusGroup = NgControlStatusGroup;\n    exports.NgForm = NgForm;\n    exports.NgModel = NgModel;\n    exports.NgModelGroup = NgModelGroup;\n    exports.RadioControlValueAccessor = RadioControlValueAccessor;\n    exports.FormControlDirective = FormControlDirective;\n    exports.FormControlName = FormControlName;\n    exports.FormGroupDirective = FormGroupDirective;\n    exports.FormArrayName = FormArrayName;\n    exports.FormGroupName = FormGroupName;\n    exports.NgSelectOption = NgSelectOption;\n    exports.SelectControlValueAccessor = SelectControlValueAccessor;\n    exports.SelectMultipleControlValueAccessor = SelectMultipleControlValueAccessor;\n    exports.MaxLengthValidator = MaxLengthValidator;\n    exports.MinLengthValidator = MinLengthValidator;\n    exports.PatternValidator = PatternValidator;\n    exports.RequiredValidator = RequiredValidator;\n    exports.FormBuilder = FormBuilder;\n    exports.AbstractControl = AbstractControl;\n    exports.FormArray = FormArray;\n    exports.FormControl = FormControl;\n    exports.FormGroup = FormGroup;\n    exports.NG_ASYNC_VALIDATORS = NG_ASYNC_VALIDATORS;\n    exports.NG_VALIDATORS = NG_VALIDATORS;\n    exports.Validators = Validators;\n    exports.FormsModule = FormsModule;\n    exports.ReactiveFormsModule = ReactiveFormsModule;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/bundles/forms.umd.js\n ** module id = 84\n ** module chunks = 2\n **/","/**\n * @license Angular v2.2.4\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/compiler'), require('@angular/core'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/compiler', '@angular/core', '@angular/platform-browser'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.platformBrowserDynamic = global.ng.platformBrowserDynamic || {}),global.ng.compiler,global.ng.core,global.ng.platformBrowser));\n}(this, function (exports,_angular_compiler,_angular_core,_angular_platformBrowser) { 'use strict';\n\n    var INTERNAL_BROWSER_PLATFORM_PROVIDERS = _angular_platformBrowser.__platform_browser_private__.INTERNAL_BROWSER_PLATFORM_PROVIDERS;\n\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var ResourceLoaderImpl = (function (_super) {\n        __extends(ResourceLoaderImpl, _super);\n        function ResourceLoaderImpl() {\n            _super.apply(this, arguments);\n        }\n        ResourceLoaderImpl.prototype.get = function (url) {\n            var resolve;\n            var reject;\n            var promise = new Promise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, true);\n            xhr.responseType = 'text';\n            xhr.onload = function () {\n                // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n                // by IE10)\n                var response = xhr.response || xhr.responseText;\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = xhr.status === 1223 ? 204 : xhr.status;\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = response ? 200 : 0;\n                }\n                if (200 <= status && status <= 300) {\n                    resolve(response);\n                }\n                else {\n                    reject(\"Failed to load \" + url);\n                }\n            };\n            xhr.onerror = function () { reject(\"Failed to load \" + url); };\n            xhr.send();\n            return promise;\n        };\n        ResourceLoaderImpl.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        ResourceLoaderImpl.ctorParameters = [];\n        return ResourceLoaderImpl;\n    }(_angular_compiler.ResourceLoader));\n\n    var INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [\n        INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n        {\n            provide: _angular_core.COMPILER_OPTIONS,\n            useValue: { providers: [{ provide: _angular_compiler.ResourceLoader, useClass: ResourceLoaderImpl }] },\n            multi: true\n        },\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = self;\n        }\n        else {\n            globalScope = global;\n        }\n    }\n    else {\n        globalScope = window;\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var _global = globalScope;\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    _global.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n     * ResourceLoader.\n     *\n     * The template cache needs to be built and loaded into window.$templateCache\n     * via a separate mechanism.\n     */\n    var CachedResourceLoader = (function (_super) {\n        __extends$1(CachedResourceLoader, _super);\n        function CachedResourceLoader() {\n            _super.call(this);\n            this._cache = _global.$templateCache;\n            if (this._cache == null) {\n                throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n            }\n        }\n        CachedResourceLoader.prototype.get = function (url) {\n            if (this._cache.hasOwnProperty(url)) {\n                return Promise.resolve(this._cache[url]);\n            }\n            else {\n                return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);\n            }\n        };\n        return CachedResourceLoader;\n    }(_angular_compiler.ResourceLoader));\n\n    var __platform_browser_dynamic_private__ = {\n        INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS: INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS,\n        ResourceLoaderImpl: ResourceLoaderImpl\n    };\n\n    /**\n     * @experimental\n     */\n    var RESOURCE_CACHE_PROVIDER = [{ provide: _angular_compiler.ResourceLoader, useClass: CachedResourceLoader }];\n    /**\n     * @stable\n     */\n    var platformBrowserDynamic = _angular_core.createPlatformFactory(_angular_compiler.platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n\n    exports.RESOURCE_CACHE_PROVIDER = RESOURCE_CACHE_PROVIDER;\n    exports.platformBrowserDynamic = platformBrowserDynamic;\n    exports.__platform_browser_dynamic_private__ = __platform_browser_dynamic_private__;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js\n ** module id = 85\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PromiseObservable = (function (_super) {\n    __extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {Promise<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional Scheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable_1.Observable));\nexports.PromiseObservable = PromiseObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/PromiseObservable.js\n ** module id = 88\n ** module chunks = 2\n **/","\"use strict\";\nvar PromiseObservable_1 = require('./PromiseObservable');\nexports.fromPromise = PromiseObservable_1.PromiseObservable.create;\n//# sourceMappingURL=fromPromise.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/fromPromise.js\n ** module id = 90\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/ObjectUnsubscribedError.js\n ** module id = 93\n ** module chunks = 2\n **/","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/errorObject.js\n ** module id = 94\n ** module chunks = 2\n **/","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/isFunction.js\n ** module id = 95\n ** module chunks = 2\n **/","/**\n * @license Angular v2.2.4\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n  typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n  (factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n}(this, function (exports,_angular_core) { 'use strict';\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  /**\n   * A segment of text within the template.\n   */\n  var TextAst = (function () {\n      function TextAst(value, ngContentIndex, sourceSpan) {\n          this.value = value;\n          this.ngContentIndex = ngContentIndex;\n          this.sourceSpan = sourceSpan;\n      }\n      TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n      return TextAst;\n  }());\n  /**\n   * A bound expression within the text of a template.\n   */\n  var BoundTextAst = (function () {\n      function BoundTextAst(value, ngContentIndex, sourceSpan) {\n          this.value = value;\n          this.ngContentIndex = ngContentIndex;\n          this.sourceSpan = sourceSpan;\n      }\n      BoundTextAst.prototype.visit = function (visitor, context) {\n          return visitor.visitBoundText(this, context);\n      };\n      return BoundTextAst;\n  }());\n  /**\n   * A plain attribute on an element.\n   */\n  var AttrAst = (function () {\n      function AttrAst(name, value, sourceSpan) {\n          this.name = name;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n      return AttrAst;\n  }());\n  /**\n   * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n   * `[@trigger]=\"stateExp\"`)\n   */\n  var BoundElementPropertyAst = (function () {\n      function BoundElementPropertyAst(name, type, securityContext, needsRuntimeSecurityContext, value, unit, sourceSpan) {\n          this.name = name;\n          this.type = type;\n          this.securityContext = securityContext;\n          this.needsRuntimeSecurityContext = needsRuntimeSecurityContext;\n          this.value = value;\n          this.unit = unit;\n          this.sourceSpan = sourceSpan;\n      }\n      BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n          return visitor.visitElementProperty(this, context);\n      };\n      Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n          get: function () { return this.type === exports.PropertyBindingType.Animation; },\n          enumerable: true,\n          configurable: true\n      });\n      return BoundElementPropertyAst;\n  }());\n  /**\n   * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n   * `(@trigger.phase)=\"callback($event)\"`).\n   */\n  var BoundEventAst = (function () {\n      function BoundEventAst(name, target, phase, handler, sourceSpan) {\n          this.name = name;\n          this.target = target;\n          this.phase = phase;\n          this.handler = handler;\n          this.sourceSpan = sourceSpan;\n      }\n      BoundEventAst.calcFullName = function (name, target, phase) {\n          if (target) {\n              return target + \":\" + name;\n          }\n          else if (phase) {\n              return \"@\" + name + \".\" + phase;\n          }\n          else {\n              return name;\n          }\n      };\n      BoundEventAst.prototype.visit = function (visitor, context) {\n          return visitor.visitEvent(this, context);\n      };\n      Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n          get: function () { return BoundEventAst.calcFullName(this.name, this.target, this.phase); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n          get: function () { return !!this.phase; },\n          enumerable: true,\n          configurable: true\n      });\n      return BoundEventAst;\n  }());\n  /**\n   * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n   */\n  var ReferenceAst = (function () {\n      function ReferenceAst(name, value, sourceSpan) {\n          this.name = name;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      ReferenceAst.prototype.visit = function (visitor, context) {\n          return visitor.visitReference(this, context);\n      };\n      return ReferenceAst;\n  }());\n  /**\n   * A variable declaration on a <template> (e.g. `var-someName=\"someLocalName\"`).\n   */\n  var VariableAst = (function () {\n      function VariableAst(name, value, sourceSpan) {\n          this.name = name;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      VariableAst.prototype.visit = function (visitor, context) {\n          return visitor.visitVariable(this, context);\n      };\n      return VariableAst;\n  }());\n  /**\n   * An element declaration in a template.\n   */\n  var ElementAst = (function () {\n      function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, children, ngContentIndex, sourceSpan, endSourceSpan) {\n          this.name = name;\n          this.attrs = attrs;\n          this.inputs = inputs;\n          this.outputs = outputs;\n          this.references = references;\n          this.directives = directives;\n          this.providers = providers;\n          this.hasViewContainer = hasViewContainer;\n          this.children = children;\n          this.ngContentIndex = ngContentIndex;\n          this.sourceSpan = sourceSpan;\n          this.endSourceSpan = endSourceSpan;\n      }\n      ElementAst.prototype.visit = function (visitor, context) {\n          return visitor.visitElement(this, context);\n      };\n      return ElementAst;\n  }());\n  /**\n   * A `<template>` element included in an Angular template.\n   */\n  var EmbeddedTemplateAst = (function () {\n      function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, children, ngContentIndex, sourceSpan) {\n          this.attrs = attrs;\n          this.outputs = outputs;\n          this.references = references;\n          this.variables = variables;\n          this.directives = directives;\n          this.providers = providers;\n          this.hasViewContainer = hasViewContainer;\n          this.children = children;\n          this.ngContentIndex = ngContentIndex;\n          this.sourceSpan = sourceSpan;\n      }\n      EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n          return visitor.visitEmbeddedTemplate(this, context);\n      };\n      return EmbeddedTemplateAst;\n  }());\n  /**\n   * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n   */\n  var BoundDirectivePropertyAst = (function () {\n      function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n          this.directiveName = directiveName;\n          this.templateName = templateName;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n          return visitor.visitDirectiveProperty(this, context);\n      };\n      return BoundDirectivePropertyAst;\n  }());\n  /**\n   * A directive declared on an element.\n   */\n  var DirectiveAst = (function () {\n      function DirectiveAst(directive, inputs, hostProperties, hostEvents, sourceSpan) {\n          this.directive = directive;\n          this.inputs = inputs;\n          this.hostProperties = hostProperties;\n          this.hostEvents = hostEvents;\n          this.sourceSpan = sourceSpan;\n      }\n      DirectiveAst.prototype.visit = function (visitor, context) {\n          return visitor.visitDirective(this, context);\n      };\n      return DirectiveAst;\n  }());\n  /**\n   * A provider declared on an element\n   */\n  var ProviderAst = (function () {\n      function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n          this.token = token;\n          this.multiProvider = multiProvider;\n          this.eager = eager;\n          this.providers = providers;\n          this.providerType = providerType;\n          this.lifecycleHooks = lifecycleHooks;\n          this.sourceSpan = sourceSpan;\n      }\n      ProviderAst.prototype.visit = function (visitor, context) {\n          // No visit method in the visitor for now...\n          return null;\n      };\n      return ProviderAst;\n  }());\n  exports.ProviderAstType;\n  (function (ProviderAstType) {\n      ProviderAstType[ProviderAstType[\"PublicService\"] = 0] = \"PublicService\";\n      ProviderAstType[ProviderAstType[\"PrivateService\"] = 1] = \"PrivateService\";\n      ProviderAstType[ProviderAstType[\"Component\"] = 2] = \"Component\";\n      ProviderAstType[ProviderAstType[\"Directive\"] = 3] = \"Directive\";\n      ProviderAstType[ProviderAstType[\"Builtin\"] = 4] = \"Builtin\";\n  })(exports.ProviderAstType || (exports.ProviderAstType = {}));\n  /**\n   * Position where content is to be projected (instance of `<ng-content>` in a template).\n   */\n  var NgContentAst = (function () {\n      function NgContentAst(index, ngContentIndex, sourceSpan) {\n          this.index = index;\n          this.ngContentIndex = ngContentIndex;\n          this.sourceSpan = sourceSpan;\n      }\n      NgContentAst.prototype.visit = function (visitor, context) {\n          return visitor.visitNgContent(this, context);\n      };\n      return NgContentAst;\n  }());\n  /**\n   * Enumeration of types of property bindings.\n   */\n  exports.PropertyBindingType;\n  (function (PropertyBindingType) {\n      /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n      PropertyBindingType[PropertyBindingType[\"Property\"] = 0] = \"Property\";\n      /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n      PropertyBindingType[PropertyBindingType[\"Attribute\"] = 1] = \"Attribute\";\n      /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n      PropertyBindingType[PropertyBindingType[\"Class\"] = 2] = \"Class\";\n      /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n      PropertyBindingType[PropertyBindingType[\"Style\"] = 3] = \"Style\";\n      /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n      PropertyBindingType[PropertyBindingType[\"Animation\"] = 4] = \"Animation\";\n  })(exports.PropertyBindingType || (exports.PropertyBindingType = {}));\n  /**\n   * Visit every node in a list of {@link TemplateAst}s with the given {@link TemplateAstVisitor}.\n   */\n  function templateVisitAll(visitor, asts, context) {\n      if (context === void 0) { context = null; }\n      var result = [];\n      var visit = visitor.visit ?\n          function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n          function (ast) { return ast.visit(visitor, context); };\n      asts.forEach(function (ast) {\n          var astResult = visit(ast);\n          if (astResult) {\n              result.push(astResult);\n          }\n      });\n      return result;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var $EOF = 0;\n  var $TAB = 9;\n  var $LF = 10;\n  var $VTAB = 11;\n  var $FF = 12;\n  var $CR = 13;\n  var $SPACE = 32;\n  var $BANG = 33;\n  var $DQ = 34;\n  var $HASH = 35;\n  var $$ = 36;\n  var $PERCENT = 37;\n  var $AMPERSAND = 38;\n  var $SQ = 39;\n  var $LPAREN = 40;\n  var $RPAREN = 41;\n  var $STAR = 42;\n  var $PLUS = 43;\n  var $COMMA = 44;\n  var $MINUS = 45;\n  var $PERIOD = 46;\n  var $SLASH = 47;\n  var $COLON = 58;\n  var $SEMICOLON = 59;\n  var $LT = 60;\n  var $EQ = 61;\n  var $GT = 62;\n  var $QUESTION = 63;\n  var $0 = 48;\n  var $9 = 57;\n  var $A = 65;\n  var $E = 69;\n  var $F = 70;\n  var $X = 88;\n  var $Z = 90;\n  var $LBRACKET = 91;\n  var $BACKSLASH = 92;\n  var $RBRACKET = 93;\n  var $CARET = 94;\n  var $_ = 95;\n  var $a = 97;\n  var $e = 101;\n  var $f = 102;\n  var $n = 110;\n  var $r = 114;\n  var $t = 116;\n  var $u = 117;\n  var $v = 118;\n  var $x = 120;\n  var $z = 122;\n  var $LBRACE = 123;\n  var $BAR = 124;\n  var $RBRACE = 125;\n  var $NBSP = 160;\n  var $BT = 96;\n  function isWhitespace(code) {\n      return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n  }\n  function isDigit(code) {\n      return $0 <= code && code <= $9;\n  }\n  function isAsciiLetter(code) {\n      return code >= $a && code <= $z || code >= $A && code <= $Z;\n  }\n  function isAsciiHexDigit(code) {\n      return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n  }\n\n  function isPresent(obj) {\n      return obj != null;\n  }\n  function isBlank(obj) {\n      return obj == null;\n  }\n  var STRING_MAP_PROTO = Object.getPrototypeOf({});\n  function isStrictStringMap(obj) {\n      return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n  }\n  function stringify(token) {\n      if (typeof token === 'string') {\n          return token;\n      }\n      if (token == null) {\n          return '' + token;\n      }\n      if (token.overriddenName) {\n          return token.overriddenName;\n      }\n      if (token.name) {\n          return token.name;\n      }\n      var res = token.toString();\n      var newLineIndex = res.indexOf('\\n');\n      return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n  }\n  var NumberWrapper = (function () {\n      function NumberWrapper() {\n      }\n      NumberWrapper.parseIntAutoRadix = function (text) {\n          var result = parseInt(text);\n          if (isNaN(result)) {\n              throw new Error('Invalid integer literal when parsing ' + text);\n          }\n          return result;\n      };\n      NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n      return NumberWrapper;\n  }());\n  function isJsObject(o) {\n      return o !== null && (typeof o === 'function' || typeof o === 'object');\n  }\n  function isPrimitive(obj) {\n      return !isJsObject(obj);\n  }\n  function escapeRegExp(s) {\n      return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n  }\n\n  function assertArrayOfStrings(identifier, value) {\n      if (!_angular_core.isDevMode() || isBlank(value)) {\n          return;\n      }\n      if (!Array.isArray(value)) {\n          throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n      }\n      for (var i = 0; i < value.length; i += 1) {\n          if (typeof value[i] !== 'string') {\n              throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n          }\n      }\n  }\n  var INTERPOLATION_BLACKLIST_REGEXPS = [\n      /^\\s*$/,\n      /[<>]/,\n      /^[{}]$/,\n      /&(#|[a-z])/i,\n      /^\\/\\//,\n  ];\n  function assertInterpolationSymbols(identifier, value) {\n      if (isPresent(value) && !(Array.isArray(value) && value.length == 2)) {\n          throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n      }\n      else if (_angular_core.isDevMode() && !isBlank(value)) {\n          var start_1 = value[0];\n          var end_1 = value[1];\n          // black list checking\n          INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n              if (regexp.test(start_1) || regexp.test(end_1)) {\n                  throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n              }\n          });\n      }\n  }\n\n  var InterpolationConfig = (function () {\n      function InterpolationConfig(start, end) {\n          this.start = start;\n          this.end = end;\n      }\n      InterpolationConfig.fromArray = function (markers) {\n          if (!markers) {\n              return DEFAULT_INTERPOLATION_CONFIG;\n          }\n          assertInterpolationSymbols('interpolation', markers);\n          return new InterpolationConfig(markers[0], markers[1]);\n      };\n      ;\n      return InterpolationConfig;\n  }());\n  var DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$1 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var ParserError = (function () {\n      function ParserError(message, input, errLocation, ctxLocation) {\n          this.input = input;\n          this.errLocation = errLocation;\n          this.ctxLocation = ctxLocation;\n          this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n      }\n      return ParserError;\n  }());\n  var ParseSpan = (function () {\n      function ParseSpan(start, end) {\n          this.start = start;\n          this.end = end;\n      }\n      return ParseSpan;\n  }());\n  var AST = (function () {\n      function AST(span) {\n          this.span = span;\n      }\n      AST.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return null;\n      };\n      AST.prototype.toString = function () { return 'AST'; };\n      return AST;\n  }());\n  /**\n   * Represents a quoted expression of the form:\n   *\n   * quote = prefix `:` uninterpretedExpression\n   * prefix = identifier\n   * uninterpretedExpression = arbitrary string\n   *\n   * A quoted expression is meant to be pre-processed by an AST transformer that\n   * converts it into another AST that no longer contains quoted expressions.\n   * It is meant to allow third-party developers to extend Angular template\n   * expression language. The `uninterpretedExpression` part of the quote is\n   * therefore not interpreted by the Angular's own expression parser.\n   */\n  var Quote = (function (_super) {\n      __extends$1(Quote, _super);\n      function Quote(span, prefix, uninterpretedExpression, location) {\n          _super.call(this, span);\n          this.prefix = prefix;\n          this.uninterpretedExpression = uninterpretedExpression;\n          this.location = location;\n      }\n      Quote.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitQuote(this, context);\n      };\n      Quote.prototype.toString = function () { return 'Quote'; };\n      return Quote;\n  }(AST));\n  var EmptyExpr = (function (_super) {\n      __extends$1(EmptyExpr, _super);\n      function EmptyExpr() {\n          _super.apply(this, arguments);\n      }\n      EmptyExpr.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          // do nothing\n      };\n      return EmptyExpr;\n  }(AST));\n  var ImplicitReceiver = (function (_super) {\n      __extends$1(ImplicitReceiver, _super);\n      function ImplicitReceiver() {\n          _super.apply(this, arguments);\n      }\n      ImplicitReceiver.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitImplicitReceiver(this, context);\n      };\n      return ImplicitReceiver;\n  }(AST));\n  /**\n   * Multiple expressions separated by a semicolon.\n   */\n  var Chain = (function (_super) {\n      __extends$1(Chain, _super);\n      function Chain(span, expressions) {\n          _super.call(this, span);\n          this.expressions = expressions;\n      }\n      Chain.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitChain(this, context);\n      };\n      return Chain;\n  }(AST));\n  var Conditional = (function (_super) {\n      __extends$1(Conditional, _super);\n      function Conditional(span, condition, trueExp, falseExp) {\n          _super.call(this, span);\n          this.condition = condition;\n          this.trueExp = trueExp;\n          this.falseExp = falseExp;\n      }\n      Conditional.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitConditional(this, context);\n      };\n      return Conditional;\n  }(AST));\n  var PropertyRead = (function (_super) {\n      __extends$1(PropertyRead, _super);\n      function PropertyRead(span, receiver, name) {\n          _super.call(this, span);\n          this.receiver = receiver;\n          this.name = name;\n      }\n      PropertyRead.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitPropertyRead(this, context);\n      };\n      return PropertyRead;\n  }(AST));\n  var PropertyWrite = (function (_super) {\n      __extends$1(PropertyWrite, _super);\n      function PropertyWrite(span, receiver, name, value) {\n          _super.call(this, span);\n          this.receiver = receiver;\n          this.name = name;\n          this.value = value;\n      }\n      PropertyWrite.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitPropertyWrite(this, context);\n      };\n      return PropertyWrite;\n  }(AST));\n  var SafePropertyRead = (function (_super) {\n      __extends$1(SafePropertyRead, _super);\n      function SafePropertyRead(span, receiver, name) {\n          _super.call(this, span);\n          this.receiver = receiver;\n          this.name = name;\n      }\n      SafePropertyRead.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitSafePropertyRead(this, context);\n      };\n      return SafePropertyRead;\n  }(AST));\n  var KeyedRead = (function (_super) {\n      __extends$1(KeyedRead, _super);\n      function KeyedRead(span, obj, key) {\n          _super.call(this, span);\n          this.obj = obj;\n          this.key = key;\n      }\n      KeyedRead.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitKeyedRead(this, context);\n      };\n      return KeyedRead;\n  }(AST));\n  var KeyedWrite = (function (_super) {\n      __extends$1(KeyedWrite, _super);\n      function KeyedWrite(span, obj, key, value) {\n          _super.call(this, span);\n          this.obj = obj;\n          this.key = key;\n          this.value = value;\n      }\n      KeyedWrite.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitKeyedWrite(this, context);\n      };\n      return KeyedWrite;\n  }(AST));\n  var BindingPipe = (function (_super) {\n      __extends$1(BindingPipe, _super);\n      function BindingPipe(span, exp, name, args) {\n          _super.call(this, span);\n          this.exp = exp;\n          this.name = name;\n          this.args = args;\n      }\n      BindingPipe.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitPipe(this, context);\n      };\n      return BindingPipe;\n  }(AST));\n  var LiteralPrimitive = (function (_super) {\n      __extends$1(LiteralPrimitive, _super);\n      function LiteralPrimitive(span, value) {\n          _super.call(this, span);\n          this.value = value;\n      }\n      LiteralPrimitive.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitLiteralPrimitive(this, context);\n      };\n      return LiteralPrimitive;\n  }(AST));\n  var LiteralArray = (function (_super) {\n      __extends$1(LiteralArray, _super);\n      function LiteralArray(span, expressions) {\n          _super.call(this, span);\n          this.expressions = expressions;\n      }\n      LiteralArray.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitLiteralArray(this, context);\n      };\n      return LiteralArray;\n  }(AST));\n  var LiteralMap = (function (_super) {\n      __extends$1(LiteralMap, _super);\n      function LiteralMap(span, keys, values) {\n          _super.call(this, span);\n          this.keys = keys;\n          this.values = values;\n      }\n      LiteralMap.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitLiteralMap(this, context);\n      };\n      return LiteralMap;\n  }(AST));\n  var Interpolation = (function (_super) {\n      __extends$1(Interpolation, _super);\n      function Interpolation(span, strings, expressions) {\n          _super.call(this, span);\n          this.strings = strings;\n          this.expressions = expressions;\n      }\n      Interpolation.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitInterpolation(this, context);\n      };\n      return Interpolation;\n  }(AST));\n  var Binary = (function (_super) {\n      __extends$1(Binary, _super);\n      function Binary(span, operation, left, right) {\n          _super.call(this, span);\n          this.operation = operation;\n          this.left = left;\n          this.right = right;\n      }\n      Binary.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitBinary(this, context);\n      };\n      return Binary;\n  }(AST));\n  var PrefixNot = (function (_super) {\n      __extends$1(PrefixNot, _super);\n      function PrefixNot(span, expression) {\n          _super.call(this, span);\n          this.expression = expression;\n      }\n      PrefixNot.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitPrefixNot(this, context);\n      };\n      return PrefixNot;\n  }(AST));\n  var MethodCall = (function (_super) {\n      __extends$1(MethodCall, _super);\n      function MethodCall(span, receiver, name, args) {\n          _super.call(this, span);\n          this.receiver = receiver;\n          this.name = name;\n          this.args = args;\n      }\n      MethodCall.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitMethodCall(this, context);\n      };\n      return MethodCall;\n  }(AST));\n  var SafeMethodCall = (function (_super) {\n      __extends$1(SafeMethodCall, _super);\n      function SafeMethodCall(span, receiver, name, args) {\n          _super.call(this, span);\n          this.receiver = receiver;\n          this.name = name;\n          this.args = args;\n      }\n      SafeMethodCall.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitSafeMethodCall(this, context);\n      };\n      return SafeMethodCall;\n  }(AST));\n  var FunctionCall = (function (_super) {\n      __extends$1(FunctionCall, _super);\n      function FunctionCall(span, target, args) {\n          _super.call(this, span);\n          this.target = target;\n          this.args = args;\n      }\n      FunctionCall.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitFunctionCall(this, context);\n      };\n      return FunctionCall;\n  }(AST));\n  var ASTWithSource = (function (_super) {\n      __extends$1(ASTWithSource, _super);\n      function ASTWithSource(ast, source, location, errors) {\n          _super.call(this, new ParseSpan(0, isBlank(source) ? 0 : source.length));\n          this.ast = ast;\n          this.source = source;\n          this.location = location;\n          this.errors = errors;\n      }\n      ASTWithSource.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return this.ast.visit(visitor, context);\n      };\n      ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n      return ASTWithSource;\n  }(AST));\n  var TemplateBinding = (function () {\n      function TemplateBinding(span, key, keyIsVar, name, expression) {\n          this.span = span;\n          this.key = key;\n          this.keyIsVar = keyIsVar;\n          this.name = name;\n          this.expression = expression;\n      }\n      return TemplateBinding;\n  }());\n  var RecursiveAstVisitor = (function () {\n      function RecursiveAstVisitor() {\n      }\n      RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n          ast.left.visit(this);\n          ast.right.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n      RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n          ast.condition.visit(this);\n          ast.trueExp.visit(this);\n          ast.falseExp.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n          ast.exp.visit(this);\n          this.visitAll(ast.args, context);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n          ast.target.visit(this);\n          this.visitAll(ast.args, context);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n      RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n          return this.visitAll(ast.expressions, context);\n      };\n      RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n          ast.obj.visit(this);\n          ast.key.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n          ast.obj.visit(this);\n          ast.key.visit(this);\n          ast.value.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n          return this.visitAll(ast.expressions, context);\n      };\n      RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n      RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n      RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n          ast.receiver.visit(this);\n          return this.visitAll(ast.args, context);\n      };\n      RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n          ast.expression.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n          ast.receiver.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n          ast.receiver.visit(this);\n          ast.value.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n          ast.receiver.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n          ast.receiver.visit(this);\n          return this.visitAll(ast.args, context);\n      };\n      RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n          var _this = this;\n          asts.forEach(function (ast) { return ast.visit(_this, context); });\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n      return RecursiveAstVisitor;\n  }());\n\n  exports.TokenType;\n  (function (TokenType) {\n      TokenType[TokenType[\"Character\"] = 0] = \"Character\";\n      TokenType[TokenType[\"Identifier\"] = 1] = \"Identifier\";\n      TokenType[TokenType[\"Keyword\"] = 2] = \"Keyword\";\n      TokenType[TokenType[\"String\"] = 3] = \"String\";\n      TokenType[TokenType[\"Operator\"] = 4] = \"Operator\";\n      TokenType[TokenType[\"Number\"] = 5] = \"Number\";\n      TokenType[TokenType[\"Error\"] = 6] = \"Error\";\n  })(exports.TokenType || (exports.TokenType = {}));\n  var KEYWORDS = ['var', 'let', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\n  var Lexer = (function () {\n      function Lexer() {\n      }\n      Lexer.prototype.tokenize = function (text) {\n          var scanner = new _Scanner(text);\n          var tokens = [];\n          var token = scanner.scanToken();\n          while (token != null) {\n              tokens.push(token);\n              token = scanner.scanToken();\n          }\n          return tokens;\n      };\n      Lexer.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      Lexer.ctorParameters = [];\n      return Lexer;\n  }());\n  var Token = (function () {\n      function Token(index, type, numValue, strValue) {\n          this.index = index;\n          this.type = type;\n          this.numValue = numValue;\n          this.strValue = strValue;\n      }\n      Token.prototype.isCharacter = function (code) {\n          return this.type == exports.TokenType.Character && this.numValue == code;\n      };\n      Token.prototype.isNumber = function () { return this.type == exports.TokenType.Number; };\n      Token.prototype.isString = function () { return this.type == exports.TokenType.String; };\n      Token.prototype.isOperator = function (operater) {\n          return this.type == exports.TokenType.Operator && this.strValue == operater;\n      };\n      Token.prototype.isIdentifier = function () { return this.type == exports.TokenType.Identifier; };\n      Token.prototype.isKeyword = function () { return this.type == exports.TokenType.Keyword; };\n      Token.prototype.isKeywordLet = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'let'; };\n      Token.prototype.isKeywordNull = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'null'; };\n      Token.prototype.isKeywordUndefined = function () {\n          return this.type == exports.TokenType.Keyword && this.strValue == 'undefined';\n      };\n      Token.prototype.isKeywordTrue = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'true'; };\n      Token.prototype.isKeywordFalse = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'false'; };\n      Token.prototype.isKeywordThis = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'this'; };\n      Token.prototype.isError = function () { return this.type == exports.TokenType.Error; };\n      Token.prototype.toNumber = function () { return this.type == exports.TokenType.Number ? this.numValue : -1; };\n      Token.prototype.toString = function () {\n          switch (this.type) {\n              case exports.TokenType.Character:\n              case exports.TokenType.Identifier:\n              case exports.TokenType.Keyword:\n              case exports.TokenType.Operator:\n              case exports.TokenType.String:\n              case exports.TokenType.Error:\n                  return this.strValue;\n              case exports.TokenType.Number:\n                  return this.numValue.toString();\n              default:\n                  return null;\n          }\n      };\n      return Token;\n  }());\n  function newCharacterToken(index, code) {\n      return new Token(index, exports.TokenType.Character, code, String.fromCharCode(code));\n  }\n  function newIdentifierToken(index, text) {\n      return new Token(index, exports.TokenType.Identifier, 0, text);\n  }\n  function newKeywordToken(index, text) {\n      return new Token(index, exports.TokenType.Keyword, 0, text);\n  }\n  function newOperatorToken(index, text) {\n      return new Token(index, exports.TokenType.Operator, 0, text);\n  }\n  function newStringToken(index, text) {\n      return new Token(index, exports.TokenType.String, 0, text);\n  }\n  function newNumberToken(index, n) {\n      return new Token(index, exports.TokenType.Number, n, '');\n  }\n  function newErrorToken(index, message) {\n      return new Token(index, exports.TokenType.Error, 0, message);\n  }\n  var EOF = new Token(-1, exports.TokenType.Character, 0, '');\n  var _Scanner = (function () {\n      function _Scanner(input) {\n          this.input = input;\n          this.peek = 0;\n          this.index = -1;\n          this.length = input.length;\n          this.advance();\n      }\n      _Scanner.prototype.advance = function () {\n          this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n      };\n      _Scanner.prototype.scanToken = function () {\n          var input = this.input, length = this.length;\n          var peek = this.peek, index = this.index;\n          // Skip whitespace.\n          while (peek <= $SPACE) {\n              if (++index >= length) {\n                  peek = $EOF;\n                  break;\n              }\n              else {\n                  peek = input.charCodeAt(index);\n              }\n          }\n          this.peek = peek;\n          this.index = index;\n          if (index >= length) {\n              return null;\n          }\n          // Handle identifiers and numbers.\n          if (isIdentifierStart(peek))\n              return this.scanIdentifier();\n          if (isDigit(peek))\n              return this.scanNumber(index);\n          var start = index;\n          switch (peek) {\n              case $PERIOD:\n                  this.advance();\n                  return isDigit(this.peek) ? this.scanNumber(start) :\n                      newCharacterToken(start, $PERIOD);\n              case $LPAREN:\n              case $RPAREN:\n              case $LBRACE:\n              case $RBRACE:\n              case $LBRACKET:\n              case $RBRACKET:\n              case $COMMA:\n              case $COLON:\n              case $SEMICOLON:\n                  return this.scanCharacter(start, peek);\n              case $SQ:\n              case $DQ:\n                  return this.scanString();\n              case $HASH:\n              case $PLUS:\n              case $MINUS:\n              case $STAR:\n              case $SLASH:\n              case $PERCENT:\n              case $CARET:\n                  return this.scanOperator(start, String.fromCharCode(peek));\n              case $QUESTION:\n                  return this.scanComplexOperator(start, '?', $PERIOD, '.');\n              case $LT:\n              case $GT:\n                  return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n              case $BANG:\n              case $EQ:\n                  return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n              case $AMPERSAND:\n                  return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n              case $BAR:\n                  return this.scanComplexOperator(start, '|', $BAR, '|');\n              case $NBSP:\n                  while (isWhitespace(this.peek))\n                      this.advance();\n                  return this.scanToken();\n          }\n          this.advance();\n          return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n      };\n      _Scanner.prototype.scanCharacter = function (start, code) {\n          this.advance();\n          return newCharacterToken(start, code);\n      };\n      _Scanner.prototype.scanOperator = function (start, str) {\n          this.advance();\n          return newOperatorToken(start, str);\n      };\n      /**\n       * Tokenize a 2/3 char long operator\n       *\n       * @param start start index in the expression\n       * @param one first symbol (always part of the operator)\n       * @param twoCode code point for the second symbol\n       * @param two second symbol (part of the operator when the second code point matches)\n       * @param threeCode code point for the third symbol\n       * @param three third symbol (part of the operator when provided and matches source expression)\n       * @returns {Token}\n       */\n      _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n          this.advance();\n          var str = one;\n          if (this.peek == twoCode) {\n              this.advance();\n              str += two;\n          }\n          if (isPresent(threeCode) && this.peek == threeCode) {\n              this.advance();\n              str += three;\n          }\n          return newOperatorToken(start, str);\n      };\n      _Scanner.prototype.scanIdentifier = function () {\n          var start = this.index;\n          this.advance();\n          while (isIdentifierPart(this.peek))\n              this.advance();\n          var str = this.input.substring(start, this.index);\n          return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n              newIdentifierToken(start, str);\n      };\n      _Scanner.prototype.scanNumber = function (start) {\n          var simple = (this.index === start);\n          this.advance(); // Skip initial digit.\n          while (true) {\n              if (isDigit(this.peek)) {\n              }\n              else if (this.peek == $PERIOD) {\n                  simple = false;\n              }\n              else if (isExponentStart(this.peek)) {\n                  this.advance();\n                  if (isExponentSign(this.peek))\n                      this.advance();\n                  if (!isDigit(this.peek))\n                      return this.error('Invalid exponent', -1);\n                  simple = false;\n              }\n              else {\n                  break;\n              }\n              this.advance();\n          }\n          var str = this.input.substring(start, this.index);\n          var value = simple ? NumberWrapper.parseIntAutoRadix(str) : parseFloat(str);\n          return newNumberToken(start, value);\n      };\n      _Scanner.prototype.scanString = function () {\n          var start = this.index;\n          var quote = this.peek;\n          this.advance(); // Skip initial quote.\n          var buffer = '';\n          var marker = this.index;\n          var input = this.input;\n          while (this.peek != quote) {\n              if (this.peek == $BACKSLASH) {\n                  buffer += input.substring(marker, this.index);\n                  this.advance();\n                  var unescapedCode = void 0;\n                  if (this.peek == $u) {\n                      // 4 character hex code for unicode character.\n                      var hex = input.substring(this.index + 1, this.index + 5);\n                      if (/^[0-9a-f]+$/i.test(hex)) {\n                          unescapedCode = parseInt(hex, 16);\n                      }\n                      else {\n                          return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                      }\n                      for (var i = 0; i < 5; i++) {\n                          this.advance();\n                      }\n                  }\n                  else {\n                      unescapedCode = unescape(this.peek);\n                      this.advance();\n                  }\n                  buffer += String.fromCharCode(unescapedCode);\n                  marker = this.index;\n              }\n              else if (this.peek == $EOF) {\n                  return this.error('Unterminated quote', 0);\n              }\n              else {\n                  this.advance();\n              }\n          }\n          var last = input.substring(marker, this.index);\n          this.advance(); // Skip terminating quote.\n          return newStringToken(start, buffer + last);\n      };\n      _Scanner.prototype.error = function (message, offset) {\n          var position = this.index + offset;\n          return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n      };\n      return _Scanner;\n  }());\n  function isIdentifierStart(code) {\n      return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n          (code == $_) || (code == $$);\n  }\n  function isIdentifier(input) {\n      if (input.length == 0)\n          return false;\n      var scanner = new _Scanner(input);\n      if (!isIdentifierStart(scanner.peek))\n          return false;\n      scanner.advance();\n      while (scanner.peek !== $EOF) {\n          if (!isIdentifierPart(scanner.peek))\n              return false;\n          scanner.advance();\n      }\n      return true;\n  }\n  function isIdentifierPart(code) {\n      return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n          (code == $$);\n  }\n  function isExponentStart(code) {\n      return code == $e || code == $E;\n  }\n  function isExponentSign(code) {\n      return code == $MINUS || code == $PLUS;\n  }\n  function isQuote(code) {\n      return code === $SQ || code === $DQ || code === $BT;\n  }\n  function unescape(code) {\n      switch (code) {\n          case $n:\n              return $LF;\n          case $f:\n              return $FF;\n          case $r:\n              return $CR;\n          case $t:\n              return $TAB;\n          case $v:\n              return $VTAB;\n          default:\n              return code;\n      }\n  }\n\n  var SplitInterpolation = (function () {\n      function SplitInterpolation(strings, expressions, offsets) {\n          this.strings = strings;\n          this.expressions = expressions;\n          this.offsets = offsets;\n      }\n      return SplitInterpolation;\n  }());\n  var TemplateBindingParseResult = (function () {\n      function TemplateBindingParseResult(templateBindings, warnings, errors) {\n          this.templateBindings = templateBindings;\n          this.warnings = warnings;\n          this.errors = errors;\n      }\n      return TemplateBindingParseResult;\n  }());\n  function _createInterpolateRegExp(config) {\n      var pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n      return new RegExp(pattern, 'g');\n  }\n  var Parser = (function () {\n      function Parser(_lexer) {\n          this._lexer = _lexer;\n          this.errors = [];\n      }\n      Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          this._checkNoInterpolation(input, location, interpolationConfig);\n          var sourceToLex = this._stripComments(input);\n          var tokens = this._lexer.tokenize(this._stripComments(input));\n          var ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n              .parseChain();\n          return new ASTWithSource(ast, input, location, this.errors);\n      };\n      Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var ast = this._parseBindingAst(input, location, interpolationConfig);\n          return new ASTWithSource(ast, input, location, this.errors);\n      };\n      Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var ast = this._parseBindingAst(input, location, interpolationConfig);\n          var errors = SimpleExpressionChecker.check(ast);\n          if (errors.length > 0) {\n              this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n          }\n          return new ASTWithSource(ast, input, location, this.errors);\n      };\n      Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n          this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n      };\n      Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n          // Quotes expressions use 3rd-party expression language. We don't want to use\n          // our lexer or parser for that, so we check for that ahead of time.\n          var quote = this._parseQuote(input, location);\n          if (isPresent(quote)) {\n              return quote;\n          }\n          this._checkNoInterpolation(input, location, interpolationConfig);\n          var sourceToLex = this._stripComments(input);\n          var tokens = this._lexer.tokenize(sourceToLex);\n          return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n              .parseChain();\n      };\n      Parser.prototype._parseQuote = function (input, location) {\n          if (isBlank(input))\n              return null;\n          var prefixSeparatorIndex = input.indexOf(':');\n          if (prefixSeparatorIndex == -1)\n              return null;\n          var prefix = input.substring(0, prefixSeparatorIndex).trim();\n          if (!isIdentifier(prefix))\n              return null;\n          var uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n          return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n      };\n      Parser.prototype.parseTemplateBindings = function (prefixToken, input, location) {\n          var tokens = this._lexer.tokenize(input);\n          if (prefixToken) {\n              // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n              var prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                  t.index = 0;\n                  return t;\n              });\n              tokens.unshift.apply(tokens, prefixTokens);\n          }\n          return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n              .parseTemplateBindings();\n      };\n      Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var split = this.splitInterpolation(input, location, interpolationConfig);\n          if (split == null)\n              return null;\n          var expressions = [];\n          for (var i = 0; i < split.expressions.length; ++i) {\n              var expressionText = split.expressions[i];\n              var sourceToLex = this._stripComments(expressionText);\n              var tokens = this._lexer.tokenize(this._stripComments(split.expressions[i]));\n              var ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                  .parseChain();\n              expressions.push(ast);\n          }\n          return new ASTWithSource(new Interpolation(new ParseSpan(0, isBlank(input) ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n      };\n      Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var regexp = _createInterpolateRegExp(interpolationConfig);\n          var parts = input.split(regexp);\n          if (parts.length <= 1) {\n              return null;\n          }\n          var strings = [];\n          var expressions = [];\n          var offsets = [];\n          var offset = 0;\n          for (var i = 0; i < parts.length; i++) {\n              var part = parts[i];\n              if (i % 2 === 0) {\n                  // fixed string\n                  strings.push(part);\n                  offset += part.length;\n              }\n              else if (part.trim().length > 0) {\n                  offset += interpolationConfig.start.length;\n                  expressions.push(part);\n                  offsets.push(offset);\n                  offset += part.length + interpolationConfig.end.length;\n              }\n              else {\n                  this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                  expressions.push('$implict');\n                  offsets.push(offset);\n              }\n          }\n          return new SplitInterpolation(strings, expressions, offsets);\n      };\n      Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n          return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, isBlank(input) ? 0 : input.length), input), input, location, this.errors);\n      };\n      Parser.prototype._stripComments = function (input) {\n          var i = this._commentStart(input);\n          return isPresent(i) ? input.substring(0, i).trim() : input;\n      };\n      Parser.prototype._commentStart = function (input) {\n          var outerQuote = null;\n          for (var i = 0; i < input.length - 1; i++) {\n              var char = input.charCodeAt(i);\n              var nextChar = input.charCodeAt(i + 1);\n              if (char === $SLASH && nextChar == $SLASH && isBlank(outerQuote))\n                  return i;\n              if (outerQuote === char) {\n                  outerQuote = null;\n              }\n              else if (isBlank(outerQuote) && isQuote(char)) {\n                  outerQuote = char;\n              }\n          }\n          return null;\n      };\n      Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n          var regexp = _createInterpolateRegExp(interpolationConfig);\n          var parts = input.split(regexp);\n          if (parts.length > 1) {\n              this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n          }\n      };\n      Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n          var errLocation = '';\n          for (var j = 0; j < partInErrIdx; j++) {\n              errLocation += j % 2 === 0 ?\n                  parts[j] :\n                  \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n          }\n          return errLocation.length;\n      };\n      Parser.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      Parser.ctorParameters = [\n          { type: Lexer, },\n      ];\n      return Parser;\n  }());\n  var _ParseAST = (function () {\n      function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n          this.input = input;\n          this.location = location;\n          this.tokens = tokens;\n          this.inputLength = inputLength;\n          this.parseAction = parseAction;\n          this.errors = errors;\n          this.offset = offset;\n          this.rparensExpected = 0;\n          this.rbracketsExpected = 0;\n          this.rbracesExpected = 0;\n          this.index = 0;\n      }\n      _ParseAST.prototype.peek = function (offset) {\n          var i = this.index + offset;\n          return i < this.tokens.length ? this.tokens[i] : EOF;\n      };\n      Object.defineProperty(_ParseAST.prototype, \"next\", {\n          get: function () { return this.peek(0); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n          get: function () {\n              return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                  this.inputLength + this.offset;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n      _ParseAST.prototype.advance = function () { this.index++; };\n      _ParseAST.prototype.optionalCharacter = function (code) {\n          if (this.next.isCharacter(code)) {\n              this.advance();\n              return true;\n          }\n          else {\n              return false;\n          }\n      };\n      _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n      _ParseAST.prototype.expectCharacter = function (code) {\n          if (this.optionalCharacter(code))\n              return;\n          this.error(\"Missing expected \" + String.fromCharCode(code));\n      };\n      _ParseAST.prototype.optionalOperator = function (op) {\n          if (this.next.isOperator(op)) {\n              this.advance();\n              return true;\n          }\n          else {\n              return false;\n          }\n      };\n      _ParseAST.prototype.expectOperator = function (operator) {\n          if (this.optionalOperator(operator))\n              return;\n          this.error(\"Missing expected operator \" + operator);\n      };\n      _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n          var n = this.next;\n          if (!n.isIdentifier() && !n.isKeyword()) {\n              this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n              return '';\n          }\n          this.advance();\n          return n.toString();\n      };\n      _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n          var n = this.next;\n          if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n              this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n              return '';\n          }\n          this.advance();\n          return n.toString();\n      };\n      _ParseAST.prototype.parseChain = function () {\n          var exprs = [];\n          var start = this.inputIndex;\n          while (this.index < this.tokens.length) {\n              var expr = this.parsePipe();\n              exprs.push(expr);\n              if (this.optionalCharacter($SEMICOLON)) {\n                  if (!this.parseAction) {\n                      this.error('Binding expression cannot contain chained expression');\n                  }\n                  while (this.optionalCharacter($SEMICOLON)) {\n                  } // read all semicolons\n              }\n              else if (this.index < this.tokens.length) {\n                  this.error(\"Unexpected token '\" + this.next + \"'\");\n              }\n          }\n          if (exprs.length == 0)\n              return new EmptyExpr(this.span(start));\n          if (exprs.length == 1)\n              return exprs[0];\n          return new Chain(this.span(start), exprs);\n      };\n      _ParseAST.prototype.parsePipe = function () {\n          var result = this.parseExpression();\n          if (this.optionalOperator('|')) {\n              if (this.parseAction) {\n                  this.error('Cannot have a pipe in an action expression');\n              }\n              do {\n                  var name_1 = this.expectIdentifierOrKeyword();\n                  var args = [];\n                  while (this.optionalCharacter($COLON)) {\n                      args.push(this.parseExpression());\n                  }\n                  result = new BindingPipe(this.span(result.span.start - this.offset), result, name_1, args);\n              } while (this.optionalOperator('|'));\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n      _ParseAST.prototype.parseConditional = function () {\n          var start = this.inputIndex;\n          var result = this.parseLogicalOr();\n          if (this.optionalOperator('?')) {\n              var yes = this.parsePipe();\n              var no = void 0;\n              if (!this.optionalCharacter($COLON)) {\n                  var end = this.inputIndex;\n                  var expression = this.input.substring(start, end);\n                  this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                  no = new EmptyExpr(this.span(start));\n              }\n              else {\n                  no = this.parsePipe();\n              }\n              return new Conditional(this.span(start), result, yes, no);\n          }\n          else {\n              return result;\n          }\n      };\n      _ParseAST.prototype.parseLogicalOr = function () {\n          // '||'\n          var result = this.parseLogicalAnd();\n          while (this.optionalOperator('||')) {\n              var right = this.parseLogicalAnd();\n              result = new Binary(this.span(result.span.start), '||', result, right);\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseLogicalAnd = function () {\n          // '&&'\n          var result = this.parseEquality();\n          while (this.optionalOperator('&&')) {\n              var right = this.parseEquality();\n              result = new Binary(this.span(result.span.start), '&&', result, right);\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseEquality = function () {\n          // '==','!=','===','!=='\n          var result = this.parseRelational();\n          while (this.next.type == exports.TokenType.Operator) {\n              var operator = this.next.strValue;\n              switch (operator) {\n                  case '==':\n                  case '===':\n                  case '!=':\n                  case '!==':\n                      this.advance();\n                      var right = this.parseRelational();\n                      result = new Binary(this.span(result.span.start), operator, result, right);\n                      continue;\n              }\n              break;\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseRelational = function () {\n          // '<', '>', '<=', '>='\n          var result = this.parseAdditive();\n          while (this.next.type == exports.TokenType.Operator) {\n              var operator = this.next.strValue;\n              switch (operator) {\n                  case '<':\n                  case '>':\n                  case '<=':\n                  case '>=':\n                      this.advance();\n                      var right = this.parseAdditive();\n                      result = new Binary(this.span(result.span.start), operator, result, right);\n                      continue;\n              }\n              break;\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseAdditive = function () {\n          // '+', '-'\n          var result = this.parseMultiplicative();\n          while (this.next.type == exports.TokenType.Operator) {\n              var operator = this.next.strValue;\n              switch (operator) {\n                  case '+':\n                  case '-':\n                      this.advance();\n                      var right = this.parseMultiplicative();\n                      result = new Binary(this.span(result.span.start), operator, result, right);\n                      continue;\n              }\n              break;\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseMultiplicative = function () {\n          // '*', '%', '/'\n          var result = this.parsePrefix();\n          while (this.next.type == exports.TokenType.Operator) {\n              var operator = this.next.strValue;\n              switch (operator) {\n                  case '*':\n                  case '%':\n                  case '/':\n                      this.advance();\n                      var right = this.parsePrefix();\n                      result = new Binary(this.span(result.span.start), operator, result, right);\n                      continue;\n              }\n              break;\n          }\n          return result;\n      };\n      _ParseAST.prototype.parsePrefix = function () {\n          if (this.next.type == exports.TokenType.Operator) {\n              var start = this.inputIndex;\n              var operator = this.next.strValue;\n              var result = void 0;\n              switch (operator) {\n                  case '+':\n                      this.advance();\n                      return this.parsePrefix();\n                  case '-':\n                      this.advance();\n                      result = this.parsePrefix();\n                      return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                  case '!':\n                      this.advance();\n                      result = this.parsePrefix();\n                      return new PrefixNot(this.span(start), result);\n              }\n          }\n          return this.parseCallChain();\n      };\n      _ParseAST.prototype.parseCallChain = function () {\n          var result = this.parsePrimary();\n          while (true) {\n              if (this.optionalCharacter($PERIOD)) {\n                  result = this.parseAccessMemberOrMethodCall(result, false);\n              }\n              else if (this.optionalOperator('?.')) {\n                  result = this.parseAccessMemberOrMethodCall(result, true);\n              }\n              else if (this.optionalCharacter($LBRACKET)) {\n                  this.rbracketsExpected++;\n                  var key = this.parsePipe();\n                  this.rbracketsExpected--;\n                  this.expectCharacter($RBRACKET);\n                  if (this.optionalOperator('=')) {\n                      var value = this.parseConditional();\n                      result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                  }\n                  else {\n                      result = new KeyedRead(this.span(result.span.start), result, key);\n                  }\n              }\n              else if (this.optionalCharacter($LPAREN)) {\n                  this.rparensExpected++;\n                  var args = this.parseCallArguments();\n                  this.rparensExpected--;\n                  this.expectCharacter($RPAREN);\n                  result = new FunctionCall(this.span(result.span.start), result, args);\n              }\n              else {\n                  return result;\n              }\n          }\n      };\n      _ParseAST.prototype.parsePrimary = function () {\n          var start = this.inputIndex;\n          if (this.optionalCharacter($LPAREN)) {\n              this.rparensExpected++;\n              var result = this.parsePipe();\n              this.rparensExpected--;\n              this.expectCharacter($RPAREN);\n              return result;\n          }\n          else if (this.next.isKeywordNull()) {\n              this.advance();\n              return new LiteralPrimitive(this.span(start), null);\n          }\n          else if (this.next.isKeywordUndefined()) {\n              this.advance();\n              return new LiteralPrimitive(this.span(start), void 0);\n          }\n          else if (this.next.isKeywordTrue()) {\n              this.advance();\n              return new LiteralPrimitive(this.span(start), true);\n          }\n          else if (this.next.isKeywordFalse()) {\n              this.advance();\n              return new LiteralPrimitive(this.span(start), false);\n          }\n          else if (this.next.isKeywordThis()) {\n              this.advance();\n              return new ImplicitReceiver(this.span(start));\n          }\n          else if (this.optionalCharacter($LBRACKET)) {\n              this.rbracketsExpected++;\n              var elements = this.parseExpressionList($RBRACKET);\n              this.rbracketsExpected--;\n              this.expectCharacter($RBRACKET);\n              return new LiteralArray(this.span(start), elements);\n          }\n          else if (this.next.isCharacter($LBRACE)) {\n              return this.parseLiteralMap();\n          }\n          else if (this.next.isIdentifier()) {\n              return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n          }\n          else if (this.next.isNumber()) {\n              var value = this.next.toNumber();\n              this.advance();\n              return new LiteralPrimitive(this.span(start), value);\n          }\n          else if (this.next.isString()) {\n              var literalValue = this.next.toString();\n              this.advance();\n              return new LiteralPrimitive(this.span(start), literalValue);\n          }\n          else if (this.index >= this.tokens.length) {\n              this.error(\"Unexpected end of expression: \" + this.input);\n              return new EmptyExpr(this.span(start));\n          }\n          else {\n              this.error(\"Unexpected token \" + this.next);\n              return new EmptyExpr(this.span(start));\n          }\n      };\n      _ParseAST.prototype.parseExpressionList = function (terminator) {\n          var result = [];\n          if (!this.next.isCharacter(terminator)) {\n              do {\n                  result.push(this.parsePipe());\n              } while (this.optionalCharacter($COMMA));\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseLiteralMap = function () {\n          var keys = [];\n          var values = [];\n          var start = this.inputIndex;\n          this.expectCharacter($LBRACE);\n          if (!this.optionalCharacter($RBRACE)) {\n              this.rbracesExpected++;\n              do {\n                  var key = this.expectIdentifierOrKeywordOrString();\n                  keys.push(key);\n                  this.expectCharacter($COLON);\n                  values.push(this.parsePipe());\n              } while (this.optionalCharacter($COMMA));\n              this.rbracesExpected--;\n              this.expectCharacter($RBRACE);\n          }\n          return new LiteralMap(this.span(start), keys, values);\n      };\n      _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n          if (isSafe === void 0) { isSafe = false; }\n          var start = receiver.span.start;\n          var id = this.expectIdentifierOrKeyword();\n          if (this.optionalCharacter($LPAREN)) {\n              this.rparensExpected++;\n              var args = this.parseCallArguments();\n              this.expectCharacter($RPAREN);\n              this.rparensExpected--;\n              var span = this.span(start);\n              return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                  new MethodCall(span, receiver, id, args);\n          }\n          else {\n              if (isSafe) {\n                  if (this.optionalOperator('=')) {\n                      this.error('The \\'?.\\' operator cannot be used in the assignment');\n                      return new EmptyExpr(this.span(start));\n                  }\n                  else {\n                      return new SafePropertyRead(this.span(start), receiver, id);\n                  }\n              }\n              else {\n                  if (this.optionalOperator('=')) {\n                      if (!this.parseAction) {\n                          this.error('Bindings cannot contain assignments');\n                          return new EmptyExpr(this.span(start));\n                      }\n                      var value = this.parseConditional();\n                      return new PropertyWrite(this.span(start), receiver, id, value);\n                  }\n                  else {\n                      return new PropertyRead(this.span(start), receiver, id);\n                  }\n              }\n          }\n      };\n      _ParseAST.prototype.parseCallArguments = function () {\n          if (this.next.isCharacter($RPAREN))\n              return [];\n          var positionals = [];\n          do {\n              positionals.push(this.parsePipe());\n          } while (this.optionalCharacter($COMMA));\n          return positionals;\n      };\n      /**\n       * An identifier, a keyword, a string with an optional `-` inbetween.\n       */\n      _ParseAST.prototype.expectTemplateBindingKey = function () {\n          var result = '';\n          var operatorFound = false;\n          do {\n              result += this.expectIdentifierOrKeywordOrString();\n              operatorFound = this.optionalOperator('-');\n              if (operatorFound) {\n                  result += '-';\n              }\n          } while (operatorFound);\n          return result.toString();\n      };\n      _ParseAST.prototype.parseTemplateBindings = function () {\n          var bindings = [];\n          var prefix = null;\n          var warnings = [];\n          while (this.index < this.tokens.length) {\n              var start = this.inputIndex;\n              var keyIsVar = this.peekKeywordLet();\n              if (keyIsVar) {\n                  this.advance();\n              }\n              var key = this.expectTemplateBindingKey();\n              if (!keyIsVar) {\n                  if (prefix == null) {\n                      prefix = key;\n                  }\n                  else {\n                      key = prefix + key[0].toUpperCase() + key.substring(1);\n                  }\n              }\n              this.optionalCharacter($COLON);\n              var name_2 = null;\n              var expression = null;\n              if (keyIsVar) {\n                  if (this.optionalOperator('=')) {\n                      name_2 = this.expectTemplateBindingKey();\n                  }\n                  else {\n                      name_2 = '\\$implicit';\n                  }\n              }\n              else if (this.next !== EOF && !this.peekKeywordLet()) {\n                  var start_1 = this.inputIndex;\n                  var ast = this.parsePipe();\n                  var source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                  expression = new ASTWithSource(ast, source, this.location, this.errors);\n              }\n              bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n              if (!this.optionalCharacter($SEMICOLON)) {\n                  this.optionalCharacter($COMMA);\n              }\n          }\n          return new TemplateBindingParseResult(bindings, warnings, this.errors);\n      };\n      _ParseAST.prototype.error = function (message, index) {\n          if (index === void 0) { index = null; }\n          this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n          this.skip();\n      };\n      _ParseAST.prototype.locationText = function (index) {\n          if (index === void 0) { index = null; }\n          if (isBlank(index))\n              index = this.index;\n          return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n              \"at the end of the expression\";\n      };\n      // Error recovery should skip tokens until it encounters a recovery point. skip() treats\n      // the end of input and a ';' as unconditionally a recovery point. It also treats ')',\n      // '}' and ']' as conditional recovery points if one of calling productions is expecting\n      // one of these symbols. This allows skip() to recover from errors such as '(a.) + 1' allowing\n      // more of the AST to be retained (it doesn't skip any tokens as the ')' is retained because\n      // of the '(' begins an '(' <expr> ')' production). The recovery points of grouping symbols\n      // must be conditional as they must be skipped if none of the calling productions are not\n      // expecting the closing token else we will never make progress in the case of an\n      // extraneous group closing symbol (such as a stray ')'). This is not the case for ';' because\n      // parseChain() is always the root production and it expects a ';'.\n      // If a production expects one of these token it increments the corresponding nesting count,\n      // and then decrements it just prior to checking if the token is in the input.\n      _ParseAST.prototype.skip = function () {\n          var n = this.next;\n          while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n              (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n              (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n              (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n              if (this.next.isError()) {\n                  this.errors.push(new ParserError(this.next.toString(), this.input, this.locationText(), this.location));\n              }\n              this.advance();\n              n = this.next;\n          }\n      };\n      return _ParseAST;\n  }());\n  var SimpleExpressionChecker = (function () {\n      function SimpleExpressionChecker() {\n          this.errors = [];\n      }\n      SimpleExpressionChecker.check = function (ast) {\n          var s = new SimpleExpressionChecker();\n          ast.visit(s);\n          return s.errors;\n      };\n      SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n      SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n      SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n      SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitAll = function (asts) {\n          var _this = this;\n          return asts.map(function (node) { return node.visit(_this); });\n      };\n      SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n      return SimpleExpressionChecker;\n  }());\n\n  var ParseLocation = (function () {\n      function ParseLocation(file, offset, line, col) {\n          this.file = file;\n          this.offset = offset;\n          this.line = line;\n          this.col = col;\n      }\n      ParseLocation.prototype.toString = function () {\n          return isPresent(this.offset) ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n      };\n      return ParseLocation;\n  }());\n  var ParseSourceFile = (function () {\n      function ParseSourceFile(content, url) {\n          this.content = content;\n          this.url = url;\n      }\n      return ParseSourceFile;\n  }());\n  var ParseSourceSpan = (function () {\n      function ParseSourceSpan(start, end, details) {\n          if (details === void 0) { details = null; }\n          this.start = start;\n          this.end = end;\n          this.details = details;\n      }\n      ParseSourceSpan.prototype.toString = function () {\n          return this.start.file.content.substring(this.start.offset, this.end.offset);\n      };\n      return ParseSourceSpan;\n  }());\n  exports.ParseErrorLevel;\n  (function (ParseErrorLevel) {\n      ParseErrorLevel[ParseErrorLevel[\"WARNING\"] = 0] = \"WARNING\";\n      ParseErrorLevel[ParseErrorLevel[\"FATAL\"] = 1] = \"FATAL\";\n  })(exports.ParseErrorLevel || (exports.ParseErrorLevel = {}));\n  var ParseError = (function () {\n      function ParseError(span, msg, level) {\n          if (level === void 0) { level = exports.ParseErrorLevel.FATAL; }\n          this.span = span;\n          this.msg = msg;\n          this.level = level;\n      }\n      ParseError.prototype.toString = function () {\n          var source = this.span.start.file.content;\n          var ctxStart = this.span.start.offset;\n          var contextStr = '';\n          var details = '';\n          if (isPresent(ctxStart)) {\n              if (ctxStart > source.length - 1) {\n                  ctxStart = source.length - 1;\n              }\n              var ctxEnd = ctxStart;\n              var ctxLen = 0;\n              var ctxLines = 0;\n              while (ctxLen < 100 && ctxStart > 0) {\n                  ctxStart--;\n                  ctxLen++;\n                  if (source[ctxStart] == '\\n') {\n                      if (++ctxLines == 3) {\n                          break;\n                      }\n                  }\n              }\n              ctxLen = 0;\n              ctxLines = 0;\n              while (ctxLen < 100 && ctxEnd < source.length - 1) {\n                  ctxEnd++;\n                  ctxLen++;\n                  if (source[ctxEnd] == '\\n') {\n                      if (++ctxLines == 3) {\n                          break;\n                      }\n                  }\n              }\n              var context = source.substring(ctxStart, this.span.start.offset) + '[ERROR ->]' +\n                  source.substring(this.span.start.offset, ctxEnd + 1);\n              contextStr = \" (\\\"\" + context + \"\\\")\";\n          }\n          if (this.span.details) {\n              details = \", \" + this.span.details;\n          }\n          return \"\" + this.msg + contextStr + \": \" + this.span.start + details;\n      };\n      return ParseError;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var Text = (function () {\n      function Text(value, sourceSpan) {\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n      return Text;\n  }());\n  var Expansion = (function () {\n      function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n          this.switchValue = switchValue;\n          this.type = type;\n          this.cases = cases;\n          this.sourceSpan = sourceSpan;\n          this.switchValueSourceSpan = switchValueSourceSpan;\n      }\n      Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n      return Expansion;\n  }());\n  var ExpansionCase = (function () {\n      function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n          this.value = value;\n          this.expression = expression;\n          this.sourceSpan = sourceSpan;\n          this.valueSourceSpan = valueSourceSpan;\n          this.expSourceSpan = expSourceSpan;\n      }\n      ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n      return ExpansionCase;\n  }());\n  var Attribute$1 = (function () {\n      function Attribute(name, value, sourceSpan, valueSpan) {\n          this.name = name;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n          this.valueSpan = valueSpan;\n      }\n      Attribute.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n      return Attribute;\n  }());\n  var Element = (function () {\n      function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n          this.name = name;\n          this.attrs = attrs;\n          this.children = children;\n          this.sourceSpan = sourceSpan;\n          this.startSourceSpan = startSourceSpan;\n          this.endSourceSpan = endSourceSpan;\n      }\n      Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n      return Element;\n  }());\n  var Comment = (function () {\n      function Comment(value, sourceSpan) {\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n      return Comment;\n  }());\n  function visitAll(visitor, nodes, context) {\n      if (context === void 0) { context = null; }\n      var result = [];\n      var visit = visitor.visit ?\n          function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n          function (ast) { return ast.visit(visitor, context); };\n      nodes.forEach(function (ast) {\n          var astResult = visit(ast);\n          if (astResult) {\n              result.push(astResult);\n          }\n      });\n      return result;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var TagContentType;\n  (function (TagContentType) {\n      TagContentType[TagContentType[\"RAW_TEXT\"] = 0] = \"RAW_TEXT\";\n      TagContentType[TagContentType[\"ESCAPABLE_RAW_TEXT\"] = 1] = \"ESCAPABLE_RAW_TEXT\";\n      TagContentType[TagContentType[\"PARSABLE_DATA\"] = 2] = \"PARSABLE_DATA\";\n  })(TagContentType || (TagContentType = {}));\n  function splitNsName(elementName) {\n      if (elementName[0] != ':') {\n          return [null, elementName];\n      }\n      var colonIndex = elementName.indexOf(':', 1);\n      if (colonIndex == -1) {\n          throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n      }\n      return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n  }\n  function getNsPrefix(fullName) {\n      return fullName === null ? null : splitNsName(fullName)[0];\n  }\n  function mergeNsAndName(prefix, localName) {\n      return prefix ? \":\" + prefix + \":\" + localName : localName;\n  }\n  // see http://www.w3.org/TR/html51/syntax.html#named-character-references\n  // see https://html.spec.whatwg.org/multipage/entities.json\n  // This list is not exhaustive to keep the compiler footprint low.\n  // The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not exist.\n  var NAMED_ENTITIES = {\n      'Aacute': '\\u00C1',\n      'aacute': '\\u00E1',\n      'Acirc': '\\u00C2',\n      'acirc': '\\u00E2',\n      'acute': '\\u00B4',\n      'AElig': '\\u00C6',\n      'aelig': '\\u00E6',\n      'Agrave': '\\u00C0',\n      'agrave': '\\u00E0',\n      'alefsym': '\\u2135',\n      'Alpha': '\\u0391',\n      'alpha': '\\u03B1',\n      'amp': '&',\n      'and': '\\u2227',\n      'ang': '\\u2220',\n      'apos': '\\u0027',\n      'Aring': '\\u00C5',\n      'aring': '\\u00E5',\n      'asymp': '\\u2248',\n      'Atilde': '\\u00C3',\n      'atilde': '\\u00E3',\n      'Auml': '\\u00C4',\n      'auml': '\\u00E4',\n      'bdquo': '\\u201E',\n      'Beta': '\\u0392',\n      'beta': '\\u03B2',\n      'brvbar': '\\u00A6',\n      'bull': '\\u2022',\n      'cap': '\\u2229',\n      'Ccedil': '\\u00C7',\n      'ccedil': '\\u00E7',\n      'cedil': '\\u00B8',\n      'cent': '\\u00A2',\n      'Chi': '\\u03A7',\n      'chi': '\\u03C7',\n      'circ': '\\u02C6',\n      'clubs': '\\u2663',\n      'cong': '\\u2245',\n      'copy': '\\u00A9',\n      'crarr': '\\u21B5',\n      'cup': '\\u222A',\n      'curren': '\\u00A4',\n      'dagger': '\\u2020',\n      'Dagger': '\\u2021',\n      'darr': '\\u2193',\n      'dArr': '\\u21D3',\n      'deg': '\\u00B0',\n      'Delta': '\\u0394',\n      'delta': '\\u03B4',\n      'diams': '\\u2666',\n      'divide': '\\u00F7',\n      'Eacute': '\\u00C9',\n      'eacute': '\\u00E9',\n      'Ecirc': '\\u00CA',\n      'ecirc': '\\u00EA',\n      'Egrave': '\\u00C8',\n      'egrave': '\\u00E8',\n      'empty': '\\u2205',\n      'emsp': '\\u2003',\n      'ensp': '\\u2002',\n      'Epsilon': '\\u0395',\n      'epsilon': '\\u03B5',\n      'equiv': '\\u2261',\n      'Eta': '\\u0397',\n      'eta': '\\u03B7',\n      'ETH': '\\u00D0',\n      'eth': '\\u00F0',\n      'Euml': '\\u00CB',\n      'euml': '\\u00EB',\n      'euro': '\\u20AC',\n      'exist': '\\u2203',\n      'fnof': '\\u0192',\n      'forall': '\\u2200',\n      'frac12': '\\u00BD',\n      'frac14': '\\u00BC',\n      'frac34': '\\u00BE',\n      'frasl': '\\u2044',\n      'Gamma': '\\u0393',\n      'gamma': '\\u03B3',\n      'ge': '\\u2265',\n      'gt': '>',\n      'harr': '\\u2194',\n      'hArr': '\\u21D4',\n      'hearts': '\\u2665',\n      'hellip': '\\u2026',\n      'Iacute': '\\u00CD',\n      'iacute': '\\u00ED',\n      'Icirc': '\\u00CE',\n      'icirc': '\\u00EE',\n      'iexcl': '\\u00A1',\n      'Igrave': '\\u00CC',\n      'igrave': '\\u00EC',\n      'image': '\\u2111',\n      'infin': '\\u221E',\n      'int': '\\u222B',\n      'Iota': '\\u0399',\n      'iota': '\\u03B9',\n      'iquest': '\\u00BF',\n      'isin': '\\u2208',\n      'Iuml': '\\u00CF',\n      'iuml': '\\u00EF',\n      'Kappa': '\\u039A',\n      'kappa': '\\u03BA',\n      'Lambda': '\\u039B',\n      'lambda': '\\u03BB',\n      'lang': '\\u27E8',\n      'laquo': '\\u00AB',\n      'larr': '\\u2190',\n      'lArr': '\\u21D0',\n      'lceil': '\\u2308',\n      'ldquo': '\\u201C',\n      'le': '\\u2264',\n      'lfloor': '\\u230A',\n      'lowast': '\\u2217',\n      'loz': '\\u25CA',\n      'lrm': '\\u200E',\n      'lsaquo': '\\u2039',\n      'lsquo': '\\u2018',\n      'lt': '<',\n      'macr': '\\u00AF',\n      'mdash': '\\u2014',\n      'micro': '\\u00B5',\n      'middot': '\\u00B7',\n      'minus': '\\u2212',\n      'Mu': '\\u039C',\n      'mu': '\\u03BC',\n      'nabla': '\\u2207',\n      'nbsp': '\\u00A0',\n      'ndash': '\\u2013',\n      'ne': '\\u2260',\n      'ni': '\\u220B',\n      'not': '\\u00AC',\n      'notin': '\\u2209',\n      'nsub': '\\u2284',\n      'Ntilde': '\\u00D1',\n      'ntilde': '\\u00F1',\n      'Nu': '\\u039D',\n      'nu': '\\u03BD',\n      'Oacute': '\\u00D3',\n      'oacute': '\\u00F3',\n      'Ocirc': '\\u00D4',\n      'ocirc': '\\u00F4',\n      'OElig': '\\u0152',\n      'oelig': '\\u0153',\n      'Ograve': '\\u00D2',\n      'ograve': '\\u00F2',\n      'oline': '\\u203E',\n      'Omega': '\\u03A9',\n      'omega': '\\u03C9',\n      'Omicron': '\\u039F',\n      'omicron': '\\u03BF',\n      'oplus': '\\u2295',\n      'or': '\\u2228',\n      'ordf': '\\u00AA',\n      'ordm': '\\u00BA',\n      'Oslash': '\\u00D8',\n      'oslash': '\\u00F8',\n      'Otilde': '\\u00D5',\n      'otilde': '\\u00F5',\n      'otimes': '\\u2297',\n      'Ouml': '\\u00D6',\n      'ouml': '\\u00F6',\n      'para': '\\u00B6',\n      'permil': '\\u2030',\n      'perp': '\\u22A5',\n      'Phi': '\\u03A6',\n      'phi': '\\u03C6',\n      'Pi': '\\u03A0',\n      'pi': '\\u03C0',\n      'piv': '\\u03D6',\n      'plusmn': '\\u00B1',\n      'pound': '\\u00A3',\n      'prime': '\\u2032',\n      'Prime': '\\u2033',\n      'prod': '\\u220F',\n      'prop': '\\u221D',\n      'Psi': '\\u03A8',\n      'psi': '\\u03C8',\n      'quot': '\\u0022',\n      'radic': '\\u221A',\n      'rang': '\\u27E9',\n      'raquo': '\\u00BB',\n      'rarr': '\\u2192',\n      'rArr': '\\u21D2',\n      'rceil': '\\u2309',\n      'rdquo': '\\u201D',\n      'real': '\\u211C',\n      'reg': '\\u00AE',\n      'rfloor': '\\u230B',\n      'Rho': '\\u03A1',\n      'rho': '\\u03C1',\n      'rlm': '\\u200F',\n      'rsaquo': '\\u203A',\n      'rsquo': '\\u2019',\n      'sbquo': '\\u201A',\n      'Scaron': '\\u0160',\n      'scaron': '\\u0161',\n      'sdot': '\\u22C5',\n      'sect': '\\u00A7',\n      'shy': '\\u00AD',\n      'Sigma': '\\u03A3',\n      'sigma': '\\u03C3',\n      'sigmaf': '\\u03C2',\n      'sim': '\\u223C',\n      'spades': '\\u2660',\n      'sub': '\\u2282',\n      'sube': '\\u2286',\n      'sum': '\\u2211',\n      'sup': '\\u2283',\n      'sup1': '\\u00B9',\n      'sup2': '\\u00B2',\n      'sup3': '\\u00B3',\n      'supe': '\\u2287',\n      'szlig': '\\u00DF',\n      'Tau': '\\u03A4',\n      'tau': '\\u03C4',\n      'there4': '\\u2234',\n      'Theta': '\\u0398',\n      'theta': '\\u03B8',\n      'thetasym': '\\u03D1',\n      'thinsp': '\\u2009',\n      'THORN': '\\u00DE',\n      'thorn': '\\u00FE',\n      'tilde': '\\u02DC',\n      'times': '\\u00D7',\n      'trade': '\\u2122',\n      'Uacute': '\\u00DA',\n      'uacute': '\\u00FA',\n      'uarr': '\\u2191',\n      'uArr': '\\u21D1',\n      'Ucirc': '\\u00DB',\n      'ucirc': '\\u00FB',\n      'Ugrave': '\\u00D9',\n      'ugrave': '\\u00F9',\n      'uml': '\\u00A8',\n      'upsih': '\\u03D2',\n      'Upsilon': '\\u03A5',\n      'upsilon': '\\u03C5',\n      'Uuml': '\\u00DC',\n      'uuml': '\\u00FC',\n      'weierp': '\\u2118',\n      'Xi': '\\u039E',\n      'xi': '\\u03BE',\n      'Yacute': '\\u00DD',\n      'yacute': '\\u00FD',\n      'yen': '\\u00A5',\n      'yuml': '\\u00FF',\n      'Yuml': '\\u0178',\n      'Zeta': '\\u0396',\n      'zeta': '\\u03B6',\n      'zwj': '\\u200D',\n      'zwnj': '\\u200C',\n  };\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$3 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var TokenType$1;\n  (function (TokenType) {\n      TokenType[TokenType[\"TAG_OPEN_START\"] = 0] = \"TAG_OPEN_START\";\n      TokenType[TokenType[\"TAG_OPEN_END\"] = 1] = \"TAG_OPEN_END\";\n      TokenType[TokenType[\"TAG_OPEN_END_VOID\"] = 2] = \"TAG_OPEN_END_VOID\";\n      TokenType[TokenType[\"TAG_CLOSE\"] = 3] = \"TAG_CLOSE\";\n      TokenType[TokenType[\"TEXT\"] = 4] = \"TEXT\";\n      TokenType[TokenType[\"ESCAPABLE_RAW_TEXT\"] = 5] = \"ESCAPABLE_RAW_TEXT\";\n      TokenType[TokenType[\"RAW_TEXT\"] = 6] = \"RAW_TEXT\";\n      TokenType[TokenType[\"COMMENT_START\"] = 7] = \"COMMENT_START\";\n      TokenType[TokenType[\"COMMENT_END\"] = 8] = \"COMMENT_END\";\n      TokenType[TokenType[\"CDATA_START\"] = 9] = \"CDATA_START\";\n      TokenType[TokenType[\"CDATA_END\"] = 10] = \"CDATA_END\";\n      TokenType[TokenType[\"ATTR_NAME\"] = 11] = \"ATTR_NAME\";\n      TokenType[TokenType[\"ATTR_VALUE\"] = 12] = \"ATTR_VALUE\";\n      TokenType[TokenType[\"DOC_TYPE\"] = 13] = \"DOC_TYPE\";\n      TokenType[TokenType[\"EXPANSION_FORM_START\"] = 14] = \"EXPANSION_FORM_START\";\n      TokenType[TokenType[\"EXPANSION_CASE_VALUE\"] = 15] = \"EXPANSION_CASE_VALUE\";\n      TokenType[TokenType[\"EXPANSION_CASE_EXP_START\"] = 16] = \"EXPANSION_CASE_EXP_START\";\n      TokenType[TokenType[\"EXPANSION_CASE_EXP_END\"] = 17] = \"EXPANSION_CASE_EXP_END\";\n      TokenType[TokenType[\"EXPANSION_FORM_END\"] = 18] = \"EXPANSION_FORM_END\";\n      TokenType[TokenType[\"EOF\"] = 19] = \"EOF\";\n  })(TokenType$1 || (TokenType$1 = {}));\n  var Token$1 = (function () {\n      function Token(type, parts, sourceSpan) {\n          this.type = type;\n          this.parts = parts;\n          this.sourceSpan = sourceSpan;\n      }\n      return Token;\n  }());\n  var TokenError = (function (_super) {\n      __extends$3(TokenError, _super);\n      function TokenError(errorMsg, tokenType, span) {\n          _super.call(this, span, errorMsg);\n          this.tokenType = tokenType;\n      }\n      return TokenError;\n  }(ParseError));\n  var TokenizeResult = (function () {\n      function TokenizeResult(tokens, errors) {\n          this.tokens = tokens;\n          this.errors = errors;\n      }\n      return TokenizeResult;\n  }());\n  function tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n      if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n      if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n      return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n          .tokenize();\n  }\n  var _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n  function _unexpectedCharacterErrorMsg(charCode) {\n      var char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n      return \"Unexpected character \\\"\" + char + \"\\\"\";\n  }\n  function _unknownEntityErrorMsg(entitySrc) {\n      return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n  }\n  var _ControlFlowError = (function () {\n      function _ControlFlowError(error) {\n          this.error = error;\n      }\n      return _ControlFlowError;\n  }());\n  // See http://www.w3.org/TR/html51/syntax.html#writing\n  var _Tokenizer = (function () {\n      /**\n       * @param _file The html source\n       * @param _getTagDefinition\n       * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n       * @param _interpolationConfig\n       */\n      function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n          if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          this._file = _file;\n          this._getTagDefinition = _getTagDefinition;\n          this._tokenizeIcu = _tokenizeIcu;\n          this._interpolationConfig = _interpolationConfig;\n          // Note: this is always lowercase!\n          this._peek = -1;\n          this._nextPeek = -1;\n          this._index = -1;\n          this._line = 0;\n          this._column = -1;\n          this._expansionCaseStack = [];\n          this._inInterpolation = false;\n          this.tokens = [];\n          this.errors = [];\n          this._input = _file.content;\n          this._length = _file.content.length;\n          this._advance();\n      }\n      _Tokenizer.prototype._processCarriageReturns = function (content) {\n          // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n          // In order to keep the original position in the source, we can not\n          // pre-process it.\n          // Instead CRs are processed right before instantiating the tokens.\n          return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n      };\n      _Tokenizer.prototype.tokenize = function () {\n          while (this._peek !== $EOF) {\n              var start = this._getLocation();\n              try {\n                  if (this._attemptCharCode($LT)) {\n                      if (this._attemptCharCode($BANG)) {\n                          if (this._attemptCharCode($LBRACKET)) {\n                              this._consumeCdata(start);\n                          }\n                          else if (this._attemptCharCode($MINUS)) {\n                              this._consumeComment(start);\n                          }\n                          else {\n                              this._consumeDocType(start);\n                          }\n                      }\n                      else if (this._attemptCharCode($SLASH)) {\n                          this._consumeTagClose(start);\n                      }\n                      else {\n                          this._consumeTagOpen(start);\n                      }\n                  }\n                  else if (!this._tokenizeIcu || !this._tokenizeExpansionForm()) {\n                      this._consumeText();\n                  }\n              }\n              catch (e) {\n                  if (e instanceof _ControlFlowError) {\n                      this.errors.push(e.error);\n                  }\n                  else {\n                      throw e;\n                  }\n              }\n          }\n          this._beginToken(TokenType$1.EOF);\n          this._endToken([]);\n          return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n      };\n      /**\n       * @returns {boolean} whether an ICU token has been created\n       * @internal\n       */\n      _Tokenizer.prototype._tokenizeExpansionForm = function () {\n          if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n              this._consumeExpansionFormStart();\n              return true;\n          }\n          if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n              this._consumeExpansionCaseStart();\n              return true;\n          }\n          if (this._peek === $RBRACE) {\n              if (this._isInExpansionCase()) {\n                  this._consumeExpansionCaseEnd();\n                  return true;\n              }\n              if (this._isInExpansionForm()) {\n                  this._consumeExpansionFormEnd();\n                  return true;\n              }\n          }\n          return false;\n      };\n      _Tokenizer.prototype._getLocation = function () {\n          return new ParseLocation(this._file, this._index, this._line, this._column);\n      };\n      _Tokenizer.prototype._getSpan = function (start, end) {\n          if (start === void 0) { start = this._getLocation(); }\n          if (end === void 0) { end = this._getLocation(); }\n          return new ParseSourceSpan(start, end);\n      };\n      _Tokenizer.prototype._beginToken = function (type, start) {\n          if (start === void 0) { start = this._getLocation(); }\n          this._currentTokenStart = start;\n          this._currentTokenType = type;\n      };\n      _Tokenizer.prototype._endToken = function (parts, end) {\n          if (end === void 0) { end = this._getLocation(); }\n          var token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n          this.tokens.push(token);\n          this._currentTokenStart = null;\n          this._currentTokenType = null;\n          return token;\n      };\n      _Tokenizer.prototype._createError = function (msg, span) {\n          if (this._isInExpansionForm()) {\n              msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n          }\n          var error = new TokenError(msg, this._currentTokenType, span);\n          this._currentTokenStart = null;\n          this._currentTokenType = null;\n          return new _ControlFlowError(error);\n      };\n      _Tokenizer.prototype._advance = function () {\n          if (this._index >= this._length) {\n              throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n          }\n          if (this._peek === $LF) {\n              this._line++;\n              this._column = 0;\n          }\n          else if (this._peek !== $LF && this._peek !== $CR) {\n              this._column++;\n          }\n          this._index++;\n          this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n          this._nextPeek =\n              this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n      };\n      _Tokenizer.prototype._attemptCharCode = function (charCode) {\n          if (this._peek === charCode) {\n              this._advance();\n              return true;\n          }\n          return false;\n      };\n      _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n          if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n              this._advance();\n              return true;\n          }\n          return false;\n      };\n      _Tokenizer.prototype._requireCharCode = function (charCode) {\n          var location = this._getLocation();\n          if (!this._attemptCharCode(charCode)) {\n              throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n          }\n      };\n      _Tokenizer.prototype._attemptStr = function (chars) {\n          var len = chars.length;\n          if (this._index + len > this._length) {\n              return false;\n          }\n          var initialPosition = this._savePosition();\n          for (var i = 0; i < len; i++) {\n              if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                  // If attempting to parse the string fails, we want to reset the parser\n                  // to where it was before the attempt\n                  this._restorePosition(initialPosition);\n                  return false;\n              }\n          }\n          return true;\n      };\n      _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n          for (var i = 0; i < chars.length; i++) {\n              if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                  return false;\n              }\n          }\n          return true;\n      };\n      _Tokenizer.prototype._requireStr = function (chars) {\n          var location = this._getLocation();\n          if (!this._attemptStr(chars)) {\n              throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n          }\n      };\n      _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n          while (!predicate(this._peek)) {\n              this._advance();\n          }\n      };\n      _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n          var start = this._getLocation();\n          this._attemptCharCodeUntilFn(predicate);\n          if (this._index - start.offset < len) {\n              throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n          }\n      };\n      _Tokenizer.prototype._attemptUntilChar = function (char) {\n          while (this._peek !== char) {\n              this._advance();\n          }\n      };\n      _Tokenizer.prototype._readChar = function (decodeEntities) {\n          if (decodeEntities && this._peek === $AMPERSAND) {\n              return this._decodeEntity();\n          }\n          else {\n              var index = this._index;\n              this._advance();\n              return this._input[index];\n          }\n      };\n      _Tokenizer.prototype._decodeEntity = function () {\n          var start = this._getLocation();\n          this._advance();\n          if (this._attemptCharCode($HASH)) {\n              var isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n              var numberStart = this._getLocation().offset;\n              this._attemptCharCodeUntilFn(isDigitEntityEnd);\n              if (this._peek != $SEMICOLON) {\n                  throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n              }\n              this._advance();\n              var strNum = this._input.substring(numberStart, this._index - 1);\n              try {\n                  var charCode = parseInt(strNum, isHex ? 16 : 10);\n                  return String.fromCharCode(charCode);\n              }\n              catch (e) {\n                  var entity = this._input.substring(start.offset + 1, this._index - 1);\n                  throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n              }\n          }\n          else {\n              var startPosition = this._savePosition();\n              this._attemptCharCodeUntilFn(isNamedEntityEnd);\n              if (this._peek != $SEMICOLON) {\n                  this._restorePosition(startPosition);\n                  return '&';\n              }\n              this._advance();\n              var name_1 = this._input.substring(start.offset + 1, this._index - 1);\n              var char = NAMED_ENTITIES[name_1];\n              if (!char) {\n                  throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n              }\n              return char;\n          }\n      };\n      _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n          var tagCloseStart;\n          var textStart = this._getLocation();\n          this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n          var parts = [];\n          while (true) {\n              tagCloseStart = this._getLocation();\n              if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                  break;\n              }\n              if (this._index > tagCloseStart.offset) {\n                  // add the characters consumed by the previous if statement to the output\n                  parts.push(this._input.substring(tagCloseStart.offset, this._index));\n              }\n              while (this._peek !== firstCharOfEnd) {\n                  parts.push(this._readChar(decodeEntities));\n              }\n          }\n          return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n      };\n      _Tokenizer.prototype._consumeComment = function (start) {\n          var _this = this;\n          this._beginToken(TokenType$1.COMMENT_START, start);\n          this._requireCharCode($MINUS);\n          this._endToken([]);\n          var textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n          this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n          this._endToken([]);\n      };\n      _Tokenizer.prototype._consumeCdata = function (start) {\n          var _this = this;\n          this._beginToken(TokenType$1.CDATA_START, start);\n          this._requireStr('CDATA[');\n          this._endToken([]);\n          var textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n          this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n          this._endToken([]);\n      };\n      _Tokenizer.prototype._consumeDocType = function (start) {\n          this._beginToken(TokenType$1.DOC_TYPE, start);\n          this._attemptUntilChar($GT);\n          this._advance();\n          this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n      };\n      _Tokenizer.prototype._consumePrefixAndName = function () {\n          var nameOrPrefixStart = this._index;\n          var prefix = null;\n          while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n              this._advance();\n          }\n          var nameStart;\n          if (this._peek === $COLON) {\n              this._advance();\n              prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n              nameStart = this._index;\n          }\n          else {\n              nameStart = nameOrPrefixStart;\n          }\n          this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n          var name = this._input.substring(nameStart, this._index);\n          return [prefix, name];\n      };\n      _Tokenizer.prototype._consumeTagOpen = function (start) {\n          var savedPos = this._savePosition();\n          var tagName;\n          var lowercaseTagName;\n          try {\n              if (!isAsciiLetter(this._peek)) {\n                  throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n              }\n              var nameStart = this._index;\n              this._consumeTagOpenStart(start);\n              tagName = this._input.substring(nameStart, this._index);\n              lowercaseTagName = tagName.toLowerCase();\n              this._attemptCharCodeUntilFn(isNotWhitespace);\n              while (this._peek !== $SLASH && this._peek !== $GT) {\n                  this._consumeAttributeName();\n                  this._attemptCharCodeUntilFn(isNotWhitespace);\n                  if (this._attemptCharCode($EQ)) {\n                      this._attemptCharCodeUntilFn(isNotWhitespace);\n                      this._consumeAttributeValue();\n                  }\n                  this._attemptCharCodeUntilFn(isNotWhitespace);\n              }\n              this._consumeTagOpenEnd();\n          }\n          catch (e) {\n              if (e instanceof _ControlFlowError) {\n                  // When the start tag is invalid, assume we want a \"<\"\n                  this._restorePosition(savedPos);\n                  // Back to back text tokens are merged at the end\n                  this._beginToken(TokenType$1.TEXT, start);\n                  this._endToken(['<']);\n                  return;\n              }\n              throw e;\n          }\n          var contentTokenType = this._getTagDefinition(tagName).contentType;\n          if (contentTokenType === TagContentType.RAW_TEXT) {\n              this._consumeRawTextWithTagClose(lowercaseTagName, false);\n          }\n          else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n              this._consumeRawTextWithTagClose(lowercaseTagName, true);\n          }\n      };\n      _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n          var _this = this;\n          var textToken = this._consumeRawText(decodeEntities, $LT, function () {\n              if (!_this._attemptCharCode($SLASH))\n                  return false;\n              _this._attemptCharCodeUntilFn(isNotWhitespace);\n              if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                  return false;\n              _this._attemptCharCodeUntilFn(isNotWhitespace);\n              return _this._attemptCharCode($GT);\n          });\n          this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n          this._endToken([null, lowercaseTagName]);\n      };\n      _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n          this._beginToken(TokenType$1.TAG_OPEN_START, start);\n          var parts = this._consumePrefixAndName();\n          this._endToken(parts);\n      };\n      _Tokenizer.prototype._consumeAttributeName = function () {\n          this._beginToken(TokenType$1.ATTR_NAME);\n          var prefixAndName = this._consumePrefixAndName();\n          this._endToken(prefixAndName);\n      };\n      _Tokenizer.prototype._consumeAttributeValue = function () {\n          this._beginToken(TokenType$1.ATTR_VALUE);\n          var value;\n          if (this._peek === $SQ || this._peek === $DQ) {\n              var quoteChar = this._peek;\n              this._advance();\n              var parts = [];\n              while (this._peek !== quoteChar) {\n                  parts.push(this._readChar(true));\n              }\n              value = parts.join('');\n              this._advance();\n          }\n          else {\n              var valueStart = this._index;\n              this._requireCharCodeUntilFn(isNameEnd, 1);\n              value = this._input.substring(valueStart, this._index);\n          }\n          this._endToken([this._processCarriageReturns(value)]);\n      };\n      _Tokenizer.prototype._consumeTagOpenEnd = function () {\n          var tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n          this._beginToken(tokenType);\n          this._requireCharCode($GT);\n          this._endToken([]);\n      };\n      _Tokenizer.prototype._consumeTagClose = function (start) {\n          this._beginToken(TokenType$1.TAG_CLOSE, start);\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          var prefixAndName = this._consumePrefixAndName();\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._requireCharCode($GT);\n          this._endToken(prefixAndName);\n      };\n      _Tokenizer.prototype._consumeExpansionFormStart = function () {\n          this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n          this._requireCharCode($LBRACE);\n          this._endToken([]);\n          this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n          this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n          var condition = this._readUntil($COMMA);\n          this._endToken([condition], this._getLocation());\n          this._requireCharCode($COMMA);\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n          var type = this._readUntil($COMMA);\n          this._endToken([type], this._getLocation());\n          this._requireCharCode($COMMA);\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n      };\n      _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n          this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n          var value = this._readUntil($LBRACE).trim();\n          this._endToken([value], this._getLocation());\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n          this._requireCharCode($LBRACE);\n          this._endToken([], this._getLocation());\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n      };\n      _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n          this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n          this._requireCharCode($RBRACE);\n          this._endToken([], this._getLocation());\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._expansionCaseStack.pop();\n      };\n      _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n          this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n          this._requireCharCode($RBRACE);\n          this._endToken([]);\n          this._expansionCaseStack.pop();\n      };\n      _Tokenizer.prototype._consumeText = function () {\n          var start = this._getLocation();\n          this._beginToken(TokenType$1.TEXT, start);\n          var parts = [];\n          do {\n              if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                  parts.push(this._interpolationConfig.start);\n                  this._inInterpolation = true;\n              }\n              else if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.end) &&\n                  this._inInterpolation) {\n                  parts.push(this._interpolationConfig.end);\n                  this._inInterpolation = false;\n              }\n              else {\n                  parts.push(this._readChar(true));\n              }\n          } while (!this._isTextEnd());\n          this._endToken([this._processCarriageReturns(parts.join(''))]);\n      };\n      _Tokenizer.prototype._isTextEnd = function () {\n          if (this._peek === $LT || this._peek === $EOF) {\n              return true;\n          }\n          if (this._tokenizeIcu && !this._inInterpolation) {\n              if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                  // start of an expansion form\n                  return true;\n              }\n              if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                  // end of and expansion case\n                  return true;\n              }\n          }\n          return false;\n      };\n      _Tokenizer.prototype._savePosition = function () {\n          return [this._peek, this._index, this._column, this._line, this.tokens.length];\n      };\n      _Tokenizer.prototype._readUntil = function (char) {\n          var start = this._index;\n          this._attemptUntilChar(char);\n          return this._input.substring(start, this._index);\n      };\n      _Tokenizer.prototype._restorePosition = function (position) {\n          this._peek = position[0];\n          this._index = position[1];\n          this._column = position[2];\n          this._line = position[3];\n          var nbTokens = position[4];\n          if (nbTokens < this.tokens.length) {\n              // remove any extra tokens\n              this.tokens = this.tokens.slice(0, nbTokens);\n          }\n      };\n      _Tokenizer.prototype._isInExpansionCase = function () {\n          return this._expansionCaseStack.length > 0 &&\n              this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                  TokenType$1.EXPANSION_CASE_EXP_START;\n      };\n      _Tokenizer.prototype._isInExpansionForm = function () {\n          return this._expansionCaseStack.length > 0 &&\n              this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                  TokenType$1.EXPANSION_FORM_START;\n      };\n      return _Tokenizer;\n  }());\n  function isNotWhitespace(code) {\n      return !isWhitespace(code) || code === $EOF;\n  }\n  function isNameEnd(code) {\n      return isWhitespace(code) || code === $GT || code === $SLASH ||\n          code === $SQ || code === $DQ || code === $EQ;\n  }\n  function isPrefixEnd(code) {\n      return (code < $a || $z < code) && (code < $A || $Z < code) &&\n          (code < $0 || code > $9);\n  }\n  function isDigitEntityEnd(code) {\n      return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n  }\n  function isNamedEntityEnd(code) {\n      return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n  }\n  function isExpansionFormStart(input, offset, interpolationConfig) {\n      var isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n      return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n  }\n  function isExpansionCaseStart(peek) {\n      return peek === $EQ || isAsciiLetter(peek);\n  }\n  function compareCharCodeCaseInsensitive(code1, code2) {\n      return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n  }\n  function toUpperCaseCharCode(code) {\n      return code >= $a && code <= $z ? code - $a + $A : code;\n  }\n  function mergeTextTokens(srcTokens) {\n      var dstTokens = [];\n      var lastDstToken;\n      for (var i = 0; i < srcTokens.length; i++) {\n          var token = srcTokens[i];\n          if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n              lastDstToken.parts[0] += token.parts[0];\n              lastDstToken.sourceSpan.end = token.sourceSpan.end;\n          }\n          else {\n              lastDstToken = token;\n              dstTokens.push(lastDstToken);\n          }\n      }\n      return dstTokens;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$2 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var TreeError = (function (_super) {\n      __extends$2(TreeError, _super);\n      function TreeError(elementName, span, msg) {\n          _super.call(this, span, msg);\n          this.elementName = elementName;\n      }\n      TreeError.create = function (elementName, span, msg) {\n          return new TreeError(elementName, span, msg);\n      };\n      return TreeError;\n  }(ParseError));\n  var ParseTreeResult = (function () {\n      function ParseTreeResult(rootNodes, errors) {\n          this.rootNodes = rootNodes;\n          this.errors = errors;\n      }\n      return ParseTreeResult;\n  }());\n  var Parser$1 = (function () {\n      function Parser(getTagDefinition) {\n          this.getTagDefinition = getTagDefinition;\n      }\n      Parser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n          var treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n          return new ParseTreeResult(treeAndErrors.rootNodes, tokensAndErrors.errors.concat(treeAndErrors.errors));\n      };\n      return Parser;\n  }());\n  var _TreeBuilder = (function () {\n      function _TreeBuilder(tokens, getTagDefinition) {\n          this.tokens = tokens;\n          this.getTagDefinition = getTagDefinition;\n          this._index = -1;\n          this._rootNodes = [];\n          this._errors = [];\n          this._elementStack = [];\n          this._advance();\n      }\n      _TreeBuilder.prototype.build = function () {\n          while (this._peek.type !== TokenType$1.EOF) {\n              if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                  this._consumeStartTag(this._advance());\n              }\n              else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                  this._consumeEndTag(this._advance());\n              }\n              else if (this._peek.type === TokenType$1.CDATA_START) {\n                  this._closeVoidElement();\n                  this._consumeCdata(this._advance());\n              }\n              else if (this._peek.type === TokenType$1.COMMENT_START) {\n                  this._closeVoidElement();\n                  this._consumeComment(this._advance());\n              }\n              else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                  this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                  this._closeVoidElement();\n                  this._consumeText(this._advance());\n              }\n              else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                  this._consumeExpansion(this._advance());\n              }\n              else {\n                  // Skip all other tokens...\n                  this._advance();\n              }\n          }\n          return new ParseTreeResult(this._rootNodes, this._errors);\n      };\n      _TreeBuilder.prototype._advance = function () {\n          var prev = this._peek;\n          if (this._index < this.tokens.length - 1) {\n              // Note: there is always an EOF token at the end\n              this._index++;\n          }\n          this._peek = this.tokens[this._index];\n          return prev;\n      };\n      _TreeBuilder.prototype._advanceIf = function (type) {\n          if (this._peek.type === type) {\n              return this._advance();\n          }\n          return null;\n      };\n      _TreeBuilder.prototype._consumeCdata = function (startToken) {\n          this._consumeText(this._advance());\n          this._advanceIf(TokenType$1.CDATA_END);\n      };\n      _TreeBuilder.prototype._consumeComment = function (token) {\n          var text = this._advanceIf(TokenType$1.RAW_TEXT);\n          this._advanceIf(TokenType$1.COMMENT_END);\n          var value = isPresent(text) ? text.parts[0].trim() : null;\n          this._addToParent(new Comment(value, token.sourceSpan));\n      };\n      _TreeBuilder.prototype._consumeExpansion = function (token) {\n          var switchValue = this._advance();\n          var type = this._advance();\n          var cases = [];\n          // read =\n          while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n              var expCase = this._parseExpansionCase();\n              if (!expCase)\n                  return; // error\n              cases.push(expCase);\n          }\n          // read the final }\n          if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n              this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n              return;\n          }\n          var sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n          this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n          this._advance();\n      };\n      _TreeBuilder.prototype._parseExpansionCase = function () {\n          var value = this._advance();\n          // read {\n          if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n              this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n              return null;\n          }\n          // read until }\n          var start = this._advance();\n          var exp = this._collectExpansionExpTokens(start);\n          if (!exp)\n              return null;\n          var end = this._advance();\n          exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n          // parse everything in between { and }\n          var parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n          if (parsedExp.errors.length > 0) {\n              this._errors = this._errors.concat(parsedExp.errors);\n              return null;\n          }\n          var sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n          var expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n          return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n      };\n      _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n          var exp = [];\n          var expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n          while (true) {\n              if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                  this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                  expansionFormStack.push(this._peek.type);\n              }\n              if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                  if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                      expansionFormStack.pop();\n                      if (expansionFormStack.length == 0)\n                          return exp;\n                  }\n                  else {\n                      this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                      return null;\n                  }\n              }\n              if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                  if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                      expansionFormStack.pop();\n                  }\n                  else {\n                      this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                      return null;\n                  }\n              }\n              if (this._peek.type === TokenType$1.EOF) {\n                  this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                  return null;\n              }\n              exp.push(this._advance());\n          }\n      };\n      _TreeBuilder.prototype._consumeText = function (token) {\n          var text = token.parts[0];\n          if (text.length > 0 && text[0] == '\\n') {\n              var parent_1 = this._getParentElement();\n              if (isPresent(parent_1) && parent_1.children.length == 0 &&\n                  this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                  text = text.substring(1);\n              }\n          }\n          if (text.length > 0) {\n              this._addToParent(new Text(text, token.sourceSpan));\n          }\n      };\n      _TreeBuilder.prototype._closeVoidElement = function () {\n          if (this._elementStack.length > 0) {\n              var el = this._elementStack[this._elementStack.length - 1];\n              if (this.getTagDefinition(el.name).isVoid) {\n                  this._elementStack.pop();\n              }\n          }\n      };\n      _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n          var prefix = startTagToken.parts[0];\n          var name = startTagToken.parts[1];\n          var attrs = [];\n          while (this._peek.type === TokenType$1.ATTR_NAME) {\n              attrs.push(this._consumeAttr(this._advance()));\n          }\n          var fullName = this._getElementFullName(prefix, name, this._getParentElement());\n          var selfClosing = false;\n          // Note: There could have been a tokenizer error\n          // so that we don't get a token for the end tag...\n          if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n              this._advance();\n              selfClosing = true;\n              var tagDef = this.getTagDefinition(fullName);\n              if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                  this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n              }\n          }\n          else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n              this._advance();\n              selfClosing = false;\n          }\n          var end = this._peek.sourceSpan.start;\n          var span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n          var el = new Element(fullName, attrs, [], span, span, null);\n          this._pushElement(el);\n          if (selfClosing) {\n              this._popElement(fullName);\n              el.endSourceSpan = span;\n          }\n      };\n      _TreeBuilder.prototype._pushElement = function (el) {\n          if (this._elementStack.length > 0) {\n              var parentEl = this._elementStack[this._elementStack.length - 1];\n              if (this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n                  this._elementStack.pop();\n              }\n          }\n          var tagDef = this.getTagDefinition(el.name);\n          var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n          if (isPresent(parent) && tagDef.requireExtraParent(parent.name)) {\n              var newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n              this._insertBeforeContainer(parent, container, newParent);\n          }\n          this._addToParent(el);\n          this._elementStack.push(el);\n      };\n      _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n          var fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n          if (this._getParentElement()) {\n              this._getParentElement().endSourceSpan = endTagToken.sourceSpan;\n          }\n          if (this.getTagDefinition(fullName).isVoid) {\n              this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n          }\n          else if (!this._popElement(fullName)) {\n              this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Unexpected closing tag \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n          }\n      };\n      _TreeBuilder.prototype._popElement = function (fullName) {\n          for (var stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n              var el = this._elementStack[stackIndex];\n              if (el.name == fullName) {\n                  this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                  return true;\n              }\n              if (!this.getTagDefinition(el.name).closedByParent) {\n                  return false;\n              }\n          }\n          return false;\n      };\n      _TreeBuilder.prototype._consumeAttr = function (attrName) {\n          var fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n          var end = attrName.sourceSpan.end;\n          var value = '';\n          var valueSpan;\n          if (this._peek.type === TokenType$1.ATTR_VALUE) {\n              var valueToken = this._advance();\n              value = valueToken.parts[0];\n              end = valueToken.sourceSpan.end;\n              valueSpan = valueToken.sourceSpan;\n          }\n          return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n      };\n      _TreeBuilder.prototype._getParentElement = function () {\n          return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n      };\n      /**\n       * Returns the parent in the DOM and the container.\n       *\n       * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n       */\n      _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n          var container = null;\n          for (var i = this._elementStack.length - 1; i >= 0; i--) {\n              if (this._elementStack[i].name !== 'ng-container') {\n                  return { parent: this._elementStack[i], container: container };\n              }\n              container = this._elementStack[i];\n          }\n          return { parent: this._elementStack[this._elementStack.length - 1], container: container };\n      };\n      _TreeBuilder.prototype._addToParent = function (node) {\n          var parent = this._getParentElement();\n          if (isPresent(parent)) {\n              parent.children.push(node);\n          }\n          else {\n              this._rootNodes.push(node);\n          }\n      };\n      /**\n       * Insert a node between the parent and the container.\n       * When no container is given, the node is appended as a child of the parent.\n       * Also updates the element stack accordingly.\n       *\n       * @internal\n       */\n      _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n          if (!container) {\n              this._addToParent(node);\n              this._elementStack.push(node);\n          }\n          else {\n              if (parent) {\n                  // replace the container with the new node in the children\n                  var index = parent.children.indexOf(container);\n                  parent.children[index] = node;\n              }\n              else {\n                  this._rootNodes.push(node);\n              }\n              node.children.push(container);\n              this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n          }\n      };\n      _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n          if (isBlank(prefix)) {\n              prefix = this.getTagDefinition(localName).implicitNamespacePrefix;\n              if (isBlank(prefix) && isPresent(parentElement)) {\n                  prefix = getNsPrefix(parentElement.name);\n              }\n          }\n          return mergeNsAndName(prefix, localName);\n      };\n      return _TreeBuilder;\n  }());\n  function lastOnStack(stack, element) {\n      return stack.length > 0 && stack[stack.length - 1] === element;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  function digestMessage(message) {\n      return sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n  }\n  /**\n   * Serialize the i18n ast to something xml-like in order to generate an UID.\n   *\n   * The visitor is also used in the i18n parser tests\n   *\n   * @internal\n   */\n  var _SerializerVisitor = (function () {\n      function _SerializerVisitor() {\n      }\n      _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n      _SerializerVisitor.prototype.visitContainer = function (container, context) {\n          var _this = this;\n          return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n      };\n      _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n          var _this = this;\n          var strCases = Object.keys(icu.cases).map(function (k) { return (k + \" {\" + icu.cases[k].visit(_this) + \"}\"); });\n          return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n      };\n      _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n          var _this = this;\n          return ph.isVoid ?\n              \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n              \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n      };\n      _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n          return \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\";\n      };\n      _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n          return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n      };\n      return _SerializerVisitor;\n  }());\n  var serializerVisitor = new _SerializerVisitor();\n  function serializeNodes(nodes) {\n      return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n  }\n  /**\n   * Compute the SHA1 of the given string\n   *\n   * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n   *\n   * WARNING: this function has not been designed not tested with security in mind.\n   *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n   */\n  function sha1(str) {\n      var utf8 = utf8Encode(str);\n      var words32 = stringToWords32(utf8);\n      var len = utf8.length * 8;\n      var w = new Array(80);\n      var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n      words32[len >> 5] |= 0x80 << (24 - len % 32);\n      words32[((len + 64 >> 9) << 4) + 15] = len;\n      for (var i = 0; i < words32.length; i += 16) {\n          var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n          for (var j = 0; j < 80; j++) {\n              if (j < 16) {\n                  w[j] = words32[i + j];\n              }\n              else {\n                  w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n              }\n              var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n              var temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n              _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n          }\n          _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n      }\n      var sha1 = words32ToString([a, b, c, d, e]);\n      var hex = '';\n      for (var i = 0; i < sha1.length; i++) {\n          var b_1 = sha1.charCodeAt(i);\n          hex += (b_1 >>> 4 & 0x0f).toString(16) + (b_1 & 0x0f).toString(16);\n      }\n      return hex.toLowerCase();\n      var _d, _e;\n  }\n  function utf8Encode(str) {\n      var encoded = '';\n      for (var index = 0; index < str.length; index++) {\n          var codePoint = decodeSurrogatePairs(str, index);\n          if (codePoint <= 0x7f) {\n              encoded += String.fromCharCode(codePoint);\n          }\n          else if (codePoint <= 0x7ff) {\n              encoded += String.fromCharCode(0xc0 | codePoint >>> 6, 0x80 | codePoint & 0x3f);\n          }\n          else if (codePoint <= 0xffff) {\n              encoded += String.fromCharCode(0xe0 | codePoint >>> 12, 0x80 | codePoint >>> 6 & 0x3f, 0x80 | codePoint & 0x3f);\n          }\n          else if (codePoint <= 0x1fffff) {\n              encoded += String.fromCharCode(0xf0 | codePoint >>> 18, 0x80 | codePoint >>> 12 & 0x3f, 0x80 | codePoint >>> 6 & 0x3f, 0x80 | codePoint & 0x3f);\n          }\n      }\n      return encoded;\n  }\n  // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n  function decodeSurrogatePairs(str, index) {\n      if (index < 0 || index >= str.length) {\n          throw new Error(\"index=\" + index + \" is out of range in \\\"\" + str + \"\\\"\");\n      }\n      var high = str.charCodeAt(index);\n      var low;\n      if (high >= 0xd800 && high <= 0xdfff && str.length > index + 1) {\n          low = str.charCodeAt(index + 1);\n          if (low >= 0xdc00 && low <= 0xdfff) {\n              return (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;\n          }\n      }\n      return high;\n  }\n  function stringToWords32(str) {\n      var words32 = Array(str.length >>> 2);\n      for (var i = 0; i < words32.length; i++) {\n          words32[i] = 0;\n      }\n      for (var i = 0; i < str.length; i++) {\n          words32[i >>> 2] |= (str.charCodeAt(i) & 0xff) << 8 * (3 - i & 0x3);\n      }\n      return words32;\n  }\n  function words32ToString(words32) {\n      var str = '';\n      for (var i = 0; i < words32.length * 4; i++) {\n          str += String.fromCharCode((words32[i >>> 2] >>> 8 * (3 - i & 0x3)) & 0xff);\n      }\n      return str;\n  }\n  function fk(index, b, c, d) {\n      if (index < 20) {\n          return [(b & c) | (~b & d), 0x5a827999];\n      }\n      if (index < 40) {\n          return [b ^ c ^ d, 0x6ed9eba1];\n      }\n      if (index < 60) {\n          return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n      }\n      return [b ^ c ^ d, 0xca62c1d6];\n  }\n  function add32(a, b) {\n      var low = (a & 0xffff) + (b & 0xffff);\n      var high = (a >> 16) + (b >> 16) + (low >> 16);\n      return (high << 16) | (low & 0xffff);\n  }\n  function rol32(a, count) {\n      return (a << count) | (a >>> (32 - count));\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var Message = (function () {\n      /**\n       * @param nodes message AST\n       * @param placeholders maps placeholder names to static content\n       * @param placeholderToMsgIds maps placeholder names to translatable message IDs (used for ICU\n       *                            messages)\n       * @param meaning\n       * @param description\n       */\n      function Message(nodes, placeholders, placeholderToMsgIds, meaning, description) {\n          this.nodes = nodes;\n          this.placeholders = placeholders;\n          this.placeholderToMsgIds = placeholderToMsgIds;\n          this.meaning = meaning;\n          this.description = description;\n      }\n      return Message;\n  }());\n  var Text$1 = (function () {\n      function Text(value, sourceSpan) {\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n      return Text;\n  }());\n  var Container = (function () {\n      function Container(children, sourceSpan) {\n          this.children = children;\n          this.sourceSpan = sourceSpan;\n      }\n      Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n      return Container;\n  }());\n  var Icu = (function () {\n      function Icu(expression, type, cases, sourceSpan) {\n          this.expression = expression;\n          this.type = type;\n          this.cases = cases;\n          this.sourceSpan = sourceSpan;\n      }\n      Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n      return Icu;\n  }());\n  var TagPlaceholder = (function () {\n      function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n          this.tag = tag;\n          this.attrs = attrs;\n          this.startName = startName;\n          this.closeName = closeName;\n          this.children = children;\n          this.isVoid = isVoid;\n          this.sourceSpan = sourceSpan;\n      }\n      TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n      return TagPlaceholder;\n  }());\n  var Placeholder = (function () {\n      function Placeholder(value, name, sourceSpan) {\n          if (name === void 0) { name = ''; }\n          this.value = value;\n          this.name = name;\n          this.sourceSpan = sourceSpan;\n      }\n      Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n      return Placeholder;\n  }());\n  var IcuPlaceholder = (function () {\n      function IcuPlaceholder(value, name, sourceSpan) {\n          if (name === void 0) { name = ''; }\n          this.value = value;\n          this.name = name;\n          this.sourceSpan = sourceSpan;\n      }\n      IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n      return IcuPlaceholder;\n  }());\n\n  var HtmlTagDefinition = (function () {\n      function HtmlTagDefinition(_a) {\n          var _this = this;\n          var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n          this.closedByChildren = {};\n          this.closedByParent = false;\n          this.canSelfClose = false;\n          if (closedByChildren && closedByChildren.length > 0) {\n              closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n          }\n          this.isVoid = isVoid;\n          this.closedByParent = closedByParent || isVoid;\n          if (requiredParents && requiredParents.length > 0) {\n              this.requiredParents = {};\n              // The first parent is the list is automatically when none of the listed parents are present\n              this.parentToAdd = requiredParents[0];\n              requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n          }\n          this.implicitNamespacePrefix = implicitNamespacePrefix;\n          this.contentType = contentType;\n          this.ignoreFirstLf = ignoreFirstLf;\n      }\n      HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n          if (!this.requiredParents) {\n              return false;\n          }\n          if (!currentParent) {\n              return true;\n          }\n          var lcParent = currentParent.toLowerCase();\n          return this.requiredParents[lcParent] != true && lcParent != 'template';\n      };\n      HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n          return this.isVoid || name.toLowerCase() in this.closedByChildren;\n      };\n      return HtmlTagDefinition;\n  }());\n  // see http://www.w3.org/TR/html51/syntax.html#optional-tags\n  // This implementation does not fully conform to the HTML5 spec.\n  var TAG_DEFINITIONS = {\n      'base': new HtmlTagDefinition({ isVoid: true }),\n      'meta': new HtmlTagDefinition({ isVoid: true }),\n      'area': new HtmlTagDefinition({ isVoid: true }),\n      'embed': new HtmlTagDefinition({ isVoid: true }),\n      'link': new HtmlTagDefinition({ isVoid: true }),\n      'img': new HtmlTagDefinition({ isVoid: true }),\n      'input': new HtmlTagDefinition({ isVoid: true }),\n      'param': new HtmlTagDefinition({ isVoid: true }),\n      'hr': new HtmlTagDefinition({ isVoid: true }),\n      'br': new HtmlTagDefinition({ isVoid: true }),\n      'source': new HtmlTagDefinition({ isVoid: true }),\n      'track': new HtmlTagDefinition({ isVoid: true }),\n      'wbr': new HtmlTagDefinition({ isVoid: true }),\n      'p': new HtmlTagDefinition({\n          closedByChildren: [\n              'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n              'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n              'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n          ],\n          closedByParent: true\n      }),\n      'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n      'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n      'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n      'tr': new HtmlTagDefinition({\n          closedByChildren: ['tr'],\n          requiredParents: ['tbody', 'tfoot', 'thead'],\n          closedByParent: true\n      }),\n      'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n      'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n      'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n      'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n      'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n      'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n      'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n      'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n      'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n      'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n      'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n      'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n      'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n      'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n      'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n      'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n      'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n      'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n      'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n      'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n  };\n  var _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n  function getHtmlTagDefinition(tagName) {\n      return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var TAG_TO_PLACEHOLDER_NAMES = {\n      'A': 'LINK',\n      'B': 'BOLD_TEXT',\n      'BR': 'LINE_BREAK',\n      'EM': 'EMPHASISED_TEXT',\n      'H1': 'HEADING_LEVEL1',\n      'H2': 'HEADING_LEVEL2',\n      'H3': 'HEADING_LEVEL3',\n      'H4': 'HEADING_LEVEL4',\n      'H5': 'HEADING_LEVEL5',\n      'H6': 'HEADING_LEVEL6',\n      'HR': 'HORIZONTAL_RULE',\n      'I': 'ITALIC_TEXT',\n      'LI': 'LIST_ITEM',\n      'LINK': 'MEDIA_LINK',\n      'OL': 'ORDERED_LIST',\n      'P': 'PARAGRAPH',\n      'Q': 'QUOTATION',\n      'S': 'STRIKETHROUGH_TEXT',\n      'SMALL': 'SMALL_TEXT',\n      'SUB': 'SUBSTRIPT',\n      'SUP': 'SUPERSCRIPT',\n      'TBODY': 'TABLE_BODY',\n      'TD': 'TABLE_CELL',\n      'TFOOT': 'TABLE_FOOTER',\n      'TH': 'TABLE_HEADER_CELL',\n      'THEAD': 'TABLE_HEADER',\n      'TR': 'TABLE_ROW',\n      'TT': 'MONOSPACED_TEXT',\n      'U': 'UNDERLINED_TEXT',\n      'UL': 'UNORDERED_LIST',\n  };\n  /**\n   * Creates unique names for placeholder with different content\n   *\n   * @internal\n   */\n  var PlaceholderRegistry = (function () {\n      function PlaceholderRegistry() {\n          // Count the occurrence of the base name top generate a unique name\n          this._placeHolderNameCounts = {};\n          // Maps signature to placeholder names\n          this._signatureToName = {};\n      }\n      PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n          var signature = this._hashTag(tag, attrs, isVoid);\n          if (this._signatureToName[signature]) {\n              return this._signatureToName[signature];\n          }\n          var upperTag = tag.toUpperCase();\n          var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n          var name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n          this._signatureToName[signature] = name;\n          return name;\n      };\n      PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n          var signature = this._hashClosingTag(tag);\n          if (this._signatureToName[signature]) {\n              return this._signatureToName[signature];\n          }\n          var upperTag = tag.toUpperCase();\n          var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n          var name = this._generateUniqueName(\"CLOSE_\" + baseName);\n          this._signatureToName[signature] = name;\n          return name;\n      };\n      PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n          var upperName = name.toUpperCase();\n          var signature = \"PH: \" + upperName + \"=\" + content;\n          if (this._signatureToName[signature]) {\n              return this._signatureToName[signature];\n          }\n          var uniqueName = this._generateUniqueName(upperName);\n          this._signatureToName[signature] = uniqueName;\n          return uniqueName;\n      };\n      // Generate a hash for a tag - does not take attribute order into account\n      PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n          var start = \"<\" + tag;\n          var strAttrs = Object.keys(attrs).sort().map(function (name) { return (\" \" + name + \"=\" + attrs[name]); }).join('');\n          var end = isVoid ? '/>' : \"></\" + tag + \">\";\n          return start + strAttrs + end;\n      };\n      PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n      PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n          var name = base;\n          var next = this._placeHolderNameCounts[name];\n          if (!next) {\n              next = 1;\n          }\n          else {\n              name += \"_\" + next;\n              next++;\n          }\n          this._placeHolderNameCounts[base] = next;\n          return name;\n      };\n      return PlaceholderRegistry;\n  }());\n\n  var _expParser = new Parser(new Lexer());\n  /**\n   * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n   */\n  function createI18nMessageFactory(interpolationConfig) {\n      var visitor = new _I18nVisitor(_expParser, interpolationConfig);\n      return function (nodes, meaning, description) {\n          return visitor.toI18nMessage(nodes, meaning, description);\n      };\n  }\n  var _I18nVisitor = (function () {\n      function _I18nVisitor(_expressionParser, _interpolationConfig) {\n          this._expressionParser = _expressionParser;\n          this._interpolationConfig = _interpolationConfig;\n      }\n      _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description) {\n          this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n          this._icuDepth = 0;\n          this._placeholderRegistry = new PlaceholderRegistry();\n          this._placeholderToContent = {};\n          this._placeholderToIds = {};\n          var i18nodes = visitAll(this, nodes, {});\n          return new Message(i18nodes, this._placeholderToContent, this._placeholderToIds, meaning, description);\n      };\n      _I18nVisitor.prototype.visitElement = function (el, context) {\n          var children = visitAll(this, el.children);\n          var attrs = {};\n          el.attrs.forEach(function (attr) {\n              // Do not visit the attributes, translatable ones are top-level ASTs\n              attrs[attr.name] = attr.value;\n          });\n          var isVoid = getHtmlTagDefinition(el.name).isVoid;\n          var startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n          this._placeholderToContent[startPhName] = el.sourceSpan.toString();\n          var closePhName = '';\n          if (!isVoid) {\n              closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n              this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n          }\n          return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, el.sourceSpan);\n      };\n      _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n          return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n      };\n      _I18nVisitor.prototype.visitText = function (text, context) {\n          return this._visitTextWithInterpolation(text.value, text.sourceSpan);\n      };\n      _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n      _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n          var _this = this;\n          this._icuDepth++;\n          var i18nIcuCases = {};\n          var i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n          icu.cases.forEach(function (caze) {\n              i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n          });\n          this._icuDepth--;\n          if (this._isIcu || this._icuDepth > 0) {\n              // If the message (vs a part of the message) is an ICU message returns it\n              return i18nIcu;\n          }\n          // Else returns a placeholder\n          // ICU placeholders should not be replaced with their original content but with the their\n          // translations. We need to create a new visitor (they are not re-entrant) to compute the\n          // message id.\n          // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n          var phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n          var visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n          this._placeholderToIds[phName] = digestMessage(visitor.toI18nMessage([icu], '', ''));\n          return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n      };\n      _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n          throw new Error('Unreachable code');\n      };\n      _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n          var splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n          if (!splitInterpolation) {\n              // No expression, return a single text\n              return new Text$1(text, sourceSpan);\n          }\n          // Return a group of text + expressions\n          var nodes = [];\n          var container = new Container(nodes, sourceSpan);\n          var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n          for (var i = 0; i < splitInterpolation.strings.length - 1; i++) {\n              var expression = splitInterpolation.expressions[i];\n              var baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n              var phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n              if (splitInterpolation.strings[i].length) {\n                  // No need to add empty strings\n                  nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n              }\n              nodes.push(new Placeholder(expression, phName, sourceSpan));\n              this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n          }\n          // The last index contains no expression\n          var lastStringIdx = splitInterpolation.strings.length - 1;\n          if (splitInterpolation.strings[lastStringIdx].length) {\n              nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n          }\n          return container;\n      };\n      return _I18nVisitor;\n  }());\n  var _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*\"([\\s\\S]*?)\"[\\s\\S]*\\)/g;\n  function _extractPlaceholderName(input) {\n      return input.split(_CUSTOM_PH_EXP)[1];\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$4 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  /**\n   * An i18n error.\n   */\n  var I18nError = (function (_super) {\n      __extends$4(I18nError, _super);\n      function I18nError(span, msg) {\n          _super.call(this, span, msg);\n      }\n      return I18nError;\n  }(ParseError));\n\n  var _I18N_ATTR = 'i18n';\n  var _I18N_ATTR_PREFIX = 'i18n-';\n  var _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\n  /**\n   * Extract translatable messages from an html AST\n   */\n  function extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n      var visitor = new _Visitor(implicitTags, implicitAttrs);\n      return visitor.extract(nodes, interpolationConfig);\n  }\n  function mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n      var visitor = new _Visitor(implicitTags, implicitAttrs);\n      return visitor.merge(nodes, translations, interpolationConfig);\n  }\n  var ExtractionResult = (function () {\n      function ExtractionResult(messages, errors) {\n          this.messages = messages;\n          this.errors = errors;\n      }\n      return ExtractionResult;\n  }());\n  var _VisitorMode;\n  (function (_VisitorMode) {\n      _VisitorMode[_VisitorMode[\"Extract\"] = 0] = \"Extract\";\n      _VisitorMode[_VisitorMode[\"Merge\"] = 1] = \"Merge\";\n  })(_VisitorMode || (_VisitorMode = {}));\n  /**\n   * This Visitor is used:\n   * 1. to extract all the translatable strings from an html AST (see `extract()`),\n   * 2. to replace the translatable strings with the actual translations (see `merge()`)\n   *\n   * @internal\n   */\n  var _Visitor = (function () {\n      function _Visitor(_implicitTags, _implicitAttrs) {\n          this._implicitTags = _implicitTags;\n          this._implicitAttrs = _implicitAttrs;\n      }\n      /**\n       * Extracts the messages from the tree\n       */\n      _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n          var _this = this;\n          this._init(_VisitorMode.Extract, interpolationConfig);\n          nodes.forEach(function (node) { return node.visit(_this, null); });\n          if (this._inI18nBlock) {\n              this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n          }\n          return new ExtractionResult(this._messages, this._errors);\n      };\n      /**\n       * Returns a tree where all translatable nodes are translated\n       */\n      _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n          this._init(_VisitorMode.Merge, interpolationConfig);\n          this._translations = translations;\n          // Construct a single fake root element\n          var wrapper = new Element('wrapper', [], nodes, null, null, null);\n          var translatedNode = wrapper.visit(this, null);\n          if (this._inI18nBlock) {\n              this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n          }\n          return new ParseTreeResult(translatedNode.children, this._errors);\n      };\n      _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n          // Parse cases for translatable html attributes\n          var expression = visitAll(this, icuCase.expression, context);\n          if (this._mode === _VisitorMode.Merge) {\n              return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n          }\n      };\n      _Visitor.prototype.visitExpansion = function (icu, context) {\n          this._mayBeAddBlockChildren(icu);\n          var wasInIcu = this._inIcu;\n          if (!this._inIcu) {\n              // nested ICU messages should not be extracted but top-level translated as a whole\n              if (this._isInTranslatableSection) {\n                  this._addMessage([icu]);\n              }\n              this._inIcu = true;\n          }\n          var cases = visitAll(this, icu.cases, context);\n          if (this._mode === _VisitorMode.Merge) {\n              icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n          }\n          this._inIcu = wasInIcu;\n          return icu;\n      };\n      _Visitor.prototype.visitComment = function (comment, context) {\n          var isOpening = _isOpeningComment(comment);\n          if (isOpening && this._isInTranslatableSection) {\n              this._reportError(comment, 'Could not start a block inside a translatable section');\n              return;\n          }\n          var isClosing = _isClosingComment(comment);\n          if (isClosing && !this._inI18nBlock) {\n              this._reportError(comment, 'Trying to close an unopened block');\n              return;\n          }\n          if (!this._inI18nNode && !this._inIcu) {\n              if (!this._inI18nBlock) {\n                  if (isOpening) {\n                      this._inI18nBlock = true;\n                      this._blockStartDepth = this._depth;\n                      this._blockChildren = [];\n                      this._blockMeaningAndDesc = comment.value.replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                      this._openTranslatableSection(comment);\n                  }\n              }\n              else {\n                  if (isClosing) {\n                      if (this._depth == this._blockStartDepth) {\n                          this._closeTranslatableSection(comment, this._blockChildren);\n                          this._inI18nBlock = false;\n                          var message = this._addMessage(this._blockChildren, this._blockMeaningAndDesc);\n                          // merge attributes in sections\n                          var nodes = this._translateMessage(comment, message);\n                          return visitAll(this, nodes);\n                      }\n                      else {\n                          this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                          return;\n                      }\n                  }\n              }\n          }\n      };\n      _Visitor.prototype.visitText = function (text, context) {\n          if (this._isInTranslatableSection) {\n              this._mayBeAddBlockChildren(text);\n          }\n          return text;\n      };\n      _Visitor.prototype.visitElement = function (el, context) {\n          var _this = this;\n          this._mayBeAddBlockChildren(el);\n          this._depth++;\n          var wasInI18nNode = this._inI18nNode;\n          var wasInImplicitNode = this._inImplicitNode;\n          var childNodes;\n          // Extract only top level nodes with the (implicit) \"i18n\" attribute if not in a block or an ICU\n          // message\n          var i18nAttr = _getI18nAttr(el);\n          var isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) &&\n              !this._inIcu && !this._isInTranslatableSection;\n          var isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n          this._inImplicitNode = this._inImplicitNode || isImplicit;\n          if (!this._isInTranslatableSection && !this._inIcu) {\n              if (i18nAttr) {\n                  // explicit translation\n                  this._inI18nNode = true;\n                  var message = this._addMessage(el.children, i18nAttr.value);\n                  childNodes = this._translateMessage(el, message);\n              }\n              else if (isTopLevelImplicit) {\n                  // implicit translation\n                  this._inI18nNode = true;\n                  var message = this._addMessage(el.children);\n                  childNodes = this._translateMessage(el, message);\n              }\n              if (this._mode == _VisitorMode.Extract) {\n                  var isTranslatable = i18nAttr || isTopLevelImplicit;\n                  if (isTranslatable) {\n                      this._openTranslatableSection(el);\n                  }\n                  visitAll(this, el.children);\n                  if (isTranslatable) {\n                      this._closeTranslatableSection(el, el.children);\n                  }\n              }\n              if (this._mode === _VisitorMode.Merge && !i18nAttr && !isTopLevelImplicit) {\n                  childNodes = [];\n                  el.children.forEach(function (child) {\n                      var visited = child.visit(_this, context);\n                      if (visited && !_this._isInTranslatableSection) {\n                          // Do not add the children from translatable sections (= i18n blocks here)\n                          // They will be added when the section is close (i.e. on `<!-- /i18n -->`)\n                          childNodes = childNodes.concat(visited);\n                      }\n                  });\n              }\n          }\n          else {\n              if (i18nAttr || isTopLevelImplicit) {\n                  this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n              }\n              if (this._mode == _VisitorMode.Extract) {\n                  // Descend into child nodes for extraction\n                  visitAll(this, el.children);\n              }\n              if (this._mode == _VisitorMode.Merge) {\n                  // Translate attributes in ICU messages\n                  childNodes = [];\n                  el.children.forEach(function (child) {\n                      var visited = child.visit(_this, context);\n                      if (visited && !_this._isInTranslatableSection) {\n                          // Do not add the children from translatable sections (= i18n blocks here)\n                          // They will be added when the section is close (i.e. on `<!-- /i18n -->`)\n                          childNodes = childNodes.concat(visited);\n                      }\n                  });\n              }\n          }\n          this._visitAttributesOf(el);\n          this._depth--;\n          this._inI18nNode = wasInI18nNode;\n          this._inImplicitNode = wasInImplicitNode;\n          if (this._mode === _VisitorMode.Merge) {\n              // There are no childNodes in translatable sections - those nodes will be replace anyway\n              var translatedAttrs = this._translateAttributes(el);\n              return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n          }\n      };\n      _Visitor.prototype.visitAttribute = function (attribute, context) {\n          throw new Error('unreachable code');\n      };\n      _Visitor.prototype._init = function (mode, interpolationConfig) {\n          this._mode = mode;\n          this._inI18nBlock = false;\n          this._inI18nNode = false;\n          this._depth = 0;\n          this._inIcu = false;\n          this._msgCountAtSectionStart = void 0;\n          this._errors = [];\n          this._messages = [];\n          this._inImplicitNode = false;\n          this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n      };\n      // looks for translatable attributes\n      _Visitor.prototype._visitAttributesOf = function (el) {\n          var _this = this;\n          var explicitAttrNameToValue = {};\n          var implicitAttrNames = this._implicitAttrs[el.name] || [];\n          el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n              .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n              attr.value; });\n          el.attrs.forEach(function (attr) {\n              if (attr.name in explicitAttrNameToValue) {\n                  _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n              }\n              else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                  _this._addMessage([attr]);\n              }\n          });\n      };\n      // add a translatable message\n      _Visitor.prototype._addMessage = function (ast, meaningAndDesc) {\n          if (ast.length == 0 ||\n              ast.length == 1 && ast[0] instanceof Attribute$1 && !ast[0].value) {\n              // Do not create empty messages\n              return;\n          }\n          var _a = _splitMeaningAndDesc(meaningAndDesc), meaning = _a[0], description = _a[1];\n          var message = this._createI18nMessage(ast, meaning, description);\n          this._messages.push(message);\n          return message;\n      };\n      // Translates the given message given the `TranslationBundle`\n      // no-op when called in extraction mode (returns [])\n      _Visitor.prototype._translateMessage = function (el, message) {\n          if (message && this._mode === _VisitorMode.Merge) {\n              var id = digestMessage(message);\n              var nodes = this._translations.get(id);\n              if (nodes) {\n                  return nodes;\n              }\n              this._reportError(el, \"Translation unavailable for message id=\\\"\" + id + \"\\\"\");\n          }\n          return [];\n      };\n      // translate the attributes of an element and remove i18n specific attributes\n      _Visitor.prototype._translateAttributes = function (el) {\n          var _this = this;\n          var attributes = el.attrs;\n          var i18nAttributeMeanings = {};\n          attributes.forEach(function (attr) {\n              if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                  i18nAttributeMeanings[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                      _splitMeaningAndDesc(attr.value)[0];\n              }\n          });\n          var translatedAttributes = [];\n          attributes.forEach(function (attr) {\n              if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                  // strip i18n specific attributes\n                  return;\n              }\n              if (attr.value && attr.value != '' && i18nAttributeMeanings.hasOwnProperty(attr.name)) {\n                  var meaning = i18nAttributeMeanings[attr.name];\n                  var message = _this._createI18nMessage([attr], meaning, '');\n                  var id = digestMessage(message);\n                  var nodes = _this._translations.get(id);\n                  if (nodes) {\n                      if (nodes[0] instanceof Text) {\n                          var value = nodes[0].value;\n                          translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                      }\n                      else {\n                          _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + id + \"\\\")\");\n                      }\n                  }\n                  else {\n                      _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + id + \"\\\")\");\n                  }\n              }\n              else {\n                  translatedAttributes.push(attr);\n              }\n          });\n          return translatedAttributes;\n      };\n      /**\n       * Add the node as a child of the block when:\n       * - we are in a block,\n       * - we are not inside a ICU message (those are handled separately),\n       * - the node is a \"direct child\" of the block\n       */\n      _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n          if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n              this._blockChildren.push(node);\n          }\n      };\n      /**\n       * Marks the start of a section, see `_endSection`\n       */\n      _Visitor.prototype._openTranslatableSection = function (node) {\n          if (this._isInTranslatableSection) {\n              this._reportError(node, 'Unexpected section start');\n          }\n          else {\n              this._msgCountAtSectionStart = this._messages.length;\n          }\n      };\n      Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n          /**\n           * A translatable section could be:\n           * - a translatable element,\n           * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n           */\n          get: function () {\n              return this._msgCountAtSectionStart !== void 0;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      /**\n       * Terminates a section.\n       *\n       * If a section has only one significant children (comments not significant) then we should not\n       * keep the message from this children:\n       *\n       * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n       * - one for the <p> content with meaning and description,\n       * - another one for the ICU message.\n       *\n       * In this case the last message is discarded as it contains less information (the AST is\n       * otherwise identical).\n       *\n       * Note that we should still keep messages extracted from attributes inside the section (ie in the\n       * ICU message here)\n       */\n      _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n          if (!this._isInTranslatableSection) {\n              this._reportError(node, 'Unexpected section end');\n              return;\n          }\n          var startIndex = this._msgCountAtSectionStart;\n          var significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n          if (significantChildren == 1) {\n              for (var i = this._messages.length - 1; i >= startIndex; i--) {\n                  var ast = this._messages[i].nodes;\n                  if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                      this._messages.splice(i, 1);\n                      break;\n                  }\n              }\n          }\n          this._msgCountAtSectionStart = void 0;\n      };\n      _Visitor.prototype._reportError = function (node, msg) {\n          this._errors.push(new I18nError(node.sourceSpan, msg));\n      };\n      return _Visitor;\n  }());\n  function _isOpeningComment(n) {\n      return n instanceof Comment && n.value && n.value.startsWith('i18n');\n  }\n  function _isClosingComment(n) {\n      return n instanceof Comment && n.value && n.value === '/i18n';\n  }\n  function _getI18nAttr(p) {\n      return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n  }\n  function _splitMeaningAndDesc(i18n) {\n      if (!i18n)\n          return ['', ''];\n      var pipeIndex = i18n.indexOf('|');\n      return pipeIndex == -1 ? ['', i18n] : [i18n.slice(0, pipeIndex), i18n.slice(pipeIndex + 1)];\n  }\n\n  /**\n   * A container for message extracted from the templates.\n   */\n  var MessageBundle = (function () {\n      function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs) {\n          this._htmlParser = _htmlParser;\n          this._implicitTags = _implicitTags;\n          this._implicitAttrs = _implicitAttrs;\n          this._messageMap = {};\n      }\n      MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n          var _this = this;\n          var htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n          if (htmlParserResult.errors.length) {\n              return htmlParserResult.errors;\n          }\n          var i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n          if (i18nParserResult.errors.length) {\n              return i18nParserResult.errors;\n          }\n          i18nParserResult.messages.forEach(function (message) { _this._messageMap[digestMessage(message)] = message; });\n      };\n      MessageBundle.prototype.getMessageMap = function () { return this._messageMap; };\n      MessageBundle.prototype.write = function (serializer) { return serializer.write(this._messageMap); };\n      return MessageBundle;\n  }());\n\n  var XmlTagDefinition = (function () {\n      function XmlTagDefinition() {\n          this.closedByParent = false;\n          this.contentType = TagContentType.PARSABLE_DATA;\n          this.isVoid = false;\n          this.ignoreFirstLf = false;\n          this.canSelfClose = true;\n      }\n      XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n      XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n      return XmlTagDefinition;\n  }());\n  var _TAG_DEFINITION = new XmlTagDefinition();\n  function getXmlTagDefinition(tagName) {\n      return _TAG_DEFINITION;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$5 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var XmlParser = (function (_super) {\n      __extends$5(XmlParser, _super);\n      function XmlParser() {\n          _super.call(this, getXmlTagDefinition);\n      }\n      XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n          return _super.prototype.parse.call(this, source, url, parseExpansionForms, null);\n      };\n      return XmlParser;\n  }(Parser$1));\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  // Generate a map of placeholder to content indexed by message ids\n  function extractPlaceholders(messageBundle) {\n      var messageMap = messageBundle.getMessageMap();\n      var placeholders = {};\n      Object.keys(messageMap).forEach(function (msgId) {\n          placeholders[msgId] = messageMap[msgId].placeholders;\n      });\n      return placeholders;\n  }\n  // Generate a map of placeholder to message ids indexed by message ids\n  function extractPlaceholderToIds(messageBundle) {\n      var messageMap = messageBundle.getMessageMap();\n      var placeholderToIds = {};\n      Object.keys(messageMap).forEach(function (msgId) {\n          placeholderToIds[msgId] = messageMap[msgId].placeholderToMsgIds;\n      });\n      return placeholderToIds;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$6 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var _Visitor$1 = (function () {\n      function _Visitor() {\n      }\n      _Visitor.prototype.visitTag = function (tag) {\n          var _this = this;\n          var strAttrs = this._serializeAttributes(tag.attrs);\n          if (tag.children.length == 0) {\n              return \"<\" + tag.name + strAttrs + \"/>\";\n          }\n          var strChildren = tag.children.map(function (node) { return node.visit(_this); });\n          return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n      };\n      _Visitor.prototype.visitText = function (text) { return text.value; };\n      _Visitor.prototype.visitDeclaration = function (decl) {\n          return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n      };\n      _Visitor.prototype._serializeAttributes = function (attrs) {\n          var strAttrs = Object.keys(attrs).map(function (name) { return (name + \"=\\\"\" + attrs[name] + \"\\\"\"); }).join(' ');\n          return strAttrs.length > 0 ? ' ' + strAttrs : '';\n      };\n      _Visitor.prototype.visitDoctype = function (doctype) {\n          return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n      };\n      return _Visitor;\n  }());\n  var _visitor = new _Visitor$1();\n  function serialize(nodes) {\n      return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n  }\n  var Declaration = (function () {\n      function Declaration(unescapedAttrs) {\n          var _this = this;\n          this.attrs = {};\n          Object.keys(unescapedAttrs).forEach(function (k) {\n              _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n          });\n      }\n      Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n      return Declaration;\n  }());\n  var Doctype = (function () {\n      function Doctype(rootTag, dtd) {\n          this.rootTag = rootTag;\n          this.dtd = dtd;\n      }\n      ;\n      Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n      return Doctype;\n  }());\n  var Tag = (function () {\n      function Tag(name, unescapedAttrs, children) {\n          var _this = this;\n          if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n          if (children === void 0) { children = []; }\n          this.name = name;\n          this.children = children;\n          this.attrs = {};\n          Object.keys(unescapedAttrs).forEach(function (k) {\n              _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n          });\n      }\n      Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n      return Tag;\n  }());\n  var Text$2 = (function () {\n      function Text(unescapedValue) {\n          this.value = _escapeXml(unescapedValue);\n      }\n      ;\n      Text.prototype.visit = function (visitor) { return visitor.visitText(this); };\n      return Text;\n  }());\n  var CR = (function (_super) {\n      __extends$6(CR, _super);\n      function CR(ws) {\n          if (ws === void 0) { ws = 0; }\n          _super.call(this, \"\\n\" + new Array(ws + 1).join(' '));\n      }\n      return CR;\n  }(Text$2));\n  var _ESCAPED_CHARS = [\n      [/&/g, '&amp;'],\n      [/\"/g, '&quot;'],\n      [/'/g, '&apos;'],\n      [/</g, '&lt;'],\n      [/>/g, '&gt;'],\n  ];\n  function _escapeXml(text) {\n      return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n  }\n\n  var _VERSION = '1.2';\n  var _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n  // TODO(vicb): make this a param (s/_/-/)\n  var _SOURCE_LANG = 'en';\n  var _PLACEHOLDER_TAG = 'x';\n  var _SOURCE_TAG = 'source';\n  var _TARGET_TAG = 'target';\n  var _UNIT_TAG = 'trans-unit';\n  // http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html\n  // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html\n  var Xliff = (function () {\n      function Xliff(_htmlParser, _interpolationConfig) {\n          this._htmlParser = _htmlParser;\n          this._interpolationConfig = _interpolationConfig;\n      }\n      Xliff.prototype.write = function (messageMap) {\n          var visitor = new _WriteVisitor();\n          var transUnits = [];\n          Object.keys(messageMap).forEach(function (id) {\n              var message = messageMap[id];\n              var transUnit = new Tag(_UNIT_TAG, { id: id, datatype: 'html' });\n              transUnit.children.push(new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new CR(8), new Tag(_TARGET_TAG));\n              if (message.description) {\n                  transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n              }\n              if (message.meaning) {\n                  transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n              }\n              transUnit.children.push(new CR(6));\n              transUnits.push(new CR(6), transUnit);\n          });\n          var body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n          var file = new Tag('file', { 'source-language': _SOURCE_LANG, datatype: 'plaintext', original: 'ng2.template' }, [new CR(4), body, new CR(2)]);\n          var xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n          return serialize([\n              new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n          ]);\n      };\n      Xliff.prototype.load = function (content, url, messageBundle) {\n          var _this = this;\n          // Parse the xtb file into xml nodes\n          var result = new XmlParser().parse(content, url);\n          if (result.errors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + result.errors.join('\\n'));\n          }\n          // Replace the placeholders, messages are now string\n          var _a = new _LoadVisitor().parse(result.rootNodes, messageBundle), messages = _a.messages, errors = _a.errors;\n          if (errors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n          }\n          // Convert the string messages to html ast\n          // TODO(vicb): map error message back to the original message in xtb\n          var messageMap = {};\n          var parseErrors = [];\n          Object.keys(messages).forEach(function (id) {\n              var res = _this._htmlParser.parse(messages[id], url, true, _this._interpolationConfig);\n              parseErrors.push.apply(parseErrors, res.errors);\n              messageMap[id] = res.rootNodes;\n          });\n          if (parseErrors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + parseErrors.join('\\n'));\n          }\n          return messageMap;\n      };\n      return Xliff;\n  }());\n  var _WriteVisitor = (function () {\n      function _WriteVisitor() {\n      }\n      _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n      _WriteVisitor.prototype.visitContainer = function (container, context) {\n          var _this = this;\n          var nodes = [];\n          container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n          return nodes;\n      };\n      _WriteVisitor.prototype.visitIcu = function (icu, context) {\n          if (this._isInIcu) {\n              // nested ICU is not supported\n              throw new Error('xliff does not support nested ICU messages');\n          }\n          this._isInIcu = true;\n          // TODO(vicb): support ICU messages\n          // https://lists.oasis-open.org/archives/xliff/201201/msg00028.html\n          // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-po/xliff-profile-po-1.2-cd02.html\n          var nodes = [];\n          this._isInIcu = false;\n          return nodes;\n      };\n      _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n          var ctype = getCtypeForTag(ph.tag);\n          var startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype });\n          if (ph.isVoid) {\n              // void tags have no children nor closing tags\n              return [startTagPh];\n          }\n          var closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype });\n          return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n      };\n      _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n          return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n      };\n      _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n          return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n      };\n      _WriteVisitor.prototype.serialize = function (nodes) {\n          var _this = this;\n          this._isInIcu = false;\n          return (_a = []).concat.apply(_a, nodes.map(function (node) { return node.visit(_this); }));\n          var _a;\n      };\n      return _WriteVisitor;\n  }());\n  // TODO(vicb): add error management (structure)\n  // TODO(vicb): factorize (xtb) ?\n  var _LoadVisitor = (function () {\n      function _LoadVisitor() {\n      }\n      _LoadVisitor.prototype.parse = function (nodes, messageBundle) {\n          var _this = this;\n          this._messageNodes = [];\n          this._translatedMessages = {};\n          this._msgId = '';\n          this._target = [];\n          this._errors = [];\n          // Find all messages\n          visitAll(this, nodes, null);\n          var messageMap = messageBundle.getMessageMap();\n          var placeholders = extractPlaceholders(messageBundle);\n          var placeholderToIds = extractPlaceholderToIds(messageBundle);\n          this._messageNodes\n              .filter(function (message) {\n              // Remove any messages that is not present in the source message bundle.\n              return messageMap.hasOwnProperty(message[0]);\n          })\n              .sort(function (a, b) {\n              // Because there could be no ICU placeholders inside an ICU message,\n              // we do not need to take into account the `placeholderToMsgIds` of the referenced\n              // messages, those would always be empty\n              // TODO(vicb): overkill - create 2 buckets and [...woDeps, ...wDeps].process()\n              if (Object.keys(messageMap[a[0]].placeholderToMsgIds).length == 0) {\n                  return -1;\n              }\n              if (Object.keys(messageMap[b[0]].placeholderToMsgIds).length == 0) {\n                  return 1;\n              }\n              return 0;\n          })\n              .forEach(function (message) {\n              var id = message[0];\n              _this._placeholders = placeholders[id] || {};\n              _this._placeholderToIds = placeholderToIds[id] || {};\n              // TODO(vicb): make sure there is no `_TRANSLATIONS_TAG` nor `_TRANSLATION_TAG`\n              _this._translatedMessages[id] = visitAll(_this, message[1]).join('');\n          });\n          return { messages: this._translatedMessages, errors: this._errors };\n      };\n      _LoadVisitor.prototype.visitElement = function (element, context) {\n          switch (element.name) {\n              case _UNIT_TAG:\n                  this._target = null;\n                  var msgId = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                  if (!msgId) {\n                      this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                  }\n                  else {\n                      this._msgId = msgId.value;\n                  }\n                  visitAll(this, element.children, null);\n                  if (this._msgId !== null) {\n                      this._messageNodes.push([this._msgId, this._target]);\n                  }\n                  break;\n              case _SOURCE_TAG:\n                  // ignore source message\n                  break;\n              case _TARGET_TAG:\n                  this._target = element.children;\n                  break;\n              case _PLACEHOLDER_TAG:\n                  var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                  if (!idAttr) {\n                      this._addError(element, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n                  }\n                  else {\n                      var id = idAttr.value;\n                      if (this._placeholders.hasOwnProperty(id)) {\n                          return this._placeholders[id];\n                      }\n                      if (this._placeholderToIds.hasOwnProperty(id) &&\n                          this._translatedMessages.hasOwnProperty(this._placeholderToIds[id])) {\n                          return this._translatedMessages[this._placeholderToIds[id]];\n                      }\n                      // TODO(vicb): better error message for when\n                      // !this._translatedMessages.hasOwnProperty(this._placeholderToIds[id])\n                      this._addError(element, \"The placeholder \\\"\" + id + \"\\\" does not exists in the source message\");\n                  }\n                  break;\n              default:\n                  visitAll(this, element.children, null);\n          }\n      };\n      _LoadVisitor.prototype.visitAttribute = function (attribute, context) {\n          throw new Error('unreachable code');\n      };\n      _LoadVisitor.prototype.visitText = function (text, context) { return text.value; };\n      _LoadVisitor.prototype.visitComment = function (comment, context) { return ''; };\n      _LoadVisitor.prototype.visitExpansion = function (expansion, context) {\n          throw new Error('unreachable code');\n      };\n      _LoadVisitor.prototype.visitExpansionCase = function (expansionCase, context) {\n          throw new Error('unreachable code');\n      };\n      _LoadVisitor.prototype._addError = function (node, message) {\n          this._errors.push(new I18nError(node.sourceSpan, message));\n      };\n      return _LoadVisitor;\n  }());\n  function getCtypeForTag(tag) {\n      switch (tag.toLowerCase()) {\n          case 'br':\n              return 'lb';\n          case 'img':\n              return 'image';\n          default:\n              return \"x-\" + tag;\n      }\n  }\n\n  var _MESSAGES_TAG = 'messagebundle';\n  var _MESSAGE_TAG = 'msg';\n  var _PLACEHOLDER_TAG$1 = 'ph';\n  var _EXEMPLE_TAG = 'ex';\n  var _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\n  var Xmb = (function () {\n      function Xmb() {\n      }\n      Xmb.prototype.write = function (messageMap) {\n          var visitor = new _Visitor$2();\n          var rootNode = new Tag(_MESSAGES_TAG);\n          Object.keys(messageMap).forEach(function (id) {\n              var message = messageMap[id];\n              var attrs = { id: id };\n              if (message.description) {\n                  attrs['desc'] = message.description;\n              }\n              if (message.meaning) {\n                  attrs['meaning'] = message.meaning;\n              }\n              rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, visitor.serialize(message.nodes)));\n          });\n          rootNode.children.push(new CR());\n          return serialize([\n              new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n              new CR(),\n              new Doctype(_MESSAGES_TAG, _DOCTYPE),\n              new CR(),\n              rootNode,\n              new CR(),\n          ]);\n      };\n      Xmb.prototype.load = function (content, url, messageBundle) {\n          throw new Error('Unsupported');\n      };\n      return Xmb;\n  }());\n  var _Visitor$2 = (function () {\n      function _Visitor() {\n      }\n      _Visitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n      _Visitor.prototype.visitContainer = function (container, context) {\n          var _this = this;\n          var nodes = [];\n          container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n          return nodes;\n      };\n      _Visitor.prototype.visitIcu = function (icu, context) {\n          var _this = this;\n          var nodes = [new Text$2(\"{\" + icu.expression + \", \" + icu.type + \", \")];\n          Object.keys(icu.cases).forEach(function (c) {\n              nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n          });\n          nodes.push(new Text$2(\"}\"));\n          return nodes;\n      };\n      _Visitor.prototype.visitTagPlaceholder = function (ph, context) {\n          var startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n          var startTagPh = new Tag(_PLACEHOLDER_TAG$1, { name: ph.startName }, [startEx]);\n          if (ph.isVoid) {\n              // void tags have no children nor closing tags\n              return [startTagPh];\n          }\n          var closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n          var closeTagPh = new Tag(_PLACEHOLDER_TAG$1, { name: ph.closeName }, [closeEx]);\n          return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n      };\n      _Visitor.prototype.visitPlaceholder = function (ph, context) {\n          return [new Tag(_PLACEHOLDER_TAG$1, { name: ph.name })];\n      };\n      _Visitor.prototype.visitIcuPlaceholder = function (ph, context) {\n          return [new Tag(_PLACEHOLDER_TAG$1, { name: ph.name })];\n      };\n      _Visitor.prototype.serialize = function (nodes) {\n          var _this = this;\n          return (_a = []).concat.apply(_a, nodes.map(function (node) { return node.visit(_this); }));\n          var _a;\n      };\n      return _Visitor;\n  }());\n\n  var _TRANSLATIONS_TAG = 'translationbundle';\n  var _TRANSLATION_TAG = 'translation';\n  var _PLACEHOLDER_TAG$2 = 'ph';\n  var Xtb = (function () {\n      function Xtb(_htmlParser, _interpolationConfig) {\n          this._htmlParser = _htmlParser;\n          this._interpolationConfig = _interpolationConfig;\n      }\n      Xtb.prototype.write = function (messageMap) { throw new Error('Unsupported'); };\n      Xtb.prototype.load = function (content, url, messageBundle) {\n          var _this = this;\n          // Parse the xtb file into xml nodes\n          var result = new XmlParser().parse(content, url);\n          if (result.errors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + result.errors.join('\\n'));\n          }\n          // Replace the placeholders, messages are now string\n          var _a = new _Visitor$3().parse(result.rootNodes, messageBundle), messages = _a.messages, errors = _a.errors;\n          if (errors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n          }\n          // Convert the string messages to html ast\n          // TODO(vicb): map error message back to the original message in xtb\n          var messageMap = {};\n          var parseErrors = [];\n          Object.keys(messages).forEach(function (id) {\n              var res = _this._htmlParser.parse(messages[id], url, true, _this._interpolationConfig);\n              parseErrors.push.apply(parseErrors, res.errors);\n              messageMap[id] = res.rootNodes;\n          });\n          if (parseErrors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + parseErrors.join('\\n'));\n          }\n          return messageMap;\n      };\n      return Xtb;\n  }());\n  var _Visitor$3 = (function () {\n      function _Visitor() {\n      }\n      _Visitor.prototype.parse = function (nodes, messageBundle) {\n          var _this = this;\n          this._messageNodes = [];\n          this._translatedMessages = {};\n          this._bundleDepth = 0;\n          this._translationDepth = 0;\n          this._errors = [];\n          // Find all messages\n          visitAll(this, nodes, null);\n          var messageMap = messageBundle.getMessageMap();\n          var placeholders = extractPlaceholders(messageBundle);\n          var placeholderToIds = extractPlaceholderToIds(messageBundle);\n          this._messageNodes\n              .filter(function (message) {\n              // Remove any messages that is not present in the source message bundle.\n              return messageMap.hasOwnProperty(message[0]);\n          })\n              .sort(function (a, b) {\n              // Because there could be no ICU placeholders inside an ICU message,\n              // we do not need to take into account the `placeholderToMsgIds` of the referenced\n              // messages, those would always be empty\n              // TODO(vicb): overkill - create 2 buckets and [...woDeps, ...wDeps].process()\n              if (Object.keys(messageMap[a[0]].placeholderToMsgIds).length == 0) {\n                  return -1;\n              }\n              if (Object.keys(messageMap[b[0]].placeholderToMsgIds).length == 0) {\n                  return 1;\n              }\n              return 0;\n          })\n              .forEach(function (message) {\n              var id = message[0];\n              _this._placeholders = placeholders[id] || {};\n              _this._placeholderToIds = placeholderToIds[id] || {};\n              // TODO(vicb): make sure there is no `_TRANSLATIONS_TAG` nor `_TRANSLATION_TAG`\n              _this._translatedMessages[id] = visitAll(_this, message[1]).join('');\n          });\n          return { messages: this._translatedMessages, errors: this._errors };\n      };\n      _Visitor.prototype.visitElement = function (element, context) {\n          switch (element.name) {\n              case _TRANSLATIONS_TAG:\n                  this._bundleDepth++;\n                  if (this._bundleDepth > 1) {\n                      this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                  }\n                  visitAll(this, element.children, null);\n                  this._bundleDepth--;\n                  break;\n              case _TRANSLATION_TAG:\n                  this._translationDepth++;\n                  if (this._translationDepth > 1) {\n                      this._addError(element, \"<\" + _TRANSLATION_TAG + \"> elements can not be nested\");\n                  }\n                  var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                  if (!idAttr) {\n                      this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                  }\n                  else {\n                      // ICU placeholders are reference to other messages.\n                      // The referenced message might not have been decoded yet.\n                      // We need to have all messages available to make sure deps are decoded first.\n                      // TODO(vicb): report an error on duplicate id\n                      this._messageNodes.push([idAttr.value, element.children]);\n                  }\n                  this._translationDepth--;\n                  break;\n              case _PLACEHOLDER_TAG$2:\n                  var nameAttr = element.attrs.find(function (attr) { return attr.name === 'name'; });\n                  if (!nameAttr) {\n                      this._addError(element, \"<\" + _PLACEHOLDER_TAG$2 + \"> misses the \\\"name\\\" attribute\");\n                  }\n                  else {\n                      var name_1 = nameAttr.value;\n                      if (this._placeholders.hasOwnProperty(name_1)) {\n                          return this._placeholders[name_1];\n                      }\n                      if (this._placeholderToIds.hasOwnProperty(name_1) &&\n                          this._translatedMessages.hasOwnProperty(this._placeholderToIds[name_1])) {\n                          return this._translatedMessages[this._placeholderToIds[name_1]];\n                      }\n                      // TODO(vicb): better error message for when\n                      // !this._translatedMessages.hasOwnProperty(this._placeholderToIds[name])\n                      this._addError(element, \"The placeholder \\\"\" + name_1 + \"\\\" does not exists in the source message\");\n                  }\n                  break;\n              default:\n                  this._addError(element, 'Unexpected tag');\n          }\n      };\n      _Visitor.prototype.visitAttribute = function (attribute, context) {\n          throw new Error('unreachable code');\n      };\n      _Visitor.prototype.visitText = function (text, context) { return text.value; };\n      _Visitor.prototype.visitComment = function (comment, context) { return ''; };\n      _Visitor.prototype.visitExpansion = function (expansion, context) {\n          var _this = this;\n          var strCases = expansion.cases.map(function (c) { return c.visit(_this, null); });\n          return \"{\" + expansion.switchValue + \", \" + expansion.type + \", strCases.join(' ')}\";\n      };\n      _Visitor.prototype.visitExpansionCase = function (expansionCase, context) {\n          return expansionCase.value + \" {\" + visitAll(this, expansionCase.expression, null) + \"}\";\n      };\n      _Visitor.prototype._addError = function (node, message) {\n          this._errors.push(new I18nError(node.sourceSpan, message));\n      };\n      return _Visitor;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  /**\n   * A container for translated messages\n   */\n  var TranslationBundle = (function () {\n      function TranslationBundle(_messageMap) {\n          if (_messageMap === void 0) { _messageMap = {}; }\n          this._messageMap = _messageMap;\n      }\n      TranslationBundle.load = function (content, url, messageBundle, serializer) {\n          return new TranslationBundle(serializer.load(content, url, messageBundle));\n      };\n      TranslationBundle.prototype.get = function (id) { return this._messageMap[id]; };\n      TranslationBundle.prototype.has = function (id) { return id in this._messageMap; };\n      return TranslationBundle;\n  }());\n\n  var I18NHtmlParser = (function () {\n      // TODO(vicb): transB.load() should not need a msgB & add transB.resolve(msgB,\n      // interpolationConfig)\n      // TODO(vicb): remove the interpolationConfig from the Xtb serializer\n      function I18NHtmlParser(_htmlParser, _translations, _translationsFormat) {\n          this._htmlParser = _htmlParser;\n          this._translations = _translations;\n          this._translationsFormat = _translationsFormat;\n      }\n      I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n          if (!this._translations || this._translations === '') {\n              // Do not enable i18n when no translation bundle is provided\n              return parseResult;\n          }\n          // TODO(vicb): add support for implicit tags / attributes\n          var messageBundle = new MessageBundle(this._htmlParser, [], {});\n          var errors = messageBundle.updateFromTemplate(source, url, interpolationConfig);\n          if (errors && errors.length) {\n              return new ParseTreeResult(parseResult.rootNodes, parseResult.errors.concat(errors));\n          }\n          var serializer = this._createSerializer(interpolationConfig);\n          var translationBundle = TranslationBundle.load(this._translations, url, messageBundle, serializer);\n          return mergeTranslations(parseResult.rootNodes, translationBundle, interpolationConfig, [], {});\n      };\n      I18NHtmlParser.prototype._createSerializer = function (interpolationConfig) {\n          var format = (this._translationsFormat || 'xlf').toLowerCase();\n          switch (format) {\n              case 'xmb':\n                  return new Xmb();\n              case 'xtb':\n                  return new Xtb(this._htmlParser, interpolationConfig);\n              case 'xliff':\n              case 'xlf':\n              default:\n                  return new Xliff(this._htmlParser, interpolationConfig);\n          }\n      };\n      return I18NHtmlParser;\n  }());\n\n  /**\n   * Wraps Javascript Objects\n   */\n  var StringMapWrapper = (function () {\n      function StringMapWrapper() {\n      }\n      StringMapWrapper.merge = function (m1, m2) {\n          var m = {};\n          for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n              var k = _a[_i];\n              m[k] = m1[k];\n          }\n          for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n              var k = _c[_b];\n              m[k] = m2[k];\n          }\n          return m;\n      };\n      StringMapWrapper.equals = function (m1, m2) {\n          var k1 = Object.keys(m1);\n          var k2 = Object.keys(m2);\n          if (k1.length != k2.length) {\n              return false;\n          }\n          for (var i = 0; i < k1.length; i++) {\n              var key = k1[i];\n              if (m1[key] !== m2[key]) {\n                  return false;\n              }\n          }\n          return true;\n      };\n      return StringMapWrapper;\n  }());\n  var ListWrapper = (function () {\n      function ListWrapper() {\n      }\n      ListWrapper.removeAll = function (list, items) {\n          for (var i = 0; i < items.length; ++i) {\n              var index = list.indexOf(items[i]);\n              if (index > -1) {\n                  list.splice(index, 1);\n              }\n          }\n      };\n      ListWrapper.remove = function (list, el) {\n          var index = list.indexOf(el);\n          if (index > -1) {\n              list.splice(index, 1);\n              return true;\n          }\n          return false;\n      };\n      ListWrapper.equals = function (a, b) {\n          if (a.length != b.length)\n              return false;\n          for (var i = 0; i < a.length; ++i) {\n              if (a[i] !== b[i])\n                  return false;\n          }\n          return true;\n      };\n      ListWrapper.flatten = function (list) {\n          return list.reduce(function (flat, item) {\n              var flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n              return flat.concat(flatItem);\n          }, []);\n      };\n      return ListWrapper;\n  }());\n\n  var _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n      '([-\\\\w]+)|' +\n      '(?:\\\\.([-\\\\w]+))|' +\n      '(?:\\\\[([-\\\\w*]+)(?:=([^\\\\]]*))?\\\\])|' +\n      '(\\\\))|' +\n      '(\\\\s*,\\\\s*)', // \",\"\n  'g');\n  /**\n   * A css selector contains an element name,\n   * css classes and attribute/value pairs with the purpose\n   * of selecting subsets out of them.\n   */\n  var CssSelector = (function () {\n      function CssSelector() {\n          this.element = null;\n          this.classNames = [];\n          this.attrs = [];\n          this.notSelectors = [];\n      }\n      CssSelector.parse = function (selector) {\n          var results = [];\n          var _addResult = function (res, cssSel) {\n              if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                  cssSel.attrs.length == 0) {\n                  cssSel.element = '*';\n              }\n              res.push(cssSel);\n          };\n          var cssSelector = new CssSelector();\n          var match;\n          var current = cssSelector;\n          var inNot = false;\n          _SELECTOR_REGEXP.lastIndex = 0;\n          while (match = _SELECTOR_REGEXP.exec(selector)) {\n              if (match[1]) {\n                  if (inNot) {\n                      throw new Error('Nesting :not is not allowed in a selector');\n                  }\n                  inNot = true;\n                  current = new CssSelector();\n                  cssSelector.notSelectors.push(current);\n              }\n              if (match[2]) {\n                  current.setElement(match[2]);\n              }\n              if (match[3]) {\n                  current.addClassName(match[3]);\n              }\n              if (match[4]) {\n                  current.addAttribute(match[4], match[5]);\n              }\n              if (match[6]) {\n                  inNot = false;\n                  current = cssSelector;\n              }\n              if (match[7]) {\n                  if (inNot) {\n                      throw new Error('Multiple selectors in :not are not supported');\n                  }\n                  _addResult(results, cssSelector);\n                  cssSelector = current = new CssSelector();\n              }\n          }\n          _addResult(results, cssSelector);\n          return results;\n      };\n      CssSelector.prototype.isElementSelector = function () {\n          return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n              this.notSelectors.length === 0;\n      };\n      CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n      CssSelector.prototype.setElement = function (element) {\n          if (element === void 0) { element = null; }\n          this.element = element;\n      };\n      /** Gets a template string for an element that matches the selector. */\n      CssSelector.prototype.getMatchingElementTemplate = function () {\n          var tagName = this.element || 'div';\n          var classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n          var attrs = '';\n          for (var i = 0; i < this.attrs.length; i += 2) {\n              var attrName = this.attrs[i];\n              var attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n              attrs += \" \" + attrName + attrValue;\n          }\n          return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n              \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n      };\n      CssSelector.prototype.addAttribute = function (name, value) {\n          if (value === void 0) { value = ''; }\n          this.attrs.push(name, value && value.toLowerCase() || '');\n      };\n      CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n      CssSelector.prototype.toString = function () {\n          var res = this.element || '';\n          if (this.classNames) {\n              this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n          }\n          if (this.attrs) {\n              for (var i = 0; i < this.attrs.length; i += 2) {\n                  var name_1 = this.attrs[i];\n                  var value = this.attrs[i + 1];\n                  res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n              }\n          }\n          this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n          return res;\n      };\n      return CssSelector;\n  }());\n  /**\n   * Reads a list of CssSelectors and allows to calculate which ones\n   * are contained in a given CssSelector.\n   */\n  var SelectorMatcher = (function () {\n      function SelectorMatcher() {\n          this._elementMap = new Map();\n          this._elementPartialMap = new Map();\n          this._classMap = new Map();\n          this._classPartialMap = new Map();\n          this._attrValueMap = new Map();\n          this._attrValuePartialMap = new Map();\n          this._listContexts = [];\n      }\n      SelectorMatcher.createNotMatcher = function (notSelectors) {\n          var notMatcher = new SelectorMatcher();\n          notMatcher.addSelectables(notSelectors, null);\n          return notMatcher;\n      };\n      SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n          var listContext = null;\n          if (cssSelectors.length > 1) {\n              listContext = new SelectorListContext(cssSelectors);\n              this._listContexts.push(listContext);\n          }\n          for (var i = 0; i < cssSelectors.length; i++) {\n              this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n          }\n      };\n      /**\n       * Add an object that can be found later on by calling `match`.\n       * @param cssSelector A css selector\n       * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\n       */\n      SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n          var matcher = this;\n          var element = cssSelector.element;\n          var classNames = cssSelector.classNames;\n          var attrs = cssSelector.attrs;\n          var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n          if (element) {\n              var isTerminal = attrs.length === 0 && classNames.length === 0;\n              if (isTerminal) {\n                  this._addTerminal(matcher._elementMap, element, selectable);\n              }\n              else {\n                  matcher = this._addPartial(matcher._elementPartialMap, element);\n              }\n          }\n          if (classNames) {\n              for (var i = 0; i < classNames.length; i++) {\n                  var isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                  var className = classNames[i];\n                  if (isTerminal) {\n                      this._addTerminal(matcher._classMap, className, selectable);\n                  }\n                  else {\n                      matcher = this._addPartial(matcher._classPartialMap, className);\n                  }\n              }\n          }\n          if (attrs) {\n              for (var i = 0; i < attrs.length; i += 2) {\n                  var isTerminal = i === attrs.length - 2;\n                  var name_2 = attrs[i];\n                  var value = attrs[i + 1];\n                  if (isTerminal) {\n                      var terminalMap = matcher._attrValueMap;\n                      var terminalValuesMap = terminalMap.get(name_2);\n                      if (!terminalValuesMap) {\n                          terminalValuesMap = new Map();\n                          terminalMap.set(name_2, terminalValuesMap);\n                      }\n                      this._addTerminal(terminalValuesMap, value, selectable);\n                  }\n                  else {\n                      var partialMap = matcher._attrValuePartialMap;\n                      var partialValuesMap = partialMap.get(name_2);\n                      if (!partialValuesMap) {\n                          partialValuesMap = new Map();\n                          partialMap.set(name_2, partialValuesMap);\n                      }\n                      matcher = this._addPartial(partialValuesMap, value);\n                  }\n              }\n          }\n      };\n      SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n          var terminalList = map.get(name);\n          if (!terminalList) {\n              terminalList = [];\n              map.set(name, terminalList);\n          }\n          terminalList.push(selectable);\n      };\n      SelectorMatcher.prototype._addPartial = function (map, name) {\n          var matcher = map.get(name);\n          if (!matcher) {\n              matcher = new SelectorMatcher();\n              map.set(name, matcher);\n          }\n          return matcher;\n      };\n      /**\n       * Find the objects that have been added via `addSelectable`\n       * whose css selector is contained in the given css selector.\n       * @param cssSelector A css selector\n       * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n       * @return boolean true if a match was found\n      */\n      SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n          var result = false;\n          var element = cssSelector.element;\n          var classNames = cssSelector.classNames;\n          var attrs = cssSelector.attrs;\n          for (var i = 0; i < this._listContexts.length; i++) {\n              this._listContexts[i].alreadyMatched = false;\n          }\n          result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n          result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n              result;\n          if (classNames) {\n              for (var i = 0; i < classNames.length; i++) {\n                  var className = classNames[i];\n                  result =\n                      this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                  result =\n                      this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                          result;\n              }\n          }\n          if (attrs) {\n              for (var i = 0; i < attrs.length; i += 2) {\n                  var name_3 = attrs[i];\n                  var value = attrs[i + 1];\n                  var terminalValuesMap = this._attrValueMap.get(name_3);\n                  if (value) {\n                      result =\n                          this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                  }\n                  result =\n                      this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                  var partialValuesMap = this._attrValuePartialMap.get(name_3);\n                  if (value) {\n                      result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                  }\n                  result =\n                      this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n              }\n          }\n          return result;\n      };\n      /** @internal */\n      SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n          if (!map || typeof name !== 'string') {\n              return false;\n          }\n          var selectables = map.get(name);\n          var starSelectables = map.get('*');\n          if (starSelectables) {\n              selectables = selectables.concat(starSelectables);\n          }\n          if (!selectables) {\n              return false;\n          }\n          var selectable;\n          var result = false;\n          for (var i = 0; i < selectables.length; i++) {\n              selectable = selectables[i];\n              result = selectable.finalize(cssSelector, matchedCallback) || result;\n          }\n          return result;\n      };\n      /** @internal */\n      SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n          if (!map || typeof name !== 'string') {\n              return false;\n          }\n          var nestedSelector = map.get(name);\n          if (!nestedSelector) {\n              return false;\n          }\n          // TODO(perf): get rid of recursion and measure again\n          // TODO(perf): don't pass the whole selector into the recursion,\n          // but only the not processed parts\n          return nestedSelector.match(cssSelector, matchedCallback);\n      };\n      return SelectorMatcher;\n  }());\n  var SelectorListContext = (function () {\n      function SelectorListContext(selectors) {\n          this.selectors = selectors;\n          this.alreadyMatched = false;\n      }\n      return SelectorListContext;\n  }());\n  // Store context to pass back selector and context when a selector is matched\n  var SelectorContext = (function () {\n      function SelectorContext(selector, cbContext, listContext) {\n          this.selector = selector;\n          this.cbContext = cbContext;\n          this.listContext = listContext;\n          this.notSelectors = selector.notSelectors;\n      }\n      SelectorContext.prototype.finalize = function (cssSelector, callback) {\n          var result = true;\n          if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n              var notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n              result = !notMatcher.match(cssSelector, null);\n          }\n          if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n              if (this.listContext) {\n                  this.listContext.alreadyMatched = true;\n              }\n              callback(this.selector, this.cbContext);\n          }\n          return result;\n      };\n      return SelectorContext;\n  }());\n\n  var MODULE_SUFFIX = '';\n  var DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n  function dashCaseToCamelCase(input) {\n      return input.replace(DASH_CASE_REGEXP, function () {\n          var m = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              m[_i - 0] = arguments[_i];\n          }\n          return m[1].toUpperCase();\n      });\n  }\n  function splitAtColon(input, defaultValues) {\n      return _splitAt(input, ':', defaultValues);\n  }\n  function splitAtPeriod(input, defaultValues) {\n      return _splitAt(input, '.', defaultValues);\n  }\n  function _splitAt(input, character, defaultValues) {\n      var characterIndex = input.indexOf(character);\n      if (characterIndex == -1)\n          return defaultValues;\n      return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n  }\n  function sanitizeIdentifier(name) {\n      return name.replace(/\\W/g, '_');\n  }\n  function visitValue(value, visitor, context) {\n      if (Array.isArray(value)) {\n          return visitor.visitArray(value, context);\n      }\n      if (isStrictStringMap(value)) {\n          return visitor.visitStringMap(value, context);\n      }\n      if (isBlank(value) || isPrimitive(value)) {\n          return visitor.visitPrimitive(value, context);\n      }\n      return visitor.visitOther(value, context);\n  }\n  var ValueTransformer = (function () {\n      function ValueTransformer() {\n      }\n      ValueTransformer.prototype.visitArray = function (arr, context) {\n          var _this = this;\n          return arr.map(function (value) { return visitValue(value, _this, context); });\n      };\n      ValueTransformer.prototype.visitStringMap = function (map, context) {\n          var _this = this;\n          var result = {};\n          Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n          return result;\n      };\n      ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n      ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n      return ValueTransformer;\n  }());\n  var SyncAsyncResult = (function () {\n      function SyncAsyncResult(syncResult, asyncResult) {\n          if (asyncResult === void 0) { asyncResult = null; }\n          this.syncResult = syncResult;\n          this.asyncResult = asyncResult;\n          if (!asyncResult) {\n              this.asyncResult = Promise.resolve(syncResult);\n          }\n      }\n      return SyncAsyncResult;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$7 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  function unimplemented() {\n      throw new Error('unimplemented');\n  }\n  // group 0: \"[prop] or (event) or @trigger\"\n  // group 1: \"prop\" from \"[prop]\"\n  // group 2: \"event\" from \"(event)\"\n  // group 3: \"@trigger\" from \"@trigger\"\n  var HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n  var CompileMetadataWithIdentifier = (function () {\n      function CompileMetadataWithIdentifier() {\n      }\n      Object.defineProperty(CompileMetadataWithIdentifier.prototype, \"identifier\", {\n          get: function () { return unimplemented(); },\n          enumerable: true,\n          configurable: true\n      });\n      return CompileMetadataWithIdentifier;\n  }());\n  var CompileAnimationEntryMetadata = (function () {\n      function CompileAnimationEntryMetadata(name, definitions) {\n          if (name === void 0) { name = null; }\n          if (definitions === void 0) { definitions = null; }\n          this.name = name;\n          this.definitions = definitions;\n      }\n      return CompileAnimationEntryMetadata;\n  }());\n  var CompileAnimationStateMetadata = (function () {\n      function CompileAnimationStateMetadata() {\n      }\n      return CompileAnimationStateMetadata;\n  }());\n  var CompileAnimationStateDeclarationMetadata = (function (_super) {\n      __extends$7(CompileAnimationStateDeclarationMetadata, _super);\n      function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n          _super.call(this);\n          this.stateNameExpr = stateNameExpr;\n          this.styles = styles;\n      }\n      return CompileAnimationStateDeclarationMetadata;\n  }(CompileAnimationStateMetadata));\n  var CompileAnimationStateTransitionMetadata = (function (_super) {\n      __extends$7(CompileAnimationStateTransitionMetadata, _super);\n      function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n          _super.call(this);\n          this.stateChangeExpr = stateChangeExpr;\n          this.steps = steps;\n      }\n      return CompileAnimationStateTransitionMetadata;\n  }(CompileAnimationStateMetadata));\n  var CompileAnimationMetadata = (function () {\n      function CompileAnimationMetadata() {\n      }\n      return CompileAnimationMetadata;\n  }());\n  var CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n      __extends$7(CompileAnimationKeyframesSequenceMetadata, _super);\n      function CompileAnimationKeyframesSequenceMetadata(steps) {\n          if (steps === void 0) { steps = []; }\n          _super.call(this);\n          this.steps = steps;\n      }\n      return CompileAnimationKeyframesSequenceMetadata;\n  }(CompileAnimationMetadata));\n  var CompileAnimationStyleMetadata = (function (_super) {\n      __extends$7(CompileAnimationStyleMetadata, _super);\n      function CompileAnimationStyleMetadata(offset, styles) {\n          if (styles === void 0) { styles = null; }\n          _super.call(this);\n          this.offset = offset;\n          this.styles = styles;\n      }\n      return CompileAnimationStyleMetadata;\n  }(CompileAnimationMetadata));\n  var CompileAnimationAnimateMetadata = (function (_super) {\n      __extends$7(CompileAnimationAnimateMetadata, _super);\n      function CompileAnimationAnimateMetadata(timings, styles) {\n          if (timings === void 0) { timings = 0; }\n          if (styles === void 0) { styles = null; }\n          _super.call(this);\n          this.timings = timings;\n          this.styles = styles;\n      }\n      return CompileAnimationAnimateMetadata;\n  }(CompileAnimationMetadata));\n  var CompileAnimationWithStepsMetadata = (function (_super) {\n      __extends$7(CompileAnimationWithStepsMetadata, _super);\n      function CompileAnimationWithStepsMetadata(steps) {\n          if (steps === void 0) { steps = null; }\n          _super.call(this);\n          this.steps = steps;\n      }\n      return CompileAnimationWithStepsMetadata;\n  }(CompileAnimationMetadata));\n  var CompileAnimationSequenceMetadata = (function (_super) {\n      __extends$7(CompileAnimationSequenceMetadata, _super);\n      function CompileAnimationSequenceMetadata(steps) {\n          if (steps === void 0) { steps = null; }\n          _super.call(this, steps);\n      }\n      return CompileAnimationSequenceMetadata;\n  }(CompileAnimationWithStepsMetadata));\n  var CompileAnimationGroupMetadata = (function (_super) {\n      __extends$7(CompileAnimationGroupMetadata, _super);\n      function CompileAnimationGroupMetadata(steps) {\n          if (steps === void 0) { steps = null; }\n          _super.call(this, steps);\n      }\n      return CompileAnimationGroupMetadata;\n  }(CompileAnimationWithStepsMetadata));\n  var CompileIdentifierMetadata = (function () {\n      function CompileIdentifierMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, reference = _b.reference, name = _b.name, moduleUrl = _b.moduleUrl, prefix = _b.prefix, value = _b.value;\n          this.reference = reference;\n          this.name = name;\n          this.prefix = prefix;\n          this.moduleUrl = moduleUrl;\n          this.value = value;\n      }\n      Object.defineProperty(CompileIdentifierMetadata.prototype, \"identifier\", {\n          get: function () { return this; },\n          enumerable: true,\n          configurable: true\n      });\n      return CompileIdentifierMetadata;\n  }());\n  var CompileDiDependencyMetadata = (function () {\n      function CompileDiDependencyMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, isAttribute = _b.isAttribute, isSelf = _b.isSelf, isHost = _b.isHost, isSkipSelf = _b.isSkipSelf, isOptional = _b.isOptional, isValue = _b.isValue, token = _b.token, value = _b.value;\n          this.isAttribute = !!isAttribute;\n          this.isSelf = !!isSelf;\n          this.isHost = !!isHost;\n          this.isSkipSelf = !!isSkipSelf;\n          this.isOptional = !!isOptional;\n          this.isValue = !!isValue;\n          this.token = token;\n          this.value = value;\n      }\n      return CompileDiDependencyMetadata;\n  }());\n  var CompileProviderMetadata = (function () {\n      function CompileProviderMetadata(_a) {\n          var token = _a.token, useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n          this.token = token;\n          this.useClass = useClass;\n          this.useValue = useValue;\n          this.useExisting = useExisting;\n          this.useFactory = useFactory;\n          this.deps = deps || null;\n          this.multi = !!multi;\n      }\n      return CompileProviderMetadata;\n  }());\n  var CompileFactoryMetadata = (function (_super) {\n      __extends$7(CompileFactoryMetadata, _super);\n      function CompileFactoryMetadata(_a) {\n          var reference = _a.reference, name = _a.name, moduleUrl = _a.moduleUrl, prefix = _a.prefix, diDeps = _a.diDeps, value = _a.value;\n          _super.call(this, { reference: reference, name: name, prefix: prefix, moduleUrl: moduleUrl, value: value });\n          this.diDeps = _normalizeArray(diDeps);\n      }\n      return CompileFactoryMetadata;\n  }(CompileIdentifierMetadata));\n  var CompileTokenMetadata = (function () {\n      function CompileTokenMetadata(_a) {\n          var value = _a.value, identifier = _a.identifier, identifierIsInstance = _a.identifierIsInstance;\n          this.value = value;\n          this.identifier = identifier;\n          this.identifierIsInstance = !!identifierIsInstance;\n      }\n      Object.defineProperty(CompileTokenMetadata.prototype, \"reference\", {\n          get: function () {\n              if (isPresent(this.identifier)) {\n                  return this.identifier.reference;\n              }\n              else {\n                  return this.value;\n              }\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(CompileTokenMetadata.prototype, \"name\", {\n          get: function () {\n              return isPresent(this.value) ? sanitizeIdentifier(this.value) : this.identifier.name;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      return CompileTokenMetadata;\n  }());\n  /**\n   * Metadata regarding compilation of a type.\n   */\n  var CompileTypeMetadata = (function (_super) {\n      __extends$7(CompileTypeMetadata, _super);\n      function CompileTypeMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, reference = _b.reference, name = _b.name, moduleUrl = _b.moduleUrl, prefix = _b.prefix, isHost = _b.isHost, value = _b.value, diDeps = _b.diDeps, lifecycleHooks = _b.lifecycleHooks;\n          _super.call(this, { reference: reference, name: name, moduleUrl: moduleUrl, prefix: prefix, value: value });\n          this.isHost = !!isHost;\n          this.diDeps = _normalizeArray(diDeps);\n          this.lifecycleHooks = _normalizeArray(lifecycleHooks);\n      }\n      return CompileTypeMetadata;\n  }(CompileIdentifierMetadata));\n  var CompileQueryMetadata = (function () {\n      function CompileQueryMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, selectors = _b.selectors, descendants = _b.descendants, first = _b.first, propertyName = _b.propertyName, read = _b.read;\n          this.selectors = selectors;\n          this.descendants = !!descendants;\n          this.first = !!first;\n          this.propertyName = propertyName;\n          this.read = read;\n      }\n      return CompileQueryMetadata;\n  }());\n  /**\n   * Metadata about a stylesheet\n   */\n  var CompileStylesheetMetadata = (function () {\n      function CompileStylesheetMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n          this.moduleUrl = moduleUrl;\n          this.styles = _normalizeArray(styles);\n          this.styleUrls = _normalizeArray(styleUrls);\n      }\n      return CompileStylesheetMetadata;\n  }());\n  /**\n   * Metadata regarding compilation of a template.\n   */\n  var CompileTemplateMetadata = (function () {\n      function CompileTemplateMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, encapsulation = _b.encapsulation, template = _b.template, templateUrl = _b.templateUrl, styles = _b.styles, styleUrls = _b.styleUrls, externalStylesheets = _b.externalStylesheets, animations = _b.animations, ngContentSelectors = _b.ngContentSelectors, interpolation = _b.interpolation;\n          this.encapsulation = encapsulation;\n          this.template = template;\n          this.templateUrl = templateUrl;\n          this.styles = _normalizeArray(styles);\n          this.styleUrls = _normalizeArray(styleUrls);\n          this.externalStylesheets = _normalizeArray(externalStylesheets);\n          this.animations = animations ? ListWrapper.flatten(animations) : [];\n          this.ngContentSelectors = ngContentSelectors || [];\n          if (interpolation && interpolation.length != 2) {\n              throw new Error(\"'interpolation' should have a start and an end symbol.\");\n          }\n          this.interpolation = interpolation;\n      }\n      CompileTemplateMetadata.prototype.toSummary = function () {\n          return {\n              isSummary: true,\n              animations: this.animations.map(function (anim) { return anim.name; }),\n              ngContentSelectors: this.ngContentSelectors,\n              encapsulation: this.encapsulation\n          };\n      };\n      return CompileTemplateMetadata;\n  }());\n  /**\n   * Metadata regarding compilation of a directive.\n   */\n  var CompileDirectiveMetadata = (function () {\n      function CompileDirectiveMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, type = _b.type, isComponent = _b.isComponent, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, hostListeners = _b.hostListeners, hostProperties = _b.hostProperties, hostAttributes = _b.hostAttributes, providers = _b.providers, viewProviders = _b.viewProviders, queries = _b.queries, viewQueries = _b.viewQueries, entryComponents = _b.entryComponents, template = _b.template;\n          this.type = type;\n          this.isComponent = isComponent;\n          this.selector = selector;\n          this.exportAs = exportAs;\n          this.changeDetection = changeDetection;\n          this.inputs = inputs;\n          this.outputs = outputs;\n          this.hostListeners = hostListeners;\n          this.hostProperties = hostProperties;\n          this.hostAttributes = hostAttributes;\n          this.providers = _normalizeArray(providers);\n          this.viewProviders = _normalizeArray(viewProviders);\n          this.queries = _normalizeArray(queries);\n          this.viewQueries = _normalizeArray(viewQueries);\n          this.entryComponents = _normalizeArray(entryComponents);\n          this.template = template;\n      }\n      CompileDirectiveMetadata.create = function (_a) {\n          var _b = _a === void 0 ? {} : _a, type = _b.type, isComponent = _b.isComponent, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, host = _b.host, providers = _b.providers, viewProviders = _b.viewProviders, queries = _b.queries, viewQueries = _b.viewQueries, entryComponents = _b.entryComponents, template = _b.template;\n          var hostListeners = {};\n          var hostProperties = {};\n          var hostAttributes = {};\n          if (isPresent(host)) {\n              Object.keys(host).forEach(function (key) {\n                  var value = host[key];\n                  var matches = key.match(HOST_REG_EXP);\n                  if (matches === null) {\n                      hostAttributes[key] = value;\n                  }\n                  else if (isPresent(matches[1])) {\n                      hostProperties[matches[1]] = value;\n                  }\n                  else if (isPresent(matches[2])) {\n                      hostListeners[matches[2]] = value;\n                  }\n              });\n          }\n          var inputsMap = {};\n          if (isPresent(inputs)) {\n              inputs.forEach(function (bindConfig) {\n                  // canonical syntax: `dirProp: elProp`\n                  // if there is no `:`, use dirProp = elProp\n                  var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                  inputsMap[parts[0]] = parts[1];\n              });\n          }\n          var outputsMap = {};\n          if (isPresent(outputs)) {\n              outputs.forEach(function (bindConfig) {\n                  // canonical syntax: `dirProp: elProp`\n                  // if there is no `:`, use dirProp = elProp\n                  var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                  outputsMap[parts[0]] = parts[1];\n              });\n          }\n          return new CompileDirectiveMetadata({\n              type: type,\n              isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n              inputs: inputsMap,\n              outputs: outputsMap,\n              hostListeners: hostListeners,\n              hostProperties: hostProperties,\n              hostAttributes: hostAttributes,\n              providers: providers,\n              viewProviders: viewProviders,\n              queries: queries,\n              viewQueries: viewQueries,\n              entryComponents: entryComponents,\n              template: template,\n          });\n      };\n      Object.defineProperty(CompileDirectiveMetadata.prototype, \"identifier\", {\n          get: function () { return this.type; },\n          enumerable: true,\n          configurable: true\n      });\n      CompileDirectiveMetadata.prototype.toSummary = function () {\n          return {\n              isSummary: true,\n              type: this.type,\n              isComponent: this.isComponent,\n              selector: this.selector,\n              exportAs: this.exportAs,\n              inputs: this.inputs,\n              outputs: this.outputs,\n              hostListeners: this.hostListeners,\n              hostProperties: this.hostProperties,\n              hostAttributes: this.hostAttributes,\n              providers: this.providers,\n              viewProviders: this.viewProviders,\n              queries: this.queries,\n              entryComponents: this.entryComponents,\n              changeDetection: this.changeDetection,\n              template: this.template && this.template.toSummary()\n          };\n      };\n      return CompileDirectiveMetadata;\n  }());\n  /**\n   * Construct {@link CompileDirectiveMetadata} from {@link ComponentTypeMetadata} and a selector.\n   */\n  function createHostComponentMeta(compMeta) {\n      var template = CssSelector.parse(compMeta.selector)[0].getMatchingElementTemplate();\n      return CompileDirectiveMetadata.create({\n          type: new CompileTypeMetadata({\n              reference: Object,\n              name: compMeta.type.name + \"_Host\",\n              moduleUrl: compMeta.type.moduleUrl,\n              isHost: true\n          }),\n          template: new CompileTemplateMetadata({\n              encapsulation: _angular_core.ViewEncapsulation.None,\n              template: template,\n              templateUrl: '',\n              styles: [],\n              styleUrls: [],\n              ngContentSelectors: [],\n              animations: []\n          }),\n          changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n          inputs: [],\n          outputs: [],\n          host: {},\n          isComponent: true,\n          selector: '*',\n          providers: [],\n          viewProviders: [],\n          queries: [],\n          viewQueries: []\n      });\n  }\n  var CompilePipeMetadata = (function () {\n      function CompilePipeMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, type = _b.type, name = _b.name, pure = _b.pure;\n          this.type = type;\n          this.name = name;\n          this.pure = !!pure;\n      }\n      Object.defineProperty(CompilePipeMetadata.prototype, \"identifier\", {\n          get: function () { return this.type; },\n          enumerable: true,\n          configurable: true\n      });\n      CompilePipeMetadata.prototype.toSummary = function () {\n          return { isSummary: true, type: this.type, name: this.name, pure: this.pure };\n      };\n      return CompilePipeMetadata;\n  }());\n  /**\n   * Metadata regarding compilation of a module.\n   */\n  var CompileNgModuleMetadata = (function () {\n      function CompileNgModuleMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, type = _b.type, providers = _b.providers, declaredDirectives = _b.declaredDirectives, exportedDirectives = _b.exportedDirectives, declaredPipes = _b.declaredPipes, exportedPipes = _b.exportedPipes, entryComponents = _b.entryComponents, bootstrapComponents = _b.bootstrapComponents, importedModules = _b.importedModules, exportedModules = _b.exportedModules, schemas = _b.schemas, transitiveModule = _b.transitiveModule, id = _b.id;\n          this.type = type;\n          this.declaredDirectives = _normalizeArray(declaredDirectives);\n          this.exportedDirectives = _normalizeArray(exportedDirectives);\n          this.declaredPipes = _normalizeArray(declaredPipes);\n          this.exportedPipes = _normalizeArray(exportedPipes);\n          this.providers = _normalizeArray(providers);\n          this.entryComponents = _normalizeArray(entryComponents);\n          this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n          this.importedModules = _normalizeArray(importedModules);\n          this.exportedModules = _normalizeArray(exportedModules);\n          this.schemas = _normalizeArray(schemas);\n          this.id = id;\n          this.transitiveModule = transitiveModule;\n      }\n      Object.defineProperty(CompileNgModuleMetadata.prototype, \"identifier\", {\n          get: function () { return this.type; },\n          enumerable: true,\n          configurable: true\n      });\n      CompileNgModuleMetadata.prototype.toSummary = function () {\n          return {\n              isSummary: true,\n              type: this.type,\n              entryComponents: this.entryComponents,\n              providers: this.providers,\n              importedModules: this.importedModules,\n              exportedModules: this.exportedModules,\n              exportedDirectives: this.exportedDirectives,\n              exportedPipes: this.exportedPipes,\n              directiveLoaders: this.transitiveModule.directiveLoaders\n          };\n      };\n      CompileNgModuleMetadata.prototype.toInjectorSummary = function () {\n          return {\n              isSummary: true,\n              type: this.type,\n              entryComponents: this.entryComponents,\n              providers: this.providers,\n              importedModules: this.importedModules,\n              exportedModules: this.exportedModules\n          };\n      };\n      CompileNgModuleMetadata.prototype.toDirectiveSummary = function () {\n          return {\n              isSummary: true,\n              type: this.type,\n              exportedDirectives: this.exportedDirectives,\n              exportedPipes: this.exportedPipes,\n              exportedModules: this.exportedModules,\n              directiveLoaders: this.transitiveModule.directiveLoaders\n          };\n      };\n      return CompileNgModuleMetadata;\n  }());\n  var TransitiveCompileNgModuleMetadata = (function () {\n      function TransitiveCompileNgModuleMetadata(modules, providers, entryComponents, directives, pipes, directiveLoaders) {\n          var _this = this;\n          this.modules = modules;\n          this.providers = providers;\n          this.entryComponents = entryComponents;\n          this.directives = directives;\n          this.pipes = pipes;\n          this.directiveLoaders = directiveLoaders;\n          this.directivesSet = new Set();\n          this.pipesSet = new Set();\n          directives.forEach(function (dir) { return _this.directivesSet.add(dir.reference); });\n          pipes.forEach(function (pipe) { return _this.pipesSet.add(pipe.reference); });\n      }\n      return TransitiveCompileNgModuleMetadata;\n  }());\n  function removeIdentifierDuplicates(items) {\n      var map = new Map();\n      items.forEach(function (item) {\n          if (!map.get(item.identifier.reference)) {\n              map.set(item.identifier.reference, item);\n          }\n      });\n      return Array.from(map.values());\n  }\n  function _normalizeArray(obj) {\n      return obj || [];\n  }\n  function isStaticSymbol(value) {\n      return typeof value === 'object' && value !== null && value['name'] && value['filePath'];\n  }\n  var ProviderMeta = (function () {\n      function ProviderMeta(token, _a) {\n          var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n          this.token = token;\n          this.useClass = useClass;\n          this.useValue = useValue;\n          this.useExisting = useExisting;\n          this.useFactory = useFactory;\n          this.dependencies = deps;\n          this.multi = !!multi;\n      }\n      return ProviderMeta;\n  }());\n\n  var isDefaultChangeDetectionStrategy = _angular_core.__core_private__.isDefaultChangeDetectionStrategy;\n  var ChangeDetectorStatus = _angular_core.__core_private__.ChangeDetectorStatus;\n  var LifecycleHooks = _angular_core.__core_private__.LifecycleHooks;\n  var LIFECYCLE_HOOKS_VALUES = _angular_core.__core_private__.LIFECYCLE_HOOKS_VALUES;\n  var ReflectorReader = _angular_core.__core_private__.ReflectorReader;\n  var ViewContainer = _angular_core.__core_private__.ViewContainer;\n  var CodegenComponentFactoryResolver = _angular_core.__core_private__.CodegenComponentFactoryResolver;\n  var ComponentRef_ = _angular_core.__core_private__.ComponentRef_;\n  var AppView = _angular_core.__core_private__.AppView;\n  var DebugAppView = _angular_core.__core_private__.DebugAppView;\n  var NgModuleInjector = _angular_core.__core_private__.NgModuleInjector;\n  var registerModuleFactory = _angular_core.__core_private__.registerModuleFactory;\n  var ViewType = _angular_core.__core_private__.ViewType;\n  var view_utils = _angular_core.__core_private__.view_utils;\n  var DebugContext = _angular_core.__core_private__.DebugContext;\n  var StaticNodeDebugInfo = _angular_core.__core_private__.StaticNodeDebugInfo;\n  var devModeEqual = _angular_core.__core_private__.devModeEqual;\n  var UNINITIALIZED = _angular_core.__core_private__.UNINITIALIZED;\n  var ValueUnwrapper = _angular_core.__core_private__.ValueUnwrapper;\n  var TemplateRef_ = _angular_core.__core_private__.TemplateRef_;\n  var Console = _angular_core.__core_private__.Console;\n  var reflector = _angular_core.__core_private__.reflector;\n  var Reflector = _angular_core.__core_private__.Reflector;\n  var ReflectionCapabilities = _angular_core.__core_private__.ReflectionCapabilities;\n  var NoOpAnimationPlayer = _angular_core.__core_private__.NoOpAnimationPlayer;\n  var AnimationSequencePlayer = _angular_core.__core_private__.AnimationSequencePlayer;\n  var AnimationGroupPlayer = _angular_core.__core_private__.AnimationGroupPlayer;\n  var AnimationKeyframe = _angular_core.__core_private__.AnimationKeyframe;\n  var AnimationStyles = _angular_core.__core_private__.AnimationStyles;\n  var ANY_STATE = _angular_core.__core_private__.ANY_STATE;\n  var DEFAULT_STATE = _angular_core.__core_private__.DEFAULT_STATE;\n  var EMPTY_ANIMATION_STATE = _angular_core.__core_private__.EMPTY_STATE;\n  var FILL_STYLE_FLAG = _angular_core.__core_private__.FILL_STYLE_FLAG;\n  var prepareFinalAnimationStyles = _angular_core.__core_private__.prepareFinalAnimationStyles;\n  var balanceAnimationKeyframes = _angular_core.__core_private__.balanceAnimationKeyframes;\n  var clearStyles = _angular_core.__core_private__.clearStyles;\n  var collectAndResolveStyles = _angular_core.__core_private__.collectAndResolveStyles;\n  var renderStyles = _angular_core.__core_private__.renderStyles;\n  var ComponentStillLoadingError = _angular_core.__core_private__.ComponentStillLoadingError;\n  var AnimationTransition = _angular_core.__core_private__.AnimationTransition;\n\n  var APP_VIEW_MODULE_URL = assetUrl('core', 'linker/view');\n  var VIEW_UTILS_MODULE_URL = assetUrl('core', 'linker/view_utils');\n  var CD_MODULE_URL = assetUrl('core', 'change_detection/change_detection');\n  var ANIMATION_STYLE_UTIL_ASSET_URL = assetUrl('core', 'animation/animation_style_util');\n  var Identifiers = (function () {\n      function Identifiers() {\n      }\n      Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n          name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n          moduleUrl: assetUrl('core', 'metadata/di'),\n          runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n      };\n      Identifiers.ViewUtils = {\n          name: 'ViewUtils',\n          moduleUrl: assetUrl('core', 'linker/view_utils'),\n          runtime: view_utils.ViewUtils\n      };\n      Identifiers.AppView = { name: 'AppView', moduleUrl: APP_VIEW_MODULE_URL, runtime: AppView };\n      Identifiers.DebugAppView = {\n          name: 'DebugAppView',\n          moduleUrl: APP_VIEW_MODULE_URL,\n          runtime: DebugAppView\n      };\n      Identifiers.ViewContainer = {\n          name: 'ViewContainer',\n          moduleUrl: assetUrl('core', 'linker/view_container'),\n          runtime: ViewContainer\n      };\n      Identifiers.ElementRef = {\n          name: 'ElementRef',\n          moduleUrl: assetUrl('core', 'linker/element_ref'),\n          runtime: _angular_core.ElementRef\n      };\n      Identifiers.ViewContainerRef = {\n          name: 'ViewContainerRef',\n          moduleUrl: assetUrl('core', 'linker/view_container_ref'),\n          runtime: _angular_core.ViewContainerRef\n      };\n      Identifiers.ChangeDetectorRef = {\n          name: 'ChangeDetectorRef',\n          moduleUrl: assetUrl('core', 'change_detection/change_detector_ref'),\n          runtime: _angular_core.ChangeDetectorRef\n      };\n      Identifiers.RenderComponentType = {\n          name: 'RenderComponentType',\n          moduleUrl: assetUrl('core', 'render/api'),\n          runtime: _angular_core.RenderComponentType\n      };\n      Identifiers.QueryList = {\n          name: 'QueryList',\n          moduleUrl: assetUrl('core', 'linker/query_list'),\n          runtime: _angular_core.QueryList\n      };\n      Identifiers.TemplateRef = {\n          name: 'TemplateRef',\n          moduleUrl: assetUrl('core', 'linker/template_ref'),\n          runtime: _angular_core.TemplateRef\n      };\n      Identifiers.TemplateRef_ = {\n          name: 'TemplateRef_',\n          moduleUrl: assetUrl('core', 'linker/template_ref'),\n          runtime: TemplateRef_\n      };\n      Identifiers.CodegenComponentFactoryResolver = {\n          name: 'CodegenComponentFactoryResolver',\n          moduleUrl: assetUrl('core', 'linker/component_factory_resolver'),\n          runtime: CodegenComponentFactoryResolver\n      };\n      Identifiers.ComponentFactoryResolver = {\n          name: 'ComponentFactoryResolver',\n          moduleUrl: assetUrl('core', 'linker/component_factory_resolver'),\n          runtime: _angular_core.ComponentFactoryResolver\n      };\n      Identifiers.ComponentFactory = {\n          name: 'ComponentFactory',\n          runtime: _angular_core.ComponentFactory,\n          moduleUrl: assetUrl('core', 'linker/component_factory')\n      };\n      Identifiers.ComponentRef_ = {\n          name: 'ComponentRef_',\n          runtime: ComponentRef_,\n          moduleUrl: assetUrl('core', 'linker/component_factory')\n      };\n      Identifiers.ComponentRef = {\n          name: 'ComponentRef',\n          runtime: _angular_core.ComponentRef,\n          moduleUrl: assetUrl('core', 'linker/component_factory')\n      };\n      Identifiers.NgModuleFactory = {\n          name: 'NgModuleFactory',\n          runtime: _angular_core.NgModuleFactory,\n          moduleUrl: assetUrl('core', 'linker/ng_module_factory')\n      };\n      Identifiers.NgModuleInjector = {\n          name: 'NgModuleInjector',\n          runtime: NgModuleInjector,\n          moduleUrl: assetUrl('core', 'linker/ng_module_factory')\n      };\n      Identifiers.RegisterModuleFactoryFn = {\n          name: 'registerModuleFactory',\n          runtime: registerModuleFactory,\n          moduleUrl: assetUrl('core', 'linker/ng_module_factory_loader')\n      };\n      Identifiers.ValueUnwrapper = { name: 'ValueUnwrapper', moduleUrl: CD_MODULE_URL, runtime: ValueUnwrapper };\n      Identifiers.Injector = {\n          name: 'Injector',\n          moduleUrl: assetUrl('core', 'di/injector'),\n          runtime: _angular_core.Injector\n      };\n      Identifiers.ViewEncapsulation = {\n          name: 'ViewEncapsulation',\n          moduleUrl: assetUrl('core', 'metadata/view'),\n          runtime: _angular_core.ViewEncapsulation\n      };\n      Identifiers.ViewType = {\n          name: 'ViewType',\n          moduleUrl: assetUrl('core', 'linker/view_type'),\n          runtime: ViewType\n      };\n      Identifiers.ChangeDetectionStrategy = {\n          name: 'ChangeDetectionStrategy',\n          moduleUrl: CD_MODULE_URL,\n          runtime: _angular_core.ChangeDetectionStrategy\n      };\n      Identifiers.StaticNodeDebugInfo = {\n          name: 'StaticNodeDebugInfo',\n          moduleUrl: assetUrl('core', 'linker/debug_context'),\n          runtime: StaticNodeDebugInfo\n      };\n      Identifiers.DebugContext = {\n          name: 'DebugContext',\n          moduleUrl: assetUrl('core', 'linker/debug_context'),\n          runtime: DebugContext\n      };\n      Identifiers.Renderer = {\n          name: 'Renderer',\n          moduleUrl: assetUrl('core', 'render/api'),\n          runtime: _angular_core.Renderer\n      };\n      Identifiers.SimpleChange = { name: 'SimpleChange', moduleUrl: CD_MODULE_URL, runtime: _angular_core.SimpleChange };\n      Identifiers.UNINITIALIZED = { name: 'UNINITIALIZED', moduleUrl: CD_MODULE_URL, runtime: UNINITIALIZED };\n      Identifiers.ChangeDetectorStatus = {\n          name: 'ChangeDetectorStatus',\n          moduleUrl: CD_MODULE_URL,\n          runtime: ChangeDetectorStatus\n      };\n      Identifiers.checkBinding = {\n          name: 'checkBinding',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.checkBinding\n      };\n      Identifiers.devModeEqual = { name: 'devModeEqual', moduleUrl: CD_MODULE_URL, runtime: devModeEqual };\n      Identifiers.inlineInterpolate = {\n          name: 'inlineInterpolate',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.inlineInterpolate\n      };\n      Identifiers.interpolate = {\n          name: 'interpolate',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.interpolate\n      };\n      Identifiers.castByValue = {\n          name: 'castByValue',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.castByValue\n      };\n      Identifiers.EMPTY_ARRAY = {\n          name: 'EMPTY_ARRAY',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.EMPTY_ARRAY\n      };\n      Identifiers.EMPTY_MAP = {\n          name: 'EMPTY_MAP',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.EMPTY_MAP\n      };\n      Identifiers.createRenderElement = {\n          name: 'createRenderElement',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.createRenderElement\n      };\n      Identifiers.selectOrCreateRenderHostElement = {\n          name: 'selectOrCreateRenderHostElement',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.selectOrCreateRenderHostElement\n      };\n      Identifiers.pureProxies = [\n          null,\n          { name: 'pureProxy1', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy1 },\n          { name: 'pureProxy2', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy2 },\n          { name: 'pureProxy3', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy3 },\n          { name: 'pureProxy4', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy4 },\n          { name: 'pureProxy5', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy5 },\n          { name: 'pureProxy6', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy6 },\n          { name: 'pureProxy7', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy7 },\n          { name: 'pureProxy8', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy8 },\n          { name: 'pureProxy9', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy9 },\n          { name: 'pureProxy10', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy10 },\n      ];\n      Identifiers.SecurityContext = {\n          name: 'SecurityContext',\n          moduleUrl: assetUrl('core', 'security'),\n          runtime: _angular_core.SecurityContext,\n      };\n      Identifiers.AnimationKeyframe = {\n          name: 'AnimationKeyframe',\n          moduleUrl: assetUrl('core', 'animation/animation_keyframe'),\n          runtime: AnimationKeyframe\n      };\n      Identifiers.AnimationStyles = {\n          name: 'AnimationStyles',\n          moduleUrl: assetUrl('core', 'animation/animation_styles'),\n          runtime: AnimationStyles\n      };\n      Identifiers.NoOpAnimationPlayer = {\n          name: 'NoOpAnimationPlayer',\n          moduleUrl: assetUrl('core', 'animation/animation_player'),\n          runtime: NoOpAnimationPlayer\n      };\n      Identifiers.AnimationGroupPlayer = {\n          name: 'AnimationGroupPlayer',\n          moduleUrl: assetUrl('core', 'animation/animation_group_player'),\n          runtime: AnimationGroupPlayer\n      };\n      Identifiers.AnimationSequencePlayer = {\n          name: 'AnimationSequencePlayer',\n          moduleUrl: assetUrl('core', 'animation/animation_sequence_player'),\n          runtime: AnimationSequencePlayer\n      };\n      Identifiers.prepareFinalAnimationStyles = {\n          name: 'prepareFinalAnimationStyles',\n          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n          runtime: prepareFinalAnimationStyles\n      };\n      Identifiers.balanceAnimationKeyframes = {\n          name: 'balanceAnimationKeyframes',\n          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n          runtime: balanceAnimationKeyframes\n      };\n      Identifiers.clearStyles = {\n          name: 'clearStyles',\n          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n          runtime: clearStyles\n      };\n      Identifiers.renderStyles = {\n          name: 'renderStyles',\n          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n          runtime: renderStyles\n      };\n      Identifiers.collectAndResolveStyles = {\n          name: 'collectAndResolveStyles',\n          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n          runtime: collectAndResolveStyles\n      };\n      Identifiers.LOCALE_ID = {\n          name: 'LOCALE_ID',\n          moduleUrl: assetUrl('core', 'i18n/tokens'),\n          runtime: _angular_core.LOCALE_ID\n      };\n      Identifiers.TRANSLATIONS_FORMAT = {\n          name: 'TRANSLATIONS_FORMAT',\n          moduleUrl: assetUrl('core', 'i18n/tokens'),\n          runtime: _angular_core.TRANSLATIONS_FORMAT\n      };\n      Identifiers.setBindingDebugInfo = {\n          name: 'setBindingDebugInfo',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.setBindingDebugInfo\n      };\n      Identifiers.setBindingDebugInfoForChanges = {\n          name: 'setBindingDebugInfoForChanges',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.setBindingDebugInfoForChanges\n      };\n      Identifiers.AnimationTransition = {\n          name: 'AnimationTransition',\n          moduleUrl: assetUrl('core', 'animation/animation_transition'),\n          runtime: AnimationTransition\n      };\n      // This is just the interface!\n      Identifiers.InlineArray = { name: 'InlineArray', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: null };\n      Identifiers.inlineArrays = [\n          { name: 'InlineArray2', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray2 },\n          { name: 'InlineArray2', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray2 },\n          { name: 'InlineArray4', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray4 },\n          { name: 'InlineArray8', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray8 },\n          { name: 'InlineArray16', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray16 },\n      ];\n      Identifiers.EMPTY_INLINE_ARRAY = {\n          name: 'EMPTY_INLINE_ARRAY',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.EMPTY_INLINE_ARRAY\n      };\n      Identifiers.InlineArrayDynamic = {\n          name: 'InlineArrayDynamic',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.InlineArrayDynamic\n      };\n      Identifiers.subscribeToRenderElement = {\n          name: 'subscribeToRenderElement',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.subscribeToRenderElement\n      };\n      Identifiers.createRenderComponentType = {\n          name: 'createRenderComponentType',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.createRenderComponentType\n      };\n      Identifiers.noop = { name: 'noop', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.noop };\n      return Identifiers;\n  }());\n  function assetUrl(pkg, path, type) {\n      if (path === void 0) { path = null; }\n      if (type === void 0) { type = 'src'; }\n      if (path == null) {\n          return \"asset:@angular/lib/\" + pkg + \"/index\";\n      }\n      else {\n          return \"asset:@angular/lib/\" + pkg + \"/src/\" + path;\n      }\n  }\n  function resolveIdentifier(identifier) {\n      return new CompileIdentifierMetadata({\n          name: identifier.name,\n          moduleUrl: identifier.moduleUrl,\n          reference: reflector.resolveIdentifier(identifier.name, identifier.moduleUrl, identifier.runtime)\n      });\n  }\n  function identifierToken(identifier) {\n      return new CompileTokenMetadata({ identifier: identifier });\n  }\n  function resolveIdentifierToken(identifier) {\n      return identifierToken(resolveIdentifier(identifier));\n  }\n  function resolveEnumIdentifier(enumType, name) {\n      var resolvedEnum = reflector.resolveEnum(enumType.reference, name);\n      return new CompileIdentifierMetadata({ name: enumType.name + \".\" + name, moduleUrl: enumType.moduleUrl, reference: resolvedEnum });\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$8 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var HtmlParser = (function (_super) {\n      __extends$8(HtmlParser, _super);\n      function HtmlParser() {\n          _super.call(this, getHtmlTagDefinition);\n      }\n      HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n      };\n      HtmlParser.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      HtmlParser.ctorParameters = [];\n      return HtmlParser;\n  }(Parser$1));\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$9 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  // http://cldr.unicode.org/index/cldr-spec/plural-rules\n  var PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n  /**\n   * Expands special forms into elements.\n   *\n   * For example,\n   *\n   * ```\n   * { messages.length, plural,\n   *   =0 {zero}\n   *   =1 {one}\n   *   other {more than one}\n   * }\n   * ```\n   *\n   * will be expanded into\n   *\n   * ```\n   * <ng-container [ngPlural]=\"messages.length\">\n   *   <template ngPluralCase=\"=0\">zero</ng-container>\n   *   <template ngPluralCase=\"=1\">one</ng-container>\n   *   <template ngPluralCase=\"other\">more than one</ng-container>\n   * </ng-container>\n   * ```\n   */\n  function expandNodes(nodes) {\n      var expander = new _Expander();\n      return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n  }\n  var ExpansionResult = (function () {\n      function ExpansionResult(nodes, expanded, errors) {\n          this.nodes = nodes;\n          this.expanded = expanded;\n          this.errors = errors;\n      }\n      return ExpansionResult;\n  }());\n  var ExpansionError = (function (_super) {\n      __extends$9(ExpansionError, _super);\n      function ExpansionError(span, errorMsg) {\n          _super.call(this, span, errorMsg);\n      }\n      return ExpansionError;\n  }(ParseError));\n  /**\n   * Expand expansion forms (plural, select) to directives\n   *\n   * @internal\n   */\n  var _Expander = (function () {\n      function _Expander() {\n          this.isExpanded = false;\n          this.errors = [];\n      }\n      _Expander.prototype.visitElement = function (element, context) {\n          return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n      };\n      _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n      _Expander.prototype.visitText = function (text, context) { return text; };\n      _Expander.prototype.visitComment = function (comment, context) { return comment; };\n      _Expander.prototype.visitExpansion = function (icu, context) {\n          this.isExpanded = true;\n          return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n              _expandDefaultForm(icu, this.errors);\n      };\n      _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n          throw new Error('Should not be reached');\n      };\n      return _Expander;\n  }());\n  function _expandPluralForm(ast, errors) {\n      var children = ast.cases.map(function (c) {\n          if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n              errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n          }\n          var expansionResult = expandNodes(c.expression);\n          errors.push.apply(errors, expansionResult.errors);\n          return new Element(\"template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n      });\n      var switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n      return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n  }\n  function _expandDefaultForm(ast, errors) {\n      var children = ast.cases.map(function (c) {\n          var expansionResult = expandNodes(c.expression);\n          errors.push.apply(errors, expansionResult.errors);\n          if (c.value === 'other') {\n              // other is the default case when no values match\n              return new Element(\"template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n          }\n          return new Element(\"template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n      });\n      var switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n      return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$10 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var ProviderError = (function (_super) {\n      __extends$10(ProviderError, _super);\n      function ProviderError(message, span) {\n          _super.call(this, span, message);\n      }\n      return ProviderError;\n  }(ParseError));\n  var ProviderViewContext = (function () {\n      function ProviderViewContext(component, sourceSpan) {\n          var _this = this;\n          this.component = component;\n          this.sourceSpan = sourceSpan;\n          this.errors = [];\n          this.viewQueries = _getViewQueries(component);\n          this.viewProviders = new Map();\n          _normalizeProviders(component.viewProviders, sourceSpan, this.errors).forEach(function (provider) {\n              if (isBlank(_this.viewProviders.get(provider.token.reference))) {\n                  _this.viewProviders.set(provider.token.reference, true);\n              }\n          });\n      }\n      return ProviderViewContext;\n  }());\n  var ProviderElementContext = (function () {\n      function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, _sourceSpan) {\n          var _this = this;\n          this.viewContext = viewContext;\n          this._parent = _parent;\n          this._isViewRoot = _isViewRoot;\n          this._directiveAsts = _directiveAsts;\n          this._sourceSpan = _sourceSpan;\n          this._transformedProviders = new Map();\n          this._seenProviders = new Map();\n          this._hasViewContainer = false;\n          this._attrs = {};\n          attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n          var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n          this._allProviders =\n              _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n          this._contentQueries = _getContentQueries(directivesMeta);\n          var queriedTokens = new Map();\n          Array.from(this._allProviders.values()).forEach(function (provider) {\n              _this._addQueryReadsTo(provider.token, queriedTokens);\n          });\n          refs.forEach(function (refAst) {\n              _this._addQueryReadsTo(new CompileTokenMetadata({ value: refAst.name }), queriedTokens);\n          });\n          if (isPresent(queriedTokens.get(resolveIdentifierToken(Identifiers.ViewContainerRef).reference))) {\n              this._hasViewContainer = true;\n          }\n          // create the providers that we know are eager first\n          Array.from(this._allProviders.values()).forEach(function (provider) {\n              var eager = provider.eager || isPresent(queriedTokens.get(provider.token.reference));\n              if (eager) {\n                  _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n              }\n          });\n      }\n      ProviderElementContext.prototype.afterElement = function () {\n          var _this = this;\n          // collect lazy providers\n          Array.from(this._allProviders.values()).forEach(function (provider) {\n              _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n          });\n      };\n      Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n          get: function () {\n              return Array.from(this._transformedProviders.values());\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n          get: function () {\n              var sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n              var sortedDirectives = this._directiveAsts.slice();\n              sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                  sortedProviderTypes.indexOf(dir2.directive.type); });\n              return sortedDirectives;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n          get: function () { return this._hasViewContainer; },\n          enumerable: true,\n          configurable: true\n      });\n      ProviderElementContext.prototype._addQueryReadsTo = function (token, queryReadTokens) {\n          this._getQueriesFor(token).forEach(function (query) {\n              var queryReadToken = query.read || token;\n              if (isBlank(queryReadTokens.get(queryReadToken.reference))) {\n                  queryReadTokens.set(queryReadToken.reference, true);\n              }\n          });\n      };\n      ProviderElementContext.prototype._getQueriesFor = function (token) {\n          var result = [];\n          var currentEl = this;\n          var distance = 0;\n          var queries;\n          while (currentEl !== null) {\n              queries = currentEl._contentQueries.get(token.reference);\n              if (isPresent(queries)) {\n                  result.push.apply(result, queries.filter(function (query) { return query.descendants || distance <= 1; }));\n              }\n              if (currentEl._directiveAsts.length > 0) {\n                  distance++;\n              }\n              currentEl = currentEl._parent;\n          }\n          queries = this.viewContext.viewQueries.get(token.reference);\n          if (isPresent(queries)) {\n              result.push.apply(result, queries);\n          }\n          return result;\n      };\n      ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n          var _this = this;\n          var resolvedProvider = this._allProviders.get(token.reference);\n          if (!resolvedProvider || ((requestingProviderType === exports.ProviderAstType.Directive ||\n              requestingProviderType === exports.ProviderAstType.PublicService) &&\n              resolvedProvider.providerType === exports.ProviderAstType.PrivateService) ||\n              ((requestingProviderType === exports.ProviderAstType.PrivateService ||\n                  requestingProviderType === exports.ProviderAstType.PublicService) &&\n                  resolvedProvider.providerType === exports.ProviderAstType.Builtin)) {\n              return null;\n          }\n          var transformedProviderAst = this._transformedProviders.get(token.reference);\n          if (isPresent(transformedProviderAst)) {\n              return transformedProviderAst;\n          }\n          if (isPresent(this._seenProviders.get(token.reference))) {\n              this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + token.name, this._sourceSpan));\n              return null;\n          }\n          this._seenProviders.set(token.reference, true);\n          var transformedProviders = resolvedProvider.providers.map(function (provider) {\n              var transformedUseValue = provider.useValue;\n              var transformedUseExisting = provider.useExisting;\n              var transformedDeps;\n              if (isPresent(provider.useExisting)) {\n                  var existingDiDep = _this._getDependency(resolvedProvider.providerType, new CompileDiDependencyMetadata({ token: provider.useExisting }), eager);\n                  if (isPresent(existingDiDep.token)) {\n                      transformedUseExisting = existingDiDep.token;\n                  }\n                  else {\n                      transformedUseExisting = null;\n                      transformedUseValue = existingDiDep.value;\n                  }\n              }\n              else if (isPresent(provider.useFactory)) {\n                  var deps = provider.deps || provider.useFactory.diDeps;\n                  transformedDeps =\n                      deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n              }\n              else if (isPresent(provider.useClass)) {\n                  var deps = provider.deps || provider.useClass.diDeps;\n                  transformedDeps =\n                      deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n              }\n              return _transformProvider(provider, {\n                  useExisting: transformedUseExisting,\n                  useValue: transformedUseValue,\n                  deps: transformedDeps\n              });\n          });\n          transformedProviderAst =\n              _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n          this._transformedProviders.set(token.reference, transformedProviderAst);\n          return transformedProviderAst;\n      };\n      ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n          if (eager === void 0) { eager = null; }\n          if (dep.isAttribute) {\n              var attrValue = this._attrs[dep.token.value];\n              return new CompileDiDependencyMetadata({ isValue: true, value: attrValue == null ? null : attrValue });\n          }\n          if (isPresent(dep.token)) {\n              // access builtints\n              if ((requestingProviderType === exports.ProviderAstType.Directive ||\n                  requestingProviderType === exports.ProviderAstType.Component)) {\n                  if (dep.token.reference === resolveIdentifierToken(Identifiers.Renderer).reference ||\n                      dep.token.reference === resolveIdentifierToken(Identifiers.ElementRef).reference ||\n                      dep.token.reference ===\n                          resolveIdentifierToken(Identifiers.ChangeDetectorRef).reference ||\n                      dep.token.reference === resolveIdentifierToken(Identifiers.TemplateRef).reference) {\n                      return dep;\n                  }\n                  if (dep.token.reference ===\n                      resolveIdentifierToken(Identifiers.ViewContainerRef).reference) {\n                      this._hasViewContainer = true;\n                  }\n              }\n              // access the injector\n              if (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference) {\n                  return dep;\n              }\n              // access providers\n              if (isPresent(this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager))) {\n                  return dep;\n              }\n          }\n          return null;\n      };\n      ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n          if (eager === void 0) { eager = null; }\n          var currElement = this;\n          var currEager = eager;\n          var result = null;\n          if (!dep.isSkipSelf) {\n              result = this._getLocalDependency(requestingProviderType, dep, eager);\n          }\n          if (dep.isSelf) {\n              if (!result && dep.isOptional) {\n                  result = new CompileDiDependencyMetadata({ isValue: true, value: null });\n              }\n          }\n          else {\n              // check parent elements\n              while (!result && isPresent(currElement._parent)) {\n                  var prevElement = currElement;\n                  currElement = currElement._parent;\n                  if (prevElement._isViewRoot) {\n                      currEager = false;\n                  }\n                  result = currElement._getLocalDependency(exports.ProviderAstType.PublicService, dep, currEager);\n              }\n              // check @Host restriction\n              if (!result) {\n                  if (!dep.isHost || this.viewContext.component.type.isHost ||\n                      this.viewContext.component.type.reference === dep.token.reference ||\n                      isPresent(this.viewContext.viewProviders.get(dep.token.reference))) {\n                      result = dep;\n                  }\n                  else {\n                      result = dep.isOptional ?\n                          result = new CompileDiDependencyMetadata({ isValue: true, value: null }) :\n                          null;\n                  }\n              }\n          }\n          if (!result) {\n              this.viewContext.errors.push(new ProviderError(\"No provider for \" + dep.token.name, this._sourceSpan));\n          }\n          return result;\n      };\n      return ProviderElementContext;\n  }());\n  var NgModuleProviderAnalyzer = (function () {\n      function NgModuleProviderAnalyzer(ngModule, extraProviders, sourceSpan) {\n          var _this = this;\n          this._transformedProviders = new Map();\n          this._seenProviders = new Map();\n          this._errors = [];\n          this._allProviders = new Map();\n          var ngModuleTypes = ngModule.transitiveModule.modules.map(function (moduleMeta) { return moduleMeta.type; });\n          ngModuleTypes.forEach(function (ngModuleType) {\n              var ngModuleProvider = new CompileProviderMetadata({ token: new CompileTokenMetadata({ identifier: ngModuleType }), useClass: ngModuleType });\n              _resolveProviders([ngModuleProvider], exports.ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n          });\n          _resolveProviders(_normalizeProviders(ngModule.transitiveModule.providers.concat(extraProviders), sourceSpan, this._errors), exports.ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n      }\n      NgModuleProviderAnalyzer.prototype.parse = function () {\n          var _this = this;\n          Array.from(this._allProviders.values()).forEach(function (provider) {\n              _this._getOrCreateLocalProvider(provider.token, provider.eager);\n          });\n          if (this._errors.length > 0) {\n              var errorString = this._errors.join('\\n');\n              throw new Error(\"Provider parse errors:\\n\" + errorString);\n          }\n          return Array.from(this._transformedProviders.values());\n      };\n      NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n          var _this = this;\n          var resolvedProvider = this._allProviders.get(token.reference);\n          if (!resolvedProvider) {\n              return null;\n          }\n          var transformedProviderAst = this._transformedProviders.get(token.reference);\n          if (isPresent(transformedProviderAst)) {\n              return transformedProviderAst;\n          }\n          if (isPresent(this._seenProviders.get(token.reference))) {\n              this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + token.name, resolvedProvider.sourceSpan));\n              return null;\n          }\n          this._seenProviders.set(token.reference, true);\n          var transformedProviders = resolvedProvider.providers.map(function (provider) {\n              var transformedUseValue = provider.useValue;\n              var transformedUseExisting = provider.useExisting;\n              var transformedDeps;\n              if (isPresent(provider.useExisting)) {\n                  var existingDiDep = _this._getDependency(new CompileDiDependencyMetadata({ token: provider.useExisting }), eager, resolvedProvider.sourceSpan);\n                  if (isPresent(existingDiDep.token)) {\n                      transformedUseExisting = existingDiDep.token;\n                  }\n                  else {\n                      transformedUseExisting = null;\n                      transformedUseValue = existingDiDep.value;\n                  }\n              }\n              else if (isPresent(provider.useFactory)) {\n                  var deps = provider.deps || provider.useFactory.diDeps;\n                  transformedDeps =\n                      deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n              }\n              else if (isPresent(provider.useClass)) {\n                  var deps = provider.deps || provider.useClass.diDeps;\n                  transformedDeps =\n                      deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n              }\n              return _transformProvider(provider, {\n                  useExisting: transformedUseExisting,\n                  useValue: transformedUseValue,\n                  deps: transformedDeps\n              });\n          });\n          transformedProviderAst =\n              _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n          this._transformedProviders.set(token.reference, transformedProviderAst);\n          return transformedProviderAst;\n      };\n      NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n          if (eager === void 0) { eager = null; }\n          var foundLocal = false;\n          if (!dep.isSkipSelf && isPresent(dep.token)) {\n              // access the injector\n              if (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference ||\n                  dep.token.reference ===\n                      resolveIdentifierToken(Identifiers.ComponentFactoryResolver).reference) {\n                  foundLocal = true;\n              }\n              else if (isPresent(this._getOrCreateLocalProvider(dep.token, eager))) {\n                  foundLocal = true;\n              }\n          }\n          var result = dep;\n          if (dep.isSelf && !foundLocal) {\n              if (dep.isOptional) {\n                  result = new CompileDiDependencyMetadata({ isValue: true, value: null });\n              }\n              else {\n                  this._errors.push(new ProviderError(\"No provider for \" + dep.token.name, requestorSourceSpan));\n              }\n          }\n          return result;\n      };\n      return NgModuleProviderAnalyzer;\n  }());\n  function _transformProvider(provider, _a) {\n      var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n      return new CompileProviderMetadata({\n          token: provider.token,\n          useClass: provider.useClass,\n          useExisting: useExisting,\n          useFactory: provider.useFactory,\n          useValue: useValue,\n          deps: deps,\n          multi: provider.multi\n      });\n  }\n  function _transformProviderAst(provider, _a) {\n      var eager = _a.eager, providers = _a.providers;\n      return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n  }\n  function _normalizeProviders(providers, sourceSpan, targetErrors, targetProviders) {\n      if (targetProviders === void 0) { targetProviders = null; }\n      if (!targetProviders) {\n          targetProviders = [];\n      }\n      if (isPresent(providers)) {\n          providers.forEach(function (provider) {\n              if (Array.isArray(provider)) {\n                  _normalizeProviders(provider, sourceSpan, targetErrors, targetProviders);\n              }\n              else {\n                  var normalizeProvider = void 0;\n                  if (provider instanceof CompileProviderMetadata) {\n                      normalizeProvider = provider;\n                  }\n                  else if (provider instanceof CompileTypeMetadata) {\n                      normalizeProvider = new CompileProviderMetadata({ token: new CompileTokenMetadata({ identifier: provider }), useClass: provider });\n                  }\n                  else {\n                      targetErrors.push(new ProviderError(\"Unknown provider type \" + provider, sourceSpan));\n                  }\n                  if (isPresent(normalizeProvider)) {\n                      targetProviders.push(normalizeProvider);\n                  }\n              }\n          });\n      }\n      return targetProviders;\n  }\n  function _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n      var providersByToken = new Map();\n      directives.forEach(function (directive) {\n          var dirProvider = new CompileProviderMetadata({ token: new CompileTokenMetadata({ identifier: directive.type }), useClass: directive.type });\n          _resolveProviders([dirProvider], directive.isComponent ? exports.ProviderAstType.Component : exports.ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n      });\n      // Note: directives need to be able to overwrite providers of a component!\n      var directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n      directivesWithComponentFirst.forEach(function (directive) {\n          _resolveProviders(_normalizeProviders(directive.providers, sourceSpan, targetErrors), exports.ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n          _resolveProviders(_normalizeProviders(directive.viewProviders, sourceSpan, targetErrors), exports.ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n      });\n      return providersByToken;\n  }\n  function _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n      providers.forEach(function (provider) {\n          var resolvedProvider = targetProvidersByToken.get(provider.token.reference);\n          if (isPresent(resolvedProvider) && resolvedProvider.multiProvider !== provider.multi) {\n              targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + resolvedProvider.token.name, sourceSpan));\n          }\n          if (!resolvedProvider) {\n              var lifecycleHooks = provider.token.identifier && provider.token.identifier instanceof CompileTypeMetadata ?\n                  provider.token.identifier.lifecycleHooks :\n                  [];\n              resolvedProvider = new ProviderAst(provider.token, provider.multi, eager || lifecycleHooks.length > 0, [provider], providerType, lifecycleHooks, sourceSpan);\n              targetProvidersByToken.set(provider.token.reference, resolvedProvider);\n          }\n          else {\n              if (!provider.multi) {\n                  resolvedProvider.providers.length = 0;\n              }\n              resolvedProvider.providers.push(provider);\n          }\n      });\n  }\n  function _getViewQueries(component) {\n      var viewQueries = new Map();\n      if (isPresent(component.viewQueries)) {\n          component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, query); });\n      }\n      return viewQueries;\n  }\n  function _getContentQueries(directives) {\n      var contentQueries = new Map();\n      directives.forEach(function (directive) {\n          if (isPresent(directive.queries)) {\n              directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, query); });\n          }\n      });\n      return contentQueries;\n  }\n  function _addQueryToTokenMap(map, query) {\n      query.selectors.forEach(function (token) {\n          var entry = map.get(token.reference);\n          if (!entry) {\n              entry = [];\n              map.set(token.reference, entry);\n          }\n          entry.push(query);\n      });\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var ElementSchemaRegistry = (function () {\n      function ElementSchemaRegistry() {\n      }\n      return ElementSchemaRegistry;\n  }());\n\n  var StyleWithImports = (function () {\n      function StyleWithImports(style, styleUrls) {\n          this.style = style;\n          this.styleUrls = styleUrls;\n      }\n      return StyleWithImports;\n  }());\n  function isStyleUrlResolvable(url) {\n      if (isBlank(url) || url.length === 0 || url[0] == '/')\n          return false;\n      var schemeMatch = url.match(_urlWithSchemaRe);\n      return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n  }\n  /**\n   * Rewrites stylesheets by resolving and removing the @import urls that\n   * are either relative or don't have a `package:` scheme\n   */\n  function extractStyleUrls(resolver, baseUrl, cssText) {\n      var foundUrls = [];\n      var modifiedCssText = cssText.replace(_cssImportRe, function () {\n          var m = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              m[_i - 0] = arguments[_i];\n          }\n          var url = m[1] || m[2];\n          if (!isStyleUrlResolvable(url)) {\n              // Do not attempt to resolve non-package absolute URLs with URI scheme\n              return m[0];\n          }\n          foundUrls.push(resolver.resolve(baseUrl, url));\n          return '';\n      });\n      return new StyleWithImports(modifiedCssText, foundUrls);\n  }\n  var _cssImportRe = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\n  var _urlWithSchemaRe = /^([^:/?#]+):/;\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$11 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var PROPERTY_PARTS_SEPARATOR = '.';\n  var ATTRIBUTE_PREFIX = 'attr';\n  var CLASS_PREFIX = 'class';\n  var STYLE_PREFIX = 'style';\n  var ANIMATE_PROP_PREFIX = 'animate-';\n  var BoundPropertyType;\n  (function (BoundPropertyType) {\n      BoundPropertyType[BoundPropertyType[\"DEFAULT\"] = 0] = \"DEFAULT\";\n      BoundPropertyType[BoundPropertyType[\"LITERAL_ATTR\"] = 1] = \"LITERAL_ATTR\";\n      BoundPropertyType[BoundPropertyType[\"ANIMATION\"] = 2] = \"ANIMATION\";\n  })(BoundPropertyType || (BoundPropertyType = {}));\n  /**\n   * Represents a parsed property.\n   */\n  var BoundProperty = (function () {\n      function BoundProperty(name, expression, type, sourceSpan) {\n          this.name = name;\n          this.expression = expression;\n          this.type = type;\n          this.sourceSpan = sourceSpan;\n      }\n      Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n          get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n          get: function () { return this.type === BoundPropertyType.ANIMATION; },\n          enumerable: true,\n          configurable: true\n      });\n      return BoundProperty;\n  }());\n  /**\n   * Parses bindings in templates and in the directive host area.\n   */\n  var BindingParser = (function () {\n      function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n          var _this = this;\n          this._exprParser = _exprParser;\n          this._interpolationConfig = _interpolationConfig;\n          this._schemaRegistry = _schemaRegistry;\n          this._targetErrors = _targetErrors;\n          this.pipesByName = new Map();\n          pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n      }\n      BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, sourceSpan) {\n          var _this = this;\n          if (dirMeta.hostProperties) {\n              var boundProps_1 = [];\n              Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                  var expression = dirMeta.hostProperties[propName];\n                  if (typeof expression === 'string') {\n                      _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                  }\n                  else {\n                      _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                  }\n              });\n              return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(dirMeta.selector, prop); });\n          }\n      };\n      BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n          var _this = this;\n          if (dirMeta.hostListeners) {\n              var targetEventAsts_1 = [];\n              Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                  var expression = dirMeta.hostListeners[propName];\n                  if (typeof expression === 'string') {\n                      _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                  }\n                  else {\n                      _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                  }\n              });\n              return targetEventAsts_1;\n          }\n      };\n      BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n          var sourceInfo = sourceSpan.start.toString();\n          try {\n              var ast = this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig);\n              if (ast)\n                  this._reportExpressionParserErrors(ast.errors, sourceSpan);\n              this._checkPipes(ast, sourceSpan);\n              return ast;\n          }\n          catch (e) {\n              this._reportError(\"\" + e, sourceSpan);\n              return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n          }\n      };\n      BindingParser.prototype.parseInlineTemplateBinding = function (name, prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n          var bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n          for (var i = 0; i < bindings.length; i++) {\n              var binding = bindings[i];\n              if (binding.keyIsVar) {\n                  targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n              }\n              else if (isPresent(binding.expression)) {\n                  this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n              }\n              else {\n                  targetMatchableAttrs.push([binding.key, '']);\n                  this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n              }\n          }\n      };\n      BindingParser.prototype._parseTemplateBindings = function (prefixToken, value, sourceSpan) {\n          var _this = this;\n          var sourceInfo = sourceSpan.start.toString();\n          try {\n              var bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n              this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n              bindingsResult.templateBindings.forEach(function (binding) {\n                  if (isPresent(binding.expression)) {\n                      _this._checkPipes(binding.expression, sourceSpan);\n                  }\n              });\n              bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, exports.ParseErrorLevel.WARNING); });\n              return bindingsResult.templateBindings;\n          }\n          catch (e) {\n              this._reportError(\"\" + e, sourceSpan);\n              return [];\n          }\n      };\n      BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n          if (_isAnimationLabel(name)) {\n              name = name.substring(1);\n              if (value) {\n                  this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                      \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, exports.ParseErrorLevel.FATAL);\n              }\n              this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n          }\n          else {\n              targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n          }\n      };\n      BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n          var isAnimationProp = false;\n          if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n              isAnimationProp = true;\n              name = name.substring(ANIMATE_PROP_PREFIX.length);\n          }\n          else if (_isAnimationLabel(name)) {\n              isAnimationProp = true;\n              name = name.substring(1);\n          }\n          if (isAnimationProp) {\n              this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n          }\n          else {\n              this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n          }\n      };\n      BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n          var expr = this.parseInterpolation(value, sourceSpan);\n          if (isPresent(expr)) {\n              this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n              return true;\n          }\n          return false;\n      };\n      BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n          targetMatchableAttrs.push([name, ast.source]);\n          targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n      };\n      BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n          // This will occur when a @trigger is not paired with an expression.\n          // For animations it is valid to not have an expression since */void\n          // states will be applied by angular when the element is attached/detached\n          var ast = this._parseBinding(expression || 'null', false, sourceSpan);\n          targetMatchableAttrs.push([name, ast.source]);\n          targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n      };\n      BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n          var sourceInfo = sourceSpan.start.toString();\n          try {\n              var ast = isHostBinding ?\n                  this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                  this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n              if (ast)\n                  this._reportExpressionParserErrors(ast.errors, sourceSpan);\n              this._checkPipes(ast, sourceSpan);\n              return ast;\n          }\n          catch (e) {\n              this._reportError(\"\" + e, sourceSpan);\n              return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n          }\n      };\n      BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n          if (boundProp.isAnimation) {\n              return new BoundElementPropertyAst(boundProp.name, exports.PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, false, boundProp.expression, null, boundProp.sourceSpan);\n          }\n          var unit = null;\n          var bindingType;\n          var boundPropertyName;\n          var parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n          var securityContexts;\n          if (parts.length === 1) {\n              var partValue = parts[0];\n              boundPropertyName = this._schemaRegistry.getMappedPropName(partValue);\n              securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n              bindingType = exports.PropertyBindingType.Property;\n              this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n          }\n          else {\n              if (parts[0] == ATTRIBUTE_PREFIX) {\n                  boundPropertyName = parts[1];\n                  this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                  securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                  var nsSeparatorIdx = boundPropertyName.indexOf(':');\n                  if (nsSeparatorIdx > -1) {\n                      var ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                      var name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                      boundPropertyName = mergeNsAndName(ns, name_1);\n                  }\n                  bindingType = exports.PropertyBindingType.Attribute;\n              }\n              else if (parts[0] == CLASS_PREFIX) {\n                  boundPropertyName = parts[1];\n                  bindingType = exports.PropertyBindingType.Class;\n                  securityContexts = [_angular_core.SecurityContext.NONE];\n              }\n              else if (parts[0] == STYLE_PREFIX) {\n                  unit = parts.length > 2 ? parts[2] : null;\n                  boundPropertyName = parts[1];\n                  bindingType = exports.PropertyBindingType.Style;\n                  securityContexts = [_angular_core.SecurityContext.STYLE];\n              }\n              else {\n                  this._reportError(\"Invalid property name '\" + boundProp.name + \"'\", boundProp.sourceSpan);\n                  bindingType = null;\n                  securityContexts = [];\n              }\n          }\n          return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts.length === 1 ? securityContexts[0] : null, securityContexts.length > 1, boundProp.expression, unit, boundProp.sourceSpan);\n      };\n      BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n          if (_isAnimationLabel(name)) {\n              name = name.substr(1);\n              this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n          }\n          else {\n              this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n          }\n      };\n      BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n          var matches = splitAtPeriod(name, [name, '']);\n          var eventName = matches[0];\n          var phase = matches[1].toLowerCase();\n          if (phase) {\n              switch (phase) {\n                  case 'start':\n                  case 'done':\n                      var ast = this._parseAction(expression, sourceSpan);\n                      targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                      break;\n                  default:\n                      this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                      break;\n              }\n          }\n          else {\n              this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n          }\n      };\n      BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n          // long format: 'target: eventName'\n          var _a = splitAtColon(name, [null, name]), target = _a[0], eventName = _a[1];\n          var ast = this._parseAction(expression, sourceSpan);\n          targetMatchableAttrs.push([name, ast.source]);\n          targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n          // Don't detect directives for event names for now,\n          // so don't add the event name to the matchableAttrs\n      };\n      BindingParser.prototype._parseAction = function (value, sourceSpan) {\n          var sourceInfo = sourceSpan.start.toString();\n          try {\n              var ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n              if (ast) {\n                  this._reportExpressionParserErrors(ast.errors, sourceSpan);\n              }\n              if (!ast || ast.ast instanceof EmptyExpr) {\n                  this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                  return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n              }\n              this._checkPipes(ast, sourceSpan);\n              return ast;\n          }\n          catch (e) {\n              this._reportError(\"\" + e, sourceSpan);\n              return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n          }\n      };\n      BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n          if (level === void 0) { level = exports.ParseErrorLevel.FATAL; }\n          this._targetErrors.push(new ParseError(sourceSpan, message, level));\n      };\n      BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n          for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n              var error = errors_1[_i];\n              this._reportError(error.message, sourceSpan);\n          }\n      };\n      BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n          var _this = this;\n          if (isPresent(ast)) {\n              var collector = new PipeCollector();\n              ast.visit(collector);\n              collector.pipes.forEach(function (pipeName) {\n                  if (!_this.pipesByName.has(pipeName)) {\n                      _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", sourceSpan);\n                  }\n              });\n          }\n      };\n      /**\n       * @param propName the name of the property / attribute\n       * @param sourceSpan\n       * @param isAttr true when binding to an attribute\n       * @private\n       */\n      BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n          var report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n              this._schemaRegistry.validateProperty(propName);\n          if (report.error) {\n              this._reportError(report.msg, sourceSpan, exports.ParseErrorLevel.FATAL);\n          }\n      };\n      return BindingParser;\n  }());\n  var PipeCollector = (function (_super) {\n      __extends$11(PipeCollector, _super);\n      function PipeCollector() {\n          _super.apply(this, arguments);\n          this.pipes = new Set();\n      }\n      PipeCollector.prototype.visitPipe = function (ast, context) {\n          this.pipes.add(ast.name);\n          ast.exp.visit(this);\n          this.visitAll(ast.args, context);\n          return null;\n      };\n      return PipeCollector;\n  }(RecursiveAstVisitor));\n  function _isAnimationLabel(name) {\n      return name[0] == '@';\n  }\n  function calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n      var ctxs = [];\n      CssSelector.parse(selector).forEach(function (selector) {\n          var elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n          var notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n              .map(function (selector) { return selector.element; }));\n          var possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n          ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n      });\n      return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n  }\n\n  var NG_CONTENT_SELECT_ATTR = 'select';\n  var NG_CONTENT_ELEMENT = 'ng-content';\n  var LINK_ELEMENT = 'link';\n  var LINK_STYLE_REL_ATTR = 'rel';\n  var LINK_STYLE_HREF_ATTR = 'href';\n  var LINK_STYLE_REL_VALUE = 'stylesheet';\n  var STYLE_ELEMENT = 'style';\n  var SCRIPT_ELEMENT = 'script';\n  var NG_NON_BINDABLE_ATTR = 'ngNonBindable';\n  var NG_PROJECT_AS = 'ngProjectAs';\n  function preparseElement(ast) {\n      var selectAttr = null;\n      var hrefAttr = null;\n      var relAttr = null;\n      var nonBindable = false;\n      var projectAs = null;\n      ast.attrs.forEach(function (attr) {\n          var lcAttrName = attr.name.toLowerCase();\n          if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n              selectAttr = attr.value;\n          }\n          else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n              hrefAttr = attr.value;\n          }\n          else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n              relAttr = attr.value;\n          }\n          else if (attr.name == NG_NON_BINDABLE_ATTR) {\n              nonBindable = true;\n          }\n          else if (attr.name == NG_PROJECT_AS) {\n              if (attr.value.length > 0) {\n                  projectAs = attr.value;\n              }\n          }\n      });\n      selectAttr = normalizeNgContentSelect(selectAttr);\n      var nodeName = ast.name.toLowerCase();\n      var type = PreparsedElementType.OTHER;\n      if (splitNsName(nodeName)[1] == NG_CONTENT_ELEMENT) {\n          type = PreparsedElementType.NG_CONTENT;\n      }\n      else if (nodeName == STYLE_ELEMENT) {\n          type = PreparsedElementType.STYLE;\n      }\n      else if (nodeName == SCRIPT_ELEMENT) {\n          type = PreparsedElementType.SCRIPT;\n      }\n      else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n          type = PreparsedElementType.STYLESHEET;\n      }\n      return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n  }\n  var PreparsedElementType;\n  (function (PreparsedElementType) {\n      PreparsedElementType[PreparsedElementType[\"NG_CONTENT\"] = 0] = \"NG_CONTENT\";\n      PreparsedElementType[PreparsedElementType[\"STYLE\"] = 1] = \"STYLE\";\n      PreparsedElementType[PreparsedElementType[\"STYLESHEET\"] = 2] = \"STYLESHEET\";\n      PreparsedElementType[PreparsedElementType[\"SCRIPT\"] = 3] = \"SCRIPT\";\n      PreparsedElementType[PreparsedElementType[\"OTHER\"] = 4] = \"OTHER\";\n  })(PreparsedElementType || (PreparsedElementType = {}));\n  var PreparsedElement = (function () {\n      function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n          this.type = type;\n          this.selectAttr = selectAttr;\n          this.hrefAttr = hrefAttr;\n          this.nonBindable = nonBindable;\n          this.projectAs = projectAs;\n      }\n      return PreparsedElement;\n  }());\n  function normalizeNgContentSelect(selectAttr) {\n      if (selectAttr === null || selectAttr.length === 0) {\n          return '*';\n      }\n      return selectAttr;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  // Group 1 = \"bind-\"\n  // Group 2 = \"let-\"\n  // Group 3 = \"ref-/#\"\n  // Group 4 = \"on-\"\n  // Group 5 = \"bindon-\"\n  // Group 6 = \"@\"\n  // Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\n  // Group 8 = identifier inside [()]\n  // Group 9 = identifier inside []\n  // Group 10 = identifier inside ()\n  var BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n  var KW_BIND_IDX = 1;\n  var KW_LET_IDX = 2;\n  var KW_REF_IDX = 3;\n  var KW_ON_IDX = 4;\n  var KW_BINDON_IDX = 5;\n  var KW_AT_IDX = 6;\n  var IDENT_KW_IDX = 7;\n  var IDENT_BANANA_BOX_IDX = 8;\n  var IDENT_PROPERTY_IDX = 9;\n  var IDENT_EVENT_IDX = 10;\n  var TEMPLATE_ELEMENT = 'template';\n  var TEMPLATE_ATTR = 'template';\n  var TEMPLATE_ATTR_PREFIX = '*';\n  var CLASS_ATTR = 'class';\n  var TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n  /**\n   * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\n   * parsed templates before compilation is invoked, allowing custom expression syntax\n   * and other advanced transformations.\n   *\n   * This is currently an internal-only feature and not meant for general use.\n   */\n  var TEMPLATE_TRANSFORMS = new _angular_core.OpaqueToken('TemplateTransforms');\n  var TemplateParseError = (function (_super) {\n      __extends(TemplateParseError, _super);\n      function TemplateParseError(message, span, level) {\n          _super.call(this, span, message, level);\n      }\n      return TemplateParseError;\n  }(ParseError));\n  var TemplateParseResult = (function () {\n      function TemplateParseResult(templateAst, errors) {\n          this.templateAst = templateAst;\n          this.errors = errors;\n      }\n      return TemplateParseResult;\n  }());\n  var TemplateParser = (function () {\n      function TemplateParser(_exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n          this._exprParser = _exprParser;\n          this._schemaRegistry = _schemaRegistry;\n          this._htmlParser = _htmlParser;\n          this._console = _console;\n          this.transforms = transforms;\n      }\n      TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl) {\n          var result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n          var warnings = result.errors.filter(function (error) { return error.level === exports.ParseErrorLevel.WARNING; });\n          var errors = result.errors.filter(function (error) { return error.level === exports.ParseErrorLevel.FATAL; });\n          if (warnings.length > 0) {\n              this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n          }\n          if (errors.length > 0) {\n              var errorString = errors.join('\\n');\n              throw new Error(\"Template parse errors:\\n\" + errorString);\n          }\n          return result.templateAst;\n      };\n      TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl) {\n          return this.tryParseHtml(this.expandHtml(this._htmlParser.parse(template, templateUrl, true, this.getInterpolationConfig(component))), component, template, directives, pipes, schemas, templateUrl);\n      };\n      TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, template, directives, pipes, schemas, templateUrl) {\n          var result;\n          var errors = htmlAstWithErrors.errors;\n          if (htmlAstWithErrors.rootNodes.length > 0) {\n              var uniqDirectives = removeSummaryDuplicates(directives);\n              var uniqPipes = removeSummaryDuplicates(pipes);\n              var providerViewContext = new ProviderViewContext(component, htmlAstWithErrors.rootNodes[0].sourceSpan);\n              var interpolationConfig = void 0;\n              if (component.template && component.template.interpolation) {\n                  interpolationConfig = {\n                      start: component.template.interpolation[0],\n                      end: component.template.interpolation[1]\n                  };\n              }\n              var bindingParser = new BindingParser(this._exprParser, interpolationConfig, this._schemaRegistry, uniqPipes, errors);\n              var parseVisitor = new TemplateParseVisitor(providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n              result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n              errors.push.apply(errors, providerViewContext.errors);\n          }\n          else {\n              result = [];\n          }\n          this._assertNoReferenceDuplicationOnTemplate(result, errors);\n          if (errors.length > 0) {\n              return new TemplateParseResult(result, errors);\n          }\n          if (isPresent(this.transforms)) {\n              this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n          }\n          return new TemplateParseResult(result, errors);\n      };\n      TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n          if (forced === void 0) { forced = false; }\n          var errors = htmlAstWithErrors.errors;\n          if (errors.length == 0 || forced) {\n              // Transform ICU messages to angular directives\n              var expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n              errors.push.apply(errors, expandedHtmlAst.errors);\n              htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n          }\n          return htmlAstWithErrors;\n      };\n      TemplateParser.prototype.getInterpolationConfig = function (component) {\n          if (component.template) {\n              return InterpolationConfig.fromArray(component.template.interpolation);\n          }\n      };\n      /** @internal */\n      TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n          var existingReferences = [];\n          result.filter(function (element) { return !!element.references; })\n              .forEach(function (element) { return element.references.forEach(function (reference) {\n              var name = reference.name;\n              if (existingReferences.indexOf(name) < 0) {\n                  existingReferences.push(name);\n              }\n              else {\n                  var error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, exports.ParseErrorLevel.FATAL);\n                  errors.push(error);\n              }\n          }); });\n      };\n      TemplateParser.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      TemplateParser.ctorParameters = [\n          { type: Parser, },\n          { type: ElementSchemaRegistry, },\n          { type: I18NHtmlParser, },\n          { type: Console, },\n          { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n      ];\n      return TemplateParser;\n  }());\n  var TemplateParseVisitor = (function () {\n      function TemplateParseVisitor(providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n          var _this = this;\n          this.providerViewContext = providerViewContext;\n          this._bindingParser = _bindingParser;\n          this._schemaRegistry = _schemaRegistry;\n          this._schemas = _schemas;\n          this._targetErrors = _targetErrors;\n          this.selectorMatcher = new SelectorMatcher();\n          this.directivesIndex = new Map();\n          this.ngContentCount = 0;\n          directives.forEach(function (directive, index) {\n              var selector = CssSelector.parse(directive.selector);\n              _this.selectorMatcher.addSelectables(selector, directive);\n              _this.directivesIndex.set(directive, index);\n          });\n      }\n      TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n      TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n      TemplateParseVisitor.prototype.visitText = function (text, parent) {\n          var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n          var expr = this._bindingParser.parseInterpolation(text.value, text.sourceSpan);\n          if (isPresent(expr)) {\n              return new BoundTextAst(expr, ngContentIndex, text.sourceSpan);\n          }\n          else {\n              return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n          }\n      };\n      TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n          return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n      };\n      TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n      TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n          var _this = this;\n          var nodeName = element.name;\n          var preparsedElement = preparseElement(element);\n          if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n              preparsedElement.type === PreparsedElementType.STYLE) {\n              // Skipping <script> for security reasons\n              // Skipping <style> as we already processed them\n              // in the StyleCompiler\n              return null;\n          }\n          if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n              isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n              // Skipping stylesheets with either relative urls or package scheme as we already processed\n              // them in the StyleCompiler\n              return null;\n          }\n          var matchableAttrs = [];\n          var elementOrDirectiveProps = [];\n          var elementOrDirectiveRefs = [];\n          var elementVars = [];\n          var events = [];\n          var templateElementOrDirectiveProps = [];\n          var templateMatchableAttrs = [];\n          var templateElementVars = [];\n          var hasInlineTemplates = false;\n          var attrs = [];\n          var lcElName = splitNsName(nodeName.toLowerCase())[1];\n          var isTemplateElement = lcElName == TEMPLATE_ELEMENT;\n          element.attrs.forEach(function (attr) {\n              var hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n              var templateBindingsSource = undefined;\n              var prefixToken = undefined;\n              if (_this._normalizeAttributeName(attr.name) == TEMPLATE_ATTR) {\n                  templateBindingsSource = attr.value;\n              }\n              else if (attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                  templateBindingsSource = attr.value;\n                  prefixToken = attr.name.substring(TEMPLATE_ATTR_PREFIX.length); // remove the star\n              }\n              var hasTemplateBinding = isPresent(templateBindingsSource);\n              if (hasTemplateBinding) {\n                  if (hasInlineTemplates) {\n                      _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                  }\n                  hasInlineTemplates = true;\n                  _this._bindingParser.parseInlineTemplateBinding(attr.name, prefixToken, templateBindingsSource, attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n              }\n              if (!hasBinding && !hasTemplateBinding) {\n                  // don't include the bindings as attributes as well in the AST\n                  attrs.push(_this.visitAttribute(attr, null));\n                  matchableAttrs.push([attr.name, attr.value]);\n              }\n          });\n          var elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n          var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n          var references = [];\n          var directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, element.sourceSpan, references);\n          var elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, directiveAsts);\n          var isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n          var providerContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs, references, element.sourceSpan);\n          var children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? parent.providerContext : providerContext));\n          providerContext.afterElement();\n          // Override the actual selector when the `ngProjectAs` attribute is provided\n          var projectionSelector = isPresent(preparsedElement.projectAs) ?\n              CssSelector.parse(preparsedElement.projectAs)[0] :\n              elementCssSelector;\n          var ngContentIndex = parent.findNgContentIndex(projectionSelector);\n          var parsedElement;\n          if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n              if (element.children && !element.children.every(_isEmptyTextNode)) {\n                  this._reportError(\"<ng-content> element cannot have content.\", element.sourceSpan);\n              }\n              parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n          }\n          else if (isTemplateElement) {\n              this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n              this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, element.sourceSpan);\n              parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, children, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n          }\n          else {\n              this._assertElementExists(matchElement, element);\n              this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n              var ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n              parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan);\n              this._findComponentDirectives(directiveAsts)\n                  .forEach(function (componentDirectiveAst) { return _this._validateElementAnimationInputOutputs(componentDirectiveAst.hostProperties, componentDirectiveAst.hostEvents, componentDirectiveAst.directive.template); });\n              var componentTemplate = providerContext.viewContext.component.template;\n              this._validateElementAnimationInputOutputs(elementProps, events, componentTemplate.toSummary());\n          }\n          if (hasInlineTemplates) {\n              var templateCssSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n              var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateCssSelector).directives;\n              var templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], element.sourceSpan, []);\n              var templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateDirectiveAsts);\n              this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, element.sourceSpan);\n              var templateProviderContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, parent.isTemplateElement, templateDirectiveAsts, [], [], element.sourceSpan);\n              templateProviderContext.afterElement();\n              parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, [parsedElement], ngContentIndex, element.sourceSpan);\n          }\n          return parsedElement;\n      };\n      TemplateParseVisitor.prototype._validateElementAnimationInputOutputs = function (inputs, outputs, template) {\n          var _this = this;\n          var triggerLookup = new Set();\n          template.animations.forEach(function (entry) { triggerLookup.add(entry); });\n          var animationInputs = inputs.filter(function (input) { return input.isAnimation; });\n          animationInputs.forEach(function (input) {\n              var name = input.name;\n              if (!triggerLookup.has(name)) {\n                  _this._reportError(\"Couldn't find an animation entry for \\\"\" + name + \"\\\"\", input.sourceSpan);\n              }\n          });\n          outputs.forEach(function (output) {\n              if (output.isAnimation) {\n                  var found = animationInputs.find(function (input) { return input.name == output.name; });\n                  if (!found) {\n                      _this._reportError(\"Unable to listen on (@\" + output.name + \".\" + output.phase + \") because the animation trigger [@\" + output.name + \"] isn't being used on the same element\", output.sourceSpan);\n                  }\n              }\n          });\n      };\n      TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n          var name = this._normalizeAttributeName(attr.name);\n          var value = attr.value;\n          var srcSpan = attr.sourceSpan;\n          var bindParts = name.match(BIND_NAME_REGEXP);\n          var hasBinding = false;\n          if (bindParts !== null) {\n              hasBinding = true;\n              if (isPresent(bindParts[KW_BIND_IDX])) {\n                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n              }\n              else if (bindParts[KW_LET_IDX]) {\n                  if (isTemplateElement) {\n                      var identifier = bindParts[IDENT_KW_IDX];\n                      this._parseVariable(identifier, value, srcSpan, targetVars);\n                  }\n                  else {\n                      this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n                  }\n              }\n              else if (bindParts[KW_REF_IDX]) {\n                  var identifier = bindParts[IDENT_KW_IDX];\n                  this._parseReference(identifier, value, srcSpan, targetRefs);\n              }\n              else if (bindParts[KW_ON_IDX]) {\n                  this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n              }\n              else if (bindParts[KW_BINDON_IDX]) {\n                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                  this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n              }\n              else if (bindParts[KW_AT_IDX]) {\n                  this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n              }\n              else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                  this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n              }\n              else if (bindParts[IDENT_PROPERTY_IDX]) {\n                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n              }\n              else if (bindParts[IDENT_EVENT_IDX]) {\n                  this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n              }\n          }\n          else {\n              hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n          }\n          if (!hasBinding) {\n              this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n          }\n          return hasBinding;\n      };\n      TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n          return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n      };\n      TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n          if (identifier.indexOf('-') > -1) {\n              this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n          }\n          targetVars.push(new VariableAst(identifier, value, sourceSpan));\n      };\n      TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n          if (identifier.indexOf('-') > -1) {\n              this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n          }\n          targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n      };\n      TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n          this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n      };\n      TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n          var _this = this;\n          // Need to sort the directives so that we get consistent results throughout,\n          // as selectorMatcher uses Maps inside.\n          // Also deduplicate directives as they might match more than one time!\n          var directives = new Array(this.directivesIndex.size);\n          // Whether any directive selector matches on the element name\n          var matchElement = false;\n          selectorMatcher.match(elementCssSelector, function (selector, directive) {\n              directives[_this.directivesIndex.get(directive)] = directive;\n              matchElement = matchElement || selector.hasElementSelector();\n          });\n          return {\n              directives: directives.filter(function (dir) { return !!dir; }),\n              matchElement: matchElement,\n          };\n      };\n      TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences) {\n          var _this = this;\n          var matchedReferences = new Set();\n          var component = null;\n          var directiveAsts = directives.map(function (directive) {\n              var sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + directive.type.name);\n              if (directive.isComponent) {\n                  component = directive;\n              }\n              var directiveProperties = [];\n              var hostProperties = _this._bindingParser.createDirectiveHostPropertyAsts(directive, sourceSpan);\n              // Note: We need to check the host properties here as well,\n              // as we don't know the element name in the DirectiveWrapperCompiler yet.\n              _this._checkPropertiesInSchema(elementName, hostProperties);\n              var hostEvents = _this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan);\n              _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties);\n              elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                  if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                      (directive.exportAs == elOrDirRef.value)) {\n                      targetReferences.push(new ReferenceAst(elOrDirRef.name, identifierToken(directive.type), elOrDirRef.sourceSpan));\n                      matchedReferences.add(elOrDirRef.name);\n                  }\n              });\n              return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, sourceSpan);\n          });\n          elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n              if (elOrDirRef.value.length > 0) {\n                  if (!matchedReferences.has(elOrDirRef.name)) {\n                      _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                  }\n              }\n              else if (!component) {\n                  var refToken = null;\n                  if (isTemplateElement) {\n                      refToken = resolveIdentifierToken(Identifiers.TemplateRef);\n                  }\n                  targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n              }\n          }); // fix syntax highlighting issue: `\n          return directiveAsts;\n      };\n      TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps) {\n          if (directiveProperties) {\n              var boundPropsByName_1 = new Map();\n              boundProps.forEach(function (boundProp) {\n                  var prevValue = boundPropsByName_1.get(boundProp.name);\n                  if (!prevValue || prevValue.isLiteral) {\n                      // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                      boundPropsByName_1.set(boundProp.name, boundProp);\n                  }\n              });\n              Object.keys(directiveProperties).forEach(function (dirProp) {\n                  var elProp = directiveProperties[dirProp];\n                  var boundProp = boundPropsByName_1.get(elProp);\n                  // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                  if (boundProp) {\n                      targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                  }\n              });\n          }\n      };\n      TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, directives) {\n          var _this = this;\n          var boundElementProps = [];\n          var boundDirectivePropsIndex = new Map();\n          directives.forEach(function (directive) {\n              directive.inputs.forEach(function (prop) {\n                  boundDirectivePropsIndex.set(prop.templateName, prop);\n              });\n          });\n          props.forEach(function (prop) {\n              if (!prop.isLiteral && !boundDirectivePropsIndex.get(prop.name)) {\n                  boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n              }\n          });\n          this._checkPropertiesInSchema(elementName, boundElementProps);\n          return boundElementProps;\n      };\n      TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n          return directives.filter(function (directive) { return directive.directive.isComponent; });\n      };\n      TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n          return this._findComponentDirectives(directives)\n              .map(function (directive) { return directive.directive.type.name; });\n      };\n      TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n          var componentTypeNames = this._findComponentDirectiveNames(directives);\n          if (componentTypeNames.length > 1) {\n              this._reportError(\"More than one component matched on this element.\\n\" +\n                  \"Make sure that only one component's selector can match a given element.\\n\" +\n                  (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n          }\n      };\n      /**\n       * Make sure that non-angular tags conform to the schemas.\n       *\n       * Note: An element is considered an angular tag when at least one directive selector matches the\n       * tag name.\n       *\n       * @param matchElement Whether any directive has matched on the tag name\n       * @param element the html element\n       */\n      TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n          var elName = element.name.replace(/^:xhtml:/, '');\n          if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n              var errorMsg = (\"'\" + elName + \"' is not a known element:\\n\") +\n                  (\"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\") +\n                  (\"2. If '\" + elName + \"' is a Web Component then add \\\"CUSTOM_ELEMENTS_SCHEMA\\\" to the '@NgModule.schemas' of this component to suppress this message.\");\n              this._reportError(errorMsg, element.sourceSpan);\n          }\n      };\n      TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n          var _this = this;\n          var componentTypeNames = this._findComponentDirectiveNames(directives);\n          if (componentTypeNames.length > 0) {\n              this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n          }\n          elementProps.forEach(function (prop) {\n              _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"directives\\\" section.\", sourceSpan);\n          });\n      };\n      TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n          var _this = this;\n          var allDirectiveEvents = new Set();\n          directives.forEach(function (directive) {\n              Object.keys(directive.directive.outputs).forEach(function (k) {\n                  var eventName = directive.directive.outputs[k];\n                  allDirectiveEvents.add(eventName);\n              });\n          });\n          events.forEach(function (event) {\n              if (isPresent(event.target) || !allDirectiveEvents.has(event.name)) {\n                  _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"directives\\\" section.\", event.sourceSpan);\n              }\n          });\n      };\n      TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n          var _this = this;\n          boundProps.forEach(function (boundProp) {\n              if (boundProp.type === exports.PropertyBindingType.Property &&\n                  !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                  var errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                  if (elementName.indexOf('-') > -1) {\n                      errorMsg +=\n                          (\"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\") +\n                              (\"\\n2. If '\" + elementName + \"' is a Web Component then add \\\"CUSTOM_ELEMENTS_SCHEMA\\\" to the '@NgModule.schemas' of this component to suppress this message.\\n\");\n                  }\n                  _this._reportError(errorMsg, boundProp.sourceSpan);\n              }\n          });\n      };\n      TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n          if (level === void 0) { level = exports.ParseErrorLevel.FATAL; }\n          this._targetErrors.push(new ParseError(sourceSpan, message, level));\n      };\n      return TemplateParseVisitor;\n  }());\n  var NonBindableVisitor = (function () {\n      function NonBindableVisitor() {\n      }\n      NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n          var preparsedElement = preparseElement(ast);\n          if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n              preparsedElement.type === PreparsedElementType.STYLE ||\n              preparsedElement.type === PreparsedElementType.STYLESHEET) {\n              // Skipping <script> for security reasons\n              // Skipping <style> and stylesheets as we already processed them\n              // in the StyleCompiler\n              return null;\n          }\n          var attrNameAndValues = ast.attrs.map(function (attrAst) { return [attrAst.name, attrAst.value]; });\n          var selector = createElementCssSelector(ast.name, attrNameAndValues);\n          var ngContentIndex = parent.findNgContentIndex(selector);\n          var children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n          return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n      };\n      NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n      NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n          return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n      };\n      NonBindableVisitor.prototype.visitText = function (text, parent) {\n          var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n          return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n      };\n      NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n      NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n      return NonBindableVisitor;\n  }());\n  var ElementOrDirectiveRef = (function () {\n      function ElementOrDirectiveRef(name, value, sourceSpan) {\n          this.name = name;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      return ElementOrDirectiveRef;\n  }());\n  function splitClasses(classAttrValue) {\n      return classAttrValue.trim().split(/\\s+/g);\n  }\n  var ElementContext = (function () {\n      function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n          this.isTemplateElement = isTemplateElement;\n          this._ngContentIndexMatcher = _ngContentIndexMatcher;\n          this._wildcardNgContentIndex = _wildcardNgContentIndex;\n          this.providerContext = providerContext;\n      }\n      ElementContext.create = function (isTemplateElement, directives, providerContext) {\n          var matcher = new SelectorMatcher();\n          var wildcardNgContentIndex = null;\n          var component = directives.find(function (directive) { return directive.directive.isComponent; });\n          if (component) {\n              var ngContentSelectors = component.directive.template.ngContentSelectors;\n              for (var i = 0; i < ngContentSelectors.length; i++) {\n                  var selector = ngContentSelectors[i];\n                  if (selector === '*') {\n                      wildcardNgContentIndex = i;\n                  }\n                  else {\n                      matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                  }\n              }\n          }\n          return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n      };\n      ElementContext.prototype.findNgContentIndex = function (selector) {\n          var ngContentIndices = [];\n          this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n          ngContentIndices.sort();\n          if (isPresent(this._wildcardNgContentIndex)) {\n              ngContentIndices.push(this._wildcardNgContentIndex);\n          }\n          return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n      };\n      return ElementContext;\n  }());\n  function createElementCssSelector(elementName, matchableAttrs) {\n      var cssSelector = new CssSelector();\n      var elNameNoNs = splitNsName(elementName)[1];\n      cssSelector.setElement(elNameNoNs);\n      for (var i = 0; i < matchableAttrs.length; i++) {\n          var attrName = matchableAttrs[i][0];\n          var attrNameNoNs = splitNsName(attrName)[1];\n          var attrValue = matchableAttrs[i][1];\n          cssSelector.addAttribute(attrNameNoNs, attrValue);\n          if (attrName.toLowerCase() == CLASS_ATTR) {\n              var classes = splitClasses(attrValue);\n              classes.forEach(function (className) { return cssSelector.addClassName(className); });\n          }\n      }\n      return cssSelector;\n  }\n  var EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\n  var NON_BINDABLE_VISITOR = new NonBindableVisitor();\n  function _isEmptyTextNode(node) {\n      return node instanceof Text && node.value.trim().length == 0;\n  }\n  function removeSummaryDuplicates(items) {\n      var map = new Map();\n      items.forEach(function (item) {\n          if (!map.get(item.type.reference)) {\n              map.set(item.type.reference, item);\n          }\n      });\n      return Array.from(map.values());\n  }\n\n  function unimplemented$1() {\n      throw new Error('unimplemented');\n  }\n  var CompilerConfig = (function () {\n      function CompilerConfig(_a) {\n          var _b = _a === void 0 ? {} : _a, _c = _b.renderTypes, renderTypes = _c === void 0 ? new DefaultRenderTypes() : _c, _d = _b.defaultEncapsulation, defaultEncapsulation = _d === void 0 ? _angular_core.ViewEncapsulation.Emulated : _d, genDebugInfo = _b.genDebugInfo, logBindingUpdate = _b.logBindingUpdate, _e = _b.useJit, useJit = _e === void 0 ? true : _e;\n          this.renderTypes = renderTypes;\n          this.defaultEncapsulation = defaultEncapsulation;\n          this._genDebugInfo = genDebugInfo;\n          this._logBindingUpdate = logBindingUpdate;\n          this.useJit = useJit;\n      }\n      Object.defineProperty(CompilerConfig.prototype, \"genDebugInfo\", {\n          get: function () {\n              return this._genDebugInfo === void 0 ? _angular_core.isDevMode() : this._genDebugInfo;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(CompilerConfig.prototype, \"logBindingUpdate\", {\n          get: function () {\n              return this._logBindingUpdate === void 0 ? _angular_core.isDevMode() : this._logBindingUpdate;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      return CompilerConfig;\n  }());\n  /**\n   * Types used for the renderer.\n   * Can be replaced to specialize the generated output to a specific renderer\n   * to help tree shaking.\n   */\n  var RenderTypes = (function () {\n      function RenderTypes() {\n      }\n      Object.defineProperty(RenderTypes.prototype, \"renderer\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(RenderTypes.prototype, \"renderText\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(RenderTypes.prototype, \"renderElement\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(RenderTypes.prototype, \"renderComment\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(RenderTypes.prototype, \"renderNode\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(RenderTypes.prototype, \"renderEvent\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      return RenderTypes;\n  }());\n  var DefaultRenderTypes = (function () {\n      function DefaultRenderTypes() {\n          this.renderText = null;\n          this.renderElement = null;\n          this.renderComment = null;\n          this.renderNode = null;\n          this.renderEvent = null;\n      }\n      Object.defineProperty(DefaultRenderTypes.prototype, \"renderer\", {\n          get: function () { return resolveIdentifier(Identifiers.Renderer); },\n          enumerable: true,\n          configurable: true\n      });\n      ;\n      return DefaultRenderTypes;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$12 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  //// Types\n  var TypeModifier;\n  (function (TypeModifier) {\n      TypeModifier[TypeModifier[\"Const\"] = 0] = \"Const\";\n  })(TypeModifier || (TypeModifier = {}));\n  var Type$1 = (function () {\n      function Type(modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          this.modifiers = modifiers;\n          if (!modifiers) {\n              this.modifiers = [];\n          }\n      }\n      Type.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n      return Type;\n  }());\n  var BuiltinTypeName;\n  (function (BuiltinTypeName) {\n      BuiltinTypeName[BuiltinTypeName[\"Dynamic\"] = 0] = \"Dynamic\";\n      BuiltinTypeName[BuiltinTypeName[\"Bool\"] = 1] = \"Bool\";\n      BuiltinTypeName[BuiltinTypeName[\"String\"] = 2] = \"String\";\n      BuiltinTypeName[BuiltinTypeName[\"Int\"] = 3] = \"Int\";\n      BuiltinTypeName[BuiltinTypeName[\"Number\"] = 4] = \"Number\";\n      BuiltinTypeName[BuiltinTypeName[\"Function\"] = 5] = \"Function\";\n      BuiltinTypeName[BuiltinTypeName[\"Null\"] = 6] = \"Null\";\n  })(BuiltinTypeName || (BuiltinTypeName = {}));\n  var BuiltinType = (function (_super) {\n      __extends$12(BuiltinType, _super);\n      function BuiltinType(name, modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.name = name;\n      }\n      BuiltinType.prototype.visitType = function (visitor, context) {\n          return visitor.visitBuiltintType(this, context);\n      };\n      return BuiltinType;\n  }(Type$1));\n  var ExternalType = (function (_super) {\n      __extends$12(ExternalType, _super);\n      function ExternalType(value, typeParams, modifiers) {\n          if (typeParams === void 0) { typeParams = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.value = value;\n          this.typeParams = typeParams;\n      }\n      ExternalType.prototype.visitType = function (visitor, context) {\n          return visitor.visitExternalType(this, context);\n      };\n      return ExternalType;\n  }(Type$1));\n  var ArrayType = (function (_super) {\n      __extends$12(ArrayType, _super);\n      function ArrayType(of, modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.of = of;\n      }\n      ArrayType.prototype.visitType = function (visitor, context) {\n          return visitor.visitArrayType(this, context);\n      };\n      return ArrayType;\n  }(Type$1));\n  var MapType = (function (_super) {\n      __extends$12(MapType, _super);\n      function MapType(valueType, modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.valueType = valueType;\n      }\n      MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n      return MapType;\n  }(Type$1));\n  var DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\n  var BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\n  var INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\n  var NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\n  var STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\n  var FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n  var NULL_TYPE = new BuiltinType(BuiltinTypeName.Null);\n  ///// Expressions\n  var BinaryOperator;\n  (function (BinaryOperator) {\n      BinaryOperator[BinaryOperator[\"Equals\"] = 0] = \"Equals\";\n      BinaryOperator[BinaryOperator[\"NotEquals\"] = 1] = \"NotEquals\";\n      BinaryOperator[BinaryOperator[\"Identical\"] = 2] = \"Identical\";\n      BinaryOperator[BinaryOperator[\"NotIdentical\"] = 3] = \"NotIdentical\";\n      BinaryOperator[BinaryOperator[\"Minus\"] = 4] = \"Minus\";\n      BinaryOperator[BinaryOperator[\"Plus\"] = 5] = \"Plus\";\n      BinaryOperator[BinaryOperator[\"Divide\"] = 6] = \"Divide\";\n      BinaryOperator[BinaryOperator[\"Multiply\"] = 7] = \"Multiply\";\n      BinaryOperator[BinaryOperator[\"Modulo\"] = 8] = \"Modulo\";\n      BinaryOperator[BinaryOperator[\"And\"] = 9] = \"And\";\n      BinaryOperator[BinaryOperator[\"Or\"] = 10] = \"Or\";\n      BinaryOperator[BinaryOperator[\"Lower\"] = 11] = \"Lower\";\n      BinaryOperator[BinaryOperator[\"LowerEquals\"] = 12] = \"LowerEquals\";\n      BinaryOperator[BinaryOperator[\"Bigger\"] = 13] = \"Bigger\";\n      BinaryOperator[BinaryOperator[\"BiggerEquals\"] = 14] = \"BiggerEquals\";\n  })(BinaryOperator || (BinaryOperator = {}));\n  var Expression = (function () {\n      function Expression(type) {\n          this.type = type;\n      }\n      Expression.prototype.prop = function (name) { return new ReadPropExpr(this, name); };\n      Expression.prototype.key = function (index, type) {\n          if (type === void 0) { type = null; }\n          return new ReadKeyExpr(this, index, type);\n      };\n      Expression.prototype.callMethod = function (name, params) {\n          return new InvokeMethodExpr(this, name, params);\n      };\n      Expression.prototype.callFn = function (params) { return new InvokeFunctionExpr(this, params); };\n      Expression.prototype.instantiate = function (params, type) {\n          if (type === void 0) { type = null; }\n          return new InstantiateExpr(this, params, type);\n      };\n      Expression.prototype.conditional = function (trueCase, falseCase) {\n          if (falseCase === void 0) { falseCase = null; }\n          return new ConditionalExpr(this, trueCase, falseCase);\n      };\n      Expression.prototype.equals = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs);\n      };\n      Expression.prototype.notEquals = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs);\n      };\n      Expression.prototype.identical = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs);\n      };\n      Expression.prototype.notIdentical = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs);\n      };\n      Expression.prototype.minus = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs);\n      };\n      Expression.prototype.plus = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs);\n      };\n      Expression.prototype.divide = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs);\n      };\n      Expression.prototype.multiply = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs);\n      };\n      Expression.prototype.modulo = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs);\n      };\n      Expression.prototype.and = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.And, this, rhs);\n      };\n      Expression.prototype.or = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs);\n      };\n      Expression.prototype.lower = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs);\n      };\n      Expression.prototype.lowerEquals = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs);\n      };\n      Expression.prototype.bigger = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs);\n      };\n      Expression.prototype.biggerEquals = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs);\n      };\n      Expression.prototype.isBlank = function () {\n          // Note: We use equals by purpose here to compare to null and undefined in JS.\n          // We use the typed null to allow strictNullChecks to narrow types.\n          return this.equals(TYPED_NULL_EXPR);\n      };\n      Expression.prototype.cast = function (type) { return new CastExpr(this, type); };\n      Expression.prototype.toStmt = function () { return new ExpressionStatement(this); };\n      return Expression;\n  }());\n  var BuiltinVar;\n  (function (BuiltinVar) {\n      BuiltinVar[BuiltinVar[\"This\"] = 0] = \"This\";\n      BuiltinVar[BuiltinVar[\"Super\"] = 1] = \"Super\";\n      BuiltinVar[BuiltinVar[\"CatchError\"] = 2] = \"CatchError\";\n      BuiltinVar[BuiltinVar[\"CatchStack\"] = 3] = \"CatchStack\";\n  })(BuiltinVar || (BuiltinVar = {}));\n  var ReadVarExpr = (function (_super) {\n      __extends$12(ReadVarExpr, _super);\n      function ReadVarExpr(name, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          if (typeof name === 'string') {\n              this.name = name;\n              this.builtin = null;\n          }\n          else {\n              this.name = null;\n              this.builtin = name;\n          }\n      }\n      ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitReadVarExpr(this, context);\n      };\n      ReadVarExpr.prototype.set = function (value) { return new WriteVarExpr(this.name, value); };\n      return ReadVarExpr;\n  }(Expression));\n  var WriteVarExpr = (function (_super) {\n      __extends$12(WriteVarExpr, _super);\n      function WriteVarExpr(name, value, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type || value.type);\n          this.name = name;\n          this.value = value;\n      }\n      WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitWriteVarExpr(this, context);\n      };\n      WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          return new DeclareVarStmt(this.name, this.value, type, modifiers);\n      };\n      return WriteVarExpr;\n  }(Expression));\n  var WriteKeyExpr = (function (_super) {\n      __extends$12(WriteKeyExpr, _super);\n      function WriteKeyExpr(receiver, index, value, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type || value.type);\n          this.receiver = receiver;\n          this.index = index;\n          this.value = value;\n      }\n      WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitWriteKeyExpr(this, context);\n      };\n      return WriteKeyExpr;\n  }(Expression));\n  var WritePropExpr = (function (_super) {\n      __extends$12(WritePropExpr, _super);\n      function WritePropExpr(receiver, name, value, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type || value.type);\n          this.receiver = receiver;\n          this.name = name;\n          this.value = value;\n      }\n      WritePropExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitWritePropExpr(this, context);\n      };\n      return WritePropExpr;\n  }(Expression));\n  var BuiltinMethod;\n  (function (BuiltinMethod) {\n      BuiltinMethod[BuiltinMethod[\"ConcatArray\"] = 0] = \"ConcatArray\";\n      BuiltinMethod[BuiltinMethod[\"SubscribeObservable\"] = 1] = \"SubscribeObservable\";\n      BuiltinMethod[BuiltinMethod[\"Bind\"] = 2] = \"Bind\";\n  })(BuiltinMethod || (BuiltinMethod = {}));\n  var InvokeMethodExpr = (function (_super) {\n      __extends$12(InvokeMethodExpr, _super);\n      function InvokeMethodExpr(receiver, method, args, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.receiver = receiver;\n          this.args = args;\n          if (typeof method === 'string') {\n              this.name = method;\n              this.builtin = null;\n          }\n          else {\n              this.name = null;\n              this.builtin = method;\n          }\n      }\n      InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitInvokeMethodExpr(this, context);\n      };\n      return InvokeMethodExpr;\n  }(Expression));\n  var InvokeFunctionExpr = (function (_super) {\n      __extends$12(InvokeFunctionExpr, _super);\n      function InvokeFunctionExpr(fn, args, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.fn = fn;\n          this.args = args;\n      }\n      InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitInvokeFunctionExpr(this, context);\n      };\n      return InvokeFunctionExpr;\n  }(Expression));\n  var InstantiateExpr = (function (_super) {\n      __extends$12(InstantiateExpr, _super);\n      function InstantiateExpr(classExpr, args, type) {\n          _super.call(this, type);\n          this.classExpr = classExpr;\n          this.args = args;\n      }\n      InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitInstantiateExpr(this, context);\n      };\n      return InstantiateExpr;\n  }(Expression));\n  var LiteralExpr = (function (_super) {\n      __extends$12(LiteralExpr, _super);\n      function LiteralExpr(value, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.value = value;\n      }\n      LiteralExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitLiteralExpr(this, context);\n      };\n      return LiteralExpr;\n  }(Expression));\n  var ExternalExpr = (function (_super) {\n      __extends$12(ExternalExpr, _super);\n      function ExternalExpr(value, type, typeParams) {\n          if (type === void 0) { type = null; }\n          if (typeParams === void 0) { typeParams = null; }\n          _super.call(this, type);\n          this.value = value;\n          this.typeParams = typeParams;\n      }\n      ExternalExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitExternalExpr(this, context);\n      };\n      return ExternalExpr;\n  }(Expression));\n  var ConditionalExpr = (function (_super) {\n      __extends$12(ConditionalExpr, _super);\n      function ConditionalExpr(condition, trueCase, falseCase, type) {\n          if (falseCase === void 0) { falseCase = null; }\n          if (type === void 0) { type = null; }\n          _super.call(this, type || trueCase.type);\n          this.condition = condition;\n          this.falseCase = falseCase;\n          this.trueCase = trueCase;\n      }\n      ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitConditionalExpr(this, context);\n      };\n      return ConditionalExpr;\n  }(Expression));\n  var NotExpr = (function (_super) {\n      __extends$12(NotExpr, _super);\n      function NotExpr(condition) {\n          _super.call(this, BOOL_TYPE);\n          this.condition = condition;\n      }\n      NotExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitNotExpr(this, context);\n      };\n      return NotExpr;\n  }(Expression));\n  var CastExpr = (function (_super) {\n      __extends$12(CastExpr, _super);\n      function CastExpr(value, type) {\n          _super.call(this, type);\n          this.value = value;\n      }\n      CastExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitCastExpr(this, context);\n      };\n      return CastExpr;\n  }(Expression));\n  var FnParam = (function () {\n      function FnParam(name, type) {\n          if (type === void 0) { type = null; }\n          this.name = name;\n          this.type = type;\n      }\n      return FnParam;\n  }());\n  var FunctionExpr = (function (_super) {\n      __extends$12(FunctionExpr, _super);\n      function FunctionExpr(params, statements, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.params = params;\n          this.statements = statements;\n      }\n      FunctionExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitFunctionExpr(this, context);\n      };\n      FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers);\n      };\n      return FunctionExpr;\n  }(Expression));\n  var BinaryOperatorExpr = (function (_super) {\n      __extends$12(BinaryOperatorExpr, _super);\n      function BinaryOperatorExpr(operator, lhs, rhs, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type || lhs.type);\n          this.operator = operator;\n          this.rhs = rhs;\n          this.lhs = lhs;\n      }\n      BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitBinaryOperatorExpr(this, context);\n      };\n      return BinaryOperatorExpr;\n  }(Expression));\n  var ReadPropExpr = (function (_super) {\n      __extends$12(ReadPropExpr, _super);\n      function ReadPropExpr(receiver, name, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.receiver = receiver;\n          this.name = name;\n      }\n      ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitReadPropExpr(this, context);\n      };\n      ReadPropExpr.prototype.set = function (value) {\n          return new WritePropExpr(this.receiver, this.name, value);\n      };\n      return ReadPropExpr;\n  }(Expression));\n  var ReadKeyExpr = (function (_super) {\n      __extends$12(ReadKeyExpr, _super);\n      function ReadKeyExpr(receiver, index, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.receiver = receiver;\n          this.index = index;\n      }\n      ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitReadKeyExpr(this, context);\n      };\n      ReadKeyExpr.prototype.set = function (value) {\n          return new WriteKeyExpr(this.receiver, this.index, value);\n      };\n      return ReadKeyExpr;\n  }(Expression));\n  var LiteralArrayExpr = (function (_super) {\n      __extends$12(LiteralArrayExpr, _super);\n      function LiteralArrayExpr(entries, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.entries = entries;\n      }\n      LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitLiteralArrayExpr(this, context);\n      };\n      return LiteralArrayExpr;\n  }(Expression));\n  var LiteralMapExpr = (function (_super) {\n      __extends$12(LiteralMapExpr, _super);\n      function LiteralMapExpr(entries, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.entries = entries;\n          this.valueType = null;\n          if (isPresent(type)) {\n              this.valueType = type.valueType;\n          }\n      }\n      LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitLiteralMapExpr(this, context);\n      };\n      return LiteralMapExpr;\n  }(Expression));\n  var THIS_EXPR = new ReadVarExpr(BuiltinVar.This);\n  var SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super);\n  var CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError);\n  var CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack);\n  var NULL_EXPR = new LiteralExpr(null, null);\n  var TYPED_NULL_EXPR = new LiteralExpr(null, NULL_TYPE);\n  //// Statements\n  var StmtModifier;\n  (function (StmtModifier) {\n      StmtModifier[StmtModifier[\"Final\"] = 0] = \"Final\";\n      StmtModifier[StmtModifier[\"Private\"] = 1] = \"Private\";\n  })(StmtModifier || (StmtModifier = {}));\n  var Statement = (function () {\n      function Statement(modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          this.modifiers = modifiers;\n          if (!modifiers) {\n              this.modifiers = [];\n          }\n      }\n      Statement.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n      return Statement;\n  }());\n  var DeclareVarStmt = (function (_super) {\n      __extends$12(DeclareVarStmt, _super);\n      function DeclareVarStmt(name, value, type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.name = name;\n          this.value = value;\n          this.type = type || value.type;\n      }\n      DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitDeclareVarStmt(this, context);\n      };\n      return DeclareVarStmt;\n  }(Statement));\n  var DeclareFunctionStmt = (function (_super) {\n      __extends$12(DeclareFunctionStmt, _super);\n      function DeclareFunctionStmt(name, params, statements, type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.name = name;\n          this.params = params;\n          this.statements = statements;\n          this.type = type;\n      }\n      DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitDeclareFunctionStmt(this, context);\n      };\n      return DeclareFunctionStmt;\n  }(Statement));\n  var ExpressionStatement = (function (_super) {\n      __extends$12(ExpressionStatement, _super);\n      function ExpressionStatement(expr) {\n          _super.call(this);\n          this.expr = expr;\n      }\n      ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitExpressionStmt(this, context);\n      };\n      return ExpressionStatement;\n  }(Statement));\n  var ReturnStatement = (function (_super) {\n      __extends$12(ReturnStatement, _super);\n      function ReturnStatement(value) {\n          _super.call(this);\n          this.value = value;\n      }\n      ReturnStatement.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitReturnStmt(this, context);\n      };\n      return ReturnStatement;\n  }(Statement));\n  var AbstractClassPart = (function () {\n      function AbstractClassPart(type, modifiers) {\n          if (type === void 0) { type = null; }\n          this.type = type;\n          this.modifiers = modifiers;\n          if (!modifiers) {\n              this.modifiers = [];\n          }\n      }\n      AbstractClassPart.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n      return AbstractClassPart;\n  }());\n  var ClassField = (function (_super) {\n      __extends$12(ClassField, _super);\n      function ClassField(name, type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, type, modifiers);\n          this.name = name;\n      }\n      return ClassField;\n  }(AbstractClassPart));\n  var ClassMethod = (function (_super) {\n      __extends$12(ClassMethod, _super);\n      function ClassMethod(name, params, body, type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, type, modifiers);\n          this.name = name;\n          this.params = params;\n          this.body = body;\n      }\n      return ClassMethod;\n  }(AbstractClassPart));\n  var ClassGetter = (function (_super) {\n      __extends$12(ClassGetter, _super);\n      function ClassGetter(name, body, type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, type, modifiers);\n          this.name = name;\n          this.body = body;\n      }\n      return ClassGetter;\n  }(AbstractClassPart));\n  var ClassStmt = (function (_super) {\n      __extends$12(ClassStmt, _super);\n      function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.name = name;\n          this.parent = parent;\n          this.fields = fields;\n          this.getters = getters;\n          this.constructorMethod = constructorMethod;\n          this.methods = methods;\n      }\n      ClassStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitDeclareClassStmt(this, context);\n      };\n      return ClassStmt;\n  }(Statement));\n  var IfStmt = (function (_super) {\n      __extends$12(IfStmt, _super);\n      function IfStmt(condition, trueCase, falseCase) {\n          if (falseCase === void 0) { falseCase = []; }\n          _super.call(this);\n          this.condition = condition;\n          this.trueCase = trueCase;\n          this.falseCase = falseCase;\n      }\n      IfStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitIfStmt(this, context);\n      };\n      return IfStmt;\n  }(Statement));\n  var CommentStmt = (function (_super) {\n      __extends$12(CommentStmt, _super);\n      function CommentStmt(comment) {\n          _super.call(this);\n          this.comment = comment;\n      }\n      CommentStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitCommentStmt(this, context);\n      };\n      return CommentStmt;\n  }(Statement));\n  var TryCatchStmt = (function (_super) {\n      __extends$12(TryCatchStmt, _super);\n      function TryCatchStmt(bodyStmts, catchStmts) {\n          _super.call(this);\n          this.bodyStmts = bodyStmts;\n          this.catchStmts = catchStmts;\n      }\n      TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitTryCatchStmt(this, context);\n      };\n      return TryCatchStmt;\n  }(Statement));\n  var ThrowStmt = (function (_super) {\n      __extends$12(ThrowStmt, _super);\n      function ThrowStmt(error) {\n          _super.call(this);\n          this.error = error;\n      }\n      ThrowStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitThrowStmt(this, context);\n      };\n      return ThrowStmt;\n  }(Statement));\n  var ExpressionTransformer = (function () {\n      function ExpressionTransformer() {\n      }\n      ExpressionTransformer.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n      ExpressionTransformer.prototype.visitWriteVarExpr = function (expr, context) {\n          return new WriteVarExpr(expr.name, expr.value.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitWriteKeyExpr = function (expr, context) {\n          return new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitWritePropExpr = function (expr, context) {\n          return new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitInvokeMethodExpr = function (ast, context) {\n          var method = ast.builtin || ast.name;\n          return new InvokeMethodExpr(ast.receiver.visitExpression(this, context), method, this.visitAllExpressions(ast.args, context), ast.type);\n      };\n      ExpressionTransformer.prototype.visitInvokeFunctionExpr = function (ast, context) {\n          return new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type);\n      };\n      ExpressionTransformer.prototype.visitInstantiateExpr = function (ast, context) {\n          return new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type);\n      };\n      ExpressionTransformer.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n      ExpressionTransformer.prototype.visitExternalExpr = function (ast, context) { return ast; };\n      ExpressionTransformer.prototype.visitConditionalExpr = function (ast, context) {\n          return new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), ast.falseCase.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitNotExpr = function (ast, context) {\n          return new NotExpr(ast.condition.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitCastExpr = function (ast, context) {\n          return new CastExpr(ast.value.visitExpression(this, context), context);\n      };\n      ExpressionTransformer.prototype.visitFunctionExpr = function (ast, context) {\n          // Don't descend into nested functions\n          return ast;\n      };\n      ExpressionTransformer.prototype.visitBinaryOperatorExpr = function (ast, context) {\n          return new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type);\n      };\n      ExpressionTransformer.prototype.visitReadPropExpr = function (ast, context) {\n          return new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type);\n      };\n      ExpressionTransformer.prototype.visitReadKeyExpr = function (ast, context) {\n          return new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type);\n      };\n      ExpressionTransformer.prototype.visitLiteralArrayExpr = function (ast, context) {\n          return new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context));\n      };\n      ExpressionTransformer.prototype.visitLiteralMapExpr = function (ast, context) {\n          var _this = this;\n          var entries = ast.entries.map(function (entry) { return [entry[0], entry[1].visitExpression(_this, context),]; });\n          return new LiteralMapExpr(entries);\n      };\n      ExpressionTransformer.prototype.visitAllExpressions = function (exprs, context) {\n          var _this = this;\n          return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n      };\n      ExpressionTransformer.prototype.visitDeclareVarStmt = function (stmt, context) {\n          return new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers);\n      };\n      ExpressionTransformer.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n          // Don't descend into nested functions\n          return stmt;\n      };\n      ExpressionTransformer.prototype.visitExpressionStmt = function (stmt, context) {\n          return new ExpressionStatement(stmt.expr.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitReturnStmt = function (stmt, context) {\n          return new ReturnStatement(stmt.value.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitDeclareClassStmt = function (stmt, context) {\n          // Don't descend into nested functions\n          return stmt;\n      };\n      ExpressionTransformer.prototype.visitIfStmt = function (stmt, context) {\n          return new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context));\n      };\n      ExpressionTransformer.prototype.visitTryCatchStmt = function (stmt, context) {\n          return new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context));\n      };\n      ExpressionTransformer.prototype.visitThrowStmt = function (stmt, context) {\n          return new ThrowStmt(stmt.error.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n      ExpressionTransformer.prototype.visitAllStatements = function (stmts, context) {\n          var _this = this;\n          return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n      };\n      return ExpressionTransformer;\n  }());\n  var RecursiveExpressionVisitor = (function () {\n      function RecursiveExpressionVisitor() {\n      }\n      RecursiveExpressionVisitor.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n      RecursiveExpressionVisitor.prototype.visitWriteVarExpr = function (expr, context) {\n          expr.value.visitExpression(this, context);\n          return expr;\n      };\n      RecursiveExpressionVisitor.prototype.visitWriteKeyExpr = function (expr, context) {\n          expr.receiver.visitExpression(this, context);\n          expr.index.visitExpression(this, context);\n          expr.value.visitExpression(this, context);\n          return expr;\n      };\n      RecursiveExpressionVisitor.prototype.visitWritePropExpr = function (expr, context) {\n          expr.receiver.visitExpression(this, context);\n          expr.value.visitExpression(this, context);\n          return expr;\n      };\n      RecursiveExpressionVisitor.prototype.visitInvokeMethodExpr = function (ast, context) {\n          ast.receiver.visitExpression(this, context);\n          this.visitAllExpressions(ast.args, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitInvokeFunctionExpr = function (ast, context) {\n          ast.fn.visitExpression(this, context);\n          this.visitAllExpressions(ast.args, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitInstantiateExpr = function (ast, context) {\n          ast.classExpr.visitExpression(this, context);\n          this.visitAllExpressions(ast.args, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n      RecursiveExpressionVisitor.prototype.visitExternalExpr = function (ast, context) { return ast; };\n      RecursiveExpressionVisitor.prototype.visitConditionalExpr = function (ast, context) {\n          ast.condition.visitExpression(this, context);\n          ast.trueCase.visitExpression(this, context);\n          ast.falseCase.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitNotExpr = function (ast, context) {\n          ast.condition.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitCastExpr = function (ast, context) {\n          ast.value.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitFunctionExpr = function (ast, context) { return ast; };\n      RecursiveExpressionVisitor.prototype.visitBinaryOperatorExpr = function (ast, context) {\n          ast.lhs.visitExpression(this, context);\n          ast.rhs.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitReadPropExpr = function (ast, context) {\n          ast.receiver.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitReadKeyExpr = function (ast, context) {\n          ast.receiver.visitExpression(this, context);\n          ast.index.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitLiteralArrayExpr = function (ast, context) {\n          this.visitAllExpressions(ast.entries, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitLiteralMapExpr = function (ast, context) {\n          var _this = this;\n          ast.entries.forEach(function (entry) { return entry[1].visitExpression(_this, context); });\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitAllExpressions = function (exprs, context) {\n          var _this = this;\n          exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n      };\n      RecursiveExpressionVisitor.prototype.visitDeclareVarStmt = function (stmt, context) {\n          stmt.value.visitExpression(this, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n          // Don't descend into nested functions\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitExpressionStmt = function (stmt, context) {\n          stmt.expr.visitExpression(this, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitReturnStmt = function (stmt, context) {\n          stmt.value.visitExpression(this, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n          // Don't descend into nested functions\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitIfStmt = function (stmt, context) {\n          stmt.condition.visitExpression(this, context);\n          this.visitAllStatements(stmt.trueCase, context);\n          this.visitAllStatements(stmt.falseCase, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitTryCatchStmt = function (stmt, context) {\n          this.visitAllStatements(stmt.bodyStmts, context);\n          this.visitAllStatements(stmt.catchStmts, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitThrowStmt = function (stmt, context) {\n          stmt.error.visitExpression(this, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n      RecursiveExpressionVisitor.prototype.visitAllStatements = function (stmts, context) {\n          var _this = this;\n          stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n      };\n      return RecursiveExpressionVisitor;\n  }());\n  function replaceVarInExpression(varName, newValue, expression) {\n      var transformer = new _ReplaceVariableTransformer(varName, newValue);\n      return expression.visitExpression(transformer, null);\n  }\n  var _ReplaceVariableTransformer = (function (_super) {\n      __extends$12(_ReplaceVariableTransformer, _super);\n      function _ReplaceVariableTransformer(_varName, _newValue) {\n          _super.call(this);\n          this._varName = _varName;\n          this._newValue = _newValue;\n      }\n      _ReplaceVariableTransformer.prototype.visitReadVarExpr = function (ast, context) {\n          return ast.name == this._varName ? this._newValue : ast;\n      };\n      return _ReplaceVariableTransformer;\n  }(ExpressionTransformer));\n  function findReadVarNames(stmts) {\n      var finder = new _VariableFinder();\n      finder.visitAllStatements(stmts, null);\n      return finder.varNames;\n  }\n  var _VariableFinder = (function (_super) {\n      __extends$12(_VariableFinder, _super);\n      function _VariableFinder() {\n          _super.apply(this, arguments);\n          this.varNames = new Set();\n      }\n      _VariableFinder.prototype.visitReadVarExpr = function (ast, context) {\n          this.varNames.add(ast.name);\n          return null;\n      };\n      return _VariableFinder;\n  }(RecursiveExpressionVisitor));\n  function variable(name, type) {\n      if (type === void 0) { type = null; }\n      return new ReadVarExpr(name, type);\n  }\n  function importExpr(id, typeParams) {\n      if (typeParams === void 0) { typeParams = null; }\n      return new ExternalExpr(id, null, typeParams);\n  }\n  function importType(id, typeParams, typeModifiers) {\n      if (typeParams === void 0) { typeParams = null; }\n      if (typeModifiers === void 0) { typeModifiers = null; }\n      return isPresent(id) ? new ExternalType(id, typeParams, typeModifiers) : null;\n  }\n  function literalArr(values, type) {\n      if (type === void 0) { type = null; }\n      return new LiteralArrayExpr(values, type);\n  }\n  function literalMap(values, type) {\n      if (type === void 0) { type = null; }\n      return new LiteralMapExpr(values, type);\n  }\n  function not(expr) {\n      return new NotExpr(expr);\n  }\n  function fn(params, body, type) {\n      if (type === void 0) { type = null; }\n      return new FunctionExpr(params, body, type);\n  }\n  function literal(value, type) {\n      if (type === void 0) { type = null; }\n      return new LiteralExpr(value, type);\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$13 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var AnimationAst = (function () {\n      function AnimationAst() {\n          this.startTime = 0;\n          this.playTime = 0;\n      }\n      return AnimationAst;\n  }());\n  var AnimationStateAst = (function (_super) {\n      __extends$13(AnimationStateAst, _super);\n      function AnimationStateAst() {\n          _super.apply(this, arguments);\n      }\n      return AnimationStateAst;\n  }(AnimationAst));\n  var AnimationEntryAst = (function (_super) {\n      __extends$13(AnimationEntryAst, _super);\n      function AnimationEntryAst(name, stateDeclarations, stateTransitions) {\n          _super.call(this);\n          this.name = name;\n          this.stateDeclarations = stateDeclarations;\n          this.stateTransitions = stateTransitions;\n      }\n      AnimationEntryAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationEntry(this, context);\n      };\n      return AnimationEntryAst;\n  }(AnimationAst));\n  var AnimationStateDeclarationAst = (function (_super) {\n      __extends$13(AnimationStateDeclarationAst, _super);\n      function AnimationStateDeclarationAst(stateName, styles) {\n          _super.call(this);\n          this.stateName = stateName;\n          this.styles = styles;\n      }\n      AnimationStateDeclarationAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationStateDeclaration(this, context);\n      };\n      return AnimationStateDeclarationAst;\n  }(AnimationStateAst));\n  var AnimationStateTransitionExpression = (function () {\n      function AnimationStateTransitionExpression(fromState, toState) {\n          this.fromState = fromState;\n          this.toState = toState;\n      }\n      return AnimationStateTransitionExpression;\n  }());\n  var AnimationStateTransitionAst = (function (_super) {\n      __extends$13(AnimationStateTransitionAst, _super);\n      function AnimationStateTransitionAst(stateChanges, animation) {\n          _super.call(this);\n          this.stateChanges = stateChanges;\n          this.animation = animation;\n      }\n      AnimationStateTransitionAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationStateTransition(this, context);\n      };\n      return AnimationStateTransitionAst;\n  }(AnimationStateAst));\n  var AnimationStepAst = (function (_super) {\n      __extends$13(AnimationStepAst, _super);\n      function AnimationStepAst(startingStyles, keyframes, duration, delay, easing) {\n          _super.call(this);\n          this.startingStyles = startingStyles;\n          this.keyframes = keyframes;\n          this.duration = duration;\n          this.delay = delay;\n          this.easing = easing;\n      }\n      AnimationStepAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationStep(this, context);\n      };\n      return AnimationStepAst;\n  }(AnimationAst));\n  var AnimationStylesAst = (function (_super) {\n      __extends$13(AnimationStylesAst, _super);\n      function AnimationStylesAst(styles) {\n          _super.call(this);\n          this.styles = styles;\n      }\n      AnimationStylesAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationStyles(this, context);\n      };\n      return AnimationStylesAst;\n  }(AnimationAst));\n  var AnimationKeyframeAst = (function (_super) {\n      __extends$13(AnimationKeyframeAst, _super);\n      function AnimationKeyframeAst(offset, styles) {\n          _super.call(this);\n          this.offset = offset;\n          this.styles = styles;\n      }\n      AnimationKeyframeAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationKeyframe(this, context);\n      };\n      return AnimationKeyframeAst;\n  }(AnimationAst));\n  var AnimationWithStepsAst = (function (_super) {\n      __extends$13(AnimationWithStepsAst, _super);\n      function AnimationWithStepsAst(steps) {\n          _super.call(this);\n          this.steps = steps;\n      }\n      return AnimationWithStepsAst;\n  }(AnimationAst));\n  var AnimationGroupAst = (function (_super) {\n      __extends$13(AnimationGroupAst, _super);\n      function AnimationGroupAst(steps) {\n          _super.call(this, steps);\n      }\n      AnimationGroupAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationGroup(this, context);\n      };\n      return AnimationGroupAst;\n  }(AnimationWithStepsAst));\n  var AnimationSequenceAst = (function (_super) {\n      __extends$13(AnimationSequenceAst, _super);\n      function AnimationSequenceAst(steps) {\n          _super.call(this, steps);\n      }\n      AnimationSequenceAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationSequence(this, context);\n      };\n      return AnimationSequenceAst;\n  }(AnimationWithStepsAst));\n\n  var AnimationEntryCompileResult = (function () {\n      function AnimationEntryCompileResult(name, statements, fnExp) {\n          this.name = name;\n          this.statements = statements;\n          this.fnExp = fnExp;\n      }\n      return AnimationEntryCompileResult;\n  }());\n  var AnimationCompiler = (function () {\n      function AnimationCompiler() {\n      }\n      AnimationCompiler.prototype.compile = function (factoryNamePrefix, parsedAnimations) {\n          return parsedAnimations.map(function (entry) {\n              var factoryName = factoryNamePrefix + \"_\" + entry.name;\n              var visitor = new _AnimationBuilder(entry.name, factoryName);\n              return visitor.build(entry);\n          });\n      };\n      return AnimationCompiler;\n  }());\n  var _ANIMATION_FACTORY_ELEMENT_VAR = variable('element');\n  var _ANIMATION_DEFAULT_STATE_VAR = variable('defaultStateStyles');\n  var _ANIMATION_FACTORY_VIEW_VAR = variable('view');\n  var _ANIMATION_FACTORY_VIEW_CONTEXT = _ANIMATION_FACTORY_VIEW_VAR.prop('animationContext');\n  var _ANIMATION_FACTORY_RENDERER_VAR = _ANIMATION_FACTORY_VIEW_VAR.prop('renderer');\n  var _ANIMATION_CURRENT_STATE_VAR = variable('currentState');\n  var _ANIMATION_NEXT_STATE_VAR = variable('nextState');\n  var _ANIMATION_PLAYER_VAR = variable('player');\n  var _ANIMATION_TIME_VAR = variable('totalTime');\n  var _ANIMATION_START_STATE_STYLES_VAR = variable('startStateStyles');\n  var _ANIMATION_END_STATE_STYLES_VAR = variable('endStateStyles');\n  var _ANIMATION_COLLECTED_STYLES = variable('collectedStyles');\n  var _PREVIOUS_ANIMATION_PLAYERS = variable('previousPlayers');\n  var _EMPTY_MAP = literalMap([]);\n  var _EMPTY_ARRAY = literalArr([]);\n  var _AnimationBuilder = (function () {\n      function _AnimationBuilder(animationName, factoryName) {\n          this.animationName = animationName;\n          this._fnVarName = factoryName + '_factory';\n          this._statesMapVarName = factoryName + '_states';\n          this._statesMapVar = variable(this._statesMapVarName);\n      }\n      _AnimationBuilder.prototype.visitAnimationStyles = function (ast, context) {\n          var stylesArr = [];\n          if (context.isExpectingFirstStyleStep) {\n              stylesArr.push(_ANIMATION_START_STATE_STYLES_VAR);\n              context.isExpectingFirstStyleStep = false;\n          }\n          ast.styles.forEach(function (entry) {\n              var entries = Object.keys(entry).map(function (key) { return [key, literal(entry[key])]; });\n              stylesArr.push(literalMap(entries));\n          });\n          return importExpr(resolveIdentifier(Identifiers.AnimationStyles)).instantiate([\n              importExpr(resolveIdentifier(Identifiers.collectAndResolveStyles)).callFn([\n                  _ANIMATION_COLLECTED_STYLES, literalArr(stylesArr)\n              ])\n          ]);\n      };\n      _AnimationBuilder.prototype.visitAnimationKeyframe = function (ast, context) {\n          return importExpr(resolveIdentifier(Identifiers.AnimationKeyframe)).instantiate([\n              literal(ast.offset), ast.styles.visit(this, context)\n          ]);\n      };\n      _AnimationBuilder.prototype.visitAnimationStep = function (ast, context) {\n          var _this = this;\n          if (context.endStateAnimateStep === ast) {\n              return this._visitEndStateAnimation(ast, context);\n          }\n          var startingStylesExpr = ast.startingStyles.visit(this, context);\n          var keyframeExpressions = ast.keyframes.map(function (keyframeEntry) { return keyframeEntry.visit(_this, context); });\n          return this._callAnimateMethod(ast, startingStylesExpr, literalArr(keyframeExpressions), context);\n      };\n      /** @internal */\n      _AnimationBuilder.prototype._visitEndStateAnimation = function (ast, context) {\n          var _this = this;\n          var startingStylesExpr = ast.startingStyles.visit(this, context);\n          var keyframeExpressions = ast.keyframes.map(function (keyframe) { return keyframe.visit(_this, context); });\n          var keyframesExpr = importExpr(resolveIdentifier(Identifiers.balanceAnimationKeyframes)).callFn([\n              _ANIMATION_COLLECTED_STYLES, _ANIMATION_END_STATE_STYLES_VAR,\n              literalArr(keyframeExpressions)\n          ]);\n          return this._callAnimateMethod(ast, startingStylesExpr, keyframesExpr, context);\n      };\n      /** @internal */\n      _AnimationBuilder.prototype._callAnimateMethod = function (ast, startingStylesExpr, keyframesExpr, context) {\n          var previousStylesValue = _EMPTY_ARRAY;\n          if (context.isExpectingFirstAnimateStep) {\n              previousStylesValue = _PREVIOUS_ANIMATION_PLAYERS;\n              context.isExpectingFirstAnimateStep = false;\n          }\n          context.totalTransitionTime += ast.duration + ast.delay;\n          return _ANIMATION_FACTORY_RENDERER_VAR.callMethod('animate', [\n              _ANIMATION_FACTORY_ELEMENT_VAR, startingStylesExpr, keyframesExpr, literal(ast.duration),\n              literal(ast.delay), literal(ast.easing), previousStylesValue\n          ]);\n      };\n      _AnimationBuilder.prototype.visitAnimationSequence = function (ast, context) {\n          var _this = this;\n          var playerExprs = ast.steps.map(function (step) { return step.visit(_this, context); });\n          return importExpr(resolveIdentifier(Identifiers.AnimationSequencePlayer)).instantiate([\n              literalArr(playerExprs)\n          ]);\n      };\n      _AnimationBuilder.prototype.visitAnimationGroup = function (ast, context) {\n          var _this = this;\n          var playerExprs = ast.steps.map(function (step) { return step.visit(_this, context); });\n          return importExpr(resolveIdentifier(Identifiers.AnimationGroupPlayer)).instantiate([\n              literalArr(playerExprs)\n          ]);\n      };\n      _AnimationBuilder.prototype.visitAnimationStateDeclaration = function (ast, context) {\n          var flatStyles = {};\n          _getStylesArray(ast).forEach(function (entry) { Object.keys(entry).forEach(function (key) { flatStyles[key] = entry[key]; }); });\n          context.stateMap.registerState(ast.stateName, flatStyles);\n      };\n      _AnimationBuilder.prototype.visitAnimationStateTransition = function (ast, context) {\n          var steps = ast.animation.steps;\n          var lastStep = steps[steps.length - 1];\n          if (_isEndStateAnimateStep(lastStep)) {\n              context.endStateAnimateStep = lastStep;\n          }\n          context.totalTransitionTime = 0;\n          context.isExpectingFirstStyleStep = true;\n          context.isExpectingFirstAnimateStep = true;\n          var stateChangePreconditions = [];\n          ast.stateChanges.forEach(function (stateChange) {\n              stateChangePreconditions.push(_compareToAnimationStateExpr(_ANIMATION_CURRENT_STATE_VAR, stateChange.fromState)\n                  .and(_compareToAnimationStateExpr(_ANIMATION_NEXT_STATE_VAR, stateChange.toState)));\n              if (stateChange.fromState != ANY_STATE) {\n                  context.stateMap.registerState(stateChange.fromState);\n              }\n              if (stateChange.toState != ANY_STATE) {\n                  context.stateMap.registerState(stateChange.toState);\n              }\n          });\n          var animationPlayerExpr = ast.animation.visit(this, context);\n          var reducedStateChangesPrecondition = stateChangePreconditions.reduce(function (a, b) { return a.or(b); });\n          var precondition = _ANIMATION_PLAYER_VAR.equals(NULL_EXPR).and(reducedStateChangesPrecondition);\n          var animationStmt = _ANIMATION_PLAYER_VAR.set(animationPlayerExpr).toStmt();\n          var totalTimeStmt = _ANIMATION_TIME_VAR.set(literal(context.totalTransitionTime)).toStmt();\n          return new IfStmt(precondition, [animationStmt, totalTimeStmt]);\n      };\n      _AnimationBuilder.prototype.visitAnimationEntry = function (ast, context) {\n          var _this = this;\n          // visit each of the declarations first to build the context state map\n          ast.stateDeclarations.forEach(function (def) { return def.visit(_this, context); });\n          // this should always be defined even if the user overrides it\n          context.stateMap.registerState(DEFAULT_STATE, {});\n          var statements = [];\n          statements.push(_PREVIOUS_ANIMATION_PLAYERS\n              .set(_ANIMATION_FACTORY_VIEW_CONTEXT.callMethod('getAnimationPlayers', [\n              _ANIMATION_FACTORY_ELEMENT_VAR, literal(this.animationName),\n              _ANIMATION_NEXT_STATE_VAR.equals(literal(EMPTY_ANIMATION_STATE))\n          ]))\n              .toDeclStmt());\n          statements.push(_ANIMATION_COLLECTED_STYLES.set(_EMPTY_MAP).toDeclStmt());\n          statements.push(_ANIMATION_PLAYER_VAR.set(NULL_EXPR).toDeclStmt());\n          statements.push(_ANIMATION_TIME_VAR.set(literal(0)).toDeclStmt());\n          statements.push(_ANIMATION_DEFAULT_STATE_VAR.set(this._statesMapVar.key(literal(DEFAULT_STATE)))\n              .toDeclStmt());\n          statements.push(_ANIMATION_START_STATE_STYLES_VAR.set(this._statesMapVar.key(_ANIMATION_CURRENT_STATE_VAR))\n              .toDeclStmt());\n          statements.push(new IfStmt(_ANIMATION_START_STATE_STYLES_VAR.equals(NULL_EXPR), [_ANIMATION_START_STATE_STYLES_VAR.set(_ANIMATION_DEFAULT_STATE_VAR).toStmt()]));\n          statements.push(_ANIMATION_END_STATE_STYLES_VAR.set(this._statesMapVar.key(_ANIMATION_NEXT_STATE_VAR))\n              .toDeclStmt());\n          statements.push(new IfStmt(_ANIMATION_END_STATE_STYLES_VAR.equals(NULL_EXPR), [_ANIMATION_END_STATE_STYLES_VAR.set(_ANIMATION_DEFAULT_STATE_VAR).toStmt()]));\n          var RENDER_STYLES_FN = importExpr(resolveIdentifier(Identifiers.renderStyles));\n          ast.stateTransitions.forEach(function (transAst) { return statements.push(transAst.visit(_this, context)); });\n          // this check ensures that the animation factory always returns a player\n          // so that the onDone callback can be used for tracking\n          statements.push(new IfStmt(_ANIMATION_PLAYER_VAR.equals(NULL_EXPR), [_ANIMATION_PLAYER_VAR\n                  .set(importExpr(resolveIdentifier(Identifiers.NoOpAnimationPlayer)).instantiate([]))\n                  .toStmt()]));\n          // once complete we want to apply the styles on the element\n          // since the destination state's values should persist once\n          // the animation sequence has completed.\n          statements.push(_ANIMATION_PLAYER_VAR\n              .callMethod('onDone', [fn([], [\n                  _ANIMATION_PLAYER_VAR.callMethod('destroy', []).toStmt(),\n                  RENDER_STYLES_FN\n                      .callFn([\n                      _ANIMATION_FACTORY_ELEMENT_VAR, _ANIMATION_FACTORY_RENDERER_VAR,\n                      importExpr(resolveIdentifier(Identifiers.prepareFinalAnimationStyles))\n                          .callFn([\n                          _ANIMATION_START_STATE_STYLES_VAR,\n                          _ANIMATION_END_STATE_STYLES_VAR\n                      ])\n                  ])\n                      .toStmt()\n              ])])\n              .toStmt());\n          statements.push(importExpr(resolveIdentifier(Identifiers.AnimationSequencePlayer))\n              .instantiate([_PREVIOUS_ANIMATION_PLAYERS])\n              .callMethod('destroy', [])\n              .toStmt());\n          // before we start any animation we want to clear out the starting\n          // styles from the element's style property (since they were placed\n          // there at the end of the last animation\n          statements.push(RENDER_STYLES_FN\n              .callFn([\n              _ANIMATION_FACTORY_ELEMENT_VAR, _ANIMATION_FACTORY_RENDERER_VAR,\n              importExpr(resolveIdentifier(Identifiers.clearStyles))\n                  .callFn([_ANIMATION_START_STATE_STYLES_VAR])\n          ])\n              .toStmt());\n          statements.push(_ANIMATION_FACTORY_VIEW_CONTEXT\n              .callMethod('queueAnimation', [\n              _ANIMATION_FACTORY_ELEMENT_VAR, literal(this.animationName),\n              _ANIMATION_PLAYER_VAR\n          ])\n              .toStmt());\n          statements.push(new ReturnStatement(importExpr(resolveIdentifier(Identifiers.AnimationTransition)).instantiate([\n              _ANIMATION_PLAYER_VAR, _ANIMATION_CURRENT_STATE_VAR, _ANIMATION_NEXT_STATE_VAR,\n              _ANIMATION_TIME_VAR\n          ])));\n          return fn([\n              new FnParam(_ANIMATION_FACTORY_VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n              new FnParam(_ANIMATION_FACTORY_ELEMENT_VAR.name, DYNAMIC_TYPE),\n              new FnParam(_ANIMATION_CURRENT_STATE_VAR.name, DYNAMIC_TYPE),\n              new FnParam(_ANIMATION_NEXT_STATE_VAR.name, DYNAMIC_TYPE)\n          ], statements, importType(resolveIdentifier(Identifiers.AnimationTransition)));\n      };\n      _AnimationBuilder.prototype.build = function (ast) {\n          var context = new _AnimationBuilderContext();\n          var fnStatement = ast.visit(this, context).toDeclStmt(this._fnVarName);\n          var fnVariable = variable(this._fnVarName);\n          var lookupMap = [];\n          Object.keys(context.stateMap.states).forEach(function (stateName) {\n              var value = context.stateMap.states[stateName];\n              var variableValue = _EMPTY_MAP;\n              if (isPresent(value)) {\n                  var styleMap_1 = [];\n                  Object.keys(value).forEach(function (key) { styleMap_1.push([key, literal(value[key])]); });\n                  variableValue = literalMap(styleMap_1);\n              }\n              lookupMap.push([stateName, variableValue]);\n          });\n          var compiledStatesMapStmt = this._statesMapVar.set(literalMap(lookupMap)).toDeclStmt();\n          var statements = [compiledStatesMapStmt, fnStatement];\n          return new AnimationEntryCompileResult(this.animationName, statements, fnVariable);\n      };\n      return _AnimationBuilder;\n  }());\n  var _AnimationBuilderContext = (function () {\n      function _AnimationBuilderContext() {\n          this.stateMap = new _AnimationBuilderStateMap();\n          this.endStateAnimateStep = null;\n          this.isExpectingFirstStyleStep = false;\n          this.isExpectingFirstAnimateStep = false;\n          this.totalTransitionTime = 0;\n      }\n      return _AnimationBuilderContext;\n  }());\n  var _AnimationBuilderStateMap = (function () {\n      function _AnimationBuilderStateMap() {\n          this._states = {};\n      }\n      Object.defineProperty(_AnimationBuilderStateMap.prototype, \"states\", {\n          get: function () { return this._states; },\n          enumerable: true,\n          configurable: true\n      });\n      _AnimationBuilderStateMap.prototype.registerState = function (name, value) {\n          if (value === void 0) { value = null; }\n          var existingEntry = this._states[name];\n          if (!existingEntry) {\n              this._states[name] = value;\n          }\n      };\n      return _AnimationBuilderStateMap;\n  }());\n  function _compareToAnimationStateExpr(value, animationState) {\n      var emptyStateLiteral = literal(EMPTY_ANIMATION_STATE);\n      switch (animationState) {\n          case EMPTY_ANIMATION_STATE:\n              return value.equals(emptyStateLiteral);\n          case ANY_STATE:\n              return literal(true);\n          default:\n              return value.equals(literal(animationState));\n      }\n  }\n  function _isEndStateAnimateStep(step) {\n      // the final animation step is characterized by having only TWO\n      // keyframe values and it must have zero styles for both keyframes\n      if (step instanceof AnimationStepAst && step.duration > 0 && step.keyframes.length == 2) {\n          var styles1 = _getStylesArray(step.keyframes[0])[0];\n          var styles2 = _getStylesArray(step.keyframes[1])[0];\n          return Object.keys(styles1).length === 0 && Object.keys(styles2).length === 0;\n      }\n      return false;\n  }\n  function _getStylesArray(obj) {\n      return obj.styles.styles;\n  }\n\n  function createDiTokenExpression(token) {\n      if (isPresent(token.value)) {\n          return literal(token.value);\n      }\n      else if (token.identifierIsInstance) {\n          return importExpr(token.identifier)\n              .instantiate([], importType(token.identifier, [], [TypeModifier.Const]));\n      }\n      else {\n          return importExpr(token.identifier);\n      }\n  }\n  function createInlineArray(values) {\n      if (values.length === 0) {\n          return importExpr(resolveIdentifier(Identifiers.EMPTY_INLINE_ARRAY));\n      }\n      var log2 = Math.log(values.length) / Math.log(2);\n      var index = Math.ceil(log2);\n      var identifierSpec = index < Identifiers.inlineArrays.length ? Identifiers.inlineArrays[index] :\n          Identifiers.InlineArrayDynamic;\n      var identifier = resolveIdentifier(identifierSpec);\n      return importExpr(identifier).instantiate([\n          literal(values.length)\n      ].concat(values));\n  }\n  function createPureProxy(fn, argCount, pureProxyProp, builder) {\n      builder.fields.push(new ClassField(pureProxyProp.name, null));\n      var pureProxyId = argCount < Identifiers.pureProxies.length ? Identifiers.pureProxies[argCount] : null;\n      if (!pureProxyId) {\n          throw new Error(\"Unsupported number of argument for pure functions: \" + argCount);\n      }\n      builder.ctorStmts.push(THIS_EXPR.prop(pureProxyProp.name)\n          .set(importExpr(resolveIdentifier(pureProxyId)).callFn([fn]))\n          .toStmt());\n  }\n  function createEnumExpression(enumType, enumValue) {\n      var enumName = Object.keys(enumType.runtime).find(function (propName) { return enumType.runtime[propName] === enumValue; });\n      if (!enumName) {\n          throw new Error(\"Unknown enum value \" + enumValue + \" in \" + enumType.name);\n      }\n      return importExpr(resolveEnumIdentifier(resolveIdentifier(enumType), enumName));\n  }\n\n  var CheckBindingField = (function () {\n      function CheckBindingField(expression, bindingId) {\n          this.expression = expression;\n          this.bindingId = bindingId;\n      }\n      return CheckBindingField;\n  }());\n  function createCheckBindingField(builder) {\n      var bindingId = \"\" + builder.fields.length;\n      var fieldExpr = createBindFieldExpr(bindingId);\n      // private is fine here as no child view will reference the cached value...\n      builder.fields.push(new ClassField(fieldExpr.name, null, [StmtModifier.Private]));\n      builder.ctorStmts.push(THIS_EXPR.prop(fieldExpr.name)\n          .set(importExpr(resolveIdentifier(Identifiers.UNINITIALIZED)))\n          .toStmt());\n      return new CheckBindingField(fieldExpr, bindingId);\n  }\n  function createCheckBindingStmt(evalResult, fieldExpr, throwOnChangeVar, actions) {\n      var condition = importExpr(resolveIdentifier(Identifiers.checkBinding)).callFn([\n          throwOnChangeVar, fieldExpr, evalResult.currValExpr\n      ]);\n      if (evalResult.forceUpdate) {\n          condition = evalResult.forceUpdate.or(condition);\n      }\n      return evalResult.stmts.concat([\n          new IfStmt(condition, actions.concat([\n              THIS_EXPR.prop(fieldExpr.name).set(evalResult.currValExpr).toStmt()\n          ]))\n      ]);\n  }\n  function createBindFieldExpr(bindingId) {\n      return THIS_EXPR.prop(\"_expr_\" + bindingId);\n  }\n\n  var VAL_UNWRAPPER_VAR = variable(\"valUnwrapper\");\n  var EventHandlerVars = (function () {\n      function EventHandlerVars() {\n      }\n      EventHandlerVars.event = variable('$event');\n      return EventHandlerVars;\n  }());\n  var ConvertPropertyBindingResult = (function () {\n      function ConvertPropertyBindingResult(stmts, currValExpr, forceUpdate) {\n          this.stmts = stmts;\n          this.currValExpr = currValExpr;\n          this.forceUpdate = forceUpdate;\n      }\n      return ConvertPropertyBindingResult;\n  }());\n  /**\n   * Converts the given expression AST into an executable output AST, assuming the expression is\n   * used in a property binding.\n   */\n  function convertPropertyBinding(builder, nameResolver, implicitReceiver, expression, bindingId) {\n      var currValExpr = createCurrValueExpr(bindingId);\n      var stmts = [];\n      if (!nameResolver) {\n          nameResolver = new DefaultNameResolver();\n      }\n      var visitor = new _AstToIrVisitor(builder, nameResolver, implicitReceiver, VAL_UNWRAPPER_VAR, bindingId, false);\n      var outputExpr = expression.visit(visitor, _Mode.Expression);\n      if (!outputExpr) {\n          // e.g. an empty expression was given\n          return null;\n      }\n      if (visitor.temporaryCount) {\n          for (var i = 0; i < visitor.temporaryCount; i++) {\n              stmts.push(temporaryDeclaration(bindingId, i));\n          }\n      }\n      if (visitor.needsValueUnwrapper) {\n          var initValueUnwrapperStmt = VAL_UNWRAPPER_VAR.callMethod('reset', []).toStmt();\n          stmts.push(initValueUnwrapperStmt);\n      }\n      stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n      if (visitor.needsValueUnwrapper) {\n          return new ConvertPropertyBindingResult(stmts, currValExpr, VAL_UNWRAPPER_VAR.prop('hasWrappedValue'));\n      }\n      else {\n          return new ConvertPropertyBindingResult(stmts, currValExpr, null);\n      }\n  }\n  var ConvertActionBindingResult = (function () {\n      function ConvertActionBindingResult(stmts, preventDefault) {\n          this.stmts = stmts;\n          this.preventDefault = preventDefault;\n      }\n      return ConvertActionBindingResult;\n  }());\n  /**\n   * Converts the given expression AST into an executable output AST, assuming the expression is\n   * used in an action binding (e.g. an event handler).\n   */\n  function convertActionBinding(builder, nameResolver, implicitReceiver, action, bindingId) {\n      if (!nameResolver) {\n          nameResolver = new DefaultNameResolver();\n      }\n      var visitor = new _AstToIrVisitor(builder, nameResolver, implicitReceiver, null, bindingId, true);\n      var actionStmts = [];\n      flattenStatements(action.visit(visitor, _Mode.Statement), actionStmts);\n      prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n      var lastIndex = actionStmts.length - 1;\n      var preventDefaultVar = null;\n      if (lastIndex >= 0) {\n          var lastStatement = actionStmts[lastIndex];\n          var returnExpr = convertStmtIntoExpression(lastStatement);\n          if (returnExpr) {\n              // Note: We need to cast the result of the method call to dynamic,\n              // as it might be a void method!\n              preventDefaultVar = createPreventDefaultVar(bindingId);\n              actionStmts[lastIndex] =\n                  preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                      .toDeclStmt(null, [StmtModifier.Final]);\n          }\n      }\n      return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n  }\n  /**\n   * Creates variables that are shared by multiple calls to `convertActionBinding` /\n   * `convertPropertyBinding`\n   */\n  function createSharedBindingVariablesIfNeeded(stmts) {\n      var unwrapperStmts = [];\n      var readVars = findReadVarNames(stmts);\n      if (readVars.has(VAL_UNWRAPPER_VAR.name)) {\n          unwrapperStmts.push(VAL_UNWRAPPER_VAR\n              .set(importExpr(resolveIdentifier(Identifiers.ValueUnwrapper)).instantiate([]))\n              .toDeclStmt(null, [StmtModifier.Final]));\n      }\n      return unwrapperStmts;\n  }\n  function temporaryName(bindingId, temporaryNumber) {\n      return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n  }\n  function temporaryDeclaration(bindingId, temporaryNumber) {\n      return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n  }\n  function prependTemporaryDecls(temporaryCount, bindingId, statements) {\n      for (var i = temporaryCount - 1; i >= 0; i--) {\n          statements.unshift(temporaryDeclaration(bindingId, i));\n      }\n  }\n  var _Mode;\n  (function (_Mode) {\n      _Mode[_Mode[\"Statement\"] = 0] = \"Statement\";\n      _Mode[_Mode[\"Expression\"] = 1] = \"Expression\";\n  })(_Mode || (_Mode = {}));\n  function ensureStatementMode(mode, ast) {\n      if (mode !== _Mode.Statement) {\n          throw new Error(\"Expected a statement, but saw \" + ast);\n      }\n  }\n  function ensureExpressionMode(mode, ast) {\n      if (mode !== _Mode.Expression) {\n          throw new Error(\"Expected an expression, but saw \" + ast);\n      }\n  }\n  function convertToStatementIfNeeded(mode, expr) {\n      if (mode === _Mode.Statement) {\n          return expr.toStmt();\n      }\n      else {\n          return expr;\n      }\n  }\n  var _AstToIrVisitor = (function () {\n      function _AstToIrVisitor(_builder, _nameResolver, _implicitReceiver, _valueUnwrapper, bindingId, isAction) {\n          this._builder = _builder;\n          this._nameResolver = _nameResolver;\n          this._implicitReceiver = _implicitReceiver;\n          this._valueUnwrapper = _valueUnwrapper;\n          this.bindingId = bindingId;\n          this.isAction = isAction;\n          this._nodeMap = new Map();\n          this._resultMap = new Map();\n          this._currentTemporary = 0;\n          this.needsValueUnwrapper = false;\n          this.temporaryCount = 0;\n      }\n      _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n          var op;\n          switch (ast.operation) {\n              case '+':\n                  op = BinaryOperator.Plus;\n                  break;\n              case '-':\n                  op = BinaryOperator.Minus;\n                  break;\n              case '*':\n                  op = BinaryOperator.Multiply;\n                  break;\n              case '/':\n                  op = BinaryOperator.Divide;\n                  break;\n              case '%':\n                  op = BinaryOperator.Modulo;\n                  break;\n              case '&&':\n                  op = BinaryOperator.And;\n                  break;\n              case '||':\n                  op = BinaryOperator.Or;\n                  break;\n              case '==':\n                  op = BinaryOperator.Equals;\n                  break;\n              case '!=':\n                  op = BinaryOperator.NotEquals;\n                  break;\n              case '===':\n                  op = BinaryOperator.Identical;\n                  break;\n              case '!==':\n                  op = BinaryOperator.NotIdentical;\n                  break;\n              case '<':\n                  op = BinaryOperator.Lower;\n                  break;\n              case '>':\n                  op = BinaryOperator.Bigger;\n                  break;\n              case '<=':\n                  op = BinaryOperator.LowerEquals;\n                  break;\n              case '>=':\n                  op = BinaryOperator.BiggerEquals;\n                  break;\n              default:\n                  throw new Error(\"Unsupported operation \" + ast.operation);\n          }\n          return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this.visit(ast.left, _Mode.Expression), this.visit(ast.right, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n          ensureStatementMode(mode, ast);\n          return this.visitAll(ast.expressions, mode);\n      };\n      _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n          var value = this.visit(ast.condition, _Mode.Expression);\n          return convertToStatementIfNeeded(mode, value.conditional(this.visit(ast.trueExp, _Mode.Expression), this.visit(ast.falseExp, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n          var input = this.visit(ast.exp, _Mode.Expression);\n          var args = this.visitAll(ast.args, _Mode.Expression);\n          var value = this._nameResolver.callPipe(ast.name, input, args);\n          if (!value) {\n              throw new Error(\"Illegal state: Pipe \" + ast.name + \" is not allowed here!\");\n          }\n          this.needsValueUnwrapper = true;\n          return convertToStatementIfNeeded(mode, this._valueUnwrapper.callMethod('unwrap', [value]));\n      };\n      _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n          return convertToStatementIfNeeded(mode, this.visit(ast.target, _Mode.Expression).callFn(this.visitAll(ast.args, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n          ensureExpressionMode(mode, ast);\n          return this._implicitReceiver;\n      };\n      _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n          ensureExpressionMode(mode, ast);\n          var args = [literal(ast.expressions.length)];\n          for (var i = 0; i < ast.strings.length - 1; i++) {\n              args.push(literal(ast.strings[i]));\n              args.push(this.visit(ast.expressions[i], _Mode.Expression));\n          }\n          args.push(literal(ast.strings[ast.strings.length - 1]));\n          return ast.expressions.length <= 9 ?\n              importExpr(resolveIdentifier(Identifiers.inlineInterpolate)).callFn(args) :\n              importExpr(resolveIdentifier(Identifiers.interpolate)).callFn([\n                  args[0], literalArr(args.slice(1))\n              ]);\n      };\n      _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n          return convertToStatementIfNeeded(mode, this.visit(ast.obj, _Mode.Expression).key(this.visit(ast.key, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n          var obj = this.visit(ast.obj, _Mode.Expression);\n          var key = this.visit(ast.key, _Mode.Expression);\n          var value = this.visit(ast.value, _Mode.Expression);\n          return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n      };\n      _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n          var parts = this.visitAll(ast.expressions, mode);\n          var literalArr$$ = this.isAction ? literalArr(parts) : createCachedLiteralArray(this._builder, parts);\n          return convertToStatementIfNeeded(mode, literalArr$$);\n      };\n      _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n          var parts = [];\n          for (var i = 0; i < ast.keys.length; i++) {\n              parts.push([ast.keys[i], this.visit(ast.values[i], _Mode.Expression)]);\n          }\n          var literalMap$$ = this.isAction ? literalMap(parts) : createCachedLiteralMap(this._builder, parts);\n          return convertToStatementIfNeeded(mode, literalMap$$);\n      };\n      _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n          return convertToStatementIfNeeded(mode, literal(ast.value));\n      };\n      _AstToIrVisitor.prototype._getLocal = function (name) {\n          if (this.isAction && name == EventHandlerVars.event.name) {\n              return EventHandlerVars.event;\n          }\n          return this._nameResolver.getLocal(name);\n      };\n      _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n          var leftMostSafe = this.leftMostSafeNode(ast);\n          if (leftMostSafe) {\n              return this.convertSafeAccess(ast, leftMostSafe, mode);\n          }\n          else {\n              var args = this.visitAll(ast.args, _Mode.Expression);\n              var result = null;\n              var receiver = this.visit(ast.receiver, _Mode.Expression);\n              if (receiver === this._implicitReceiver) {\n                  var varExpr = this._getLocal(ast.name);\n                  if (isPresent(varExpr)) {\n                      result = varExpr.callFn(args);\n                  }\n              }\n              if (isBlank(result)) {\n                  result = receiver.callMethod(ast.name, args);\n              }\n              return convertToStatementIfNeeded(mode, result);\n          }\n      };\n      _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n          return convertToStatementIfNeeded(mode, not(this.visit(ast.expression, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n          var leftMostSafe = this.leftMostSafeNode(ast);\n          if (leftMostSafe) {\n              return this.convertSafeAccess(ast, leftMostSafe, mode);\n          }\n          else {\n              var result = null;\n              var receiver = this.visit(ast.receiver, _Mode.Expression);\n              if (receiver === this._implicitReceiver) {\n                  result = this._getLocal(ast.name);\n              }\n              if (isBlank(result)) {\n                  result = receiver.prop(ast.name);\n              }\n              return convertToStatementIfNeeded(mode, result);\n          }\n      };\n      _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n          var receiver = this.visit(ast.receiver, _Mode.Expression);\n          if (receiver === this._implicitReceiver) {\n              var varExpr = this._getLocal(ast.name);\n              if (isPresent(varExpr)) {\n                  throw new Error('Cannot assign to a reference or variable!');\n              }\n          }\n          return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this.visit(ast.value, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n          return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n      };\n      _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n          return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n      };\n      _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n          var _this = this;\n          return asts.map(function (ast) { return _this.visit(ast, mode); });\n      };\n      _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n          throw new Error('Quotes are not supported for evaluation!');\n      };\n      _AstToIrVisitor.prototype.visit = function (ast, mode) {\n          var result = this._resultMap.get(ast);\n          if (result)\n              return result;\n          return (this._nodeMap.get(ast) || ast).visit(this, mode);\n      };\n      _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n          // If the expression contains a safe access node on the left it needs to be converted to\n          // an expression that guards the access to the member by checking the receiver for blank. As\n          // execution proceeds from left to right, the left most part of the expression must be guarded\n          // first but, because member access is left associative, the right side of the expression is at\n          // the top of the AST. The desired result requires lifting a copy of the the left part of the\n          // expression up to test it for blank before generating the unguarded version.\n          // Consider, for example the following expression: a?.b.c?.d.e\n          // This results in the ast:\n          //         .\n          //        / \\\n          //       ?.   e\n          //      /  \\\n          //     .    d\n          //    / \\\n          //   ?.  c\n          //  /  \\\n          // a    b\n          // The following tree should be generated:\n          //\n          //        /---- ? ----\\\n          //       /      |      \\\n          //     a   /--- ? ---\\  null\n          //        /     |     \\\n          //       .      .     null\n          //      / \\    / \\\n          //     .  c   .   e\n          //    / \\    / \\\n          //   a   b  ,   d\n          //         / \\\n          //        .   c\n          //       / \\\n          //      a   b\n          //\n          // Notice that the first guard condition is the left hand of the left most safe access node\n          // which comes in as leftMostSafe to this routine.\n          var guardedExpression = this.visit(leftMostSafe.receiver, _Mode.Expression);\n          var temporary;\n          if (this.needsTemporary(leftMostSafe.receiver)) {\n              // If the expression has method calls or pipes then we need to save the result into a\n              // temporary variable to avoid calling stateful or impure code more than once.\n              temporary = this.allocateTemporary();\n              // Preserve the result in the temporary variable\n              guardedExpression = temporary.set(guardedExpression);\n              // Ensure all further references to the guarded expression refer to the temporary instead.\n              this._resultMap.set(leftMostSafe.receiver, temporary);\n          }\n          var condition = guardedExpression.isBlank();\n          // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n          // leftMostNode with its unguarded version in the call to `this.visit()`.\n          if (leftMostSafe instanceof SafeMethodCall) {\n              this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n          }\n          else {\n              this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n          }\n          // Recursively convert the node now without the guarded member access.\n          var access = this.visit(ast, _Mode.Expression);\n          // Remove the mapping. This is not strictly required as the converter only traverses each node\n          // once but is safer if the conversion is changed to traverse the nodes more than once.\n          this._nodeMap.delete(leftMostSafe);\n          // If we allcoated a temporary, release it.\n          if (temporary) {\n              this.releaseTemporary(temporary);\n          }\n          // Produce the conditional\n          return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n      };\n      // Given a expression of the form a?.b.c?.d.e the the left most safe node is\n      // the (a?.b). The . and ?. are left associative thus can be rewritten as:\n      // ((((a?.c).b).c)?.d).e. This returns the most deeply nested safe read or\n      // safe method call as this needs be transform initially to:\n      //   a == null ? null : a.c.b.c?.d.e\n      // then to:\n      //   a == null ? null : a.b.c == null ? null : a.b.c.d.e\n      _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n          var _this = this;\n          var visit = function (visitor, ast) {\n              return (_this._nodeMap.get(ast) || ast).visit(visitor);\n          };\n          return ast.visit({\n              visitBinary: function (ast) { return null; },\n              visitChain: function (ast) { return null; },\n              visitConditional: function (ast) { return null; },\n              visitFunctionCall: function (ast) { return null; },\n              visitImplicitReceiver: function (ast) { return null; },\n              visitInterpolation: function (ast) { return null; },\n              visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n              visitKeyedWrite: function (ast) { return null; },\n              visitLiteralArray: function (ast) { return null; },\n              visitLiteralMap: function (ast) { return null; },\n              visitLiteralPrimitive: function (ast) { return null; },\n              visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n              visitPipe: function (ast) { return null; },\n              visitPrefixNot: function (ast) { return null; },\n              visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n              visitPropertyWrite: function (ast) { return null; },\n              visitQuote: function (ast) { return null; },\n              visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n              visitSafePropertyRead: function (ast) {\n                  return visit(this, ast.receiver) || ast;\n              }\n          });\n      };\n      // Returns true of the AST includes a method or a pipe indicating that, if the\n      // expression is used as the target of a safe property or method access then\n      // the expression should be stored into a temporary variable.\n      _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n          var _this = this;\n          var visit = function (visitor, ast) {\n              return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n          };\n          var visitSome = function (visitor, ast) {\n              return ast.some(function (ast) { return visit(visitor, ast); });\n          };\n          return ast.visit({\n              visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n              visitChain: function (ast) { return false; },\n              visitConditional: function (ast) {\n                  return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                      visit(this, ast.falseExp);\n              },\n              visitFunctionCall: function (ast) { return true; },\n              visitImplicitReceiver: function (ast) { return false; },\n              visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n              visitKeyedRead: function (ast) { return false; },\n              visitKeyedWrite: function (ast) { return false; },\n              visitLiteralArray: function (ast) { return true; },\n              visitLiteralMap: function (ast) { return true; },\n              visitLiteralPrimitive: function (ast) { return false; },\n              visitMethodCall: function (ast) { return true; },\n              visitPipe: function (ast) { return true; },\n              visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n              visitPropertyRead: function (ast) { return false; },\n              visitPropertyWrite: function (ast) { return false; },\n              visitQuote: function (ast) { return false; },\n              visitSafeMethodCall: function (ast) { return true; },\n              visitSafePropertyRead: function (ast) { return false; }\n          });\n      };\n      _AstToIrVisitor.prototype.allocateTemporary = function () {\n          var tempNumber = this._currentTemporary++;\n          this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n          return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n      };\n      _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n          this._currentTemporary--;\n          if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n              throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n          }\n      };\n      return _AstToIrVisitor;\n  }());\n  function flattenStatements(arg, output) {\n      if (Array.isArray(arg)) {\n          arg.forEach(function (entry) { return flattenStatements(entry, output); });\n      }\n      else {\n          output.push(arg);\n      }\n  }\n  function createCachedLiteralArray(builder, values) {\n      if (values.length === 0) {\n          return importExpr(resolveIdentifier(Identifiers.EMPTY_ARRAY));\n      }\n      var proxyExpr = THIS_EXPR.prop(\"_arr_\" + builder.fields.length);\n      var proxyParams = [];\n      var proxyReturnEntries = [];\n      for (var i = 0; i < values.length; i++) {\n          var paramName = \"p\" + i;\n          proxyParams.push(new FnParam(paramName));\n          proxyReturnEntries.push(variable(paramName));\n      }\n      createPureProxy(fn(proxyParams, [new ReturnStatement(literalArr(proxyReturnEntries))], new ArrayType(DYNAMIC_TYPE)), values.length, proxyExpr, builder);\n      return proxyExpr.callFn(values);\n  }\n  function createCachedLiteralMap(builder, entries) {\n      if (entries.length === 0) {\n          return importExpr(resolveIdentifier(Identifiers.EMPTY_MAP));\n      }\n      var proxyExpr = THIS_EXPR.prop(\"_map_\" + builder.fields.length);\n      var proxyParams = [];\n      var proxyReturnEntries = [];\n      var values = [];\n      for (var i = 0; i < entries.length; i++) {\n          var paramName = \"p\" + i;\n          proxyParams.push(new FnParam(paramName));\n          proxyReturnEntries.push([entries[i][0], variable(paramName)]);\n          values.push(entries[i][1]);\n      }\n      createPureProxy(fn(proxyParams, [new ReturnStatement(literalMap(proxyReturnEntries))], new MapType(DYNAMIC_TYPE)), entries.length, proxyExpr, builder);\n      return proxyExpr.callFn(values);\n  }\n  var DefaultNameResolver = (function () {\n      function DefaultNameResolver() {\n      }\n      DefaultNameResolver.prototype.callPipe = function (name, input, args) { return null; };\n      DefaultNameResolver.prototype.getLocal = function (name) { return null; };\n      return DefaultNameResolver;\n  }());\n  function createCurrValueExpr(bindingId) {\n      return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n  }\n  function createPreventDefaultVar(bindingId) {\n      return variable(\"pd_\" + bindingId);\n  }\n  function convertStmtIntoExpression(stmt) {\n      if (stmt instanceof ExpressionStatement) {\n          return stmt.expr;\n      }\n      else if (stmt instanceof ReturnStatement) {\n          return stmt.value;\n      }\n      return null;\n  }\n\n  function writeToRenderer(view, boundProp, renderElement, renderValue, logBindingUpdate, securityContextExpression) {\n      var updateStmts = [];\n      var renderer = view.prop('renderer');\n      renderValue = sanitizedValue(view, boundProp, renderValue, securityContextExpression);\n      switch (boundProp.type) {\n          case exports.PropertyBindingType.Property:\n              if (logBindingUpdate) {\n                  updateStmts.push(importExpr(resolveIdentifier(Identifiers.setBindingDebugInfo))\n                      .callFn([renderer, renderElement, literal(boundProp.name), renderValue])\n                      .toStmt());\n              }\n              updateStmts.push(renderer\n                  .callMethod('setElementProperty', [renderElement, literal(boundProp.name), renderValue])\n                  .toStmt());\n              break;\n          case exports.PropertyBindingType.Attribute:\n              renderValue =\n                  renderValue.isBlank().conditional(NULL_EXPR, renderValue.callMethod('toString', []));\n              updateStmts.push(renderer\n                  .callMethod('setElementAttribute', [renderElement, literal(boundProp.name), renderValue])\n                  .toStmt());\n              break;\n          case exports.PropertyBindingType.Class:\n              updateStmts.push(renderer\n                  .callMethod('setElementClass', [renderElement, literal(boundProp.name), renderValue])\n                  .toStmt());\n              break;\n          case exports.PropertyBindingType.Style:\n              var strValue = renderValue.callMethod('toString', []);\n              if (isPresent(boundProp.unit)) {\n                  strValue = strValue.plus(literal(boundProp.unit));\n              }\n              renderValue = renderValue.isBlank().conditional(NULL_EXPR, strValue);\n              updateStmts.push(renderer\n                  .callMethod('setElementStyle', [renderElement, literal(boundProp.name), renderValue])\n                  .toStmt());\n              break;\n          case exports.PropertyBindingType.Animation:\n              throw new Error('Illegal state: Should not come here!');\n      }\n      return updateStmts;\n  }\n  function sanitizedValue(view, boundProp, renderValue, securityContextExpression) {\n      if (boundProp.securityContext === _angular_core.SecurityContext.NONE) {\n          return renderValue; // No sanitization needed.\n      }\n      if (!boundProp.needsRuntimeSecurityContext) {\n          securityContextExpression =\n              createEnumExpression(Identifiers.SecurityContext, boundProp.securityContext);\n      }\n      if (!securityContextExpression) {\n          throw new Error(\"internal error, no SecurityContext given \" + boundProp.name);\n      }\n      var ctx = view.prop('viewUtils').prop('sanitizer');\n      var args = [securityContextExpression, renderValue];\n      return ctx.callMethod('sanitize', args);\n  }\n  function triggerAnimation(view, componentView, boundProp, eventListener, renderElement, renderValue, lastRenderValue) {\n      var detachStmts = [];\n      var updateStmts = [];\n      var animationName = boundProp.name;\n      var animationFnExpr = componentView.prop('componentType').prop('animations').key(literal(animationName));\n      // it's important to normalize the void value as `void` explicitly\n      // so that the styles data can be obtained from the stringmap\n      var emptyStateValue = literal(EMPTY_ANIMATION_STATE);\n      var unitializedValue = importExpr(resolveIdentifier(Identifiers.UNINITIALIZED));\n      var animationTransitionVar = variable('animationTransition_' + animationName);\n      updateStmts.push(animationTransitionVar\n          .set(animationFnExpr.callFn([\n          view, renderElement,\n          lastRenderValue.equals(unitializedValue).conditional(emptyStateValue, lastRenderValue),\n          renderValue.equals(unitializedValue).conditional(emptyStateValue, renderValue)\n      ]))\n          .toDeclStmt());\n      detachStmts.push(animationTransitionVar\n          .set(animationFnExpr.callFn([view, renderElement, lastRenderValue, emptyStateValue]))\n          .toDeclStmt());\n      var registerStmts = [\n          animationTransitionVar\n              .callMethod('onStart', [eventListener.callMethod(BuiltinMethod.Bind, [view, literal(BoundEventAst.calcFullName(animationName, null, 'start'))])])\n              .toStmt(),\n          animationTransitionVar\n              .callMethod('onDone', [eventListener.callMethod(BuiltinMethod.Bind, [view, literal(BoundEventAst.calcFullName(animationName, null, 'done'))])])\n              .toStmt(),\n      ];\n      updateStmts.push.apply(updateStmts, registerStmts);\n      detachStmts.push.apply(detachStmts, registerStmts);\n      return { updateStmts: updateStmts, detachStmts: detachStmts };\n  }\n\n  /**\n   * Create a new class stmts based on the given data.\n   */\n  function createClassStmt(config) {\n      var parentArgs = config.parentArgs || [];\n      var superCtorStmts = config.parent ? [SUPER_EXPR.callFn(parentArgs).toStmt()] : [];\n      var builder = concatClassBuilderParts(Array.isArray(config.builders) ? config.builders : [config.builders]);\n      var ctor = new ClassMethod(null, config.ctorParams || [], superCtorStmts.concat(builder.ctorStmts));\n      return new ClassStmt(config.name, config.parent, builder.fields, builder.getters, ctor, builder.methods, config.modifiers || []);\n  }\n  function concatClassBuilderParts(builders) {\n      return {\n          fields: (_a = []).concat.apply(_a, builders.map(function (builder) { return builder.fields || []; })),\n          methods: (_b = []).concat.apply(_b, builders.map(function (builder) { return builder.methods || []; })),\n          getters: (_c = []).concat.apply(_c, builders.map(function (builder) { return builder.getters || []; })),\n          ctorStmts: (_d = []).concat.apply(_d, builders.map(function (builder) { return builder.ctorStmts || []; })),\n      };\n      var _a, _b, _c, _d;\n  }\n\n  var DirectiveWrapperCompileResult = (function () {\n      function DirectiveWrapperCompileResult(statements, dirWrapperClassVar) {\n          this.statements = statements;\n          this.dirWrapperClassVar = dirWrapperClassVar;\n      }\n      return DirectiveWrapperCompileResult;\n  }());\n  var CONTEXT_FIELD_NAME = 'context';\n  var CHANGES_FIELD_NAME = '_changes';\n  var CHANGED_FIELD_NAME = '_changed';\n  var EVENT_HANDLER_FIELD_NAME = '_eventHandler';\n  var CURR_VALUE_VAR = variable('currValue');\n  var THROW_ON_CHANGE_VAR = variable('throwOnChange');\n  var FORCE_UPDATE_VAR = variable('forceUpdate');\n  var VIEW_VAR = variable('view');\n  var COMPONENT_VIEW_VAR = variable('componentView');\n  var RENDER_EL_VAR = variable('el');\n  var EVENT_NAME_VAR = variable('eventName');\n  var RESET_CHANGES_STMT = THIS_EXPR.prop(CHANGES_FIELD_NAME).set(literalMap([])).toStmt();\n  /**\n   * We generate directive wrappers to prevent code bloat when a directive is used.\n   * A directive wrapper encapsulates\n   * the dirty checking for `@Input`, the handling of `@HostListener` / `@HostBinding`\n   * and calling the lifecyclehooks `ngOnInit`, `ngOnChanges`, `ngDoCheck`.\n   *\n   * So far, only `@Input` and the lifecycle hooks have been implemented.\n   */\n  var DirectiveWrapperCompiler = (function () {\n      function DirectiveWrapperCompiler(compilerConfig, _exprParser, _schemaRegistry, _console) {\n          this.compilerConfig = compilerConfig;\n          this._exprParser = _exprParser;\n          this._schemaRegistry = _schemaRegistry;\n          this._console = _console;\n      }\n      DirectiveWrapperCompiler.dirWrapperClassName = function (id) { return \"Wrapper_\" + id.name; };\n      DirectiveWrapperCompiler.prototype.compile = function (dirMeta) {\n          var hostParseResult = parseHostBindings(dirMeta, this._exprParser, this._schemaRegistry);\n          reportParseErrors(hostParseResult.errors, this._console);\n          var builder = new DirectiveWrapperBuilder(this.compilerConfig, dirMeta);\n          Object.keys(dirMeta.inputs).forEach(function (inputFieldName) {\n              addCheckInputMethod(inputFieldName, builder);\n          });\n          addNgDoCheckMethod(builder);\n          addCheckHostMethod(hostParseResult.hostProps, builder);\n          addHandleEventMethod(hostParseResult.hostListeners, builder);\n          addSubscribeMethod(dirMeta, builder);\n          var classStmt = builder.build();\n          return new DirectiveWrapperCompileResult([classStmt], classStmt.name);\n      };\n      DirectiveWrapperCompiler.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      DirectiveWrapperCompiler.ctorParameters = [\n          { type: CompilerConfig, },\n          { type: Parser, },\n          { type: ElementSchemaRegistry, },\n          { type: Console, },\n      ];\n      return DirectiveWrapperCompiler;\n  }());\n  var DirectiveWrapperBuilder = (function () {\n      function DirectiveWrapperBuilder(compilerConfig, dirMeta) {\n          this.compilerConfig = compilerConfig;\n          this.dirMeta = dirMeta;\n          this.fields = [];\n          this.getters = [];\n          this.methods = [];\n          this.ctorStmts = [];\n          this.detachStmts = [];\n          this.destroyStmts = [];\n          var dirLifecycleHooks = dirMeta.type.lifecycleHooks;\n          this.genChanges = dirLifecycleHooks.indexOf(LifecycleHooks.OnChanges) !== -1 ||\n              this.compilerConfig.logBindingUpdate;\n          this.ngOnChanges = dirLifecycleHooks.indexOf(LifecycleHooks.OnChanges) !== -1;\n          this.ngOnInit = dirLifecycleHooks.indexOf(LifecycleHooks.OnInit) !== -1;\n          this.ngDoCheck = dirLifecycleHooks.indexOf(LifecycleHooks.DoCheck) !== -1;\n          this.ngOnDestroy = dirLifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1;\n          if (this.ngOnDestroy) {\n              this.destroyStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngOnDestroy', []).toStmt());\n          }\n      }\n      DirectiveWrapperBuilder.prototype.build = function () {\n          var dirDepParamNames = [];\n          for (var i = 0; i < this.dirMeta.type.diDeps.length; i++) {\n              dirDepParamNames.push(\"p\" + i);\n          }\n          var methods = [\n              new ClassMethod('ngOnDetach', [\n                  new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n                  new FnParam(COMPONENT_VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n                  new FnParam(RENDER_EL_VAR.name, DYNAMIC_TYPE),\n              ], this.detachStmts),\n              new ClassMethod('ngOnDestroy', [], this.destroyStmts),\n          ];\n          var fields = [\n              new ClassField(EVENT_HANDLER_FIELD_NAME, FUNCTION_TYPE, [StmtModifier.Private]),\n              new ClassField(CONTEXT_FIELD_NAME, importType(this.dirMeta.type)),\n              new ClassField(CHANGED_FIELD_NAME, BOOL_TYPE, [StmtModifier.Private]),\n          ];\n          var ctorStmts = [THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(false)).toStmt()];\n          if (this.genChanges) {\n              fields.push(new ClassField(CHANGES_FIELD_NAME, new MapType(DYNAMIC_TYPE), [StmtModifier.Private]));\n              ctorStmts.push(RESET_CHANGES_STMT);\n          }\n          ctorStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME)\n              .set(importExpr(this.dirMeta.type)\n              .instantiate(dirDepParamNames.map(function (paramName) { return variable(paramName); })))\n              .toStmt());\n          return createClassStmt({\n              name: DirectiveWrapperCompiler.dirWrapperClassName(this.dirMeta.type),\n              ctorParams: dirDepParamNames.map(function (paramName) { return new FnParam(paramName, DYNAMIC_TYPE); }),\n              builders: [{ fields: fields, ctorStmts: ctorStmts, methods: methods }, this]\n          });\n      };\n      return DirectiveWrapperBuilder;\n  }());\n  function addNgDoCheckMethod(builder) {\n      var changedVar = variable('changed');\n      var stmts = [\n          changedVar.set(THIS_EXPR.prop(CHANGED_FIELD_NAME)).toDeclStmt(),\n          THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(false)).toStmt(),\n      ];\n      var lifecycleStmts = [];\n      if (builder.genChanges) {\n          var onChangesStmts = [];\n          if (builder.ngOnChanges) {\n              onChangesStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME)\n                  .callMethod('ngOnChanges', [THIS_EXPR.prop(CHANGES_FIELD_NAME)])\n                  .toStmt());\n          }\n          if (builder.compilerConfig.logBindingUpdate) {\n              onChangesStmts.push(importExpr(resolveIdentifier(Identifiers.setBindingDebugInfoForChanges))\n                  .callFn([VIEW_VAR.prop('renderer'), RENDER_EL_VAR, THIS_EXPR.prop(CHANGES_FIELD_NAME)])\n                  .toStmt());\n          }\n          onChangesStmts.push(RESET_CHANGES_STMT);\n          lifecycleStmts.push(new IfStmt(changedVar, onChangesStmts));\n      }\n      if (builder.ngOnInit) {\n          lifecycleStmts.push(new IfStmt(VIEW_VAR.prop('numberOfChecks').identical(new LiteralExpr(0)), [THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngOnInit', []).toStmt()]));\n      }\n      if (builder.ngDoCheck) {\n          lifecycleStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngDoCheck', []).toStmt());\n      }\n      if (lifecycleStmts.length > 0) {\n          stmts.push(new IfStmt(not(THROW_ON_CHANGE_VAR), lifecycleStmts));\n      }\n      stmts.push(new ReturnStatement(changedVar));\n      builder.methods.push(new ClassMethod('ngDoCheck', [\n          new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n          new FnParam(RENDER_EL_VAR.name, DYNAMIC_TYPE),\n          new FnParam(THROW_ON_CHANGE_VAR.name, BOOL_TYPE),\n      ], stmts, BOOL_TYPE));\n  }\n  function addCheckInputMethod(input, builder) {\n      var field = createCheckBindingField(builder);\n      var onChangeStatements = [\n          THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(true)).toStmt(),\n          THIS_EXPR.prop(CONTEXT_FIELD_NAME).prop(input).set(CURR_VALUE_VAR).toStmt(),\n      ];\n      if (builder.genChanges) {\n          onChangeStatements.push(THIS_EXPR.prop(CHANGES_FIELD_NAME)\n              .key(literal(input))\n              .set(importExpr(resolveIdentifier(Identifiers.SimpleChange))\n              .instantiate([field.expression, CURR_VALUE_VAR]))\n              .toStmt());\n      }\n      var methodBody = createCheckBindingStmt({ currValExpr: CURR_VALUE_VAR, forceUpdate: FORCE_UPDATE_VAR, stmts: [] }, field.expression, THROW_ON_CHANGE_VAR, onChangeStatements);\n      builder.methods.push(new ClassMethod(\"check_\" + input, [\n          new FnParam(CURR_VALUE_VAR.name, DYNAMIC_TYPE),\n          new FnParam(THROW_ON_CHANGE_VAR.name, BOOL_TYPE),\n          new FnParam(FORCE_UPDATE_VAR.name, BOOL_TYPE),\n      ], methodBody));\n  }\n  function addCheckHostMethod(hostProps, builder) {\n      var stmts = [];\n      var methodParams = [\n          new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n          new FnParam(COMPONENT_VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n          new FnParam(RENDER_EL_VAR.name, DYNAMIC_TYPE),\n          new FnParam(THROW_ON_CHANGE_VAR.name, BOOL_TYPE),\n      ];\n      hostProps.forEach(function (hostProp, hostPropIdx) {\n          var field = createCheckBindingField(builder);\n          var evalResult = convertPropertyBinding(builder, null, THIS_EXPR.prop(CONTEXT_FIELD_NAME), hostProp.value, field.bindingId);\n          if (!evalResult) {\n              return;\n          }\n          var securityContextExpr;\n          if (hostProp.needsRuntimeSecurityContext) {\n              securityContextExpr = variable(\"secCtx_\" + methodParams.length);\n              methodParams.push(new FnParam(securityContextExpr.name, importType(resolveIdentifier(Identifiers.SecurityContext))));\n          }\n          var checkBindingStmts;\n          if (hostProp.isAnimation) {\n              var _a = triggerAnimation(VIEW_VAR, COMPONENT_VIEW_VAR, hostProp, THIS_EXPR.prop(EVENT_HANDLER_FIELD_NAME)\n                  .or(importExpr(resolveIdentifier(Identifiers.noop))), RENDER_EL_VAR, evalResult.currValExpr, field.expression), updateStmts = _a.updateStmts, detachStmts = _a.detachStmts;\n              checkBindingStmts = updateStmts;\n              (_b = builder.detachStmts).push.apply(_b, detachStmts);\n          }\n          else {\n              checkBindingStmts = writeToRenderer(VIEW_VAR, hostProp, RENDER_EL_VAR, evalResult.currValExpr, builder.compilerConfig.logBindingUpdate, securityContextExpr);\n          }\n          stmts.push.apply(stmts, createCheckBindingStmt(evalResult, field.expression, THROW_ON_CHANGE_VAR, checkBindingStmts));\n          var _b;\n      });\n      builder.methods.push(new ClassMethod('checkHost', methodParams, stmts));\n  }\n  function addHandleEventMethod(hostListeners, builder) {\n      var resultVar = variable(\"result\");\n      var actionStmts = [resultVar.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n      hostListeners.forEach(function (hostListener, eventIdx) {\n          var evalResult = convertActionBinding(builder, null, THIS_EXPR.prop(CONTEXT_FIELD_NAME), hostListener.handler, \"sub_\" + eventIdx);\n          var trueStmts = evalResult.stmts;\n          if (evalResult.preventDefault) {\n              trueStmts.push(resultVar.set(evalResult.preventDefault.and(resultVar)).toStmt());\n          }\n          // TODO(tbosch): convert this into a `switch` once our OutputAst supports it.\n          actionStmts.push(new IfStmt(EVENT_NAME_VAR.equals(literal(hostListener.fullName)), trueStmts));\n      });\n      actionStmts.push(new ReturnStatement(resultVar));\n      builder.methods.push(new ClassMethod('handleEvent', [\n          new FnParam(EVENT_NAME_VAR.name, STRING_TYPE),\n          new FnParam(EventHandlerVars.event.name, DYNAMIC_TYPE)\n      ], actionStmts, BOOL_TYPE));\n  }\n  function addSubscribeMethod(dirMeta, builder) {\n      var methodParams = [\n          new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n          new FnParam(EVENT_HANDLER_FIELD_NAME, DYNAMIC_TYPE)\n      ];\n      var stmts = [\n          THIS_EXPR.prop(EVENT_HANDLER_FIELD_NAME).set(variable(EVENT_HANDLER_FIELD_NAME)).toStmt()\n      ];\n      Object.keys(dirMeta.outputs).forEach(function (emitterPropName, emitterIdx) {\n          var eventName = dirMeta.outputs[emitterPropName];\n          var paramName = \"emit\" + emitterIdx;\n          methodParams.push(new FnParam(paramName, BOOL_TYPE));\n          var subscriptionFieldName = \"subscription\" + emitterIdx;\n          builder.fields.push(new ClassField(subscriptionFieldName, DYNAMIC_TYPE));\n          stmts.push(new IfStmt(variable(paramName), [\n              THIS_EXPR.prop(subscriptionFieldName)\n                  .set(THIS_EXPR.prop(CONTEXT_FIELD_NAME)\n                  .prop(emitterPropName)\n                  .callMethod(BuiltinMethod.SubscribeObservable, [variable(EVENT_HANDLER_FIELD_NAME)\n                      .callMethod(BuiltinMethod.Bind, [VIEW_VAR, literal(eventName)])]))\n                  .toStmt()\n          ]));\n          builder.destroyStmts.push(THIS_EXPR.prop(subscriptionFieldName)\n              .and(THIS_EXPR.prop(subscriptionFieldName).callMethod('unsubscribe', []))\n              .toStmt());\n      });\n      builder.methods.push(new ClassMethod('subscribe', methodParams, stmts));\n  }\n  var ParseResult = (function () {\n      function ParseResult(hostProps, hostListeners, errors) {\n          this.hostProps = hostProps;\n          this.hostListeners = hostListeners;\n          this.errors = errors;\n      }\n      return ParseResult;\n  }());\n  function parseHostBindings(dirMeta, exprParser, schemaRegistry) {\n      var errors = [];\n      var parser = new BindingParser(exprParser, DEFAULT_INTERPOLATION_CONFIG, schemaRegistry, [], errors);\n      var sourceFileName = dirMeta.type.moduleUrl ?\n          \"in Directive \" + dirMeta.type.name + \" in \" + dirMeta.type.moduleUrl :\n          \"in Directive \" + dirMeta.type.name;\n      var sourceFile = new ParseSourceFile('', sourceFileName);\n      var sourceSpan = new ParseSourceSpan(new ParseLocation(sourceFile, null, null, null), new ParseLocation(sourceFile, null, null, null));\n      var parsedHostProps = parser.createDirectiveHostPropertyAsts(dirMeta.toSummary(), sourceSpan);\n      var parsedHostListeners = parser.createDirectiveHostEventAsts(dirMeta.toSummary(), sourceSpan);\n      return new ParseResult(parsedHostProps, parsedHostListeners, errors);\n  }\n  function reportParseErrors(parseErrors, console) {\n      var warnings = parseErrors.filter(function (error) { return error.level === exports.ParseErrorLevel.WARNING; });\n      var errors = parseErrors.filter(function (error) { return error.level === exports.ParseErrorLevel.FATAL; });\n      if (warnings.length > 0) {\n          this._console.warn(\"Directive parse warnings:\\n\" + warnings.join('\\n'));\n      }\n      if (errors.length > 0) {\n          throw new Error(\"Directive parse errors:\\n\" + errors.join('\\n'));\n      }\n  }\n  var DirectiveWrapperExpressions = (function () {\n      function DirectiveWrapperExpressions() {\n      }\n      DirectiveWrapperExpressions.create = function (dir, depsExpr) {\n          return importExpr(dir).instantiate(depsExpr, importType(dir));\n      };\n      DirectiveWrapperExpressions.context = function (dirWrapper) {\n          return dirWrapper.prop(CONTEXT_FIELD_NAME);\n      };\n      DirectiveWrapperExpressions.ngDoCheck = function (dirWrapper, view, renderElement, throwOnChange) {\n          return dirWrapper.callMethod('ngDoCheck', [view, renderElement, throwOnChange]);\n      };\n      DirectiveWrapperExpressions.checkHost = function (hostProps, dirWrapper, view, componentView, renderElement, throwOnChange, runtimeSecurityContexts) {\n          if (hostProps.length) {\n              return [dirWrapper\n                      .callMethod('checkHost', [view, componentView, renderElement, throwOnChange].concat(runtimeSecurityContexts))\n                      .toStmt()];\n          }\n          else {\n              return [];\n          }\n      };\n      DirectiveWrapperExpressions.ngOnDetach = function (hostProps, dirWrapper, view, componentView, renderEl) {\n          if (hostProps.some(function (prop) { return prop.isAnimation; })) {\n              return [dirWrapper\n                      .callMethod('ngOnDetach', [\n                      view,\n                      componentView,\n                      renderEl,\n                  ])\n                      .toStmt()];\n          }\n          else {\n              return [];\n          }\n      };\n      DirectiveWrapperExpressions.ngOnDestroy = function (dir, dirWrapper) {\n          if (dir.type.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1 ||\n              Object.keys(dir.outputs).length > 0) {\n              return [dirWrapper.callMethod('ngOnDestroy', []).toStmt()];\n          }\n          else {\n              return [];\n          }\n      };\n      DirectiveWrapperExpressions.subscribe = function (dirMeta, hostProps, usedEvents, dirWrapper, view, eventListener) {\n          var needsSubscribe = false;\n          var eventFlags = [];\n          Object.keys(dirMeta.outputs).forEach(function (propName) {\n              var eventName = dirMeta.outputs[propName];\n              var eventUsed = usedEvents.indexOf(eventName) > -1;\n              needsSubscribe = needsSubscribe || eventUsed;\n              eventFlags.push(literal(eventUsed));\n          });\n          hostProps.forEach(function (hostProp) {\n              if (hostProp.isAnimation && usedEvents.length > 0) {\n                  needsSubscribe = true;\n              }\n          });\n          if (needsSubscribe) {\n              return [\n                  dirWrapper.callMethod('subscribe', [view, eventListener].concat(eventFlags)).toStmt()\n              ];\n          }\n          else {\n              return [];\n          }\n      };\n      DirectiveWrapperExpressions.handleEvent = function (hostEvents, dirWrapper, eventName, event) {\n          return dirWrapper.callMethod('handleEvent', [eventName, event]);\n      };\n      return DirectiveWrapperExpressions;\n  }());\n\n  function convertValueToOutputAst(value, type) {\n      if (type === void 0) { type = null; }\n      return visitValue(value, new _ValueOutputAstTransformer(), type);\n  }\n  var _ValueOutputAstTransformer = (function () {\n      function _ValueOutputAstTransformer() {\n      }\n      _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n          var _this = this;\n          return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n      };\n      _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n          var _this = this;\n          var entries = [];\n          Object.keys(map).forEach(function (key) { entries.push([key, visitValue(map[key], _this, null)]); });\n          return literalMap(entries, type);\n      };\n      _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n      _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n          if (value instanceof CompileIdentifierMetadata) {\n              return importExpr(value);\n          }\n          else if (value instanceof Expression) {\n              return value;\n          }\n          else {\n              throw new Error(\"Illegal state: Don't now how to compile value \" + value);\n          }\n      };\n      return _ValueOutputAstTransformer;\n  }());\n\n  var _DebugState = (function () {\n      function _DebugState(nodeIndex, sourceAst) {\n          this.nodeIndex = nodeIndex;\n          this.sourceAst = sourceAst;\n      }\n      return _DebugState;\n  }());\n  var NULL_DEBUG_STATE = new _DebugState(null, null);\n  var CompileMethod = (function () {\n      function CompileMethod(_view) {\n          this._view = _view;\n          this._newState = NULL_DEBUG_STATE;\n          this._currState = NULL_DEBUG_STATE;\n          this._bodyStatements = [];\n          this._debugEnabled = this._view.genConfig.genDebugInfo;\n      }\n      CompileMethod.prototype._updateDebugContextIfNeeded = function () {\n          if (this._newState.nodeIndex !== this._currState.nodeIndex ||\n              this._newState.sourceAst !== this._currState.sourceAst) {\n              var expr = this._updateDebugContext(this._newState);\n              if (isPresent(expr)) {\n                  this._bodyStatements.push(expr.toStmt());\n              }\n          }\n      };\n      CompileMethod.prototype._updateDebugContext = function (newState) {\n          this._currState = this._newState = newState;\n          if (this._debugEnabled) {\n              var sourceLocation = isPresent(newState.sourceAst) ? newState.sourceAst.sourceSpan.start : null;\n              return THIS_EXPR.callMethod('debug', [\n                  literal(newState.nodeIndex),\n                  isPresent(sourceLocation) ? literal(sourceLocation.line) : NULL_EXPR,\n                  isPresent(sourceLocation) ? literal(sourceLocation.col) : NULL_EXPR\n              ]);\n          }\n          else {\n              return null;\n          }\n      };\n      CompileMethod.prototype.resetDebugInfoExpr = function (nodeIndex, templateAst) {\n          var res = this._updateDebugContext(new _DebugState(nodeIndex, templateAst));\n          return res || NULL_EXPR;\n      };\n      CompileMethod.prototype.resetDebugInfo = function (nodeIndex, templateAst) {\n          this._newState = new _DebugState(nodeIndex, templateAst);\n      };\n      CompileMethod.prototype.push = function () {\n          var stmts = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              stmts[_i - 0] = arguments[_i];\n          }\n          this.addStmts(stmts);\n      };\n      CompileMethod.prototype.addStmt = function (stmt) {\n          this._updateDebugContextIfNeeded();\n          this._bodyStatements.push(stmt);\n      };\n      CompileMethod.prototype.addStmts = function (stmts) {\n          this._updateDebugContextIfNeeded();\n          (_a = this._bodyStatements).push.apply(_a, stmts);\n          var _a;\n      };\n      CompileMethod.prototype.finish = function () { return this._bodyStatements; };\n      CompileMethod.prototype.isEmpty = function () { return this._bodyStatements.length === 0; };\n      return CompileMethod;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$15 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  function getPropertyInView(property, callingView, definedView) {\n      if (callingView === definedView) {\n          return property;\n      }\n      else {\n          var viewProp = THIS_EXPR;\n          var currView = callingView;\n          while (currView !== definedView && isPresent(currView.declarationElement.view)) {\n              currView = currView.declarationElement.view;\n              viewProp = viewProp.prop('parentView');\n          }\n          if (currView !== definedView) {\n              throw new Error(\"Internal error: Could not calculate a property in a parent view: \" + property);\n          }\n          return property.visitExpression(new _ReplaceViewTransformer(viewProp, definedView), null);\n      }\n  }\n  var _ReplaceViewTransformer = (function (_super) {\n      __extends$15(_ReplaceViewTransformer, _super);\n      function _ReplaceViewTransformer(_viewExpr, _view) {\n          _super.call(this);\n          this._viewExpr = _viewExpr;\n          this._view = _view;\n      }\n      _ReplaceViewTransformer.prototype._isThis = function (expr) {\n          return expr instanceof ReadVarExpr && expr.builtin === BuiltinVar.This;\n      };\n      _ReplaceViewTransformer.prototype.visitReadVarExpr = function (ast, context) {\n          return this._isThis(ast) ? this._viewExpr : ast;\n      };\n      _ReplaceViewTransformer.prototype.visitReadPropExpr = function (ast, context) {\n          if (this._isThis(ast.receiver)) {\n              // Note: Don't cast for members of the AppView base class...\n              if (this._view.fields.some(function (field) { return field.name == ast.name; }) ||\n                  this._view.getters.some(function (field) { return field.name == ast.name; })) {\n                  return this._viewExpr.cast(this._view.classType).prop(ast.name);\n              }\n          }\n          return _super.prototype.visitReadPropExpr.call(this, ast, context);\n      };\n      return _ReplaceViewTransformer;\n  }(ExpressionTransformer));\n  function injectFromViewParentInjector(view, token, optional) {\n      var viewExpr;\n      if (view.viewType === ViewType.HOST) {\n          viewExpr = THIS_EXPR;\n      }\n      else {\n          viewExpr = THIS_EXPR.prop('parentView');\n      }\n      var args = [createDiTokenExpression(token), THIS_EXPR.prop('parentIndex')];\n      if (optional) {\n          args.push(NULL_EXPR);\n      }\n      return viewExpr.callMethod('injectorGet', args);\n  }\n  function getViewClassName(component, embeddedTemplateIndex) {\n      return \"View_\" + component.type.name + embeddedTemplateIndex;\n  }\n  function getHandleEventMethodName(elementIndex) {\n      return \"handleEvent_\" + elementIndex;\n  }\n\n  var ViewQueryValues = (function () {\n      function ViewQueryValues(view, values) {\n          this.view = view;\n          this.values = values;\n      }\n      return ViewQueryValues;\n  }());\n  var CompileQuery = (function () {\n      function CompileQuery(meta, queryList, ownerDirectiveExpression, view) {\n          this.meta = meta;\n          this.queryList = queryList;\n          this.ownerDirectiveExpression = ownerDirectiveExpression;\n          this.view = view;\n          this._values = new ViewQueryValues(view, []);\n      }\n      CompileQuery.prototype.addValue = function (value, view) {\n          var currentView = view;\n          var elPath = [];\n          while (isPresent(currentView) && currentView !== this.view) {\n              var parentEl = currentView.declarationElement;\n              elPath.unshift(parentEl);\n              currentView = parentEl.view;\n          }\n          var queryListForDirtyExpr = getPropertyInView(this.queryList, view, this.view);\n          var viewValues = this._values;\n          elPath.forEach(function (el) {\n              var last = viewValues.values.length > 0 ? viewValues.values[viewValues.values.length - 1] : null;\n              if (last instanceof ViewQueryValues && last.view === el.embeddedView) {\n                  viewValues = last;\n              }\n              else {\n                  var newViewValues = new ViewQueryValues(el.embeddedView, []);\n                  viewValues.values.push(newViewValues);\n                  viewValues = newViewValues;\n              }\n          });\n          viewValues.values.push(value);\n          if (elPath.length > 0) {\n              view.dirtyParentQueriesMethod.addStmt(queryListForDirtyExpr.callMethod('setDirty', []).toStmt());\n          }\n      };\n      CompileQuery.prototype._isStatic = function () {\n          return !this._values.values.some(function (value) { return value instanceof ViewQueryValues; });\n      };\n      CompileQuery.prototype.afterChildren = function (targetStaticMethod, targetDynamicMethod) {\n          var values = createQueryValues(this._values);\n          var updateStmts = [this.queryList.callMethod('reset', [literalArr(values)]).toStmt()];\n          if (isPresent(this.ownerDirectiveExpression)) {\n              var valueExpr = this.meta.first ? this.queryList.prop('first') : this.queryList;\n              updateStmts.push(this.ownerDirectiveExpression.prop(this.meta.propertyName).set(valueExpr).toStmt());\n          }\n          if (!this.meta.first) {\n              updateStmts.push(this.queryList.callMethod('notifyOnChanges', []).toStmt());\n          }\n          if (this.meta.first && this._isStatic()) {\n              // for queries that don't change and the user asked for a single element,\n              // set it immediately. That is e.g. needed for querying for ViewContainerRefs, ...\n              // we don't do this for QueryLists for now as this would break the timing when\n              // we call QueryList listeners...\n              targetStaticMethod.addStmts(updateStmts);\n          }\n          else {\n              targetDynamicMethod.addStmt(new IfStmt(this.queryList.prop('dirty'), updateStmts));\n          }\n      };\n      return CompileQuery;\n  }());\n  function createQueryValues(viewValues) {\n      return ListWrapper.flatten(viewValues.values.map(function (entry) {\n          if (entry instanceof ViewQueryValues) {\n              return mapNestedViews(entry.view.declarationElement.viewContainer, entry.view, createQueryValues(entry));\n          }\n          else {\n              return entry;\n          }\n      }));\n  }\n  function mapNestedViews(viewContainer, view, expressions) {\n      var adjustedExpressions = expressions.map(function (expr) { return replaceVarInExpression(THIS_EXPR.name, variable('nestedView'), expr); });\n      return viewContainer.callMethod('mapNestedViews', [\n          variable(view.className),\n          fn([new FnParam('nestedView', view.classType)], [new ReturnStatement(literalArr(adjustedExpressions))], DYNAMIC_TYPE)\n      ]);\n  }\n  function createQueryList(query, directiveInstance, propertyName, compileView) {\n      compileView.fields.push(new ClassField(propertyName, importType(resolveIdentifier(Identifiers.QueryList), [DYNAMIC_TYPE])));\n      var expr = THIS_EXPR.prop(propertyName);\n      compileView.createMethod.addStmt(THIS_EXPR.prop(propertyName)\n          .set(importExpr(resolveIdentifier(Identifiers.QueryList), [DYNAMIC_TYPE])\n          .instantiate([]))\n          .toStmt());\n      return expr;\n  }\n  function addQueryToTokenMap(map, query) {\n      query.meta.selectors.forEach(function (selector) {\n          var entry = map.get(selector.reference);\n          if (!entry) {\n              entry = [];\n              map.set(selector.reference, entry);\n          }\n          entry.push(query);\n      });\n  }\n\n  var ViewTypeEnum = (function () {\n      function ViewTypeEnum() {\n      }\n      ViewTypeEnum.fromValue = function (value) {\n          return createEnumExpression(Identifiers.ViewType, value);\n      };\n      return ViewTypeEnum;\n  }());\n  var ViewEncapsulationEnum = (function () {\n      function ViewEncapsulationEnum() {\n      }\n      ViewEncapsulationEnum.fromValue = function (value) {\n          return createEnumExpression(Identifiers.ViewEncapsulation, value);\n      };\n      return ViewEncapsulationEnum;\n  }());\n  var ChangeDetectorStatusEnum = (function () {\n      function ChangeDetectorStatusEnum() {\n      }\n      ChangeDetectorStatusEnum.fromValue = function (value) {\n          return createEnumExpression(Identifiers.ChangeDetectorStatus, value);\n      };\n      return ChangeDetectorStatusEnum;\n  }());\n  var ViewConstructorVars = (function () {\n      function ViewConstructorVars() {\n      }\n      ViewConstructorVars.viewUtils = variable('viewUtils');\n      ViewConstructorVars.parentView = variable('parentView');\n      ViewConstructorVars.parentIndex = variable('parentIndex');\n      ViewConstructorVars.parentElement = variable('parentElement');\n      return ViewConstructorVars;\n  }());\n  var ViewProperties = (function () {\n      function ViewProperties() {\n      }\n      ViewProperties.renderer = THIS_EXPR.prop('renderer');\n      ViewProperties.viewUtils = THIS_EXPR.prop('viewUtils');\n      return ViewProperties;\n  }());\n  var InjectMethodVars = (function () {\n      function InjectMethodVars() {\n      }\n      InjectMethodVars.token = variable('token');\n      InjectMethodVars.requestNodeIndex = variable('requestNodeIndex');\n      InjectMethodVars.notFoundResult = variable('notFoundResult');\n      return InjectMethodVars;\n  }());\n  var DetectChangesVars = (function () {\n      function DetectChangesVars() {\n      }\n      DetectChangesVars.throwOnChange = variable(\"throwOnChange\");\n      DetectChangesVars.changes = variable(\"changes\");\n      DetectChangesVars.changed = variable(\"changed\");\n      return DetectChangesVars;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var ViewClassDependency = (function () {\n      function ViewClassDependency(comp, placeholder) {\n          this.comp = comp;\n          this.placeholder = placeholder;\n      }\n      return ViewClassDependency;\n  }());\n  var ComponentFactoryDependency = (function () {\n      function ComponentFactoryDependency(comp, placeholder) {\n          this.comp = comp;\n          this.placeholder = placeholder;\n      }\n      return ComponentFactoryDependency;\n  }());\n  var DirectiveWrapperDependency = (function () {\n      function DirectiveWrapperDependency(dir, placeholder) {\n          this.dir = dir;\n          this.placeholder = placeholder;\n      }\n      return DirectiveWrapperDependency;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$14 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var CompileNode = (function () {\n      function CompileNode(parent, view, nodeIndex, renderNode, sourceAst) {\n          this.parent = parent;\n          this.view = view;\n          this.nodeIndex = nodeIndex;\n          this.renderNode = renderNode;\n          this.sourceAst = sourceAst;\n      }\n      CompileNode.prototype.isNull = function () { return !this.renderNode; };\n      CompileNode.prototype.isRootElement = function () { return this.view != this.parent.view; };\n      return CompileNode;\n  }());\n  var CompileElement = (function (_super) {\n      __extends$14(CompileElement, _super);\n      function CompileElement(parent, view, nodeIndex, renderNode, sourceAst, component, _directives, _resolvedProvidersArray, hasViewContainer, hasEmbeddedView, references, _targetDependencies) {\n          var _this = this;\n          _super.call(this, parent, view, nodeIndex, renderNode, sourceAst);\n          this.component = component;\n          this._directives = _directives;\n          this._resolvedProvidersArray = _resolvedProvidersArray;\n          this.hasViewContainer = hasViewContainer;\n          this.hasEmbeddedView = hasEmbeddedView;\n          this._targetDependencies = _targetDependencies;\n          this.compViewExpr = null;\n          this.instances = new Map();\n          this.directiveWrapperInstance = new Map();\n          this._queryCount = 0;\n          this._queries = new Map();\n          this.contentNodesByNgContentIndex = null;\n          this.referenceTokens = {};\n          references.forEach(function (ref) { return _this.referenceTokens[ref.name] = ref.value; });\n          this.elementRef =\n              importExpr(resolveIdentifier(Identifiers.ElementRef)).instantiate([this.renderNode]);\n          this.instances.set(resolveIdentifierToken(Identifiers.ElementRef).reference, this.elementRef);\n          this.instances.set(resolveIdentifierToken(Identifiers.Injector).reference, THIS_EXPR.callMethod('injector', [literal(this.nodeIndex)]));\n          this.instances.set(resolveIdentifierToken(Identifiers.Renderer).reference, THIS_EXPR.prop('renderer'));\n          if (this.hasViewContainer || this.hasEmbeddedView) {\n              this._createViewContainer();\n          }\n          if (this.component) {\n              this._createComponentFactoryResolver();\n          }\n      }\n      CompileElement.createNull = function () {\n          return new CompileElement(null, null, null, null, null, null, [], [], false, false, [], []);\n      };\n      CompileElement.prototype._createViewContainer = function () {\n          var fieldName = \"_vc_\" + this.nodeIndex;\n          var parentNodeIndex = this.isRootElement() ? null : this.parent.nodeIndex;\n          // private is fine here as no child view will reference a ViewContainer\n          this.view.fields.push(new ClassField(fieldName, importType(resolveIdentifier(Identifiers.ViewContainer)), [StmtModifier.Private]));\n          var statement = THIS_EXPR.prop(fieldName)\n              .set(importExpr(resolveIdentifier(Identifiers.ViewContainer)).instantiate([\n              literal(this.nodeIndex), literal(parentNodeIndex), THIS_EXPR, this.renderNode\n          ]))\n              .toStmt();\n          this.view.createMethod.addStmt(statement);\n          this.viewContainer = THIS_EXPR.prop(fieldName);\n          this.instances.set(resolveIdentifierToken(Identifiers.ViewContainer).reference, this.viewContainer);\n          this.view.viewContainers.push(this.viewContainer);\n      };\n      CompileElement.prototype._createComponentFactoryResolver = function () {\n          var _this = this;\n          var entryComponents = this.component.entryComponents.map(function (entryComponent) {\n              var id = new CompileIdentifierMetadata({ name: entryComponent.name });\n              _this._targetDependencies.push(new ComponentFactoryDependency(entryComponent, id));\n              return id;\n          });\n          if (!entryComponents || entryComponents.length === 0) {\n              return;\n          }\n          var createComponentFactoryResolverExpr = importExpr(resolveIdentifier(Identifiers.CodegenComponentFactoryResolver)).instantiate([\n              literalArr(entryComponents.map(function (entryComponent) { return importExpr(entryComponent); })),\n              injectFromViewParentInjector(this.view, resolveIdentifierToken(Identifiers.ComponentFactoryResolver), false)\n          ]);\n          var provider = new CompileProviderMetadata({\n              token: resolveIdentifierToken(Identifiers.ComponentFactoryResolver),\n              useValue: createComponentFactoryResolverExpr\n          });\n          // Add ComponentFactoryResolver as first provider as it does not have deps on other providers\n          // ProviderAstType.PrivateService as only the component and its view can see it,\n          // but nobody else\n          this._resolvedProvidersArray.unshift(new ProviderAst(provider.token, false, true, [provider], exports.ProviderAstType.PrivateService, [], this.sourceAst.sourceSpan));\n      };\n      CompileElement.prototype.setComponentView = function (compViewExpr) {\n          this.compViewExpr = compViewExpr;\n          this.contentNodesByNgContentIndex =\n              new Array(this.component.template.ngContentSelectors.length);\n          for (var i = 0; i < this.contentNodesByNgContentIndex.length; i++) {\n              this.contentNodesByNgContentIndex[i] = [];\n          }\n      };\n      CompileElement.prototype.setEmbeddedView = function (embeddedView) {\n          this.embeddedView = embeddedView;\n          if (isPresent(embeddedView)) {\n              var createTemplateRefExpr = importExpr(resolveIdentifier(Identifiers.TemplateRef_)).instantiate([\n                  THIS_EXPR, literal(this.nodeIndex), this.renderNode\n              ]);\n              var provider = new CompileProviderMetadata({\n                  token: resolveIdentifierToken(Identifiers.TemplateRef),\n                  useValue: createTemplateRefExpr\n              });\n              // Add TemplateRef as first provider as it does not have deps on other providers\n              this._resolvedProvidersArray.unshift(new ProviderAst(provider.token, false, true, [provider], exports.ProviderAstType.Builtin, [], this.sourceAst.sourceSpan));\n          }\n      };\n      CompileElement.prototype.beforeChildren = function () {\n          var _this = this;\n          if (this.hasViewContainer) {\n              this.instances.set(resolveIdentifierToken(Identifiers.ViewContainerRef).reference, this.viewContainer.prop('vcRef'));\n          }\n          this._resolvedProviders = new Map();\n          this._resolvedProvidersArray.forEach(function (provider) { return _this._resolvedProviders.set(provider.token.reference, provider); });\n          // create all the provider instances, some in the view constructor,\n          // some as getters. We rely on the fact that they are already sorted topologically.\n          Array.from(this._resolvedProviders.values()).forEach(function (resolvedProvider) {\n              var isDirectiveWrapper = resolvedProvider.providerType === exports.ProviderAstType.Component ||\n                  resolvedProvider.providerType === exports.ProviderAstType.Directive;\n              var providerValueExpressions = resolvedProvider.providers.map(function (provider) {\n                  if (provider.useExisting) {\n                      return _this._getDependency(resolvedProvider.providerType, new CompileDiDependencyMetadata({ token: provider.useExisting }));\n                  }\n                  else if (provider.useFactory) {\n                      var deps = provider.deps || provider.useFactory.diDeps;\n                      var depsExpr = deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep); });\n                      return importExpr(provider.useFactory).callFn(depsExpr);\n                  }\n                  else if (provider.useClass) {\n                      var deps = provider.deps || provider.useClass.diDeps;\n                      var depsExpr = deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep); });\n                      if (isDirectiveWrapper) {\n                          var directiveWrapperIdentifier = new CompileIdentifierMetadata({ name: DirectiveWrapperCompiler.dirWrapperClassName(provider.useClass) });\n                          _this._targetDependencies.push(new DirectiveWrapperDependency(provider.useClass, directiveWrapperIdentifier));\n                          return DirectiveWrapperExpressions.create(directiveWrapperIdentifier, depsExpr);\n                      }\n                      else {\n                          return importExpr(provider.useClass)\n                              .instantiate(depsExpr, importType(provider.useClass));\n                      }\n                  }\n                  else {\n                      return convertValueToOutputAst(provider.useValue);\n                  }\n              });\n              var propName = \"_\" + resolvedProvider.token.name + \"_\" + _this.nodeIndex + \"_\" + _this.instances.size;\n              var instance = createProviderProperty(propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider, resolvedProvider.eager, _this);\n              if (isDirectiveWrapper) {\n                  _this.directiveWrapperInstance.set(resolvedProvider.token.reference, instance);\n                  _this.instances.set(resolvedProvider.token.reference, DirectiveWrapperExpressions.context(instance));\n              }\n              else {\n                  _this.instances.set(resolvedProvider.token.reference, instance);\n              }\n          });\n          var _loop_1 = function(i) {\n              var directive = this_1._directives[i];\n              var directiveInstance = this_1.instances.get(identifierToken(directive.type).reference);\n              directive.queries.forEach(function (queryMeta) { _this._addQuery(queryMeta, directiveInstance); });\n          };\n          var this_1 = this;\n          for (var i = 0; i < this._directives.length; i++) {\n              _loop_1(i);\n          }\n          var queriesWithReads = [];\n          Array.from(this._resolvedProviders.values()).forEach(function (resolvedProvider) {\n              var queriesForProvider = _this._getQueriesFor(resolvedProvider.token);\n              queriesWithReads.push.apply(queriesWithReads, queriesForProvider.map(function (query) { return new _QueryWithRead(query, resolvedProvider.token); }));\n          });\n          Object.keys(this.referenceTokens).forEach(function (varName) {\n              var token = _this.referenceTokens[varName];\n              var varValue;\n              if (token) {\n                  varValue = _this.instances.get(token.reference);\n              }\n              else {\n                  varValue = _this.renderNode;\n              }\n              _this.view.locals.set(varName, varValue);\n              var varToken = new CompileTokenMetadata({ value: varName });\n              queriesWithReads.push.apply(queriesWithReads, _this._getQueriesFor(varToken).map(function (query) { return new _QueryWithRead(query, varToken); }));\n          });\n          queriesWithReads.forEach(function (queryWithRead) {\n              var value;\n              if (isPresent(queryWithRead.read.identifier)) {\n                  // query for an identifier\n                  value = _this.instances.get(queryWithRead.read.reference);\n              }\n              else {\n                  // query for a reference\n                  var token = _this.referenceTokens[queryWithRead.read.value];\n                  if (isPresent(token)) {\n                      value = _this.instances.get(token.reference);\n                  }\n                  else {\n                      value = _this.elementRef;\n                  }\n              }\n              if (isPresent(value)) {\n                  queryWithRead.query.addValue(value, _this.view);\n              }\n          });\n      };\n      CompileElement.prototype.afterChildren = function (childNodeCount) {\n          var _this = this;\n          Array.from(this._resolvedProviders.values()).forEach(function (resolvedProvider) {\n              // Note: afterChildren is called after recursing into children.\n              // This is good so that an injector match in an element that is closer to a requesting element\n              // matches first.\n              var providerExpr = _this.instances.get(resolvedProvider.token.reference);\n              // Note: view providers are only visible on the injector of that element.\n              // This is not fully correct as the rules during codegen don't allow a directive\n              // to get hold of a view provdier on the same element. We still do this semantic\n              // as it simplifies our model to having only one runtime injector per element.\n              var providerChildNodeCount = resolvedProvider.providerType === exports.ProviderAstType.PrivateService ? 0 : childNodeCount;\n              _this.view.injectorGetMethod.addStmt(createInjectInternalCondition(_this.nodeIndex, providerChildNodeCount, resolvedProvider, providerExpr));\n          });\n          Array.from(this._queries.values())\n              .forEach(function (queries) { return queries.forEach(function (q) {\n              return q.afterChildren(_this.view.createMethod, _this.view.updateContentQueriesMethod);\n          }); });\n      };\n      CompileElement.prototype.addContentNode = function (ngContentIndex, nodeExpr) {\n          this.contentNodesByNgContentIndex[ngContentIndex].push(nodeExpr);\n      };\n      CompileElement.prototype.getComponent = function () {\n          return isPresent(this.component) ?\n              this.instances.get(identifierToken(this.component.type).reference) :\n              null;\n      };\n      CompileElement.prototype.getProviderTokens = function () {\n          return Array.from(this._resolvedProviders.values())\n              .map(function (resolvedProvider) { return createDiTokenExpression(resolvedProvider.token); });\n      };\n      CompileElement.prototype._getQueriesFor = function (token) {\n          var result = [];\n          var currentEl = this;\n          var distance = 0;\n          var queries;\n          while (!currentEl.isNull()) {\n              queries = currentEl._queries.get(token.reference);\n              if (isPresent(queries)) {\n                  result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n              }\n              if (currentEl._directives.length > 0) {\n                  distance++;\n              }\n              currentEl = currentEl.parent;\n          }\n          queries = this.view.componentView.viewQueries.get(token.reference);\n          if (isPresent(queries)) {\n              result.push.apply(result, queries);\n          }\n          return result;\n      };\n      CompileElement.prototype._addQuery = function (queryMeta, directiveInstance) {\n          var propName = \"_query_\" + queryMeta.selectors[0].name + \"_\" + this.nodeIndex + \"_\" + this._queryCount++;\n          var queryList = createQueryList(queryMeta, directiveInstance, propName, this.view);\n          var query = new CompileQuery(queryMeta, queryList, directiveInstance, this.view);\n          addQueryToTokenMap(this._queries, query);\n          return query;\n      };\n      CompileElement.prototype._getLocalDependency = function (requestingProviderType, dep) {\n          var result = null;\n          if (isPresent(dep.token)) {\n              // access builtins with special visibility\n              if (!result) {\n                  if (dep.token.reference ===\n                      resolveIdentifierToken(Identifiers.ChangeDetectorRef).reference) {\n                      if (requestingProviderType === exports.ProviderAstType.Component) {\n                          return this.compViewExpr.prop('ref');\n                      }\n                      else {\n                          return getPropertyInView(THIS_EXPR.prop('ref'), this.view, this.view.componentView);\n                      }\n                  }\n              }\n              // access regular providers on the element\n              if (!result) {\n                  var resolvedProvider = this._resolvedProviders.get(dep.token.reference);\n                  // don't allow directives / public services to access private services.\n                  // only components and private services can access private services.\n                  if (resolvedProvider && (requestingProviderType === exports.ProviderAstType.Directive ||\n                      requestingProviderType === exports.ProviderAstType.PublicService) &&\n                      resolvedProvider.providerType === exports.ProviderAstType.PrivateService) {\n                      return null;\n                  }\n                  result = this.instances.get(dep.token.reference);\n              }\n          }\n          return result;\n      };\n      CompileElement.prototype._getDependency = function (requestingProviderType, dep) {\n          var currElement = this;\n          var result = null;\n          if (dep.isValue) {\n              result = literal(dep.value);\n          }\n          if (!result && !dep.isSkipSelf) {\n              result = this._getLocalDependency(requestingProviderType, dep);\n          }\n          // check parent elements\n          while (!result && !currElement.parent.isNull()) {\n              currElement = currElement.parent;\n              result = currElement._getLocalDependency(exports.ProviderAstType.PublicService, new CompileDiDependencyMetadata({ token: dep.token }));\n          }\n          if (!result) {\n              result = injectFromViewParentInjector(this.view, dep.token, dep.isOptional);\n          }\n          if (!result) {\n              result = NULL_EXPR;\n          }\n          return getPropertyInView(result, this.view, currElement.view);\n      };\n      return CompileElement;\n  }(CompileNode));\n  function createInjectInternalCondition(nodeIndex, childNodeCount, provider, providerExpr) {\n      var indexCondition;\n      if (childNodeCount > 0) {\n          indexCondition = literal(nodeIndex)\n              .lowerEquals(InjectMethodVars.requestNodeIndex)\n              .and(InjectMethodVars.requestNodeIndex.lowerEquals(literal(nodeIndex + childNodeCount)));\n      }\n      else {\n          indexCondition = literal(nodeIndex).identical(InjectMethodVars.requestNodeIndex);\n      }\n      return new IfStmt(InjectMethodVars.token.identical(createDiTokenExpression(provider.token)).and(indexCondition), [new ReturnStatement(providerExpr)]);\n  }\n  function createProviderProperty(propName, provider, providerValueExpressions, isMulti, isEager, compileElement) {\n      var view = compileElement.view;\n      var resolvedProviderValueExpr;\n      var type;\n      if (isMulti) {\n          resolvedProviderValueExpr = literalArr(providerValueExpressions);\n          type = new ArrayType(DYNAMIC_TYPE);\n      }\n      else {\n          resolvedProviderValueExpr = providerValueExpressions[0];\n          type = providerValueExpressions[0].type;\n      }\n      if (!type) {\n          type = DYNAMIC_TYPE;\n      }\n      if (isEager) {\n          view.fields.push(new ClassField(propName, type));\n          view.createMethod.addStmt(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n      }\n      else {\n          var internalField = \"_\" + propName;\n          view.fields.push(new ClassField(internalField, type));\n          var getter = new CompileMethod(view);\n          getter.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n          // Note: Equals is important for JS so that it also checks the undefined case!\n          getter.addStmt(new IfStmt(THIS_EXPR.prop(internalField).isBlank(), [THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]));\n          getter.addStmt(new ReturnStatement(THIS_EXPR.prop(internalField)));\n          view.getters.push(new ClassGetter(propName, getter.finish(), type));\n      }\n      return THIS_EXPR.prop(propName);\n  }\n  var _QueryWithRead = (function () {\n      function _QueryWithRead(query, match) {\n          this.query = query;\n          this.read = query.meta.read || match;\n      }\n      return _QueryWithRead;\n  }());\n\n  var CompilePipe = (function () {\n      function CompilePipe(view, meta) {\n          var _this = this;\n          this.view = view;\n          this.meta = meta;\n          this._purePipeProxyCount = 0;\n          this.instance = THIS_EXPR.prop(\"_pipe_\" + meta.name + \"_\" + view.pipeCount++);\n          var deps = this.meta.type.diDeps.map(function (diDep) {\n              if (diDep.token.reference ===\n                  resolveIdentifierToken(Identifiers.ChangeDetectorRef).reference) {\n                  return getPropertyInView(THIS_EXPR.prop('ref'), _this.view, _this.view.componentView);\n              }\n              return injectFromViewParentInjector(view, diDep.token, false);\n          });\n          this.view.fields.push(new ClassField(this.instance.name, importType(this.meta.type)));\n          this.view.createMethod.resetDebugInfo(null, null);\n          this.view.createMethod.addStmt(THIS_EXPR.prop(this.instance.name)\n              .set(importExpr(this.meta.type).instantiate(deps))\n              .toStmt());\n      }\n      CompilePipe.call = function (view, name, args) {\n          var compView = view.componentView;\n          var meta = _findPipeMeta(compView, name);\n          var pipe;\n          if (meta.pure) {\n              // pure pipes live on the component view\n              pipe = compView.purePipes.get(name);\n              if (!pipe) {\n                  pipe = new CompilePipe(compView, meta);\n                  compView.purePipes.set(name, pipe);\n                  compView.pipes.push(pipe);\n              }\n          }\n          else {\n              // Non pure pipes live on the view that called it\n              pipe = new CompilePipe(view, meta);\n              view.pipes.push(pipe);\n          }\n          return pipe._call(view, args);\n      };\n      Object.defineProperty(CompilePipe.prototype, \"pure\", {\n          get: function () { return this.meta.pure; },\n          enumerable: true,\n          configurable: true\n      });\n      CompilePipe.prototype._call = function (callingView, args) {\n          if (this.meta.pure) {\n              // PurePipeProxies live on the view that called them.\n              var purePipeProxyInstance = THIS_EXPR.prop(this.instance.name + \"_\" + this._purePipeProxyCount++);\n              var pipeInstanceSeenFromPureProxy = getPropertyInView(this.instance, callingView, this.view);\n              createPureProxy(pipeInstanceSeenFromPureProxy.prop('transform')\n                  .callMethod(BuiltinMethod.Bind, [pipeInstanceSeenFromPureProxy]), args.length, purePipeProxyInstance, { fields: callingView.fields, ctorStmts: callingView.createMethod });\n              return importExpr(resolveIdentifier(Identifiers.castByValue))\n                  .callFn([purePipeProxyInstance, pipeInstanceSeenFromPureProxy.prop('transform')])\n                  .callFn(args);\n          }\n          else {\n              return getPropertyInView(this.instance, callingView, this.view).callMethod('transform', args);\n          }\n      };\n      return CompilePipe;\n  }());\n  function _findPipeMeta(view, name) {\n      var pipeMeta = null;\n      for (var i = view.pipeMetas.length - 1; i >= 0; i--) {\n          var localPipeMeta = view.pipeMetas[i];\n          if (localPipeMeta.name == name) {\n              pipeMeta = localPipeMeta;\n              break;\n          }\n      }\n      if (!pipeMeta) {\n          throw new Error(\"Illegal state: Could not find pipe \" + name + \" although the parser should have detected this error!\");\n      }\n      return pipeMeta;\n  }\n\n  var CompileViewRootNodeType;\n  (function (CompileViewRootNodeType) {\n      CompileViewRootNodeType[CompileViewRootNodeType[\"Node\"] = 0] = \"Node\";\n      CompileViewRootNodeType[CompileViewRootNodeType[\"ViewContainer\"] = 1] = \"ViewContainer\";\n      CompileViewRootNodeType[CompileViewRootNodeType[\"NgContent\"] = 2] = \"NgContent\";\n  })(CompileViewRootNodeType || (CompileViewRootNodeType = {}));\n  var CompileViewRootNode = (function () {\n      function CompileViewRootNode(type, expr, ngContentIndex) {\n          this.type = type;\n          this.expr = expr;\n          this.ngContentIndex = ngContentIndex;\n      }\n      return CompileViewRootNode;\n  }());\n  var CompileView = (function () {\n      function CompileView(component, genConfig, pipeMetas, styles, animations, viewIndex, declarationElement, templateVariableBindings) {\n          var _this = this;\n          this.component = component;\n          this.genConfig = genConfig;\n          this.pipeMetas = pipeMetas;\n          this.styles = styles;\n          this.animations = animations;\n          this.viewIndex = viewIndex;\n          this.declarationElement = declarationElement;\n          this.templateVariableBindings = templateVariableBindings;\n          this.viewChildren = [];\n          this.nodes = [];\n          this.rootNodes = [];\n          this.lastRenderNode = NULL_EXPR;\n          this.viewContainers = [];\n          this.methods = [];\n          this.ctorStmts = [];\n          this.fields = [];\n          this.getters = [];\n          this.disposables = [];\n          this.purePipes = new Map();\n          this.pipes = [];\n          this.locals = new Map();\n          this.literalArrayCount = 0;\n          this.literalMapCount = 0;\n          this.pipeCount = 0;\n          this.createMethod = new CompileMethod(this);\n          this.animationBindingsMethod = new CompileMethod(this);\n          this.injectorGetMethod = new CompileMethod(this);\n          this.updateContentQueriesMethod = new CompileMethod(this);\n          this.dirtyParentQueriesMethod = new CompileMethod(this);\n          this.updateViewQueriesMethod = new CompileMethod(this);\n          this.detectChangesInInputsMethod = new CompileMethod(this);\n          this.detectChangesRenderPropertiesMethod = new CompileMethod(this);\n          this.afterContentLifecycleCallbacksMethod = new CompileMethod(this);\n          this.afterViewLifecycleCallbacksMethod = new CompileMethod(this);\n          this.destroyMethod = new CompileMethod(this);\n          this.detachMethod = new CompileMethod(this);\n          this.viewType = getViewType(component, viewIndex);\n          this.className = getViewClassName(component, viewIndex);\n          this.classType = importType(new CompileIdentifierMetadata({ name: this.className }));\n          this.classExpr = variable(this.className);\n          if (this.viewType === ViewType.COMPONENT || this.viewType === ViewType.HOST) {\n              this.componentView = this;\n          }\n          else {\n              this.componentView = this.declarationElement.view.componentView;\n          }\n          this.componentContext =\n              getPropertyInView(THIS_EXPR.prop('context'), this, this.componentView);\n          var viewQueries = new Map();\n          if (this.viewType === ViewType.COMPONENT) {\n              var directiveInstance_1 = THIS_EXPR.prop('context');\n              this.component.viewQueries.forEach(function (queryMeta, queryIndex) {\n                  var propName = \"_viewQuery_\" + queryMeta.selectors[0].name + \"_\" + queryIndex;\n                  var queryList = createQueryList(queryMeta, directiveInstance_1, propName, _this);\n                  var query = new CompileQuery(queryMeta, queryList, directiveInstance_1, _this);\n                  addQueryToTokenMap(viewQueries, query);\n              });\n          }\n          this.viewQueries = viewQueries;\n          templateVariableBindings.forEach(function (entry) { _this.locals.set(entry[1], THIS_EXPR.prop('context').prop(entry[0])); });\n          if (!this.declarationElement.isNull()) {\n              this.declarationElement.setEmbeddedView(this);\n          }\n      }\n      CompileView.prototype.callPipe = function (name, input, args) {\n          return CompilePipe.call(this, name, [input].concat(args));\n      };\n      CompileView.prototype.getLocal = function (name) {\n          if (name == EventHandlerVars.event.name) {\n              return EventHandlerVars.event;\n          }\n          var currView = this;\n          var result = currView.locals.get(name);\n          while (!result && isPresent(currView.declarationElement.view)) {\n              currView = currView.declarationElement.view;\n              result = currView.locals.get(name);\n          }\n          if (isPresent(result)) {\n              return getPropertyInView(result, this, currView);\n          }\n          else {\n              return null;\n          }\n      };\n      CompileView.prototype.afterNodes = function () {\n          var _this = this;\n          Array.from(this.viewQueries.values())\n              .forEach(function (queries) { return queries.forEach(function (q) { return q.afterChildren(_this.createMethod, _this.updateViewQueriesMethod); }); });\n      };\n      return CompileView;\n  }());\n  function getViewType(component, embeddedTemplateIndex) {\n      if (embeddedTemplateIndex > 0) {\n          return ViewType.EMBEDDED;\n      }\n      if (component.type.isHost) {\n          return ViewType.HOST;\n      }\n      return ViewType.COMPONENT;\n  }\n\n  function bindOutputs(boundEvents, directives, compileElement, bindToRenderer) {\n      var usedEvents = collectEvents(boundEvents, directives);\n      if (!usedEvents.size) {\n          return false;\n      }\n      if (bindToRenderer) {\n          subscribeToRenderEvents(usedEvents, compileElement);\n      }\n      subscribeToDirectiveEvents(usedEvents, directives, compileElement);\n      generateHandleEventMethod(boundEvents, directives, compileElement);\n      return true;\n  }\n  function collectEvents(boundEvents, directives) {\n      var usedEvents = new Map();\n      boundEvents.forEach(function (event) { usedEvents.set(event.fullName, event); });\n      directives.forEach(function (dirAst) {\n          dirAst.hostEvents.forEach(function (event) { usedEvents.set(event.fullName, event); });\n      });\n      return usedEvents;\n  }\n  function subscribeToRenderEvents(usedEvents, compileElement) {\n      var eventAndTargetExprs = [];\n      usedEvents.forEach(function (event) {\n          if (!event.phase) {\n              eventAndTargetExprs.push(literal(event.name), literal(event.target));\n          }\n      });\n      if (eventAndTargetExprs.length) {\n          var disposableVar = variable(\"disposable_\" + compileElement.view.disposables.length);\n          compileElement.view.disposables.push(disposableVar);\n          compileElement.view.createMethod.addStmt(disposableVar\n              .set(importExpr(resolveIdentifier(Identifiers.subscribeToRenderElement)).callFn([\n              THIS_EXPR, compileElement.renderNode, createInlineArray(eventAndTargetExprs),\n              handleEventExpr(compileElement)\n          ]))\n              .toDeclStmt(FUNCTION_TYPE, [StmtModifier.Private]));\n      }\n  }\n  function subscribeToDirectiveEvents(usedEvents, directives, compileElement) {\n      var usedEventNames = Array.from(usedEvents.keys());\n      directives.forEach(function (dirAst) {\n          var dirWrapper = compileElement.directiveWrapperInstance.get(dirAst.directive.type.reference);\n          compileElement.view.createMethod.addStmts(DirectiveWrapperExpressions.subscribe(dirAst.directive, dirAst.hostProperties, usedEventNames, dirWrapper, THIS_EXPR, handleEventExpr(compileElement)));\n      });\n  }\n  function generateHandleEventMethod(boundEvents, directives, compileElement) {\n      var hasComponentHostListener = directives.some(function (dirAst) { return dirAst.hostEvents.some(function (event) { return dirAst.directive.isComponent; }); });\n      var markPathToRootStart = hasComponentHostListener ? compileElement.compViewExpr : THIS_EXPR;\n      var handleEventStmts = new CompileMethod(compileElement.view);\n      handleEventStmts.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n      handleEventStmts.push(markPathToRootStart.callMethod('markPathToRootAsCheckOnce', []).toStmt());\n      var eventNameVar = variable('eventName');\n      var resultVar = variable('result');\n      handleEventStmts.push(resultVar.set(literal(true)).toDeclStmt(BOOL_TYPE));\n      directives.forEach(function (dirAst, dirIdx) {\n          var dirWrapper = compileElement.directiveWrapperInstance.get(dirAst.directive.type.reference);\n          if (dirAst.hostEvents.length > 0) {\n              handleEventStmts.push(resultVar\n                  .set(DirectiveWrapperExpressions\n                  .handleEvent(dirAst.hostEvents, dirWrapper, eventNameVar, EventHandlerVars.event)\n                  .and(resultVar))\n                  .toStmt());\n          }\n      });\n      boundEvents.forEach(function (renderEvent, renderEventIdx) {\n          var evalResult = convertActionBinding(compileElement.view, compileElement.view, compileElement.view.componentContext, renderEvent.handler, \"sub_\" + renderEventIdx);\n          var trueStmts = evalResult.stmts;\n          if (evalResult.preventDefault) {\n              trueStmts.push(resultVar.set(evalResult.preventDefault.and(resultVar)).toStmt());\n          }\n          // TODO(tbosch): convert this into a `switch` once our OutputAst supports it.\n          handleEventStmts.push(new IfStmt(eventNameVar.equals(literal(renderEvent.fullName)), trueStmts));\n      });\n      handleEventStmts.push(new ReturnStatement(resultVar));\n      compileElement.view.methods.push(new ClassMethod(getHandleEventMethodName(compileElement.nodeIndex), [\n          new FnParam(eventNameVar.name, STRING_TYPE),\n          new FnParam(EventHandlerVars.event.name, DYNAMIC_TYPE)\n      ], handleEventStmts.finish(), BOOL_TYPE));\n  }\n  function handleEventExpr(compileElement) {\n      var handleEventMethodName = getHandleEventMethodName(compileElement.nodeIndex);\n      return THIS_EXPR.callMethod('eventHandler', [THIS_EXPR.prop(handleEventMethodName)]);\n  }\n\n  var STATE_IS_NEVER_CHECKED = THIS_EXPR.prop('numberOfChecks').identical(new LiteralExpr(0));\n  var NOT_THROW_ON_CHANGES = not(DetectChangesVars.throwOnChange);\n  function bindDirectiveAfterContentLifecycleCallbacks(directiveMeta, directiveInstance, compileElement) {\n      var view = compileElement.view;\n      var lifecycleHooks = directiveMeta.type.lifecycleHooks;\n      var afterContentLifecycleCallbacksMethod = view.afterContentLifecycleCallbacksMethod;\n      afterContentLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n      if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentInit) !== -1) {\n          afterContentLifecycleCallbacksMethod.addStmt(new IfStmt(STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterContentInit', []).toStmt()]));\n      }\n      if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentChecked) !== -1) {\n          afterContentLifecycleCallbacksMethod.addStmt(directiveInstance.callMethod('ngAfterContentChecked', []).toStmt());\n      }\n  }\n  function bindDirectiveAfterViewLifecycleCallbacks(directiveMeta, directiveInstance, compileElement) {\n      var view = compileElement.view;\n      var lifecycleHooks = directiveMeta.type.lifecycleHooks;\n      var afterViewLifecycleCallbacksMethod = view.afterViewLifecycleCallbacksMethod;\n      afterViewLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n      if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewInit) !== -1) {\n          afterViewLifecycleCallbacksMethod.addStmt(new IfStmt(STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterViewInit', []).toStmt()]));\n      }\n      if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewChecked) !== -1) {\n          afterViewLifecycleCallbacksMethod.addStmt(directiveInstance.callMethod('ngAfterViewChecked', []).toStmt());\n      }\n  }\n  function bindDirectiveWrapperLifecycleCallbacks(dir, directiveWrapperIntance, compileElement) {\n      compileElement.view.destroyMethod.addStmts(DirectiveWrapperExpressions.ngOnDestroy(dir.directive, directiveWrapperIntance));\n      compileElement.view.detachMethod.addStmts(DirectiveWrapperExpressions.ngOnDetach(dir.hostProperties, directiveWrapperIntance, THIS_EXPR, compileElement.compViewExpr || THIS_EXPR, compileElement.renderNode));\n  }\n  function bindInjectableDestroyLifecycleCallbacks(provider, providerInstance, compileElement) {\n      var onDestroyMethod = compileElement.view.destroyMethod;\n      onDestroyMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n      if (provider.providerType !== exports.ProviderAstType.Directive &&\n          provider.providerType !== exports.ProviderAstType.Component &&\n          provider.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n          onDestroyMethod.addStmt(providerInstance.callMethod('ngOnDestroy', []).toStmt());\n      }\n  }\n  function bindPipeDestroyLifecycleCallbacks(pipeMeta, pipeInstance, view) {\n      var onDestroyMethod = view.destroyMethod;\n      if (pipeMeta.type.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n          onDestroyMethod.addStmt(pipeInstance.callMethod('ngOnDestroy', []).toStmt());\n      }\n  }\n\n  function bindRenderText(boundText, compileNode, view) {\n      var valueField = createCheckBindingField(view);\n      var evalResult = convertPropertyBinding(view, view, view.componentContext, boundText.value, valueField.bindingId);\n      if (!evalResult) {\n          return null;\n      }\n      view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileNode.nodeIndex, boundText);\n      view.detectChangesRenderPropertiesMethod.addStmts(createCheckBindingStmt(evalResult, valueField.expression, DetectChangesVars.throwOnChange, [THIS_EXPR.prop('renderer')\n              .callMethod('setText', [compileNode.renderNode, evalResult.currValExpr])\n              .toStmt()]));\n  }\n  function bindRenderInputs(boundProps, hasEvents, compileElement) {\n      var view = compileElement.view;\n      var renderNode = compileElement.renderNode;\n      boundProps.forEach(function (boundProp) {\n          var bindingField = createCheckBindingField(view);\n          view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileElement.nodeIndex, boundProp);\n          var evalResult = convertPropertyBinding(view, view, compileElement.view.componentContext, boundProp.value, bindingField.bindingId);\n          if (!evalResult) {\n              return;\n          }\n          var checkBindingStmts = [];\n          var compileMethod = view.detectChangesRenderPropertiesMethod;\n          switch (boundProp.type) {\n              case exports.PropertyBindingType.Property:\n              case exports.PropertyBindingType.Attribute:\n              case exports.PropertyBindingType.Class:\n              case exports.PropertyBindingType.Style:\n                  checkBindingStmts.push.apply(checkBindingStmts, writeToRenderer(THIS_EXPR, boundProp, renderNode, evalResult.currValExpr, view.genConfig.logBindingUpdate));\n                  break;\n              case exports.PropertyBindingType.Animation:\n                  compileMethod = view.animationBindingsMethod;\n                  var _a = triggerAnimation(THIS_EXPR, THIS_EXPR, boundProp, (hasEvents ? THIS_EXPR.prop(getHandleEventMethodName(compileElement.nodeIndex)) :\n                      importExpr(resolveIdentifier(Identifiers.noop)))\n                      .callMethod(BuiltinMethod.Bind, [THIS_EXPR]), compileElement.renderNode, evalResult.currValExpr, bindingField.expression), updateStmts = _a.updateStmts, detachStmts = _a.detachStmts;\n                  checkBindingStmts.push.apply(checkBindingStmts, updateStmts);\n                  view.detachMethod.addStmts(detachStmts);\n                  break;\n          }\n          compileMethod.addStmts(createCheckBindingStmt(evalResult, bindingField.expression, DetectChangesVars.throwOnChange, checkBindingStmts));\n      });\n  }\n  function bindDirectiveHostProps(directiveAst, directiveWrapperInstance, compileElement, elementName, schemaRegistry) {\n      // We need to provide the SecurityContext for properties that could need sanitization.\n      var runtimeSecurityCtxExprs = directiveAst.hostProperties.filter(function (boundProp) { return boundProp.needsRuntimeSecurityContext; })\n          .map(function (boundProp) {\n          var ctx;\n          switch (boundProp.type) {\n              case exports.PropertyBindingType.Property:\n                  ctx = schemaRegistry.securityContext(elementName, boundProp.name, false);\n                  break;\n              case exports.PropertyBindingType.Attribute:\n                  ctx = schemaRegistry.securityContext(elementName, boundProp.name, true);\n                  break;\n              default:\n                  throw new Error(\"Illegal state: Only property / attribute bindings can have an unknown security context! Binding \" + boundProp.name);\n          }\n          return createEnumExpression(Identifiers.SecurityContext, ctx);\n      });\n      compileElement.view.detectChangesRenderPropertiesMethod.addStmts(DirectiveWrapperExpressions.checkHost(directiveAst.hostProperties, directiveWrapperInstance, THIS_EXPR, compileElement.compViewExpr || THIS_EXPR, compileElement.renderNode, DetectChangesVars.throwOnChange, runtimeSecurityCtxExprs));\n  }\n  function bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement) {\n      var view = compileElement.view;\n      var detectChangesInInputsMethod = view.detectChangesInInputsMethod;\n      detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n      directiveAst.inputs.forEach(function (input, inputIdx) {\n          // Note: We can't use `fields.length` here, as we are not adding a field!\n          var bindingId = compileElement.nodeIndex + \"_\" + dirIndex + \"_\" + inputIdx;\n          detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, input);\n          var evalResult = convertPropertyBinding(view, view, view.componentContext, input.value, bindingId);\n          if (!evalResult) {\n              return;\n          }\n          detectChangesInInputsMethod.addStmts(evalResult.stmts);\n          detectChangesInInputsMethod.addStmt(directiveWrapperInstance\n              .callMethod(\"check_\" + input.directiveName, [\n              evalResult.currValExpr, DetectChangesVars.throwOnChange,\n              evalResult.forceUpdate || literal(false)\n          ])\n              .toStmt());\n      });\n      var isOnPushComp = directiveAst.directive.isComponent &&\n          !isDefaultChangeDetectionStrategy(directiveAst.directive.changeDetection);\n      var directiveDetectChangesExpr = DirectiveWrapperExpressions.ngDoCheck(directiveWrapperInstance, THIS_EXPR, compileElement.renderNode, DetectChangesVars.throwOnChange);\n      var directiveDetectChangesStmt = isOnPushComp ?\n          new IfStmt(directiveDetectChangesExpr, [compileElement.compViewExpr.callMethod('markAsCheckOnce', []).toStmt()]) :\n          directiveDetectChangesExpr.toStmt();\n      detectChangesInInputsMethod.addStmt(directiveDetectChangesStmt);\n  }\n\n  function bindView(view, parsedTemplate, schemaRegistry) {\n      var visitor = new ViewBinderVisitor(view, schemaRegistry);\n      templateVisitAll(visitor, parsedTemplate);\n      view.pipes.forEach(function (pipe) { bindPipeDestroyLifecycleCallbacks(pipe.meta, pipe.instance, pipe.view); });\n  }\n  var ViewBinderVisitor = (function () {\n      function ViewBinderVisitor(view, _schemaRegistry) {\n          this.view = view;\n          this._schemaRegistry = _schemaRegistry;\n          this._nodeIndex = 0;\n      }\n      ViewBinderVisitor.prototype.visitBoundText = function (ast, parent) {\n          var node = this.view.nodes[this._nodeIndex++];\n          bindRenderText(ast, node, this.view);\n          return null;\n      };\n      ViewBinderVisitor.prototype.visitText = function (ast, parent) {\n          this._nodeIndex++;\n          return null;\n      };\n      ViewBinderVisitor.prototype.visitNgContent = function (ast, parent) { return null; };\n      ViewBinderVisitor.prototype.visitElement = function (ast, parent) {\n          var _this = this;\n          var compileElement = this.view.nodes[this._nodeIndex++];\n          var hasEvents = bindOutputs(ast.outputs, ast.directives, compileElement, true);\n          bindRenderInputs(ast.inputs, hasEvents, compileElement);\n          ast.directives.forEach(function (directiveAst, dirIndex) {\n              var directiveWrapperInstance = compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n              bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement);\n              bindDirectiveHostProps(directiveAst, directiveWrapperInstance, compileElement, ast.name, _this._schemaRegistry);\n          });\n          templateVisitAll(this, ast.children, compileElement);\n          // afterContent and afterView lifecycles need to be called bottom up\n          // so that children are notified before parents\n          ast.directives.forEach(function (directiveAst) {\n              var directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n              var directiveWrapperInstance = compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n              bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n              bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n              bindDirectiveWrapperLifecycleCallbacks(directiveAst, directiveWrapperInstance, compileElement);\n          });\n          ast.providers.forEach(function (providerAst) {\n              var providerInstance = compileElement.instances.get(providerAst.token.reference);\n              bindInjectableDestroyLifecycleCallbacks(providerAst, providerInstance, compileElement);\n          });\n          return null;\n      };\n      ViewBinderVisitor.prototype.visitEmbeddedTemplate = function (ast, parent) {\n          var compileElement = this.view.nodes[this._nodeIndex++];\n          bindOutputs(ast.outputs, ast.directives, compileElement, false);\n          ast.directives.forEach(function (directiveAst, dirIndex) {\n              var directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n              var directiveWrapperInstance = compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n              bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement);\n              bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n              bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n              bindDirectiveWrapperLifecycleCallbacks(directiveAst, directiveWrapperInstance, compileElement);\n          });\n          ast.providers.forEach(function (providerAst) {\n              var providerInstance = compileElement.instances.get(providerAst.token.reference);\n              bindInjectableDestroyLifecycleCallbacks(providerAst, providerInstance, compileElement);\n          });\n          bindView(compileElement.embeddedView, ast.children, this._schemaRegistry);\n          return null;\n      };\n      ViewBinderVisitor.prototype.visitAttr = function (ast, ctx) { return null; };\n      ViewBinderVisitor.prototype.visitDirective = function (ast, ctx) { return null; };\n      ViewBinderVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {\n          return null;\n      };\n      ViewBinderVisitor.prototype.visitReference = function (ast, ctx) { return null; };\n      ViewBinderVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\n      ViewBinderVisitor.prototype.visitDirectiveProperty = function (ast, context) { return null; };\n      ViewBinderVisitor.prototype.visitElementProperty = function (ast, context) { return null; };\n      return ViewBinderVisitor;\n  }());\n\n  var IMPLICIT_TEMPLATE_VAR = '\\$implicit';\n  var CLASS_ATTR$1 = 'class';\n  var STYLE_ATTR = 'style';\n  var NG_CONTAINER_TAG = 'ng-container';\n  var parentRenderNodeVar = variable('parentRenderNode');\n  var rootSelectorVar = variable('rootSelector');\n  function buildView(view, template, targetDependencies) {\n      var builderVisitor = new ViewBuilderVisitor(view, targetDependencies);\n      var parentEl = view.declarationElement.isNull() ? view.declarationElement : view.declarationElement.parent;\n      templateVisitAll(builderVisitor, template, parentEl);\n      if (view.viewType === ViewType.EMBEDDED || view.viewType === ViewType.HOST) {\n          view.lastRenderNode = builderVisitor.getOrCreateLastRenderNode();\n      }\n      return builderVisitor.nestedViewCount;\n  }\n  function finishView(view, targetStatements) {\n      view.afterNodes();\n      createViewTopLevelStmts(view, targetStatements);\n      view.nodes.forEach(function (node) {\n          if (node instanceof CompileElement && node.hasEmbeddedView) {\n              finishView(node.embeddedView, targetStatements);\n          }\n      });\n  }\n  var ViewBuilderVisitor = (function () {\n      function ViewBuilderVisitor(view, targetDependencies) {\n          this.view = view;\n          this.targetDependencies = targetDependencies;\n          this.nestedViewCount = 0;\n      }\n      ViewBuilderVisitor.prototype._isRootNode = function (parent) { return parent.view !== this.view; };\n      ViewBuilderVisitor.prototype._addRootNodeAndProject = function (node) {\n          var projectedNode = _getOuterContainerOrSelf(node);\n          var parent = projectedNode.parent;\n          var ngContentIndex = projectedNode.sourceAst.ngContentIndex;\n          var viewContainer = (node instanceof CompileElement && node.hasViewContainer) ? node.viewContainer : null;\n          if (this._isRootNode(parent)) {\n              if (this.view.viewType !== ViewType.COMPONENT) {\n                  this.view.rootNodes.push(new CompileViewRootNode(viewContainer ? CompileViewRootNodeType.ViewContainer : CompileViewRootNodeType.Node, viewContainer || node.renderNode));\n              }\n          }\n          else if (isPresent(parent.component) && isPresent(ngContentIndex)) {\n              parent.addContentNode(ngContentIndex, new CompileViewRootNode(viewContainer ? CompileViewRootNodeType.ViewContainer : CompileViewRootNodeType.Node, viewContainer || node.renderNode));\n          }\n      };\n      ViewBuilderVisitor.prototype._getParentRenderNode = function (parent) {\n          parent = _getOuterContainerParentOrSelf(parent);\n          if (this._isRootNode(parent)) {\n              if (this.view.viewType === ViewType.COMPONENT) {\n                  return parentRenderNodeVar;\n              }\n              else {\n                  // root node of an embedded/host view\n                  return NULL_EXPR;\n              }\n          }\n          else {\n              return isPresent(parent.component) &&\n                  parent.component.template.encapsulation !== _angular_core.ViewEncapsulation.Native ?\n                  NULL_EXPR :\n                  parent.renderNode;\n          }\n      };\n      ViewBuilderVisitor.prototype.getOrCreateLastRenderNode = function () {\n          var view = this.view;\n          if (view.rootNodes.length === 0 ||\n              view.rootNodes[view.rootNodes.length - 1].type !== CompileViewRootNodeType.Node) {\n              var fieldName = \"_el_\" + view.nodes.length;\n              view.fields.push(new ClassField(fieldName, importType(view.genConfig.renderTypes.renderElement)));\n              view.createMethod.addStmt(THIS_EXPR.prop(fieldName)\n                  .set(ViewProperties.renderer.callMethod('createTemplateAnchor', [NULL_EXPR, NULL_EXPR]))\n                  .toStmt());\n              view.rootNodes.push(new CompileViewRootNode(CompileViewRootNodeType.Node, THIS_EXPR.prop(fieldName)));\n          }\n          return view.rootNodes[view.rootNodes.length - 1].expr;\n      };\n      ViewBuilderVisitor.prototype.visitBoundText = function (ast, parent) {\n          return this._visitText(ast, '', parent);\n      };\n      ViewBuilderVisitor.prototype.visitText = function (ast, parent) {\n          return this._visitText(ast, ast.value, parent);\n      };\n      ViewBuilderVisitor.prototype._visitText = function (ast, value, parent) {\n          var fieldName = \"_text_\" + this.view.nodes.length;\n          this.view.fields.push(new ClassField(fieldName, importType(this.view.genConfig.renderTypes.renderText)));\n          var renderNode = THIS_EXPR.prop(fieldName);\n          var compileNode = new CompileNode(parent, this.view, this.view.nodes.length, renderNode, ast);\n          var createRenderNode = THIS_EXPR.prop(fieldName)\n              .set(ViewProperties.renderer.callMethod('createText', [\n              this._getParentRenderNode(parent), literal(value),\n              this.view.createMethod.resetDebugInfoExpr(this.view.nodes.length, ast)\n          ]))\n              .toStmt();\n          this.view.nodes.push(compileNode);\n          this.view.createMethod.addStmt(createRenderNode);\n          this._addRootNodeAndProject(compileNode);\n          return renderNode;\n      };\n      ViewBuilderVisitor.prototype.visitNgContent = function (ast, parent) {\n          // the projected nodes originate from a different view, so we don't\n          // have debug information for them...\n          this.view.createMethod.resetDebugInfo(null, ast);\n          var parentRenderNode = this._getParentRenderNode(parent);\n          if (parentRenderNode !== NULL_EXPR) {\n              this.view.createMethod.addStmt(THIS_EXPR.callMethod('projectNodes', [parentRenderNode, literal(ast.index)])\n                  .toStmt());\n          }\n          else if (this._isRootNode(parent)) {\n              if (this.view.viewType !== ViewType.COMPONENT) {\n                  // store root nodes only for embedded/host views\n                  this.view.rootNodes.push(new CompileViewRootNode(CompileViewRootNodeType.NgContent, null, ast.index));\n              }\n          }\n          else {\n              if (isPresent(parent.component) && isPresent(ast.ngContentIndex)) {\n                  parent.addContentNode(ast.ngContentIndex, new CompileViewRootNode(CompileViewRootNodeType.NgContent, null, ast.index));\n              }\n          }\n          return null;\n      };\n      ViewBuilderVisitor.prototype.visitElement = function (ast, parent) {\n          var nodeIndex = this.view.nodes.length;\n          var createRenderNodeExpr;\n          var debugContextExpr = this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast);\n          var directives = ast.directives.map(function (directiveAst) { return directiveAst.directive; });\n          var component = directives.find(function (directive) { return directive.isComponent; });\n          if (ast.name === NG_CONTAINER_TAG) {\n              createRenderNodeExpr = ViewProperties.renderer.callMethod('createTemplateAnchor', [this._getParentRenderNode(parent), debugContextExpr]);\n          }\n          else {\n              var htmlAttrs = _readHtmlAttrs(ast.attrs);\n              var attrNameAndValues = createInlineArray(_mergeHtmlAndDirectiveAttrs(htmlAttrs, directives).map(function (v) { return literal(v); }));\n              if (nodeIndex === 0 && this.view.viewType === ViewType.HOST) {\n                  createRenderNodeExpr =\n                      importExpr(resolveIdentifier(Identifiers.selectOrCreateRenderHostElement)).callFn([\n                          ViewProperties.renderer, literal(ast.name), attrNameAndValues, rootSelectorVar,\n                          debugContextExpr\n                      ]);\n              }\n              else {\n                  createRenderNodeExpr =\n                      importExpr(resolveIdentifier(Identifiers.createRenderElement)).callFn([\n                          ViewProperties.renderer, this._getParentRenderNode(parent), literal(ast.name),\n                          attrNameAndValues, debugContextExpr\n                      ]);\n              }\n          }\n          var fieldName = \"_el_\" + nodeIndex;\n          this.view.fields.push(new ClassField(fieldName, importType(this.view.genConfig.renderTypes.renderElement)));\n          this.view.createMethod.addStmt(THIS_EXPR.prop(fieldName).set(createRenderNodeExpr).toStmt());\n          var renderNode = THIS_EXPR.prop(fieldName);\n          var compileElement = new CompileElement(parent, this.view, nodeIndex, renderNode, ast, component, directives, ast.providers, ast.hasViewContainer, false, ast.references, this.targetDependencies);\n          this.view.nodes.push(compileElement);\n          var compViewExpr = null;\n          if (isPresent(component)) {\n              var nestedComponentIdentifier = new CompileIdentifierMetadata({ name: getViewClassName(component, 0) });\n              this.targetDependencies.push(new ViewClassDependency(component.type, nestedComponentIdentifier));\n              compViewExpr = THIS_EXPR.prop(\"compView_\" + nodeIndex); // fix highlighting: `\n              this.view.fields.push(new ClassField(compViewExpr.name, importType(resolveIdentifier(Identifiers.AppView), [importType(component.type)])));\n              this.view.viewChildren.push(compViewExpr);\n              compileElement.setComponentView(compViewExpr);\n              this.view.createMethod.addStmt(compViewExpr\n                  .set(importExpr(nestedComponentIdentifier).instantiate([\n                  ViewProperties.viewUtils, THIS_EXPR, literal(nodeIndex), renderNode\n              ]))\n                  .toStmt());\n          }\n          compileElement.beforeChildren();\n          this._addRootNodeAndProject(compileElement);\n          templateVisitAll(this, ast.children, compileElement);\n          compileElement.afterChildren(this.view.nodes.length - nodeIndex - 1);\n          if (isPresent(compViewExpr)) {\n              this.view.createMethod.addStmt(compViewExpr.callMethod('create', [compileElement.getComponent()]).toStmt());\n          }\n          return null;\n      };\n      ViewBuilderVisitor.prototype.visitEmbeddedTemplate = function (ast, parent) {\n          var nodeIndex = this.view.nodes.length;\n          var fieldName = \"_anchor_\" + nodeIndex;\n          this.view.fields.push(new ClassField(fieldName, importType(this.view.genConfig.renderTypes.renderComment)));\n          this.view.createMethod.addStmt(THIS_EXPR.prop(fieldName)\n              .set(ViewProperties.renderer.callMethod('createTemplateAnchor', [\n              this._getParentRenderNode(parent),\n              this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast)\n          ]))\n              .toStmt());\n          var renderNode = THIS_EXPR.prop(fieldName);\n          var templateVariableBindings = ast.variables.map(function (varAst) { return [varAst.value.length > 0 ? varAst.value : IMPLICIT_TEMPLATE_VAR, varAst.name]; });\n          var directives = ast.directives.map(function (directiveAst) { return directiveAst.directive; });\n          var compileElement = new CompileElement(parent, this.view, nodeIndex, renderNode, ast, null, directives, ast.providers, ast.hasViewContainer, true, ast.references, this.targetDependencies);\n          this.view.nodes.push(compileElement);\n          this.nestedViewCount++;\n          var embeddedView = new CompileView(this.view.component, this.view.genConfig, this.view.pipeMetas, NULL_EXPR, this.view.animations, this.view.viewIndex + this.nestedViewCount, compileElement, templateVariableBindings);\n          this.nestedViewCount += buildView(embeddedView, ast.children, this.targetDependencies);\n          compileElement.beforeChildren();\n          this._addRootNodeAndProject(compileElement);\n          compileElement.afterChildren(0);\n          return null;\n      };\n      ViewBuilderVisitor.prototype.visitAttr = function (ast, ctx) { return null; };\n      ViewBuilderVisitor.prototype.visitDirective = function (ast, ctx) { return null; };\n      ViewBuilderVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {\n          return null;\n      };\n      ViewBuilderVisitor.prototype.visitReference = function (ast, ctx) { return null; };\n      ViewBuilderVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\n      ViewBuilderVisitor.prototype.visitDirectiveProperty = function (ast, context) { return null; };\n      ViewBuilderVisitor.prototype.visitElementProperty = function (ast, context) { return null; };\n      return ViewBuilderVisitor;\n  }());\n  /**\n   * Walks up the nodes while the direct parent is a container.\n   *\n   * Returns the outer container or the node itself when it is not a direct child of a container.\n   *\n   * @internal\n   */\n  function _getOuterContainerOrSelf(node) {\n      var view = node.view;\n      while (_isNgContainer(node.parent, view)) {\n          node = node.parent;\n      }\n      return node;\n  }\n  /**\n   * Walks up the nodes while they are container and returns the first parent which is not.\n   *\n   * Returns the parent of the outer container or the node itself when it is not a container.\n   *\n   * @internal\n   */\n  function _getOuterContainerParentOrSelf(el) {\n      var view = el.view;\n      while (_isNgContainer(el, view)) {\n          el = el.parent;\n      }\n      return el;\n  }\n  function _isNgContainer(node, view) {\n      return !node.isNull() && node.sourceAst.name === NG_CONTAINER_TAG &&\n          node.view === view;\n  }\n  function _mergeHtmlAndDirectiveAttrs(declaredHtmlAttrs, directives) {\n      var mapResult = {};\n      Object.keys(declaredHtmlAttrs).forEach(function (key) { mapResult[key] = declaredHtmlAttrs[key]; });\n      directives.forEach(function (directiveMeta) {\n          Object.keys(directiveMeta.hostAttributes).forEach(function (name) {\n              var value = directiveMeta.hostAttributes[name];\n              var prevValue = mapResult[name];\n              mapResult[name] = isPresent(prevValue) ? mergeAttributeValue(name, prevValue, value) : value;\n          });\n      });\n      var arrResult = [];\n      // Note: We need to sort to get a defined output order\n      // for tests and for caching generated artifacts...\n      Object.keys(mapResult).sort().forEach(function (attrName) { arrResult.push(attrName, mapResult[attrName]); });\n      return arrResult;\n  }\n  function _readHtmlAttrs(attrs) {\n      var htmlAttrs = {};\n      attrs.forEach(function (ast) { htmlAttrs[ast.name] = ast.value; });\n      return htmlAttrs;\n  }\n  function mergeAttributeValue(attrName, attrValue1, attrValue2) {\n      if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n          return attrValue1 + \" \" + attrValue2;\n      }\n      else {\n          return attrValue2;\n      }\n  }\n  function createViewTopLevelStmts(view, targetStatements) {\n      var nodeDebugInfosVar = NULL_EXPR;\n      if (view.genConfig.genDebugInfo) {\n          nodeDebugInfosVar = variable(\"nodeDebugInfos_\" + view.component.type.name + view.viewIndex); // fix highlighting: `\n          targetStatements.push(nodeDebugInfosVar\n              .set(literalArr(view.nodes.map(createStaticNodeDebugInfo), new ArrayType(new ExternalType(resolveIdentifier(Identifiers.StaticNodeDebugInfo)), [TypeModifier.Const])))\n              .toDeclStmt(null, [StmtModifier.Final]));\n      }\n      var renderCompTypeVar = variable(\"renderType_\" + view.component.type.name); // fix highlighting: `\n      if (view.viewIndex === 0) {\n          var templateUrlInfo = void 0;\n          if (view.component.template.templateUrl == view.component.type.moduleUrl) {\n              templateUrlInfo =\n                  view.component.type.moduleUrl + \" class \" + view.component.type.name + \" - inline template\";\n          }\n          else {\n              templateUrlInfo = view.component.template.templateUrl;\n          }\n          targetStatements.push(renderCompTypeVar\n              .set(importExpr(resolveIdentifier(Identifiers.createRenderComponentType)).callFn([\n              view.genConfig.genDebugInfo ? literal(templateUrlInfo) : literal(''),\n              literal(view.component.template.ngContentSelectors.length),\n              ViewEncapsulationEnum.fromValue(view.component.template.encapsulation),\n              view.styles,\n              literalMap(view.animations.map(function (entry) { return [entry.name, entry.fnExp]; })),\n          ]))\n              .toDeclStmt(importType(resolveIdentifier(Identifiers.RenderComponentType))));\n      }\n      var viewClass = createViewClass(view, renderCompTypeVar, nodeDebugInfosVar);\n      targetStatements.push(viewClass);\n  }\n  function createStaticNodeDebugInfo(node) {\n      var compileElement = node instanceof CompileElement ? node : null;\n      var providerTokens = [];\n      var componentToken = NULL_EXPR;\n      var varTokenEntries = [];\n      if (isPresent(compileElement)) {\n          providerTokens = compileElement.getProviderTokens();\n          if (isPresent(compileElement.component)) {\n              componentToken = createDiTokenExpression(identifierToken(compileElement.component.type));\n          }\n          Object.keys(compileElement.referenceTokens).forEach(function (varName) {\n              var token = compileElement.referenceTokens[varName];\n              varTokenEntries.push([varName, isPresent(token) ? createDiTokenExpression(token) : NULL_EXPR]);\n          });\n      }\n      return importExpr(resolveIdentifier(Identifiers.StaticNodeDebugInfo))\n          .instantiate([\n          literalArr(providerTokens, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])),\n          componentToken,\n          literalMap(varTokenEntries, new MapType(DYNAMIC_TYPE, [TypeModifier.Const]))\n      ], importType(resolveIdentifier(Identifiers.StaticNodeDebugInfo), null, [TypeModifier.Const]));\n  }\n  function createViewClass(view, renderCompTypeVar, nodeDebugInfosVar) {\n      var viewConstructorArgs = [\n          new FnParam(ViewConstructorVars.viewUtils.name, importType(resolveIdentifier(Identifiers.ViewUtils))),\n          new FnParam(ViewConstructorVars.parentView.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n          new FnParam(ViewConstructorVars.parentIndex.name, NUMBER_TYPE),\n          new FnParam(ViewConstructorVars.parentElement.name, DYNAMIC_TYPE)\n      ];\n      var superConstructorArgs = [\n          variable(view.className), renderCompTypeVar, ViewTypeEnum.fromValue(view.viewType),\n          ViewConstructorVars.viewUtils, ViewConstructorVars.parentView, ViewConstructorVars.parentIndex,\n          ViewConstructorVars.parentElement,\n          ChangeDetectorStatusEnum.fromValue(getChangeDetectionMode(view))\n      ];\n      if (view.genConfig.genDebugInfo) {\n          superConstructorArgs.push(nodeDebugInfosVar);\n      }\n      if (view.viewType === ViewType.EMBEDDED) {\n          viewConstructorArgs.push(new FnParam('declaredViewContainer', importType(resolveIdentifier(Identifiers.ViewContainer))));\n          superConstructorArgs.push(variable('declaredViewContainer'));\n      }\n      var viewMethods = [\n          new ClassMethod('createInternal', [new FnParam(rootSelectorVar.name, STRING_TYPE)], generateCreateMethod(view), importType(resolveIdentifier(Identifiers.ComponentRef), [DYNAMIC_TYPE])),\n          new ClassMethod('injectorGetInternal', [\n              new FnParam(InjectMethodVars.token.name, DYNAMIC_TYPE),\n              // Note: Can't use o.INT_TYPE here as the method in AppView uses number\n              new FnParam(InjectMethodVars.requestNodeIndex.name, NUMBER_TYPE),\n              new FnParam(InjectMethodVars.notFoundResult.name, DYNAMIC_TYPE)\n          ], addReturnValuefNotEmpty(view.injectorGetMethod.finish(), InjectMethodVars.notFoundResult), DYNAMIC_TYPE),\n          new ClassMethod('detectChangesInternal', [new FnParam(DetectChangesVars.throwOnChange.name, BOOL_TYPE)], generateDetectChangesMethod(view)),\n          new ClassMethod('dirtyParentQueriesInternal', [], view.dirtyParentQueriesMethod.finish()),\n          new ClassMethod('destroyInternal', [], generateDestroyMethod(view)),\n          new ClassMethod('detachInternal', [], view.detachMethod.finish()),\n          generateVisitRootNodesMethod(view), generateVisitProjectableNodesMethod(view),\n          generateCreateEmbeddedViewsMethod(view)\n      ].filter(function (method) { return method.body.length > 0; });\n      var superClass = view.genConfig.genDebugInfo ? Identifiers.DebugAppView : Identifiers.AppView;\n      var viewClass = createClassStmt({\n          name: view.className,\n          parent: importExpr(resolveIdentifier(superClass), [getContextType(view)]),\n          parentArgs: superConstructorArgs,\n          ctorParams: viewConstructorArgs,\n          builders: [{ methods: viewMethods }, view]\n      });\n      return viewClass;\n  }\n  function generateDestroyMethod(view) {\n      var stmts = [];\n      view.viewContainers.forEach(function (viewContainer) {\n          stmts.push(viewContainer.callMethod('destroyNestedViews', []).toStmt());\n      });\n      view.viewChildren.forEach(function (viewChild) { stmts.push(viewChild.callMethod('destroy', []).toStmt()); });\n      stmts.push.apply(stmts, view.destroyMethod.finish());\n      return stmts;\n  }\n  function generateCreateMethod(view) {\n      var parentRenderNodeExpr = NULL_EXPR;\n      var parentRenderNodeStmts = [];\n      if (view.viewType === ViewType.COMPONENT) {\n          parentRenderNodeExpr =\n              ViewProperties.renderer.callMethod('createViewRoot', [THIS_EXPR.prop('parentElement')]);\n          parentRenderNodeStmts =\n              [parentRenderNodeVar.set(parentRenderNodeExpr)\n                      .toDeclStmt(importType(view.genConfig.renderTypes.renderNode), [StmtModifier.Final])];\n      }\n      var resultExpr;\n      if (view.viewType === ViewType.HOST) {\n          var hostEl = view.nodes[0];\n          resultExpr =\n              importExpr(resolveIdentifier(Identifiers.ComponentRef_), [DYNAMIC_TYPE]).instantiate([\n                  literal(hostEl.nodeIndex), THIS_EXPR, hostEl.renderNode, hostEl.getComponent()\n              ]);\n      }\n      else {\n          resultExpr = NULL_EXPR;\n      }\n      var allNodesExpr = ViewProperties.renderer.cast(DYNAMIC_TYPE)\n          .prop('directRenderer')\n          .conditional(NULL_EXPR, literalArr(view.nodes.map(function (node) { return node.renderNode; })));\n      return parentRenderNodeStmts.concat(view.createMethod.finish(), [\n          THIS_EXPR\n              .callMethod('init', [\n              view.lastRenderNode,\n              allNodesExpr,\n              view.disposables.length ? literalArr(view.disposables) : NULL_EXPR,\n          ])\n              .toStmt(),\n          new ReturnStatement(resultExpr)\n      ]);\n  }\n  function generateDetectChangesMethod(view) {\n      var stmts = [];\n      if (view.animationBindingsMethod.isEmpty() && view.detectChangesInInputsMethod.isEmpty() &&\n          view.updateContentQueriesMethod.isEmpty() &&\n          view.afterContentLifecycleCallbacksMethod.isEmpty() &&\n          view.detectChangesRenderPropertiesMethod.isEmpty() &&\n          view.updateViewQueriesMethod.isEmpty() && view.afterViewLifecycleCallbacksMethod.isEmpty() &&\n          view.viewContainers.length === 0 && view.viewChildren.length === 0) {\n          return stmts;\n      }\n      stmts.push.apply(stmts, view.animationBindingsMethod.finish());\n      stmts.push.apply(stmts, view.detectChangesInInputsMethod.finish());\n      view.viewContainers.forEach(function (viewContainer) {\n          stmts.push(viewContainer.callMethod('detectChangesInNestedViews', [DetectChangesVars.throwOnChange])\n              .toStmt());\n      });\n      var afterContentStmts = view.updateContentQueriesMethod.finish().concat(view.afterContentLifecycleCallbacksMethod.finish());\n      if (afterContentStmts.length > 0) {\n          stmts.push(new IfStmt(not(DetectChangesVars.throwOnChange), afterContentStmts));\n      }\n      stmts.push.apply(stmts, view.detectChangesRenderPropertiesMethod.finish());\n      view.viewChildren.forEach(function (viewChild) {\n          stmts.push(viewChild.callMethod('detectChanges', [DetectChangesVars.throwOnChange]).toStmt());\n      });\n      var afterViewStmts = view.updateViewQueriesMethod.finish().concat(view.afterViewLifecycleCallbacksMethod.finish());\n      if (afterViewStmts.length > 0) {\n          stmts.push(new IfStmt(not(DetectChangesVars.throwOnChange), afterViewStmts));\n      }\n      var varStmts = [];\n      var readVars = findReadVarNames(stmts);\n      if (readVars.has(DetectChangesVars.changed.name)) {\n          varStmts.push(DetectChangesVars.changed.set(literal(true)).toDeclStmt(BOOL_TYPE));\n      }\n      if (readVars.has(DetectChangesVars.changes.name)) {\n          varStmts.push(DetectChangesVars.changes.set(NULL_EXPR)\n              .toDeclStmt(new MapType(importType(resolveIdentifier(Identifiers.SimpleChange)))));\n      }\n      varStmts.push.apply(varStmts, createSharedBindingVariablesIfNeeded(stmts));\n      return varStmts.concat(stmts);\n  }\n  function addReturnValuefNotEmpty(statements, value) {\n      if (statements.length > 0) {\n          return statements.concat([new ReturnStatement(value)]);\n      }\n      else {\n          return statements;\n      }\n  }\n  function getContextType(view) {\n      if (view.viewType === ViewType.COMPONENT) {\n          return importType(view.component.type);\n      }\n      return DYNAMIC_TYPE;\n  }\n  function getChangeDetectionMode(view) {\n      var mode;\n      if (view.viewType === ViewType.COMPONENT) {\n          mode = isDefaultChangeDetectionStrategy(view.component.changeDetection) ?\n              ChangeDetectorStatus.CheckAlways :\n              ChangeDetectorStatus.CheckOnce;\n      }\n      else {\n          mode = ChangeDetectorStatus.CheckAlways;\n      }\n      return mode;\n  }\n  function generateVisitRootNodesMethod(view) {\n      var cbVar = variable('cb');\n      var ctxVar = variable('ctx');\n      var stmts = generateVisitNodesStmts(view.rootNodes, cbVar, ctxVar);\n      return new ClassMethod('visitRootNodesInternal', [new FnParam(cbVar.name, DYNAMIC_TYPE), new FnParam(ctxVar.name, DYNAMIC_TYPE)], stmts);\n  }\n  function generateVisitProjectableNodesMethod(view) {\n      var nodeIndexVar = variable('nodeIndex');\n      var ngContentIndexVar = variable('ngContentIndex');\n      var cbVar = variable('cb');\n      var ctxVar = variable('ctx');\n      var stmts = [];\n      view.nodes.forEach(function (node) {\n          if (node instanceof CompileElement && node.component) {\n              node.contentNodesByNgContentIndex.forEach(function (projectedNodes, ngContentIndex) {\n                  stmts.push(new IfStmt(nodeIndexVar.equals(literal(node.nodeIndex))\n                      .and(ngContentIndexVar.equals(literal(ngContentIndex))), generateVisitNodesStmts(projectedNodes, cbVar, ctxVar)));\n              });\n          }\n      });\n      return new ClassMethod('visitProjectableNodesInternal', [\n          new FnParam(nodeIndexVar.name, NUMBER_TYPE),\n          new FnParam(ngContentIndexVar.name, NUMBER_TYPE),\n          new FnParam(cbVar.name, DYNAMIC_TYPE), new FnParam(ctxVar.name, DYNAMIC_TYPE)\n      ], stmts);\n  }\n  function generateVisitNodesStmts(nodes, cb, ctx) {\n      var stmts = [];\n      nodes.forEach(function (node) {\n          switch (node.type) {\n              case CompileViewRootNodeType.Node:\n                  stmts.push(cb.callFn([node.expr, ctx]).toStmt());\n                  break;\n              case CompileViewRootNodeType.ViewContainer:\n                  stmts.push(cb.callFn([node.expr.prop('nativeElement'), ctx]).toStmt());\n                  stmts.push(node.expr.callMethod('visitNestedViewRootNodes', [cb, ctx]).toStmt());\n                  break;\n              case CompileViewRootNodeType.NgContent:\n                  stmts.push(THIS_EXPR.callMethod('visitProjectedNodes', [literal(node.ngContentIndex), cb, ctx])\n                      .toStmt());\n                  break;\n          }\n      });\n      return stmts;\n  }\n  function generateCreateEmbeddedViewsMethod(view) {\n      var nodeIndexVar = variable('nodeIndex');\n      var stmts = [];\n      view.nodes.forEach(function (node) {\n          if (node instanceof CompileElement) {\n              if (node.embeddedView) {\n                  var parentNodeIndex = node.isRootElement() ? null : node.parent.nodeIndex;\n                  stmts.push(new IfStmt(nodeIndexVar.equals(literal(node.nodeIndex)), [new ReturnStatement(node.embeddedView.classExpr.instantiate([\n                          ViewProperties.viewUtils, THIS_EXPR, literal(node.nodeIndex), node.renderNode,\n                          node.viewContainer\n                      ]))]));\n              }\n          }\n      });\n      if (stmts.length > 0) {\n          stmts.push(new ReturnStatement(NULL_EXPR));\n      }\n      return new ClassMethod('createEmbeddedViewInternal', [new FnParam(nodeIndexVar.name, NUMBER_TYPE)], stmts, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE]));\n  }\n\n  var ViewCompileResult = (function () {\n      function ViewCompileResult(statements, viewClassVar, dependencies) {\n          this.statements = statements;\n          this.viewClassVar = viewClassVar;\n          this.dependencies = dependencies;\n      }\n      return ViewCompileResult;\n  }());\n  var ViewCompiler = (function () {\n      function ViewCompiler(_genConfig, _schemaRegistry) {\n          this._genConfig = _genConfig;\n          this._schemaRegistry = _schemaRegistry;\n      }\n      ViewCompiler.prototype.compileComponent = function (component, template, styles, pipes, compiledAnimations) {\n          var dependencies = [];\n          var view = new CompileView(component, this._genConfig, pipes, styles, compiledAnimations, 0, CompileElement.createNull(), []);\n          var statements = [];\n          buildView(view, template, dependencies);\n          // Need to separate binding from creation to be able to refer to\n          // variables that have been declared after usage.\n          bindView(view, template, this._schemaRegistry);\n          finishView(view, statements);\n          return new ViewCompileResult(statements, view.classExpr.name, dependencies);\n      };\n      ViewCompiler.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      ViewCompiler.ctorParameters = [\n          { type: CompilerConfig, },\n          { type: ElementSchemaRegistry, },\n      ];\n      return ViewCompiler;\n  }());\n\n  var SourceModule = (function () {\n      function SourceModule(fileUrl, moduleUrl, source) {\n          this.fileUrl = fileUrl;\n          this.moduleUrl = moduleUrl;\n          this.source = source;\n      }\n      return SourceModule;\n  }());\n  // Returns all the source files and a mapping from modules to directives\n  function analyzeNgModules(programStaticSymbols, options, metadataResolver) {\n      var _a = _createNgModules(programStaticSymbols, options, metadataResolver), ngModules = _a.ngModules, symbolsMissingModule = _a.symbolsMissingModule;\n      return _analyzeNgModules(ngModules, symbolsMissingModule);\n  }\n  function analyzeAndValidateNgModules(programStaticSymbols, options, metadataResolver) {\n      var result = analyzeNgModules(programStaticSymbols, options, metadataResolver);\n      if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n          var messages = result.symbolsMissingModule.map(function (s) { return (\"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"!\"); });\n          throw new Error(messages.join('\\n'));\n      }\n      return result;\n  }\n  // Wait for the directives in the given modules have been loaded\n  function loadNgModuleDirectives(ngModules) {\n      return Promise\n          .all(ListWrapper.flatten(ngModules.map(function (ngModule) { return ngModule.transitiveModule.directiveLoaders.map(function (loader) { return loader(); }); })))\n          .then(function () { });\n  }\n  function _analyzeNgModules(ngModuleMetas, symbolsMissingModule) {\n      var moduleMetasByRef = new Map();\n      ngModuleMetas.forEach(function (ngModule) { return moduleMetasByRef.set(ngModule.type.reference, ngModule); });\n      var ngModuleByPipeOrDirective = new Map();\n      var ngModulesByFile = new Map();\n      var ngDirectivesByFile = new Map();\n      var filePaths = new Set();\n      // Looping over all modules to construct:\n      // - a map from file to modules `ngModulesByFile`,\n      // - a map from file to directives `ngDirectivesByFile`,\n      // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n      ngModuleMetas.forEach(function (ngModuleMeta) {\n          var srcFileUrl = ngModuleMeta.type.reference.filePath;\n          filePaths.add(srcFileUrl);\n          ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n          ngModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n              var fileUrl = dirIdentifier.reference.filePath;\n              filePaths.add(fileUrl);\n              ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n              ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n          });\n          ngModuleMeta.declaredPipes.forEach(function (pipeIdentifier) {\n              var fileUrl = pipeIdentifier.reference.filePath;\n              filePaths.add(fileUrl);\n              ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n          });\n      });\n      var files = [];\n      filePaths.forEach(function (srcUrl) {\n          var directives = ngDirectivesByFile.get(srcUrl) || [];\n          var ngModules = ngModulesByFile.get(srcUrl) || [];\n          files.push({ srcUrl: srcUrl, directives: directives, ngModules: ngModules });\n      });\n      return {\n          // map directive/pipe to module\n          ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n          // list modules and directives for every source file\n          files: files,\n          ngModules: ngModuleMetas, symbolsMissingModule: symbolsMissingModule\n      };\n  }\n  var OfflineCompiler = (function () {\n      function OfflineCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _dirWrapperCompiler, _ngModuleCompiler, _outputEmitter, _localeId, _translationFormat, _animationParser) {\n          this._metadataResolver = _metadataResolver;\n          this._templateParser = _templateParser;\n          this._styleCompiler = _styleCompiler;\n          this._viewCompiler = _viewCompiler;\n          this._dirWrapperCompiler = _dirWrapperCompiler;\n          this._ngModuleCompiler = _ngModuleCompiler;\n          this._outputEmitter = _outputEmitter;\n          this._localeId = _localeId;\n          this._translationFormat = _translationFormat;\n          this._animationParser = _animationParser;\n          this._animationCompiler = new AnimationCompiler();\n      }\n      OfflineCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n      OfflineCompiler.prototype.compileModules = function (staticSymbols, options) {\n          var _this = this;\n          var _a = analyzeAndValidateNgModules(staticSymbols, options, this._metadataResolver), ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files, ngModules = _a.ngModules;\n          return loadNgModuleDirectives(ngModules).then(function () {\n              var sourceModules = files.map(function (file) { return _this._compileSrcFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.ngModules); });\n              return ListWrapper.flatten(sourceModules);\n          });\n      };\n      OfflineCompiler.prototype._compileSrcFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, ngModules) {\n          var _this = this;\n          var fileSuffix = _splitTypescriptSuffix(srcFileUrl)[1];\n          var statements = [];\n          var exportedVars = [];\n          var outputSourceModules = [];\n          // compile all ng modules\n          exportedVars.push.apply(exportedVars, ngModules.map(function (ngModuleType) { return _this._compileModule(ngModuleType, statements); }));\n          // compile directive wrappers\n          exportedVars.push.apply(exportedVars, directives.map(function (directiveType) { return _this._compileDirectiveWrapper(directiveType, statements); }));\n          // compile components\n          directives.forEach(function (dirType) {\n              var compMeta = _this._metadataResolver.getDirectiveMetadata(dirType);\n              if (!compMeta.isComponent) {\n                  return Promise.resolve(null);\n              }\n              var ngModule = ngModuleByPipeOrDirective.get(dirType);\n              if (!ngModule) {\n                  throw new Error(\"Internal Error: cannot determine the module for component \" + compMeta.type.name + \"!\");\n              }\n              _assertComponent(compMeta);\n              // compile styles\n              var stylesCompileResults = _this._styleCompiler.compileComponent(compMeta);\n              stylesCompileResults.externalStylesheets.forEach(function (compiledStyleSheet) {\n                  outputSourceModules.push(_this._codgenStyles(srcFileUrl, compiledStyleSheet, fileSuffix));\n              });\n              // compile components\n              exportedVars.push(_this._compileComponentFactory(compMeta, ngModule, fileSuffix, statements), _this._compileComponent(compMeta, ngModule, ngModule.transitiveModule.directives, stylesCompileResults.componentStylesheet, fileSuffix, statements));\n          });\n          if (statements.length > 0) {\n              var srcModule = this._codegenSourceModule(srcFileUrl, _ngfactoryModuleUrl(srcFileUrl), statements, exportedVars);\n              outputSourceModules.unshift(srcModule);\n          }\n          return outputSourceModules;\n      };\n      OfflineCompiler.prototype._compileModule = function (ngModuleType, targetStatements) {\n          var ngModule = this._metadataResolver.getNgModuleMetadata(ngModuleType);\n          var providers = [];\n          if (this._localeId) {\n              providers.push(new CompileProviderMetadata({\n                  token: resolveIdentifierToken(Identifiers.LOCALE_ID),\n                  useValue: this._localeId,\n              }));\n          }\n          if (this._translationFormat) {\n              providers.push(new CompileProviderMetadata({\n                  token: resolveIdentifierToken(Identifiers.TRANSLATIONS_FORMAT),\n                  useValue: this._translationFormat\n              }));\n          }\n          var appCompileResult = this._ngModuleCompiler.compile(ngModule, providers);\n          appCompileResult.dependencies.forEach(function (dep) {\n              dep.placeholder.name = _componentFactoryName(dep.comp);\n              dep.placeholder.moduleUrl = _ngfactoryModuleUrl(dep.comp.moduleUrl);\n          });\n          targetStatements.push.apply(targetStatements, appCompileResult.statements);\n          return appCompileResult.ngModuleFactoryVar;\n      };\n      OfflineCompiler.prototype._compileDirectiveWrapper = function (directiveType, targetStatements) {\n          var dirMeta = this._metadataResolver.getDirectiveMetadata(directiveType);\n          var dirCompileResult = this._dirWrapperCompiler.compile(dirMeta);\n          targetStatements.push.apply(targetStatements, dirCompileResult.statements);\n          return dirCompileResult.dirWrapperClassVar;\n      };\n      OfflineCompiler.prototype._compileComponentFactory = function (compMeta, ngModule, fileSuffix, targetStatements) {\n          var hostMeta = createHostComponentMeta(compMeta);\n          var hostViewFactoryVar = this._compileComponent(hostMeta, ngModule, [compMeta.type], null, fileSuffix, targetStatements);\n          var compFactoryVar = _componentFactoryName(compMeta.type);\n          targetStatements.push(variable(compFactoryVar)\n              .set(importExpr(resolveIdentifier(Identifiers.ComponentFactory), [importType(compMeta.type)])\n              .instantiate([\n              literal(compMeta.selector),\n              variable(hostViewFactoryVar),\n              importExpr(compMeta.type),\n          ], importType(resolveIdentifier(Identifiers.ComponentFactory), [importType(compMeta.type)], [TypeModifier.Const])))\n              .toDeclStmt(null, [StmtModifier.Final]));\n          return compFactoryVar;\n      };\n      OfflineCompiler.prototype._compileComponent = function (compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix, targetStatements) {\n          var _this = this;\n          var parsedAnimations = this._animationParser.parseComponent(compMeta);\n          var directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n          var pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n          var parsedTemplate = this._templateParser.parse(compMeta, compMeta.template.template, directives, pipes, ngModule.schemas, compMeta.type.name);\n          var stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n          var compiledAnimations = this._animationCompiler.compile(compMeta.type.name, parsedAnimations);\n          var viewResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, stylesExpr, pipes, compiledAnimations);\n          if (componentStyles) {\n              targetStatements.push.apply(targetStatements, _resolveStyleStatements(componentStyles, fileSuffix));\n          }\n          compiledAnimations.forEach(function (entry) { return targetStatements.push.apply(targetStatements, entry.statements); });\n          targetStatements.push.apply(targetStatements, _resolveViewStatements(viewResult));\n          return viewResult.viewClassVar;\n      };\n      OfflineCompiler.prototype._codgenStyles = function (fileUrl, stylesCompileResult, fileSuffix) {\n          _resolveStyleStatements(stylesCompileResult, fileSuffix);\n          return this._codegenSourceModule(fileUrl, _stylesModuleUrl(stylesCompileResult.meta.moduleUrl, stylesCompileResult.isShimmed, fileSuffix), stylesCompileResult.statements, [stylesCompileResult.stylesVar]);\n      };\n      OfflineCompiler.prototype._codegenSourceModule = function (fileUrl, moduleUrl, statements, exportedVars) {\n          return new SourceModule(fileUrl, moduleUrl, this._outputEmitter.emitStatements(moduleUrl, statements, exportedVars));\n      };\n      return OfflineCompiler;\n  }());\n  function _resolveViewStatements(compileResult) {\n      compileResult.dependencies.forEach(function (dep) {\n          if (dep instanceof ViewClassDependency) {\n              var vfd = dep;\n              vfd.placeholder.moduleUrl = _ngfactoryModuleUrl(vfd.comp.moduleUrl);\n          }\n          else if (dep instanceof ComponentFactoryDependency) {\n              var cfd = dep;\n              cfd.placeholder.name = _componentFactoryName(cfd.comp);\n              cfd.placeholder.moduleUrl = _ngfactoryModuleUrl(cfd.comp.moduleUrl);\n          }\n          else if (dep instanceof DirectiveWrapperDependency) {\n              var dwd = dep;\n              dwd.placeholder.moduleUrl = _ngfactoryModuleUrl(dwd.dir.moduleUrl);\n          }\n      });\n      return compileResult.statements;\n  }\n  function _resolveStyleStatements(compileResult, fileSuffix) {\n      compileResult.dependencies.forEach(function (dep) {\n          dep.valuePlaceholder.moduleUrl = _stylesModuleUrl(dep.moduleUrl, dep.isShimmed, fileSuffix);\n      });\n      return compileResult.statements;\n  }\n  function _ngfactoryModuleUrl(dirUrl) {\n      var urlWithSuffix = _splitTypescriptSuffix(dirUrl);\n      return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n  }\n  function _componentFactoryName(comp) {\n      return comp.name + \"NgFactory\";\n  }\n  function _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n      return shim ? stylesheetUrl + \".shim\" + suffix : \"\" + stylesheetUrl + suffix;\n  }\n  function _assertComponent(meta) {\n      if (!meta.isComponent) {\n          throw new Error(\"Could not compile '\" + meta.type.name + \"' because it is not a component.\");\n      }\n  }\n  function _splitTypescriptSuffix(path) {\n      if (path.endsWith('.d.ts')) {\n          return [path.slice(0, -5), '.ts'];\n      }\n      var lastDot = path.lastIndexOf('.');\n      if (lastDot !== -1) {\n          return [path.substring(0, lastDot), path.substring(lastDot)];\n      }\n      return [path, ''];\n  }\n  // Load the NgModules and check\n  // that all directives / pipes that are present in the program\n  // are also declared by a module.\n  function _createNgModules(programStaticSymbols, options, metadataResolver) {\n      var ngModules = new Map();\n      var programPipesAndDirectives = [];\n      var ngModulePipesAndDirective = new Set();\n      var addNgModule = function (staticSymbol) {\n          if (ngModules.has(staticSymbol)) {\n              return false;\n          }\n          var ngModule = metadataResolver.getUnloadedNgModuleMetadata(staticSymbol, false, false);\n          if (ngModule) {\n              ngModules.set(ngModule.type.reference, ngModule);\n              ngModule.declaredDirectives.forEach(function (dir) { return ngModulePipesAndDirective.add(dir.reference); });\n              ngModule.declaredPipes.forEach(function (pipe) { return ngModulePipesAndDirective.add(pipe.reference); });\n              if (options.transitiveModules) {\n                  // For every input modules add the list of transitively included modules\n                  ngModule.transitiveModule.modules.forEach(function (modMeta) { return addNgModule(modMeta.type.reference); });\n              }\n          }\n          return !!ngModule;\n      };\n      programStaticSymbols.forEach(function (staticSymbol) {\n          if (!addNgModule(staticSymbol) &&\n              (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n              programPipesAndDirectives.push(staticSymbol);\n          }\n      });\n      // Throw an error if any of the program pipe or directives is not declared by a module\n      var symbolsMissingModule = programPipesAndDirectives.filter(function (s) { return !ngModulePipesAndDirective.has(s); });\n      return { ngModules: Array.from(ngModules.values()), symbolsMissingModule: symbolsMissingModule };\n  }\n\n  var StylesCollectionEntry = (function () {\n      function StylesCollectionEntry(time, value) {\n          this.time = time;\n          this.value = value;\n      }\n      StylesCollectionEntry.prototype.matches = function (time, value) {\n          return time == this.time && value == this.value;\n      };\n      return StylesCollectionEntry;\n  }());\n  var StylesCollection = (function () {\n      function StylesCollection() {\n          this.styles = {};\n      }\n      StylesCollection.prototype.insertAtTime = function (property, time, value) {\n          var tuple = new StylesCollectionEntry(time, value);\n          var entries = this.styles[property];\n          if (!isPresent(entries)) {\n              entries = this.styles[property] = [];\n          }\n          // insert this at the right stop in the array\n          // this way we can keep it sorted\n          var insertionIndex = 0;\n          for (var i = entries.length - 1; i >= 0; i--) {\n              if (entries[i].time <= time) {\n                  insertionIndex = i + 1;\n                  break;\n              }\n          }\n          entries.splice(insertionIndex, 0, tuple);\n      };\n      StylesCollection.prototype.getByIndex = function (property, index) {\n          var items = this.styles[property];\n          if (isPresent(items)) {\n              return index >= items.length ? null : items[index];\n          }\n          return null;\n      };\n      StylesCollection.prototype.indexOfAtOrBeforeTime = function (property, time) {\n          var entries = this.styles[property];\n          if (isPresent(entries)) {\n              for (var i = entries.length - 1; i >= 0; i--) {\n                  if (entries[i].time <= time)\n                      return i;\n              }\n          }\n          return null;\n      };\n      return StylesCollection;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$16 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var _INITIAL_KEYFRAME = 0;\n  var _TERMINAL_KEYFRAME = 1;\n  var _ONE_SECOND = 1000;\n  var AnimationParseError = (function (_super) {\n      __extends$16(AnimationParseError, _super);\n      function AnimationParseError(message) {\n          _super.call(this, null, message);\n      }\n      AnimationParseError.prototype.toString = function () { return \"\" + this.msg; };\n      return AnimationParseError;\n  }(ParseError));\n  var AnimationEntryParseResult = (function () {\n      function AnimationEntryParseResult(ast, errors) {\n          this.ast = ast;\n          this.errors = errors;\n      }\n      return AnimationEntryParseResult;\n  }());\n  var AnimationParser = (function () {\n      function AnimationParser(_schema) {\n          this._schema = _schema;\n      }\n      AnimationParser.prototype.parseComponent = function (component) {\n          var _this = this;\n          var errors = [];\n          var componentName = component.type.name;\n          var animationTriggerNames = new Set();\n          var asts = component.template.animations.map(function (entry) {\n              var result = _this.parseEntry(entry);\n              var ast = result.ast;\n              var triggerName = ast.name;\n              if (animationTriggerNames.has(triggerName)) {\n                  result.errors.push(new AnimationParseError(\"The animation trigger \\\"\" + triggerName + \"\\\" has already been registered for the \" + componentName + \" component\"));\n              }\n              else {\n                  animationTriggerNames.add(triggerName);\n              }\n              if (result.errors.length > 0) {\n                  var errorMessage_1 = \"- Unable to parse the animation sequence for \\\"\" + triggerName + \"\\\" on the \" + componentName + \" component due to the following errors:\";\n                  result.errors.forEach(function (error) { errorMessage_1 += '\\n-- ' + error.msg; });\n                  errors.push(errorMessage_1);\n              }\n              return ast;\n          });\n          if (errors.length > 0) {\n              var errorString = errors.join('\\n');\n              throw new Error(\"Animation parse errors:\\n\" + errorString);\n          }\n          return asts;\n      };\n      AnimationParser.prototype.parseEntry = function (entry) {\n          var _this = this;\n          var errors = [];\n          var stateStyles = {};\n          var transitions = [];\n          var stateDeclarationAsts = [];\n          entry.definitions.forEach(function (def) {\n              if (def instanceof CompileAnimationStateDeclarationMetadata) {\n                  _parseAnimationDeclarationStates(def, _this._schema, errors).forEach(function (ast) {\n                      stateDeclarationAsts.push(ast);\n                      stateStyles[ast.stateName] = ast.styles;\n                  });\n              }\n              else {\n                  transitions.push(def);\n              }\n          });\n          var stateTransitionAsts = transitions.map(function (transDef) { return _parseAnimationStateTransition(transDef, stateStyles, _this._schema, errors); });\n          var ast = new AnimationEntryAst(entry.name, stateDeclarationAsts, stateTransitionAsts);\n          return new AnimationEntryParseResult(ast, errors);\n      };\n      AnimationParser.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      AnimationParser.ctorParameters = [\n          { type: ElementSchemaRegistry, },\n      ];\n      return AnimationParser;\n  }());\n  function _parseAnimationDeclarationStates(stateMetadata, schema, errors) {\n      var normalizedStyles = _normalizeStyleMetadata(stateMetadata.styles, {}, schema, errors, false);\n      var defStyles = new AnimationStylesAst(normalizedStyles);\n      var states = stateMetadata.stateNameExpr.split(/\\s*,\\s*/);\n      return states.map(function (state) { return new AnimationStateDeclarationAst(state, defStyles); });\n  }\n  function _parseAnimationStateTransition(transitionStateMetadata, stateStyles, schema, errors) {\n      var styles = new StylesCollection();\n      var transitionExprs = [];\n      var transitionStates = transitionStateMetadata.stateChangeExpr.split(/\\s*,\\s*/);\n      transitionStates.forEach(function (expr) { transitionExprs.push.apply(transitionExprs, _parseAnimationTransitionExpr(expr, errors)); });\n      var entry = _normalizeAnimationEntry(transitionStateMetadata.steps);\n      var animation = _normalizeStyleSteps(entry, stateStyles, schema, errors);\n      var animationAst = _parseTransitionAnimation(animation, 0, styles, stateStyles, errors);\n      if (errors.length == 0) {\n          _fillAnimationAstStartingKeyframes(animationAst, styles, errors);\n      }\n      var stepsAst = (animationAst instanceof AnimationWithStepsAst) ?\n          animationAst :\n          new AnimationSequenceAst([animationAst]);\n      return new AnimationStateTransitionAst(transitionExprs, stepsAst);\n  }\n  function _parseAnimationAlias(alias, errors) {\n      switch (alias) {\n          case ':enter':\n              return 'void => *';\n          case ':leave':\n              return '* => void';\n          default:\n              errors.push(new AnimationParseError(\"the transition alias value \\\"\" + alias + \"\\\" is not supported\"));\n              return '* => *';\n      }\n  }\n  function _parseAnimationTransitionExpr(eventStr, errors) {\n      var expressions = [];\n      if (eventStr[0] == ':') {\n          eventStr = _parseAnimationAlias(eventStr, errors);\n      }\n      var match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n      if (!isPresent(match) || match.length < 4) {\n          errors.push(new AnimationParseError(\"the provided \" + eventStr + \" is not of a supported format\"));\n          return expressions;\n      }\n      var fromState = match[1];\n      var separator = match[2];\n      var toState = match[3];\n      expressions.push(new AnimationStateTransitionExpression(fromState, toState));\n      var isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n      if (separator[0] == '<' && !isFullAnyStateExpr) {\n          expressions.push(new AnimationStateTransitionExpression(toState, fromState));\n      }\n      return expressions;\n  }\n  function _normalizeAnimationEntry(entry) {\n      return Array.isArray(entry) ? new CompileAnimationSequenceMetadata(entry) : entry;\n  }\n  function _normalizeStyleMetadata(entry, stateStyles, schema, errors, permitStateReferences) {\n      var normalizedStyles = [];\n      entry.styles.forEach(function (styleEntry) {\n          if (typeof styleEntry === 'string') {\n              if (permitStateReferences) {\n                  normalizedStyles.push.apply(normalizedStyles, _resolveStylesFromState(styleEntry, stateStyles, errors));\n              }\n              else {\n                  errors.push(new AnimationParseError(\"State based animations cannot contain references to other states\"));\n              }\n          }\n          else {\n              var stylesObj_1 = styleEntry;\n              var normalizedStylesObj_1 = {};\n              Object.keys(stylesObj_1).forEach(function (propName) {\n                  var normalizedProp = schema.normalizeAnimationStyleProperty(propName);\n                  var normalizedOutput = schema.normalizeAnimationStyleValue(normalizedProp, propName, stylesObj_1[propName]);\n                  var normalizationError = normalizedOutput['error'];\n                  if (normalizationError) {\n                      errors.push(new AnimationParseError(normalizationError));\n                  }\n                  normalizedStylesObj_1[normalizedProp] = normalizedOutput['value'];\n              });\n              normalizedStyles.push(normalizedStylesObj_1);\n          }\n      });\n      return normalizedStyles;\n  }\n  function _normalizeStyleSteps(entry, stateStyles, schema, errors) {\n      var steps = _normalizeStyleStepEntry(entry, stateStyles, schema, errors);\n      return (entry instanceof CompileAnimationGroupMetadata) ?\n          new CompileAnimationGroupMetadata(steps) :\n          new CompileAnimationSequenceMetadata(steps);\n  }\n  function _mergeAnimationStyles(stylesList, newItem) {\n      if (typeof newItem === 'object' && newItem !== null && stylesList.length > 0) {\n          var lastIndex = stylesList.length - 1;\n          var lastItem = stylesList[lastIndex];\n          if (typeof lastItem === 'object' && lastItem !== null) {\n              stylesList[lastIndex] = StringMapWrapper.merge(lastItem, newItem);\n              return;\n          }\n      }\n      stylesList.push(newItem);\n  }\n  function _normalizeStyleStepEntry(entry, stateStyles, schema, errors) {\n      var steps;\n      if (entry instanceof CompileAnimationWithStepsMetadata) {\n          steps = entry.steps;\n      }\n      else {\n          return [entry];\n      }\n      var newSteps = [];\n      var combinedStyles;\n      steps.forEach(function (step) {\n          if (step instanceof CompileAnimationStyleMetadata) {\n              // this occurs when a style step is followed by a previous style step\n              // or when the first style step is run. We want to concatenate all subsequent\n              // style steps together into a single style step such that we have the correct\n              // starting keyframe data to pass into the animation player.\n              if (!isPresent(combinedStyles)) {\n                  combinedStyles = [];\n              }\n              _normalizeStyleMetadata(step, stateStyles, schema, errors, true)\n                  .forEach(function (entry) { _mergeAnimationStyles(combinedStyles, entry); });\n          }\n          else {\n              // it is important that we create a metadata entry of the combined styles\n              // before we go on an process the animate, sequence or group metadata steps.\n              // This will ensure that the AST will have the previous styles painted on\n              // screen before any further animations that use the styles take place.\n              if (isPresent(combinedStyles)) {\n                  newSteps.push(new CompileAnimationStyleMetadata(0, combinedStyles));\n                  combinedStyles = null;\n              }\n              if (step instanceof CompileAnimationAnimateMetadata) {\n                  // we do not recurse into CompileAnimationAnimateMetadata since\n                  // those style steps are not going to be squashed\n                  var animateStyleValue = step.styles;\n                  if (animateStyleValue instanceof CompileAnimationStyleMetadata) {\n                      animateStyleValue.styles =\n                          _normalizeStyleMetadata(animateStyleValue, stateStyles, schema, errors, true);\n                  }\n                  else if (animateStyleValue instanceof CompileAnimationKeyframesSequenceMetadata) {\n                      animateStyleValue.steps.forEach(function (step) {\n                          step.styles = _normalizeStyleMetadata(step, stateStyles, schema, errors, true);\n                      });\n                  }\n              }\n              else if (step instanceof CompileAnimationWithStepsMetadata) {\n                  var innerSteps = _normalizeStyleStepEntry(step, stateStyles, schema, errors);\n                  step = step instanceof CompileAnimationGroupMetadata ?\n                      new CompileAnimationGroupMetadata(innerSteps) :\n                      new CompileAnimationSequenceMetadata(innerSteps);\n              }\n              newSteps.push(step);\n          }\n      });\n      // this happens when only styles were animated within the sequence\n      if (isPresent(combinedStyles)) {\n          newSteps.push(new CompileAnimationStyleMetadata(0, combinedStyles));\n      }\n      return newSteps;\n  }\n  function _resolveStylesFromState(stateName, stateStyles, errors) {\n      var styles = [];\n      if (stateName[0] != ':') {\n          errors.push(new AnimationParseError(\"Animation states via styles must be prefixed with a \\\":\\\"\"));\n      }\n      else {\n          var normalizedStateName = stateName.substring(1);\n          var value = stateStyles[normalizedStateName];\n          if (!isPresent(value)) {\n              errors.push(new AnimationParseError(\"Unable to apply styles due to missing a state: \\\"\" + normalizedStateName + \"\\\"\"));\n          }\n          else {\n              value.styles.forEach(function (stylesEntry) {\n                  if (typeof stylesEntry === 'object' && stylesEntry !== null) {\n                      styles.push(stylesEntry);\n                  }\n              });\n          }\n      }\n      return styles;\n  }\n  var _AnimationTimings = (function () {\n      function _AnimationTimings(duration, delay, easing) {\n          this.duration = duration;\n          this.delay = delay;\n          this.easing = easing;\n      }\n      return _AnimationTimings;\n  }());\n  function _parseAnimationKeyframes(keyframeSequence, currentTime, collectedStyles, stateStyles, errors) {\n      var totalEntries = keyframeSequence.steps.length;\n      var totalOffsets = 0;\n      keyframeSequence.steps.forEach(function (step) { return totalOffsets += (isPresent(step.offset) ? 1 : 0); });\n      if (totalOffsets > 0 && totalOffsets < totalEntries) {\n          errors.push(new AnimationParseError(\"Not all style() entries contain an offset for the provided keyframe()\"));\n          totalOffsets = totalEntries;\n      }\n      var limit = totalEntries - 1;\n      var margin = totalOffsets == 0 ? (1 / limit) : 0;\n      var rawKeyframes = [];\n      var index = 0;\n      var doSortKeyframes = false;\n      var lastOffset = 0;\n      keyframeSequence.steps.forEach(function (styleMetadata) {\n          var offset = styleMetadata.offset;\n          var keyframeStyles = {};\n          styleMetadata.styles.forEach(function (entry) {\n              Object.keys(entry).forEach(function (prop) {\n                  if (prop != 'offset') {\n                      keyframeStyles[prop] = entry[prop];\n                  }\n              });\n          });\n          if (isPresent(offset)) {\n              doSortKeyframes = doSortKeyframes || (offset < lastOffset);\n          }\n          else {\n              offset = index == limit ? _TERMINAL_KEYFRAME : (margin * index);\n          }\n          rawKeyframes.push([offset, keyframeStyles]);\n          lastOffset = offset;\n          index++;\n      });\n      if (doSortKeyframes) {\n          rawKeyframes.sort(function (a, b) { return a[0] <= b[0] ? -1 : 1; });\n      }\n      var firstKeyframe = rawKeyframes[0];\n      if (firstKeyframe[0] != _INITIAL_KEYFRAME) {\n          rawKeyframes.splice(0, 0, firstKeyframe = [_INITIAL_KEYFRAME, {}]);\n      }\n      var firstKeyframeStyles = firstKeyframe[1];\n      limit = rawKeyframes.length - 1;\n      var lastKeyframe = rawKeyframes[limit];\n      if (lastKeyframe[0] != _TERMINAL_KEYFRAME) {\n          rawKeyframes.push(lastKeyframe = [_TERMINAL_KEYFRAME, {}]);\n          limit++;\n      }\n      var lastKeyframeStyles = lastKeyframe[1];\n      for (var i = 1; i <= limit; i++) {\n          var entry = rawKeyframes[i];\n          var styles = entry[1];\n          Object.keys(styles).forEach(function (prop) {\n              if (!isPresent(firstKeyframeStyles[prop])) {\n                  firstKeyframeStyles[prop] = FILL_STYLE_FLAG;\n              }\n          });\n      }\n      var _loop_1 = function(i) {\n          var entry = rawKeyframes[i];\n          var styles = entry[1];\n          Object.keys(styles).forEach(function (prop) {\n              if (!isPresent(lastKeyframeStyles[prop])) {\n                  lastKeyframeStyles[prop] = styles[prop];\n              }\n          });\n      };\n      for (var i = limit - 1; i >= 0; i--) {\n          _loop_1(i);\n      }\n      return rawKeyframes.map(function (entry) { return new AnimationKeyframeAst(entry[0], new AnimationStylesAst([entry[1]])); });\n  }\n  function _parseTransitionAnimation(entry, currentTime, collectedStyles, stateStyles, errors) {\n      var ast;\n      var playTime = 0;\n      var startingTime = currentTime;\n      if (entry instanceof CompileAnimationWithStepsMetadata) {\n          var maxDuration_1 = 0;\n          var steps_1 = [];\n          var isGroup_1 = entry instanceof CompileAnimationGroupMetadata;\n          var previousStyles_1;\n          entry.steps.forEach(function (entry) {\n              // these will get picked up by the next step...\n              var time = isGroup_1 ? startingTime : currentTime;\n              if (entry instanceof CompileAnimationStyleMetadata) {\n                  entry.styles.forEach(function (stylesEntry) {\n                      // by this point we know that we only have stringmap values\n                      var map = stylesEntry;\n                      Object.keys(map).forEach(function (prop) { collectedStyles.insertAtTime(prop, time, map[prop]); });\n                  });\n                  previousStyles_1 = entry.styles;\n                  return;\n              }\n              var innerAst = _parseTransitionAnimation(entry, time, collectedStyles, stateStyles, errors);\n              if (isPresent(previousStyles_1)) {\n                  if (entry instanceof CompileAnimationWithStepsMetadata) {\n                      var startingStyles = new AnimationStylesAst(previousStyles_1);\n                      steps_1.push(new AnimationStepAst(startingStyles, [], 0, 0, ''));\n                  }\n                  else {\n                      var innerStep = innerAst;\n                      (_a = innerStep.startingStyles.styles).push.apply(_a, previousStyles_1);\n                  }\n                  previousStyles_1 = null;\n              }\n              var astDuration = innerAst.playTime;\n              currentTime += astDuration;\n              playTime += astDuration;\n              maxDuration_1 = Math.max(astDuration, maxDuration_1);\n              steps_1.push(innerAst);\n              var _a;\n          });\n          if (isPresent(previousStyles_1)) {\n              var startingStyles = new AnimationStylesAst(previousStyles_1);\n              steps_1.push(new AnimationStepAst(startingStyles, [], 0, 0, ''));\n          }\n          if (isGroup_1) {\n              ast = new AnimationGroupAst(steps_1);\n              playTime = maxDuration_1;\n              currentTime = startingTime + playTime;\n          }\n          else {\n              ast = new AnimationSequenceAst(steps_1);\n          }\n      }\n      else if (entry instanceof CompileAnimationAnimateMetadata) {\n          var timings = _parseTimeExpression(entry.timings, errors);\n          var styles = entry.styles;\n          var keyframes = void 0;\n          if (styles instanceof CompileAnimationKeyframesSequenceMetadata) {\n              keyframes =\n                  _parseAnimationKeyframes(styles, currentTime, collectedStyles, stateStyles, errors);\n          }\n          else {\n              var styleData = styles;\n              var offset = _TERMINAL_KEYFRAME;\n              var styleAst = new AnimationStylesAst(styleData.styles);\n              var keyframe = new AnimationKeyframeAst(offset, styleAst);\n              keyframes = [keyframe];\n          }\n          ast = new AnimationStepAst(new AnimationStylesAst([]), keyframes, timings.duration, timings.delay, timings.easing);\n          playTime = timings.duration + timings.delay;\n          currentTime += playTime;\n          keyframes.forEach(function (keyframe /** TODO #9100 */) { return keyframe.styles.styles.forEach(function (entry /** TODO #9100 */) { return Object.keys(entry).forEach(function (prop) { collectedStyles.insertAtTime(prop, currentTime, entry[prop]); }); }); });\n      }\n      else {\n          // if the code reaches this stage then an error\n          // has already been populated within the _normalizeStyleSteps()\n          // operation...\n          ast = new AnimationStepAst(null, [], 0, 0, '');\n      }\n      ast.playTime = playTime;\n      ast.startTime = startingTime;\n      return ast;\n  }\n  function _fillAnimationAstStartingKeyframes(ast, collectedStyles, errors) {\n      // steps that only contain style will not be filled\n      if ((ast instanceof AnimationStepAst) && ast.keyframes.length > 0) {\n          var keyframes = ast.keyframes;\n          if (keyframes.length == 1) {\n              var endKeyframe = keyframes[0];\n              var startKeyframe = _createStartKeyframeFromEndKeyframe(endKeyframe, ast.startTime, ast.playTime, collectedStyles, errors);\n              ast.keyframes = [startKeyframe, endKeyframe];\n          }\n      }\n      else if (ast instanceof AnimationWithStepsAst) {\n          ast.steps.forEach(function (entry) { return _fillAnimationAstStartingKeyframes(entry, collectedStyles, errors); });\n      }\n  }\n  function _parseTimeExpression(exp, errors) {\n      var regex = /^([\\.\\d]+)(m?s)(?:\\s+([\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?/i;\n      var duration;\n      var delay = 0;\n      var easing = null;\n      if (typeof exp === 'string') {\n          var matches = exp.match(regex);\n          if (matches === null) {\n              errors.push(new AnimationParseError(\"The provided timing value \\\"\" + exp + \"\\\" is invalid.\"));\n              return new _AnimationTimings(0, 0, null);\n          }\n          var durationMatch = parseFloat(matches[1]);\n          var durationUnit = matches[2];\n          if (durationUnit == 's') {\n              durationMatch *= _ONE_SECOND;\n          }\n          duration = Math.floor(durationMatch);\n          var delayMatch = matches[3];\n          var delayUnit = matches[4];\n          if (isPresent(delayMatch)) {\n              var delayVal = parseFloat(delayMatch);\n              if (isPresent(delayUnit) && delayUnit == 's') {\n                  delayVal *= _ONE_SECOND;\n              }\n              delay = Math.floor(delayVal);\n          }\n          var easingVal = matches[5];\n          if (!isBlank(easingVal)) {\n              easing = easingVal;\n          }\n      }\n      else {\n          duration = exp;\n      }\n      return new _AnimationTimings(duration, delay, easing);\n  }\n  function _createStartKeyframeFromEndKeyframe(endKeyframe, startTime, duration, collectedStyles, errors) {\n      var values = {};\n      var endTime = startTime + duration;\n      endKeyframe.styles.styles.forEach(function (styleData) {\n          Object.keys(styleData).forEach(function (prop) {\n              var val = styleData[prop];\n              if (prop == 'offset')\n                  return;\n              var resultIndex = collectedStyles.indexOfAtOrBeforeTime(prop, startTime);\n              var resultEntry /** TODO #9100 */, nextEntry /** TODO #9100 */, value;\n              if (isPresent(resultIndex)) {\n                  resultEntry = collectedStyles.getByIndex(prop, resultIndex);\n                  value = resultEntry.value;\n                  nextEntry = collectedStyles.getByIndex(prop, resultIndex + 1);\n              }\n              else {\n                  // this is a flag that the runtime code uses to pass\n                  // in a value either from the state declaration styles\n                  // or using the AUTO_STYLE value (e.g. getComputedStyle)\n                  value = FILL_STYLE_FLAG;\n              }\n              if (isPresent(nextEntry) && !nextEntry.matches(endTime, val)) {\n                  errors.push(new AnimationParseError(\"The animated CSS property \\\"\" + prop + \"\\\" unexpectedly changes between steps \\\"\" + resultEntry.time + \"ms\\\" and \\\"\" + endTime + \"ms\\\" at \\\"\" + nextEntry.time + \"ms\\\"\"));\n              }\n              values[prop] = value;\n          });\n      });\n      return new AnimationKeyframeAst(_INITIAL_KEYFRAME, new AnimationStylesAst([values]));\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  /**\n   * An interface for retrieving documents by URL that the compiler uses\n   * to load templates.\n   */\n  var ResourceLoader = (function () {\n      function ResourceLoader() {\n      }\n      ResourceLoader.prototype.get = function (url) { return null; };\n      return ResourceLoader;\n  }());\n\n  var _ASSET_SCHEME = 'asset:';\n  /**\n   * Create a {@link UrlResolver} with no package prefix.\n   */\n  function createUrlResolverWithoutPackagePrefix() {\n      return new UrlResolver();\n  }\n  function createOfflineCompileUrlResolver() {\n      return new UrlResolver(_ASSET_SCHEME);\n  }\n  /**\n   * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n   */\n  var DEFAULT_PACKAGE_URL_PROVIDER = {\n      provide: _angular_core.PACKAGE_ROOT_URL,\n      useValue: '/'\n  };\n  /**\n   * Used by the {@link Compiler} when resolving HTML and CSS template URLs.\n   *\n   * This class can be overridden by the application developer to create custom behavior.\n   *\n   * See {@link Compiler}\n   *\n   * ## Example\n   *\n   * {@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n   *\n   * @security  When compiling templates at runtime, you must\n   * ensure that the entire template comes from a trusted source.\n   * Attacker-controlled data introduced by a template could expose your\n   * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n   */\n  var UrlResolver = (function () {\n      function UrlResolver(_packagePrefix) {\n          if (_packagePrefix === void 0) { _packagePrefix = null; }\n          this._packagePrefix = _packagePrefix;\n      }\n      /**\n       * Resolves the `url` given the `baseUrl`:\n       * - when the `url` is null, the `baseUrl` is returned,\n       * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n       * `baseUrl` and `url`,\n       * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n       * returned as is (ignoring the `baseUrl`)\n       */\n      UrlResolver.prototype.resolve = function (baseUrl, url) {\n          var resolvedUrl = url;\n          if (isPresent(baseUrl) && baseUrl.length > 0) {\n              resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n          }\n          var resolvedParts = _split(resolvedUrl);\n          var prefix = this._packagePrefix;\n          if (isPresent(prefix) && isPresent(resolvedParts) &&\n              resolvedParts[_ComponentIndex.Scheme] == 'package') {\n              var path = resolvedParts[_ComponentIndex.Path];\n              if (this._packagePrefix === _ASSET_SCHEME) {\n                  var pathSegements = path.split(/\\//);\n                  resolvedUrl = \"asset:\" + pathSegements[0] + \"/lib/\" + pathSegements.slice(1).join('/');\n              }\n              else {\n                  prefix = prefix.replace(/\\/+$/, '');\n                  path = path.replace(/^\\/+/, '');\n                  return prefix + \"/\" + path;\n              }\n          }\n          return resolvedUrl;\n      };\n      UrlResolver.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      UrlResolver.ctorParameters = [\n          { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.PACKAGE_ROOT_URL,] },] },\n      ];\n      return UrlResolver;\n  }());\n  /**\n   * Extract the scheme of a URL.\n   */\n  function getUrlScheme(url) {\n      var match = _split(url);\n      return (match && match[_ComponentIndex.Scheme]) || '';\n  }\n  // The code below is adapted from Traceur:\n  // https://github.com/google/traceur-compiler/blob/9511c1dafa972bf0de1202a8a863bad02f0f95a8/src/runtime/url.js\n  /**\n   * Builds a URI string from already-encoded parts.\n   *\n   * No encoding is performed.  Any component may be omitted as either null or\n   * undefined.\n   *\n   * @param opt_scheme The scheme such as 'http'.\n   * @param opt_userInfo The user name before the '@'.\n   * @param opt_domain The domain such as 'www.google.com', already\n   *     URI-encoded.\n   * @param opt_port The port number.\n   * @param opt_path The path, already URI-encoded.  If it is not\n   *     empty, it must begin with a slash.\n   * @param opt_queryData The URI-encoded query data.\n   * @param opt_fragment The URI-encoded fragment identifier.\n   * @return The fully combined URI.\n   */\n  function _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n      var out = [];\n      if (isPresent(opt_scheme)) {\n          out.push(opt_scheme + ':');\n      }\n      if (isPresent(opt_domain)) {\n          out.push('//');\n          if (isPresent(opt_userInfo)) {\n              out.push(opt_userInfo + '@');\n          }\n          out.push(opt_domain);\n          if (isPresent(opt_port)) {\n              out.push(':' + opt_port);\n          }\n      }\n      if (isPresent(opt_path)) {\n          out.push(opt_path);\n      }\n      if (isPresent(opt_queryData)) {\n          out.push('?' + opt_queryData);\n      }\n      if (isPresent(opt_fragment)) {\n          out.push('#' + opt_fragment);\n      }\n      return out.join('');\n  }\n  /**\n   * A regular expression for breaking a URI into its component parts.\n   *\n   * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n   * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n   * disambiguation method used by POSIX regular expressions, it is natural and\n   * commonplace to use a regular expression for parsing the potential five\n   * components of a URI reference.\n   *\n   * The following line is the regular expression for breaking-down a\n   * well-formed URI reference into its components.\n   *\n   * <pre>\n   * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n   *  12            3  4          5       6  7        8 9\n   * </pre>\n   *\n   * The numbers in the second line above are only to assist readability; they\n   * indicate the reference points for each subexpression (i.e., each paired\n   * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n   * For example, matching the above expression to\n   * <pre>\n   *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n   * </pre>\n   * results in the following subexpression matches:\n   * <pre>\n   *    $1 = http:\n   *    $2 = http\n   *    $3 = //www.ics.uci.edu\n   *    $4 = www.ics.uci.edu\n   *    $5 = /pub/ietf/uri/\n   *    $6 = <undefined>\n   *    $7 = <undefined>\n   *    $8 = #Related\n   *    $9 = Related\n   * </pre>\n   * where <undefined> indicates that the component is not present, as is the\n   * case for the query component in the above example. Therefore, we can\n   * determine the value of the five components as\n   * <pre>\n   *    scheme    = $2\n   *    authority = $4\n   *    path      = $5\n   *    query     = $7\n   *    fragment  = $9\n   * </pre>\n   *\n   * The regular expression has been modified slightly to expose the\n   * userInfo, domain, and port separately from the authority.\n   * The modified version yields\n   * <pre>\n   *    $1 = http              scheme\n   *    $2 = <undefined>       userInfo -\\\n   *    $3 = www.ics.uci.edu   domain     | authority\n   *    $4 = <undefined>       port     -/\n   *    $5 = /pub/ietf/uri/    path\n   *    $6 = <undefined>       query without ?\n   *    $7 = Related           fragment without #\n   * </pre>\n   * @type {!RegExp}\n   * @internal\n   */\n  var _splitRe = new RegExp('^' +\n      '(?:' +\n      '([^:/?#.]+)' +\n      // used by other URL parts such as :,\n      // ?, /, #, and .\n      ':)?' +\n      '(?://' +\n      '(?:([^/?#]*)@)?' +\n      '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n      // digits, dashes, dots, percent\n      // escapes, and unicode characters.\n      '(?::([0-9]+))?' +\n      ')?' +\n      '([^?#]+)?' +\n      '(?:\\\\?([^#]*))?' +\n      '(?:#(.*))?' +\n      '$');\n  /**\n   * The index of each URI component in the return value of goog.uri.utils.split.\n   * @enum {number}\n   */\n  var _ComponentIndex;\n  (function (_ComponentIndex) {\n      _ComponentIndex[_ComponentIndex[\"Scheme\"] = 1] = \"Scheme\";\n      _ComponentIndex[_ComponentIndex[\"UserInfo\"] = 2] = \"UserInfo\";\n      _ComponentIndex[_ComponentIndex[\"Domain\"] = 3] = \"Domain\";\n      _ComponentIndex[_ComponentIndex[\"Port\"] = 4] = \"Port\";\n      _ComponentIndex[_ComponentIndex[\"Path\"] = 5] = \"Path\";\n      _ComponentIndex[_ComponentIndex[\"QueryData\"] = 6] = \"QueryData\";\n      _ComponentIndex[_ComponentIndex[\"Fragment\"] = 7] = \"Fragment\";\n  })(_ComponentIndex || (_ComponentIndex = {}));\n  /**\n   * Splits a URI into its component parts.\n   *\n   * Each component can be accessed via the component indices; for example:\n   * <pre>\n   * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n   * </pre>\n   *\n   * @param uri The URI string to examine.\n   * @return Each component still URI-encoded.\n   *     Each component that is present will contain the encoded value, whereas\n   *     components that are not present will be undefined or empty, depending\n   *     on the browser's regular expression implementation.  Never null, since\n   *     arbitrary strings may still look like path names.\n   */\n  function _split(uri) {\n      return uri.match(_splitRe);\n  }\n  /**\n    * Removes dot segments in given path component, as described in\n    * RFC 3986, section 5.2.4.\n    *\n    * @param path A non-empty path component.\n    * @return Path component with removed dot segments.\n    */\n  function _removeDotSegments(path) {\n      if (path == '/')\n          return '/';\n      var leadingSlash = path[0] == '/' ? '/' : '';\n      var trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n      var segments = path.split('/');\n      var out = [];\n      var up = 0;\n      for (var pos = 0; pos < segments.length; pos++) {\n          var segment = segments[pos];\n          switch (segment) {\n              case '':\n              case '.':\n                  break;\n              case '..':\n                  if (out.length > 0) {\n                      out.pop();\n                  }\n                  else {\n                      up++;\n                  }\n                  break;\n              default:\n                  out.push(segment);\n          }\n      }\n      if (leadingSlash == '') {\n          while (up-- > 0) {\n              out.unshift('..');\n          }\n          if (out.length === 0)\n              out.push('.');\n      }\n      return leadingSlash + out.join('/') + trailingSlash;\n  }\n  /**\n   * Takes an array of the parts from split and canonicalizes the path part\n   * and then joins all the parts.\n   */\n  function _joinAndCanonicalizePath(parts) {\n      var path = parts[_ComponentIndex.Path];\n      path = isBlank(path) ? '' : _removeDotSegments(path);\n      parts[_ComponentIndex.Path] = path;\n      return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n  }\n  /**\n   * Resolves a URL.\n   * @param base The URL acting as the base URL.\n   * @param to The URL to resolve.\n   */\n  function _resolveUrl(base, url) {\n      var parts = _split(encodeURI(url));\n      var baseParts = _split(base);\n      if (isPresent(parts[_ComponentIndex.Scheme])) {\n          return _joinAndCanonicalizePath(parts);\n      }\n      else {\n          parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n      }\n      for (var i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n          if (isBlank(parts[i])) {\n              parts[i] = baseParts[i];\n          }\n      }\n      if (parts[_ComponentIndex.Path][0] == '/') {\n          return _joinAndCanonicalizePath(parts);\n      }\n      var path = baseParts[_ComponentIndex.Path];\n      if (isBlank(path))\n          path = '/';\n      var index = path.lastIndexOf('/');\n      path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n      parts[_ComponentIndex.Path] = path;\n      return _joinAndCanonicalizePath(parts);\n  }\n\n  var DirectiveNormalizer = (function () {\n      function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n          this._resourceLoader = _resourceLoader;\n          this._urlResolver = _urlResolver;\n          this._htmlParser = _htmlParser;\n          this._config = _config;\n          this._resourceLoaderCache = new Map();\n      }\n      DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n      DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n          var _this = this;\n          if (!normalizedDirective.isComponent) {\n              return;\n          }\n          this._resourceLoaderCache.delete(normalizedDirective.template.templateUrl);\n          normalizedDirective.template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(stylesheet.moduleUrl); });\n      };\n      DirectiveNormalizer.prototype._fetch = function (url) {\n          var result = this._resourceLoaderCache.get(url);\n          if (!result) {\n              result = this._resourceLoader.get(url);\n              this._resourceLoaderCache.set(url, result);\n          }\n          return result;\n      };\n      DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n          var _this = this;\n          var normalizedTemplateSync = null;\n          var normalizedTemplateAsync;\n          if (isPresent(prenormData.template)) {\n              normalizedTemplateSync = this.normalizeTemplateSync(prenormData);\n              normalizedTemplateAsync = Promise.resolve(normalizedTemplateSync);\n          }\n          else if (prenormData.templateUrl) {\n              normalizedTemplateAsync = this.normalizeTemplateAsync(prenormData);\n          }\n          else {\n              throw new Error(\"No template specified for component \" + stringify(prenormData.componentType));\n          }\n          if (normalizedTemplateSync && normalizedTemplateSync.styleUrls.length === 0) {\n              // sync case\n              return new SyncAsyncResult(normalizedTemplateSync);\n          }\n          else {\n              // async case\n              return new SyncAsyncResult(null, normalizedTemplateAsync.then(function (normalizedTemplate) { return _this.normalizeExternalStylesheets(normalizedTemplate); }));\n          }\n      };\n      DirectiveNormalizer.prototype.normalizeTemplateSync = function (prenomData) {\n          return this.normalizeLoadedTemplate(prenomData, prenomData.template, prenomData.moduleUrl);\n      };\n      DirectiveNormalizer.prototype.normalizeTemplateAsync = function (prenomData) {\n          var _this = this;\n          var templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, prenomData.templateUrl);\n          return this._fetch(templateUrl)\n              .then(function (value) { return _this.normalizeLoadedTemplate(prenomData, value, templateUrl); });\n      };\n      DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (prenomData, template, templateAbsUrl) {\n          var interpolationConfig = InterpolationConfig.fromArray(prenomData.interpolation);\n          var rootNodesAndErrors = this._htmlParser.parse(template, stringify(prenomData.componentType), false, interpolationConfig);\n          if (rootNodesAndErrors.errors.length > 0) {\n              var errorString = rootNodesAndErrors.errors.join('\\n');\n              throw new Error(\"Template parse errors:\\n\" + errorString);\n          }\n          var templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n              styles: prenomData.styles,\n              styleUrls: prenomData.styleUrls,\n              moduleUrl: prenomData.moduleUrl\n          }));\n          var visitor = new TemplatePreparseVisitor();\n          visitAll(visitor, rootNodesAndErrors.rootNodes);\n          var templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n          var encapsulation = prenomData.encapsulation;\n          if (isBlank(encapsulation)) {\n              encapsulation = this._config.defaultEncapsulation;\n          }\n          var styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n          var styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n          if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n              styleUrls.length === 0) {\n              encapsulation = _angular_core.ViewEncapsulation.None;\n          }\n          return new CompileTemplateMetadata({\n              encapsulation: encapsulation,\n              template: template,\n              templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n              ngContentSelectors: visitor.ngContentSelectors,\n              animations: prenomData.animations,\n              interpolation: prenomData.interpolation,\n          });\n      };\n      DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n          return this._loadMissingExternalStylesheets(templateMeta.styleUrls)\n              .then(function (externalStylesheets) { return new CompileTemplateMetadata({\n              encapsulation: templateMeta.encapsulation,\n              template: templateMeta.template,\n              templateUrl: templateMeta.templateUrl,\n              styles: templateMeta.styles,\n              styleUrls: templateMeta.styleUrls,\n              externalStylesheets: externalStylesheets,\n              ngContentSelectors: templateMeta.ngContentSelectors,\n              animations: templateMeta.animations,\n              interpolation: templateMeta.interpolation\n          }); });\n      };\n      DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n          var _this = this;\n          if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n          return Promise\n              .all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n              .map(function (styleUrl) { return _this._fetch(styleUrl).then(function (loadedStyle) {\n              var stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n              loadedStylesheets.set(styleUrl, stylesheet);\n              return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n          }); }))\n              .then(function (_) { return Array.from(loadedStylesheets.values()); });\n      };\n      DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n          var _this = this;\n          var allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n              .map(function (url) { return _this._urlResolver.resolve(stylesheet.moduleUrl, url); });\n          var allStyles = stylesheet.styles.map(function (style) {\n              var styleWithImports = extractStyleUrls(_this._urlResolver, stylesheet.moduleUrl, style);\n              allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n              return styleWithImports.style;\n          });\n          return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: stylesheet.moduleUrl });\n      };\n      DirectiveNormalizer.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      DirectiveNormalizer.ctorParameters = [\n          { type: ResourceLoader, },\n          { type: UrlResolver, },\n          { type: HtmlParser, },\n          { type: CompilerConfig, },\n      ];\n      return DirectiveNormalizer;\n  }());\n  var TemplatePreparseVisitor = (function () {\n      function TemplatePreparseVisitor() {\n          this.ngContentSelectors = [];\n          this.styles = [];\n          this.styleUrls = [];\n          this.ngNonBindableStackCount = 0;\n      }\n      TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n          var preparsedElement = preparseElement(ast);\n          switch (preparsedElement.type) {\n              case PreparsedElementType.NG_CONTENT:\n                  if (this.ngNonBindableStackCount === 0) {\n                      this.ngContentSelectors.push(preparsedElement.selectAttr);\n                  }\n                  break;\n              case PreparsedElementType.STYLE:\n                  var textContent_1 = '';\n                  ast.children.forEach(function (child) {\n                      if (child instanceof Text) {\n                          textContent_1 += child.value;\n                      }\n                  });\n                  this.styles.push(textContent_1);\n                  break;\n              case PreparsedElementType.STYLESHEET:\n                  this.styleUrls.push(preparsedElement.hrefAttr);\n                  break;\n              default:\n                  break;\n          }\n          if (preparsedElement.nonBindable) {\n              this.ngNonBindableStackCount++;\n          }\n          visitAll(this, ast.children);\n          if (preparsedElement.nonBindable) {\n              this.ngNonBindableStackCount--;\n          }\n          return null;\n      };\n      TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n      TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n      TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n      TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { return null; };\n      TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) { return null; };\n      return TemplatePreparseVisitor;\n  }());\n\n  /*\n   * Resolve a `Type` for {@link Directive}.\n   *\n   * This interface can be overridden by the application developer to create custom behavior.\n   *\n   * See {@link Compiler}\n   */\n  var DirectiveResolver = (function () {\n      function DirectiveResolver(_reflector) {\n          if (_reflector === void 0) { _reflector = reflector; }\n          this._reflector = _reflector;\n      }\n      DirectiveResolver.prototype.isDirective = function (type) {\n          var typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n          return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n      };\n      /**\n       * Return {@link Directive} for a given `Type`.\n       */\n      DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          var typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n          if (typeMetadata) {\n              var metadata = typeMetadata.find(isDirectiveMetadata);\n              if (metadata) {\n                  var propertyMetadata = this._reflector.propMetadata(type);\n                  return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n              }\n          }\n          if (throwIfNotFound) {\n              throw new Error(\"No Directive annotation found on \" + stringify(type));\n          }\n          return null;\n      };\n      DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n          var inputs = [];\n          var outputs = [];\n          var host = {};\n          var queries = {};\n          Object.keys(propertyMetadata).forEach(function (propName) {\n              propertyMetadata[propName].forEach(function (a) {\n                  if (a instanceof _angular_core.Input) {\n                      if (a.bindingPropertyName) {\n                          inputs.push(propName + \": \" + a.bindingPropertyName);\n                      }\n                      else {\n                          inputs.push(propName);\n                      }\n                  }\n                  else if (a instanceof _angular_core.Output) {\n                      var output = a;\n                      if (output.bindingPropertyName) {\n                          outputs.push(propName + \": \" + output.bindingPropertyName);\n                      }\n                      else {\n                          outputs.push(propName);\n                      }\n                  }\n                  else if (a instanceof _angular_core.HostBinding) {\n                      var hostBinding = a;\n                      if (hostBinding.hostPropertyName) {\n                          var startWith = hostBinding.hostPropertyName[0];\n                          if (startWith === '(') {\n                              throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                          }\n                          else if (startWith === '[') {\n                              throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                          }\n                          host[(\"[\" + hostBinding.hostPropertyName + \"]\")] = propName;\n                      }\n                      else {\n                          host[(\"[\" + propName + \"]\")] = propName;\n                      }\n                  }\n                  else if (a instanceof _angular_core.HostListener) {\n                      var hostListener = a;\n                      var args = hostListener.args || [];\n                      host[(\"(\" + hostListener.eventName + \")\")] = propName + \"(\" + args.join(',') + \")\";\n                  }\n                  else if (a instanceof _angular_core.Query) {\n                      queries[propName] = a;\n                  }\n              });\n          });\n          return this._merge(dm, inputs, outputs, host, queries, directiveType);\n      };\n      DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [null, def])[1].trim(); };\n      DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n          var _this = this;\n          var mergedInputs = inputs;\n          if (directive.inputs) {\n              var inputNames_1 = directive.inputs.map(function (def) { return _this._extractPublicName(def); });\n              inputs.forEach(function (inputDef) {\n                  var publicName = _this._extractPublicName(inputDef);\n                  if (inputNames_1.indexOf(publicName) > -1) {\n                      throw new Error(\"Input '\" + publicName + \"' defined multiple times in '\" + stringify(directiveType) + \"'\");\n                  }\n              });\n              mergedInputs.unshift.apply(mergedInputs, directive.inputs);\n          }\n          var mergedOutputs = outputs;\n          if (directive.outputs) {\n              var outputNames_1 = directive.outputs.map(function (def) { return _this._extractPublicName(def); });\n              outputs.forEach(function (outputDef) {\n                  var publicName = _this._extractPublicName(outputDef);\n                  if (outputNames_1.indexOf(publicName) > -1) {\n                      throw new Error(\"Output event '\" + publicName + \"' defined multiple times in '\" + stringify(directiveType) + \"'\");\n                  }\n              });\n              mergedOutputs.unshift.apply(mergedOutputs, directive.outputs);\n          }\n          var mergedHost = directive.host ? StringMapWrapper.merge(directive.host, host) : host;\n          var mergedQueries = directive.queries ? StringMapWrapper.merge(directive.queries, queries) : queries;\n          if (directive instanceof _angular_core.Component) {\n              return new _angular_core.Component({\n                  selector: directive.selector,\n                  inputs: mergedInputs,\n                  outputs: mergedOutputs,\n                  host: mergedHost,\n                  exportAs: directive.exportAs,\n                  moduleId: directive.moduleId,\n                  queries: mergedQueries,\n                  changeDetection: directive.changeDetection,\n                  providers: directive.providers,\n                  viewProviders: directive.viewProviders,\n                  entryComponents: directive.entryComponents,\n                  template: directive.template,\n                  templateUrl: directive.templateUrl,\n                  styles: directive.styles,\n                  styleUrls: directive.styleUrls,\n                  encapsulation: directive.encapsulation,\n                  animations: directive.animations,\n                  interpolation: directive.interpolation\n              });\n          }\n          else {\n              return new _angular_core.Directive({\n                  selector: directive.selector,\n                  inputs: mergedInputs,\n                  outputs: mergedOutputs,\n                  host: mergedHost,\n                  exportAs: directive.exportAs,\n                  queries: mergedQueries,\n                  providers: directive.providers\n              });\n          }\n      };\n      DirectiveResolver.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      DirectiveResolver.ctorParameters = [\n          { type: ReflectorReader, },\n      ];\n      return DirectiveResolver;\n  }());\n  function isDirectiveMetadata(type) {\n      return type instanceof _angular_core.Directive;\n  }\n\n  function hasLifecycleHook(hook, token) {\n      return reflector.hasLifecycleHook(token, getHookName(hook));\n  }\n  function getHookName(hook) {\n      switch (hook) {\n          case LifecycleHooks.OnInit:\n              return 'ngOnInit';\n          case LifecycleHooks.OnDestroy:\n              return 'ngOnDestroy';\n          case LifecycleHooks.DoCheck:\n              return 'ngDoCheck';\n          case LifecycleHooks.OnChanges:\n              return 'ngOnChanges';\n          case LifecycleHooks.AfterContentInit:\n              return 'ngAfterContentInit';\n          case LifecycleHooks.AfterContentChecked:\n              return 'ngAfterContentChecked';\n          case LifecycleHooks.AfterViewInit:\n              return 'ngAfterViewInit';\n          case LifecycleHooks.AfterViewChecked:\n              return 'ngAfterViewChecked';\n      }\n  }\n\n  function _isNgModuleMetadata(obj) {\n      return obj instanceof _angular_core.NgModule;\n  }\n  /**\n   * Resolves types to {@link NgModule}.\n   */\n  var NgModuleResolver = (function () {\n      function NgModuleResolver(_reflector) {\n          if (_reflector === void 0) { _reflector = reflector; }\n          this._reflector = _reflector;\n      }\n      NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); };\n      NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          var ngModuleMeta = this._reflector.annotations(type).find(_isNgModuleMetadata);\n          if (isPresent(ngModuleMeta)) {\n              return ngModuleMeta;\n          }\n          else {\n              if (throwIfNotFound) {\n                  throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n              }\n              return null;\n          }\n      };\n      NgModuleResolver.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      NgModuleResolver.ctorParameters = [\n          { type: ReflectorReader, },\n      ];\n      return NgModuleResolver;\n  }());\n\n  function _isPipeMetadata(type) {\n      return type instanceof _angular_core.Pipe;\n  }\n  /**\n   * Resolve a `Type` for {@link Pipe}.\n   *\n   * This interface can be overridden by the application developer to create custom behavior.\n   *\n   * See {@link Compiler}\n   */\n  var PipeResolver = (function () {\n      function PipeResolver(_reflector) {\n          if (_reflector === void 0) { _reflector = reflector; }\n          this._reflector = _reflector;\n      }\n      PipeResolver.prototype.isPipe = function (type) {\n          var typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n          return typeMetadata && typeMetadata.some(_isPipeMetadata);\n      };\n      /**\n       * Return {@link Pipe} for a given `Type`.\n       */\n      PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          var metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n          if (isPresent(metas)) {\n              var annotation = metas.find(_isPipeMetadata);\n              if (isPresent(annotation)) {\n                  return annotation;\n              }\n          }\n          if (throwIfNotFound) {\n              throw new Error(\"No Pipe decorator found on \" + stringify(type));\n          }\n          return null;\n      };\n      PipeResolver.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      PipeResolver.ctorParameters = [\n          { type: ReflectorReader, },\n      ];\n      return PipeResolver;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$17 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  // Design notes:\n  // - don't lazily create metadata:\n  //   For some metadata, we need to do async work sometimes,\n  //   so the user has to kick off this loading.\n  //   But we want to report errors even when the async work is\n  //   not required to check that the user would have been able\n  //   to wait correctly.\n  var CompileMetadataResolver = (function () {\n      function CompileMetadataResolver(_ngModuleResolver, _directiveResolver, _pipeResolver, _schemaRegistry, _directiveNormalizer, _reflector) {\n          if (_reflector === void 0) { _reflector = reflector; }\n          this._ngModuleResolver = _ngModuleResolver;\n          this._directiveResolver = _directiveResolver;\n          this._pipeResolver = _pipeResolver;\n          this._schemaRegistry = _schemaRegistry;\n          this._directiveNormalizer = _directiveNormalizer;\n          this._reflector = _reflector;\n          this._directiveCache = new Map();\n          this._directiveSummaryCache = new Map();\n          this._pipeCache = new Map();\n          this._pipeSummaryCache = new Map();\n          this._ngModuleCache = new Map();\n          this._ngModuleOfTypes = new Map();\n          this._anonymousTypes = new Map();\n          this._anonymousTypeIndex = 0;\n      }\n      CompileMetadataResolver.prototype.sanitizeTokenName = function (token) {\n          var identifier = stringify(token);\n          if (identifier.indexOf('(') >= 0) {\n              // case: anonymous functions!\n              var found = this._anonymousTypes.get(token);\n              if (!found) {\n                  this._anonymousTypes.set(token, this._anonymousTypeIndex++);\n                  found = this._anonymousTypes.get(token);\n              }\n              identifier = \"anonymous_token_\" + found + \"_\";\n          }\n          return sanitizeIdentifier(identifier);\n      };\n      CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n          var dirMeta = this._directiveCache.get(type);\n          this._directiveCache.delete(type);\n          this._directiveSummaryCache.delete(type);\n          this._pipeCache.delete(type);\n          this._pipeSummaryCache.delete(type);\n          this._ngModuleOfTypes.delete(type);\n          // Clear all of the NgModule as they contain transitive information!\n          this._ngModuleCache.clear();\n          if (dirMeta) {\n              this._directiveNormalizer.clearCacheFor(dirMeta);\n          }\n      };\n      CompileMetadataResolver.prototype.clearCache = function () {\n          this._directiveCache.clear();\n          this._directiveSummaryCache.clear();\n          this._pipeCache.clear();\n          this._pipeSummaryCache.clear();\n          this._ngModuleCache.clear();\n          this._ngModuleOfTypes.clear();\n          this._directiveNormalizer.clearCache();\n      };\n      CompileMetadataResolver.prototype.getAnimationEntryMetadata = function (entry) {\n          var _this = this;\n          var defs = entry.definitions.map(function (def) { return _this._getAnimationStateMetadata(def); });\n          return new CompileAnimationEntryMetadata(entry.name, defs);\n      };\n      CompileMetadataResolver.prototype._getAnimationStateMetadata = function (value) {\n          if (value instanceof _angular_core.AnimationStateDeclarationMetadata) {\n              var styles = this._getAnimationStyleMetadata(value.styles);\n              return new CompileAnimationStateDeclarationMetadata(value.stateNameExpr, styles);\n          }\n          if (value instanceof _angular_core.AnimationStateTransitionMetadata) {\n              return new CompileAnimationStateTransitionMetadata(value.stateChangeExpr, this._getAnimationMetadata(value.steps));\n          }\n          return null;\n      };\n      CompileMetadataResolver.prototype._getAnimationStyleMetadata = function (value) {\n          return new CompileAnimationStyleMetadata(value.offset, value.styles);\n      };\n      CompileMetadataResolver.prototype._getAnimationMetadata = function (value) {\n          var _this = this;\n          if (value instanceof _angular_core.AnimationStyleMetadata) {\n              return this._getAnimationStyleMetadata(value);\n          }\n          if (value instanceof _angular_core.AnimationKeyframesSequenceMetadata) {\n              return new CompileAnimationKeyframesSequenceMetadata(value.steps.map(function (entry) { return _this._getAnimationStyleMetadata(entry); }));\n          }\n          if (value instanceof _angular_core.AnimationAnimateMetadata) {\n              var animateData = this\n                  ._getAnimationMetadata(value.styles);\n              return new CompileAnimationAnimateMetadata(value.timings, animateData);\n          }\n          if (value instanceof _angular_core.AnimationWithStepsMetadata) {\n              var steps = value.steps.map(function (step) { return _this._getAnimationMetadata(step); });\n              if (value instanceof _angular_core.AnimationGroupMetadata) {\n                  return new CompileAnimationGroupMetadata(steps);\n              }\n              return new CompileAnimationSequenceMetadata(steps);\n          }\n          return null;\n      };\n      CompileMetadataResolver.prototype._loadDirectiveMetadata = function (directiveType, isSync) {\n          var _this = this;\n          if (this._directiveCache.has(directiveType)) {\n              return;\n          }\n          directiveType = _angular_core.resolveForwardRef(directiveType);\n          var nonNormalizedMetadata = this.getNonNormalizedDirectiveMetadata(directiveType);\n          var createDirectiveMetadata = function (templateMetadata) {\n              var normalizedDirMeta = new CompileDirectiveMetadata({\n                  type: nonNormalizedMetadata.type,\n                  isComponent: nonNormalizedMetadata.isComponent,\n                  selector: nonNormalizedMetadata.selector,\n                  exportAs: nonNormalizedMetadata.exportAs,\n                  changeDetection: nonNormalizedMetadata.changeDetection,\n                  inputs: nonNormalizedMetadata.inputs,\n                  outputs: nonNormalizedMetadata.outputs,\n                  hostListeners: nonNormalizedMetadata.hostListeners,\n                  hostProperties: nonNormalizedMetadata.hostProperties,\n                  hostAttributes: nonNormalizedMetadata.hostAttributes,\n                  providers: nonNormalizedMetadata.providers,\n                  viewProviders: nonNormalizedMetadata.viewProviders,\n                  queries: nonNormalizedMetadata.queries,\n                  viewQueries: nonNormalizedMetadata.viewQueries,\n                  entryComponents: nonNormalizedMetadata.entryComponents,\n                  template: templateMetadata\n              });\n              _this._directiveCache.set(directiveType, normalizedDirMeta);\n              _this._directiveSummaryCache.set(directiveType, normalizedDirMeta.toSummary());\n              return normalizedDirMeta;\n          };\n          if (nonNormalizedMetadata.isComponent) {\n              var templateMeta_1 = this._directiveNormalizer.normalizeTemplate({\n                  componentType: directiveType,\n                  moduleUrl: nonNormalizedMetadata.type.moduleUrl,\n                  encapsulation: nonNormalizedMetadata.template.encapsulation,\n                  template: nonNormalizedMetadata.template.template,\n                  templateUrl: nonNormalizedMetadata.template.templateUrl,\n                  styles: nonNormalizedMetadata.template.styles,\n                  styleUrls: nonNormalizedMetadata.template.styleUrls,\n                  animations: nonNormalizedMetadata.template.animations,\n                  interpolation: nonNormalizedMetadata.template.interpolation\n              });\n              if (templateMeta_1.syncResult) {\n                  createDirectiveMetadata(templateMeta_1.syncResult);\n                  return null;\n              }\n              else {\n                  if (isSync) {\n                      throw new ComponentStillLoadingError(directiveType);\n                  }\n                  return function () { return templateMeta_1.asyncResult.then(createDirectiveMetadata); };\n              }\n          }\n          else {\n              // directive\n              createDirectiveMetadata(null);\n              return null;\n          }\n      };\n      CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n          var _this = this;\n          directiveType = _angular_core.resolveForwardRef(directiveType);\n          var dirMeta = this._directiveResolver.resolve(directiveType);\n          if (!dirMeta) {\n              return null;\n          }\n          var moduleUrl = staticTypeModuleUrl(directiveType);\n          var nonNormalizedTemplateMetadata;\n          if (dirMeta instanceof _angular_core.Component) {\n              // component\n              moduleUrl = componentModuleUrl(this._reflector, directiveType, dirMeta);\n              assertArrayOfStrings('styles', dirMeta.styles);\n              assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n              assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n              var animations = dirMeta.animations ?\n                  dirMeta.animations.map(function (e) { return _this.getAnimationEntryMetadata(e); }) :\n                  null;\n              nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                  encapsulation: dirMeta.encapsulation,\n                  template: dirMeta.template,\n                  templateUrl: dirMeta.templateUrl,\n                  styles: dirMeta.styles,\n                  styleUrls: dirMeta.styleUrls,\n                  animations: animations,\n                  interpolation: dirMeta.interpolation\n              });\n          }\n          var changeDetectionStrategy = null;\n          var viewProviders = [];\n          var entryComponentMetadata = [];\n          var selector = dirMeta.selector;\n          if (dirMeta instanceof _angular_core.Component) {\n              // Component\n              changeDetectionStrategy = dirMeta.changeDetection;\n              if (dirMeta.viewProviders) {\n                  viewProviders = this._getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringify(directiveType) + \"\\\"\");\n              }\n              if (dirMeta.entryComponents) {\n                  entryComponentMetadata =\n                      flattenAndDedupeArray(dirMeta.entryComponents)\n                          .map(function (type) { return _this._getIdentifierMetadata(type, staticTypeModuleUrl(type)); })\n                          .concat(entryComponentMetadata);\n              }\n              if (!selector) {\n                  selector = this._schemaRegistry.getDefaultComponentElementName();\n              }\n          }\n          else {\n              // Directive\n              if (!selector) {\n                  throw new Error(\"Directive \" + stringify(directiveType) + \" has no selector, please add it!\");\n              }\n          }\n          var providers = [];\n          if (isPresent(dirMeta.providers)) {\n              providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringify(directiveType) + \"\\\"\");\n          }\n          var queries = [];\n          var viewQueries = [];\n          if (isPresent(dirMeta.queries)) {\n              queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n              viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n          }\n          return CompileDirectiveMetadata.create({\n              selector: selector,\n              exportAs: dirMeta.exportAs,\n              isComponent: !!nonNormalizedTemplateMetadata,\n              type: this._getTypeMetadata(directiveType, moduleUrl),\n              template: nonNormalizedTemplateMetadata,\n              changeDetection: changeDetectionStrategy,\n              inputs: dirMeta.inputs,\n              outputs: dirMeta.outputs,\n              host: dirMeta.host,\n              providers: providers,\n              viewProviders: viewProviders,\n              queries: queries,\n              viewQueries: viewQueries,\n              entryComponents: entryComponentMetadata\n          });\n      };\n      /**\n       * Gets the metadata for the given directive.\n       * This assumes `loadNgModuleMetadata` has been called first.\n       */\n      CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n          var dirMeta = this._directiveCache.get(directiveType);\n          if (!dirMeta) {\n              throw new Error(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleMetadata for a module that declares it. Directive \" + stringify(directiveType) + \".\");\n          }\n          return dirMeta;\n      };\n      CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n          var dirSummary = this._directiveSummaryCache.get(dirType);\n          if (!dirSummary) {\n              throw new Error(\"Illegal state: getDirectiveSummary can only be called after loadNgModuleMetadata for a module that imports it. Directive \" + stringify(dirType) + \".\");\n          }\n          return dirSummary;\n      };\n      CompileMetadataResolver.prototype.isDirective = function (type) { return this._directiveResolver.isDirective(type); };\n      CompileMetadataResolver.prototype.isPipe = function (type) { return this._pipeResolver.isPipe(type); };\n      /**\n       * Gets the metadata for the given module.\n       * This assumes `loadNgModuleMetadata` has been called first.\n       */\n      CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType) {\n          var modMeta = this._ngModuleCache.get(moduleType);\n          if (!modMeta) {\n              throw new Error(\"Illegal state: getNgModuleMetadata can only be called after loadNgModuleMetadata. Module \" + stringify(moduleType) + \".\");\n          }\n          return modMeta;\n      };\n      CompileMetadataResolver.prototype._loadNgModuleSummary = function (moduleType, isSync) {\n          // TODO(tbosch): add logic to read summary files!\n          // - needs to add directive / pipe summaries to this._directiveSummaryCache /\n          // this._pipeSummaryCache as well!\n          var moduleMeta = this._loadNgModuleMetadata(moduleType, isSync, false);\n          return moduleMeta ? moduleMeta.toSummary() : null;\n      };\n      /**\n       * Loads an NgModule and all of its directives. This includes loading the exported directives of\n       * imported modules,\n       * but not private directives of imported modules.\n       */\n      CompileMetadataResolver.prototype.loadNgModuleMetadata = function (moduleType, isSync, throwIfNotFound) {\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          var ngModule = this._loadNgModuleMetadata(moduleType, isSync, throwIfNotFound);\n          var loading = ngModule ?\n              Promise.all(ngModule.transitiveModule.directiveLoaders.map(function (loader) { return loader(); })) :\n              Promise.resolve(null);\n          return { ngModule: ngModule, loading: loading };\n      };\n      /**\n       * Get the NgModule metadata without loading the directives.\n       */\n      CompileMetadataResolver.prototype.getUnloadedNgModuleMetadata = function (moduleType, isSync, throwIfNotFound) {\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          return this._loadNgModuleMetadata(moduleType, isSync, throwIfNotFound);\n      };\n      CompileMetadataResolver.prototype._loadNgModuleMetadata = function (moduleType, isSync, throwIfNotFound) {\n          var _this = this;\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          moduleType = _angular_core.resolveForwardRef(moduleType);\n          var compileMeta = this._ngModuleCache.get(moduleType);\n          if (compileMeta) {\n              return compileMeta;\n          }\n          var meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n          if (!meta) {\n              return null;\n          }\n          var declaredDirectives = [];\n          var exportedNonModuleIdentifiers = [];\n          var declaredPipes = [];\n          var importedModules = [];\n          var exportedModules = [];\n          var providers = [];\n          var entryComponents = [];\n          var bootstrapComponents = [];\n          var schemas = [];\n          if (meta.imports) {\n              flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                  var importedModuleType;\n                  if (isValidType(importedType)) {\n                      importedModuleType = importedType;\n                  }\n                  else if (importedType && importedType.ngModule) {\n                      var moduleWithProviders = importedType;\n                      importedModuleType = moduleWithProviders.ngModule;\n                      if (moduleWithProviders.providers) {\n                          providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringify(importedModuleType) + \"'\"));\n                      }\n                  }\n                  if (importedModuleType) {\n                      var importedModuleSummary = _this._loadNgModuleSummary(importedModuleType, isSync);\n                      if (!importedModuleSummary) {\n                          throw new Error(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringify(importedType) + \"' imported by the module '\" + stringify(moduleType) + \"'\");\n                      }\n                      importedModules.push(importedModuleSummary);\n                  }\n                  else {\n                      throw new Error(\"Unexpected value '\" + stringify(importedType) + \"' imported by the module '\" + stringify(moduleType) + \"'\");\n                  }\n              });\n          }\n          if (meta.exports) {\n              flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                  if (!isValidType(exportedType)) {\n                      throw new Error(\"Unexpected value '\" + stringify(exportedType) + \"' exported by the module '\" + stringify(moduleType) + \"'\");\n                  }\n                  var exportedModuleSummary = _this._loadNgModuleSummary(exportedType, isSync);\n                  if (exportedModuleSummary) {\n                      exportedModules.push(exportedModuleSummary);\n                  }\n                  else {\n                      exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType, staticTypeModuleUrl(exportedType)));\n                  }\n              });\n          }\n          // Note: This will be modified later, so we rely on\n          // getting a new instance every time!\n          var transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n          if (meta.declarations) {\n              flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                  if (!isValidType(declaredType)) {\n                      throw new Error(\"Unexpected value '\" + stringify(declaredType) + \"' declared by the module '\" + stringify(moduleType) + \"'\");\n                  }\n                  var declaredIdentifier = _this._getIdentifierMetadata(declaredType, staticTypeModuleUrl(declaredType));\n                  if (_this._directiveResolver.isDirective(declaredType)) {\n                      transitiveModule.directivesSet.add(declaredType);\n                      transitiveModule.directives.push(declaredIdentifier);\n                      declaredDirectives.push(declaredIdentifier);\n                      _this._addTypeToModule(declaredType, moduleType);\n                      var loader = _this._loadDirectiveMetadata(declaredType, isSync);\n                      if (loader) {\n                          transitiveModule.directiveLoaders.push(loader);\n                      }\n                  }\n                  else if (_this._pipeResolver.isPipe(declaredType)) {\n                      transitiveModule.pipesSet.add(declaredType);\n                      transitiveModule.pipes.push(declaredIdentifier);\n                      declaredPipes.push(declaredIdentifier);\n                      _this._addTypeToModule(declaredType, moduleType);\n                      _this._loadPipeMetadata(declaredType);\n                  }\n                  else {\n                      throw new Error(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringify(declaredType) + \"' declared by the module '\" + stringify(moduleType) + \"'\");\n                  }\n              });\n          }\n          var exportedDirectives = [];\n          var exportedPipes = [];\n          exportedNonModuleIdentifiers.forEach(function (exportedId) {\n              if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                  exportedDirectives.push(exportedId);\n              }\n              else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                  exportedPipes.push(exportedId);\n              }\n              else {\n                  throw new Error(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringify(exportedId.reference) + \" from \" + stringify(moduleType) + \" as it was neither declared nor imported!\");\n              }\n          });\n          // The providers of the module have to go last\n          // so that they overwrite any other provider we already added.\n          if (meta.providers) {\n              providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringify(moduleType) + \"'\"));\n          }\n          if (meta.entryComponents) {\n              entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                  .map(function (type) { return _this._getTypeMetadata(type, staticTypeModuleUrl(type)); }));\n          }\n          if (meta.bootstrap) {\n              var typeMetadata = flattenAndDedupeArray(meta.bootstrap).map(function (type) {\n                  if (!isValidType(type)) {\n                      throw new Error(\"Unexpected value '\" + stringify(type) + \"' used in the bootstrap property of module '\" + stringify(moduleType) + \"'\");\n                  }\n                  return _this._getTypeMetadata(type, staticTypeModuleUrl(type));\n              });\n              bootstrapComponents.push.apply(bootstrapComponents, typeMetadata);\n          }\n          entryComponents.push.apply(entryComponents, bootstrapComponents);\n          if (meta.schemas) {\n              schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n          }\n          (_a = transitiveModule.entryComponents).push.apply(_a, entryComponents);\n          (_b = transitiveModule.providers).push.apply(_b, providers);\n          compileMeta = new CompileNgModuleMetadata({\n              type: this._getTypeMetadata(moduleType, staticTypeModuleUrl(moduleType)),\n              providers: providers,\n              entryComponents: entryComponents,\n              bootstrapComponents: bootstrapComponents,\n              schemas: schemas,\n              declaredDirectives: declaredDirectives,\n              exportedDirectives: exportedDirectives,\n              declaredPipes: declaredPipes,\n              exportedPipes: exportedPipes,\n              importedModules: importedModules,\n              exportedModules: exportedModules,\n              transitiveModule: transitiveModule,\n              id: meta.id,\n          });\n          transitiveModule.modules.push(compileMeta.toInjectorSummary());\n          this._ngModuleCache.set(moduleType, compileMeta);\n          return compileMeta;\n          var _a, _b;\n      };\n      CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n          if (this._directiveResolver.isDirective(type)) {\n              return 'directive';\n          }\n          if (this._pipeResolver.isPipe(type)) {\n              return 'pipe';\n          }\n          if (this._ngModuleResolver.isNgModule(type)) {\n              return 'module';\n          }\n          if (type.provide) {\n              return 'provider';\n          }\n          return 'value';\n      };\n      CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n          var oldModule = this._ngModuleOfTypes.get(type);\n          if (oldModule && oldModule !== moduleType) {\n              throw new Error((\"Type \" + stringify(type) + \" is part of the declarations of 2 modules: \" + stringify(oldModule) + \" and \" + stringify(moduleType) + \"! \") +\n                  (\"Please consider moving \" + stringify(type) + \" to a higher module that imports \" + stringify(oldModule) + \" and \" + stringify(moduleType) + \". \") +\n                  (\"You can also create a new NgModule that exports and includes \" + stringify(type) + \" then import that NgModule in \" + stringify(oldModule) + \" and \" + stringify(moduleType) + \".\"));\n          }\n          this._ngModuleOfTypes.set(type, moduleType);\n      };\n      CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n          // collect `providers` / `entryComponents` from all imported and all exported modules\n          var transitiveModules = getTransitiveImportedModules(importedModules.concat(exportedModules));\n          var providers = flattenArray(transitiveModules.map(function (ngModule) { return ngModule.providers; }));\n          var entryComponents = flattenArray(transitiveModules.map(function (ngModule) { return ngModule.entryComponents; }));\n          var transitiveExportedModules = getTransitiveExportedModules(importedModules);\n          var directives = flattenArray(transitiveExportedModules.map(function (ngModule) { return ngModule.exportedDirectives; }));\n          var pipes = flattenArray(transitiveExportedModules.map(function (ngModule) { return ngModule.exportedPipes; }));\n          var directiveLoaders = ListWrapper.flatten(transitiveExportedModules.map(function (ngModule) { return ngModule.directiveLoaders; }));\n          return new TransitiveCompileNgModuleMetadata(transitiveModules, providers, entryComponents, directives, pipes, directiveLoaders);\n      };\n      CompileMetadataResolver.prototype._getIdentifierMetadata = function (type, moduleUrl) {\n          type = _angular_core.resolveForwardRef(type);\n          return new CompileIdentifierMetadata({ name: this.sanitizeTokenName(type), moduleUrl: moduleUrl, reference: type });\n      };\n      CompileMetadataResolver.prototype._getTypeMetadata = function (type, moduleUrl, dependencies) {\n          if (dependencies === void 0) { dependencies = null; }\n          var identifier = this._getIdentifierMetadata(type, moduleUrl);\n          return new CompileTypeMetadata({\n              name: identifier.name,\n              moduleUrl: identifier.moduleUrl,\n              reference: identifier.reference,\n              diDeps: this._getDependenciesMetadata(identifier.reference, dependencies),\n              lifecycleHooks: LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(hook, identifier.reference); }),\n          });\n      };\n      CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, moduleUrl, dependencies) {\n          if (dependencies === void 0) { dependencies = null; }\n          factory = _angular_core.resolveForwardRef(factory);\n          return new CompileFactoryMetadata({\n              name: this.sanitizeTokenName(factory),\n              moduleUrl: moduleUrl,\n              reference: factory,\n              diDeps: this._getDependenciesMetadata(factory, dependencies)\n          });\n      };\n      /**\n       * Gets the metadata for the given pipe.\n       * This assumes `loadNgModuleMetadata` has been called first.\n       */\n      CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n          var pipeMeta = this._pipeCache.get(pipeType);\n          if (!pipeMeta) {\n              throw new Error(\"Illegal state: getPipeMetadata can only be called after loadNgModuleMetadata for a module that declares it. Pipe \" + stringify(pipeType) + \".\");\n          }\n          return pipeMeta;\n      };\n      CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n          var pipeSummary = this._pipeSummaryCache.get(pipeType);\n          if (!pipeSummary) {\n              throw new Error(\"Illegal state: getPipeSummary can only be called after loadNgModuleMetadata for a module that imports it. Pipe \" + stringify(pipeType) + \".\");\n          }\n          return pipeSummary;\n      };\n      CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n          var pipeMeta = this._pipeCache.get(pipeType);\n          if (!pipeMeta) {\n              pipeMeta = this._loadPipeMetadata(pipeType);\n          }\n          return pipeMeta;\n      };\n      CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n          pipeType = _angular_core.resolveForwardRef(pipeType);\n          var pipeAnnotation = this._pipeResolver.resolve(pipeType);\n          var pipeMeta = new CompilePipeMetadata({\n              type: this._getTypeMetadata(pipeType, staticTypeModuleUrl(pipeType)),\n              name: pipeAnnotation.name,\n              pure: pipeAnnotation.pure\n          });\n          this._pipeCache.set(pipeType, pipeMeta);\n          this._pipeSummaryCache.set(pipeType, pipeMeta.toSummary());\n          return pipeMeta;\n      };\n      CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies) {\n          var _this = this;\n          var hasUnknownDeps = false;\n          var params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n          var dependenciesMetadata = params.map(function (param) {\n              var isAttribute = false;\n              var isHost = false;\n              var isSelf = false;\n              var isSkipSelf = false;\n              var isOptional = false;\n              var token = null;\n              if (Array.isArray(param)) {\n                  param.forEach(function (paramEntry) {\n                      if (paramEntry instanceof _angular_core.Host) {\n                          isHost = true;\n                      }\n                      else if (paramEntry instanceof _angular_core.Self) {\n                          isSelf = true;\n                      }\n                      else if (paramEntry instanceof _angular_core.SkipSelf) {\n                          isSkipSelf = true;\n                      }\n                      else if (paramEntry instanceof _angular_core.Optional) {\n                          isOptional = true;\n                      }\n                      else if (paramEntry instanceof _angular_core.Attribute) {\n                          isAttribute = true;\n                          token = paramEntry.attributeName;\n                      }\n                      else if (paramEntry instanceof _angular_core.Inject) {\n                          token = paramEntry.token;\n                      }\n                      else if (isValidType(paramEntry) && isBlank(token)) {\n                          token = paramEntry;\n                      }\n                  });\n              }\n              else {\n                  token = param;\n              }\n              if (isBlank(token)) {\n                  hasUnknownDeps = true;\n                  return null;\n              }\n              return new CompileDiDependencyMetadata({\n                  isAttribute: isAttribute,\n                  isHost: isHost,\n                  isSelf: isSelf,\n                  isSkipSelf: isSkipSelf,\n                  isOptional: isOptional,\n                  token: _this._getTokenMetadata(token)\n              });\n          });\n          if (hasUnknownDeps) {\n              var depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringify(dep.token) : '?'; }).join(', ');\n              throw new Error(\"Can't resolve all parameters for \" + stringify(typeOrFunc) + \": (\" + depsTokens + \").\");\n          }\n          return dependenciesMetadata;\n      };\n      CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n          token = _angular_core.resolveForwardRef(token);\n          var compileToken;\n          if (typeof token === 'string') {\n              compileToken = new CompileTokenMetadata({ value: token });\n          }\n          else {\n              compileToken = new CompileTokenMetadata({\n                  identifier: new CompileIdentifierMetadata({\n                      reference: token,\n                      name: this.sanitizeTokenName(token),\n                      moduleUrl: staticTypeModuleUrl(token)\n                  })\n              });\n          }\n          return compileToken;\n      };\n      CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo) {\n          var _this = this;\n          var compileProviders = [];\n          providers.forEach(function (provider, providerIdx) {\n              provider = _angular_core.resolveForwardRef(provider);\n              if (provider && typeof provider == 'object' && provider.hasOwnProperty('provide')) {\n                  provider = new ProviderMeta(provider.provide, provider);\n              }\n              var compileProvider;\n              if (Array.isArray(provider)) {\n                  compileProvider = _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo);\n              }\n              else if (provider instanceof ProviderMeta) {\n                  var tokenMeta = _this._getTokenMetadata(provider.token);\n                  if (tokenMeta.reference ===\n                      resolveIdentifierToken(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS).reference) {\n                      targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(provider));\n                  }\n                  else {\n                      compileProvider = _this.getProviderMetadata(provider);\n                  }\n              }\n              else if (isValidType(provider)) {\n                  compileProvider = _this._getTypeMetadata(provider, staticTypeModuleUrl(provider));\n              }\n              else {\n                  var providersInfo = providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                      if (seenProviderIdx < providerIdx) {\n                          soFar.push(\"\" + stringify(seenProvider));\n                      }\n                      else if (seenProviderIdx == providerIdx) {\n                          soFar.push(\"?\" + stringify(seenProvider) + \"?\");\n                      }\n                      else if (seenProviderIdx == providerIdx + 1) {\n                          soFar.push('...');\n                      }\n                      return soFar;\n                  }, [])\n                      .join(', ');\n                  throw new Error(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\");\n              }\n              if (compileProvider) {\n                  compileProviders.push(compileProvider);\n              }\n          });\n          return compileProviders;\n      };\n      CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider) {\n          var _this = this;\n          var components = [];\n          var collectedIdentifiers = [];\n          if (provider.useFactory || provider.useExisting || provider.useClass) {\n              throw new Error(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\");\n          }\n          if (!provider.multi) {\n              throw new Error(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\");\n          }\n          convertToCompileValue(provider.useValue, collectedIdentifiers);\n          collectedIdentifiers.forEach(function (identifier) {\n              if (_this._directiveResolver.isDirective(identifier.reference)) {\n                  components.push(identifier);\n              }\n          });\n          return components;\n      };\n      CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n          var compileDeps;\n          var compileTypeMetadata = null;\n          var compileFactoryMetadata = null;\n          if (provider.useClass) {\n              compileTypeMetadata = this._getTypeMetadata(provider.useClass, staticTypeModuleUrl(provider.useClass), provider.dependencies);\n              compileDeps = compileTypeMetadata.diDeps;\n          }\n          else if (provider.useFactory) {\n              compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, staticTypeModuleUrl(provider.useFactory), provider.dependencies);\n              compileDeps = compileFactoryMetadata.diDeps;\n          }\n          return new CompileProviderMetadata({\n              token: this._getTokenMetadata(provider.token),\n              useClass: compileTypeMetadata,\n              useValue: convertToCompileValue(provider.useValue, []),\n              useFactory: compileFactoryMetadata,\n              useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : null,\n              deps: compileDeps,\n              multi: provider.multi\n          });\n      };\n      CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n          var _this = this;\n          var res = [];\n          Object.keys(queries).forEach(function (propertyName) {\n              var query = queries[propertyName];\n              if (query.isViewQuery === isViewQuery) {\n                  res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n              }\n          });\n          return res;\n      };\n      CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n      CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n          var _this = this;\n          var selectors;\n          if (typeof q.selector === 'string') {\n              selectors =\n                  this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n          }\n          else {\n              if (!q.selector) {\n                  throw new Error(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringify(typeOrFunc) + \"\\\" since the query selector wasn't defined.\");\n              }\n              selectors = [this._getTokenMetadata(q.selector)];\n          }\n          return new CompileQueryMetadata({\n              selectors: selectors,\n              first: q.first,\n              descendants: q.descendants, propertyName: propertyName,\n              read: q.read ? this._getTokenMetadata(q.read) : null\n          });\n      };\n      CompileMetadataResolver.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      CompileMetadataResolver.ctorParameters = [\n          { type: NgModuleResolver, },\n          { type: DirectiveResolver, },\n          { type: PipeResolver, },\n          { type: ElementSchemaRegistry, },\n          { type: DirectiveNormalizer, },\n          { type: ReflectorReader, },\n      ];\n      return CompileMetadataResolver;\n  }());\n  function getTransitiveExportedModules(modules, targetModules, visitedModules) {\n      if (targetModules === void 0) { targetModules = []; }\n      if (visitedModules === void 0) { visitedModules = new Set(); }\n      modules.forEach(function (ngModule) {\n          if (!visitedModules.has(ngModule.type.reference)) {\n              visitedModules.add(ngModule.type.reference);\n              getTransitiveExportedModules(ngModule.exportedModules, targetModules, visitedModules);\n              // Add after recursing so imported/exported modules are before the module itself.\n              // This is important for overwriting providers of imported modules!\n              targetModules.push(ngModule);\n          }\n      });\n      return targetModules;\n  }\n  function getTransitiveImportedModules(modules, targetModules, visitedModules) {\n      if (targetModules === void 0) { targetModules = []; }\n      if (visitedModules === void 0) { visitedModules = new Set(); }\n      modules.forEach(function (ngModule) {\n          if (!visitedModules.has(ngModule.type.reference)) {\n              visitedModules.add(ngModule.type.reference);\n              var nestedModules = ngModule.importedModules.concat(ngModule.exportedModules);\n              getTransitiveImportedModules(nestedModules, targetModules, visitedModules);\n              // Add after recursing so imported/exported modules are before the module itself.\n              // This is important for overwriting providers of imported modules!\n              targetModules.push(ngModule);\n          }\n      });\n      return targetModules;\n  }\n  function flattenArray(tree, out) {\n      if (out === void 0) { out = []; }\n      if (tree) {\n          for (var i = 0; i < tree.length; i++) {\n              var item = _angular_core.resolveForwardRef(tree[i]);\n              if (Array.isArray(item)) {\n                  flattenArray(item, out);\n              }\n              else {\n                  out.push(item);\n              }\n          }\n      }\n      return out;\n  }\n  function dedupeArray(array) {\n      if (array) {\n          return Array.from(new Set(array));\n      }\n      return [];\n  }\n  function flattenAndDedupeArray(tree) {\n      return dedupeArray(flattenArray(tree));\n  }\n  function isValidType(value) {\n      return isStaticSymbol(value) || (value instanceof _angular_core.Type);\n  }\n  function staticTypeModuleUrl(value) {\n      return isStaticSymbol(value) ? value.filePath : null;\n  }\n  function componentModuleUrl(reflector, type, cmpMetadata) {\n      if (isStaticSymbol(type)) {\n          return staticTypeModuleUrl(type);\n      }\n      var moduleId = cmpMetadata.moduleId;\n      if (typeof moduleId === 'string') {\n          var scheme = getUrlScheme(moduleId);\n          return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n      }\n      else if (moduleId !== null && moduleId !== void 0) {\n          throw new Error((\"moduleId should be a string in \\\"\" + stringify(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\") +\n              \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n      }\n      return reflector.importUri(type);\n  }\n  function convertToCompileValue(value, targetIdentifiers) {\n      return visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n  }\n  var _CompileValueConverter = (function (_super) {\n      __extends$17(_CompileValueConverter, _super);\n      function _CompileValueConverter() {\n          _super.apply(this, arguments);\n      }\n      _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n          var identifier;\n          if (isStaticSymbol(value)) {\n              identifier = new CompileIdentifierMetadata({ name: value.name, moduleUrl: value.filePath, reference: value });\n          }\n          else {\n              identifier = new CompileIdentifierMetadata({ reference: value });\n          }\n          targetIdentifiers.push(identifier);\n          return identifier;\n      };\n      return _CompileValueConverter;\n  }(ValueTransformer));\n\n  var ComponentFactoryDependency$1 = (function () {\n      function ComponentFactoryDependency(comp, placeholder) {\n          this.comp = comp;\n          this.placeholder = placeholder;\n      }\n      return ComponentFactoryDependency;\n  }());\n  var NgModuleCompileResult = (function () {\n      function NgModuleCompileResult(statements, ngModuleFactoryVar, dependencies) {\n          this.statements = statements;\n          this.ngModuleFactoryVar = ngModuleFactoryVar;\n          this.dependencies = dependencies;\n      }\n      return NgModuleCompileResult;\n  }());\n  var NgModuleCompiler = (function () {\n      function NgModuleCompiler() {\n      }\n      NgModuleCompiler.prototype.compile = function (ngModuleMeta, extraProviders) {\n          var sourceFileName = isPresent(ngModuleMeta.type.moduleUrl) ?\n              \"in NgModule \" + ngModuleMeta.type.name + \" in \" + ngModuleMeta.type.moduleUrl :\n              \"in NgModule \" + ngModuleMeta.type.name;\n          var sourceFile = new ParseSourceFile('', sourceFileName);\n          var sourceSpan = new ParseSourceSpan(new ParseLocation(sourceFile, null, null, null), new ParseLocation(sourceFile, null, null, null));\n          var deps = [];\n          var bootstrapComponentFactories = [];\n          var entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents.map(function (entryComponent) {\n              var id = new CompileIdentifierMetadata({ name: entryComponent.name });\n              if (ngModuleMeta.bootstrapComponents.indexOf(entryComponent) > -1) {\n                  bootstrapComponentFactories.push(id);\n              }\n              deps.push(new ComponentFactoryDependency$1(entryComponent, id));\n              return id;\n          });\n          var builder = new _InjectorBuilder(ngModuleMeta, entryComponentFactories, bootstrapComponentFactories, sourceSpan);\n          var providerParser = new NgModuleProviderAnalyzer(ngModuleMeta, extraProviders, sourceSpan);\n          providerParser.parse().forEach(function (provider) { return builder.addProvider(provider); });\n          var injectorClass = builder.build();\n          var ngModuleFactoryVar = ngModuleMeta.type.name + \"NgFactory\";\n          var ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n              .set(importExpr(resolveIdentifier(Identifiers.NgModuleFactory))\n              .instantiate([variable(injectorClass.name), importExpr(ngModuleMeta.type)], importType(resolveIdentifier(Identifiers.NgModuleFactory), [importType(ngModuleMeta.type)], [TypeModifier.Const])))\n              .toDeclStmt(null, [StmtModifier.Final]);\n          var stmts = [injectorClass, ngModuleFactoryStmt];\n          if (ngModuleMeta.id) {\n              var registerFactoryStmt = importExpr(resolveIdentifier(Identifiers.RegisterModuleFactoryFn))\n                  .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                  .toStmt();\n              stmts.push(registerFactoryStmt);\n          }\n          return new NgModuleCompileResult(stmts, ngModuleFactoryVar, deps);\n      };\n      NgModuleCompiler.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      NgModuleCompiler.ctorParameters = [];\n      return NgModuleCompiler;\n  }());\n  var _InjectorBuilder = (function () {\n      function _InjectorBuilder(_ngModuleMeta, _entryComponentFactories, _bootstrapComponentFactories, _sourceSpan) {\n          this._ngModuleMeta = _ngModuleMeta;\n          this._entryComponentFactories = _entryComponentFactories;\n          this._bootstrapComponentFactories = _bootstrapComponentFactories;\n          this._sourceSpan = _sourceSpan;\n          this.fields = [];\n          this.getters = [];\n          this.methods = [];\n          this.ctorStmts = [];\n          this._tokens = [];\n          this._instances = new Map();\n          this._createStmts = [];\n          this._destroyStmts = [];\n      }\n      _InjectorBuilder.prototype.addProvider = function (resolvedProvider) {\n          var _this = this;\n          var providerValueExpressions = resolvedProvider.providers.map(function (provider) { return _this._getProviderValue(provider); });\n          var propName = \"_\" + resolvedProvider.token.name + \"_\" + this._instances.size;\n          var instance = this._createProviderProperty(propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider, resolvedProvider.eager);\n          if (resolvedProvider.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n              this._destroyStmts.push(instance.callMethod('ngOnDestroy', []).toStmt());\n          }\n          this._tokens.push(resolvedProvider.token);\n          this._instances.set(resolvedProvider.token.reference, instance);\n      };\n      _InjectorBuilder.prototype.build = function () {\n          var _this = this;\n          var getMethodStmts = this._tokens.map(function (token) {\n              var providerExpr = _this._instances.get(token.reference);\n              return new IfStmt(InjectMethodVars$1.token.identical(createDiTokenExpression(token)), [new ReturnStatement(providerExpr)]);\n          });\n          var methods = [\n              new ClassMethod('createInternal', [], this._createStmts.concat(new ReturnStatement(this._instances.get(this._ngModuleMeta.type.reference))), importType(this._ngModuleMeta.type)),\n              new ClassMethod('getInternal', [\n                  new FnParam(InjectMethodVars$1.token.name, DYNAMIC_TYPE),\n                  new FnParam(InjectMethodVars$1.notFoundResult.name, DYNAMIC_TYPE)\n              ], getMethodStmts.concat([new ReturnStatement(InjectMethodVars$1.notFoundResult)]), DYNAMIC_TYPE),\n              new ClassMethod('destroyInternal', [], this._destroyStmts),\n          ];\n          var parentArgs = [\n              variable(InjectorProps.parent.name),\n              literalArr(this._entryComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); })),\n              literalArr(this._bootstrapComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); }))\n          ];\n          var injClassName = this._ngModuleMeta.type.name + \"Injector\";\n          return createClassStmt({\n              name: injClassName,\n              ctorParams: [new FnParam(InjectorProps.parent.name, importType(resolveIdentifier(Identifiers.Injector)))],\n              parent: importExpr(resolveIdentifier(Identifiers.NgModuleInjector), [importType(this._ngModuleMeta.type)]),\n              parentArgs: parentArgs,\n              builders: [{ methods: methods }, this]\n          });\n      };\n      _InjectorBuilder.prototype._getProviderValue = function (provider) {\n          var _this = this;\n          var result;\n          if (isPresent(provider.useExisting)) {\n              result = this._getDependency(new CompileDiDependencyMetadata({ token: provider.useExisting }));\n          }\n          else if (isPresent(provider.useFactory)) {\n              var deps = provider.deps || provider.useFactory.diDeps;\n              var depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n              result = importExpr(provider.useFactory).callFn(depsExpr);\n          }\n          else if (isPresent(provider.useClass)) {\n              var deps = provider.deps || provider.useClass.diDeps;\n              var depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n              result =\n                  importExpr(provider.useClass).instantiate(depsExpr, importType(provider.useClass));\n          }\n          else {\n              result = convertValueToOutputAst(provider.useValue);\n          }\n          return result;\n      };\n      _InjectorBuilder.prototype._createProviderProperty = function (propName, provider, providerValueExpressions, isMulti, isEager) {\n          var resolvedProviderValueExpr;\n          var type;\n          if (isMulti) {\n              resolvedProviderValueExpr = literalArr(providerValueExpressions);\n              type = new ArrayType(DYNAMIC_TYPE);\n          }\n          else {\n              resolvedProviderValueExpr = providerValueExpressions[0];\n              type = providerValueExpressions[0].type;\n          }\n          if (!type) {\n              type = DYNAMIC_TYPE;\n          }\n          if (isEager) {\n              this.fields.push(new ClassField(propName, type));\n              this._createStmts.push(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n          }\n          else {\n              var internalField = \"_\" + propName;\n              this.fields.push(new ClassField(internalField, type));\n              // Note: Equals is important for JS so that it also checks the undefined case!\n              var getterStmts = [\n                  new IfStmt(THIS_EXPR.prop(internalField).isBlank(), [THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]),\n                  new ReturnStatement(THIS_EXPR.prop(internalField))\n              ];\n              this.getters.push(new ClassGetter(propName, getterStmts, type));\n          }\n          return THIS_EXPR.prop(propName);\n      };\n      _InjectorBuilder.prototype._getDependency = function (dep) {\n          var result = null;\n          if (dep.isValue) {\n              result = literal(dep.value);\n          }\n          if (!dep.isSkipSelf) {\n              if (dep.token &&\n                  (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference ||\n                      dep.token.reference ===\n                          resolveIdentifierToken(Identifiers.ComponentFactoryResolver).reference)) {\n                  result = THIS_EXPR;\n              }\n              if (!result) {\n                  result = this._instances.get(dep.token.reference);\n              }\n          }\n          if (!result) {\n              var args = [createDiTokenExpression(dep.token)];\n              if (dep.isOptional) {\n                  args.push(NULL_EXPR);\n              }\n              result = InjectorProps.parent.callMethod('get', args);\n          }\n          return result;\n      };\n      return _InjectorBuilder;\n  }());\n  var InjectorProps = (function () {\n      function InjectorProps() {\n      }\n      InjectorProps.parent = THIS_EXPR.prop('parent');\n      return InjectorProps;\n  }());\n  var InjectMethodVars$1 = (function () {\n      function InjectMethodVars() {\n      }\n      InjectMethodVars.token = variable('token');\n      InjectMethodVars.notFoundResult = variable('notFoundResult');\n      return InjectMethodVars;\n  }());\n\n  var _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\n  var _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\n  var CATCH_ERROR_VAR$2 = variable('error');\n  var CATCH_STACK_VAR$2 = variable('stack');\n  var _EmittedLine = (function () {\n      function _EmittedLine(indent) {\n          this.indent = indent;\n          this.parts = [];\n      }\n      return _EmittedLine;\n  }());\n  var EmitterVisitorContext = (function () {\n      function EmitterVisitorContext(_exportedVars, _indent) {\n          this._exportedVars = _exportedVars;\n          this._indent = _indent;\n          this._classes = [];\n          this._lines = [new _EmittedLine(_indent)];\n      }\n      EmitterVisitorContext.createRoot = function (exportedVars) {\n          return new EmitterVisitorContext(exportedVars, 0);\n      };\n      Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n          get: function () { return this._lines[this._lines.length - 1]; },\n          enumerable: true,\n          configurable: true\n      });\n      EmitterVisitorContext.prototype.isExportedVar = function (varName) { return this._exportedVars.indexOf(varName) !== -1; };\n      EmitterVisitorContext.prototype.println = function (lastPart) {\n          if (lastPart === void 0) { lastPart = ''; }\n          this.print(lastPart, true);\n      };\n      EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n      EmitterVisitorContext.prototype.print = function (part, newLine) {\n          if (newLine === void 0) { newLine = false; }\n          if (part.length > 0) {\n              this._currentLine.parts.push(part);\n          }\n          if (newLine) {\n              this._lines.push(new _EmittedLine(this._indent));\n          }\n      };\n      EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n          if (this.lineIsEmpty()) {\n              this._lines.pop();\n          }\n      };\n      EmitterVisitorContext.prototype.incIndent = function () {\n          this._indent++;\n          this._currentLine.indent = this._indent;\n      };\n      EmitterVisitorContext.prototype.decIndent = function () {\n          this._indent--;\n          this._currentLine.indent = this._indent;\n      };\n      EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n      EmitterVisitorContext.prototype.popClass = function () { return this._classes.pop(); };\n      Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n          get: function () {\n              return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      EmitterVisitorContext.prototype.toSource = function () {\n          var lines = this._lines;\n          if (lines[lines.length - 1].parts.length === 0) {\n              lines = lines.slice(0, lines.length - 1);\n          }\n          return lines\n              .map(function (line) {\n              if (line.parts.length > 0) {\n                  return _createIndent(line.indent) + line.parts.join('');\n              }\n              else {\n                  return '';\n              }\n          })\n              .join('\\n');\n      };\n      return EmitterVisitorContext;\n  }());\n  var AbstractEmitterVisitor = (function () {\n      function AbstractEmitterVisitor(_escapeDollarInStrings) {\n          this._escapeDollarInStrings = _escapeDollarInStrings;\n      }\n      AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n          stmt.expr.visitExpression(this, ctx);\n          ctx.println(';');\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n          ctx.print(\"return \");\n          stmt.value.visitExpression(this, ctx);\n          ctx.println(';');\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n          ctx.print(\"if (\");\n          stmt.condition.visitExpression(this, ctx);\n          ctx.print(\") {\");\n          var hasElseCase = isPresent(stmt.falseCase) && stmt.falseCase.length > 0;\n          if (stmt.trueCase.length <= 1 && !hasElseCase) {\n              ctx.print(\" \");\n              this.visitAllStatements(stmt.trueCase, ctx);\n              ctx.removeEmptyLastLine();\n              ctx.print(\" \");\n          }\n          else {\n              ctx.println();\n              ctx.incIndent();\n              this.visitAllStatements(stmt.trueCase, ctx);\n              ctx.decIndent();\n              if (hasElseCase) {\n                  ctx.println(\"} else {\");\n                  ctx.incIndent();\n                  this.visitAllStatements(stmt.falseCase, ctx);\n                  ctx.decIndent();\n              }\n          }\n          ctx.println(\"}\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n          ctx.print(\"throw \");\n          stmt.error.visitExpression(this, ctx);\n          ctx.println(\";\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n          var lines = stmt.comment.split('\\n');\n          lines.forEach(function (line) { ctx.println(\"// \" + line); });\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n          var lineWasEmpty = ctx.lineIsEmpty();\n          if (!lineWasEmpty) {\n              ctx.print('(');\n          }\n          ctx.print(expr.name + \" = \");\n          expr.value.visitExpression(this, ctx);\n          if (!lineWasEmpty) {\n              ctx.print(')');\n          }\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n          var lineWasEmpty = ctx.lineIsEmpty();\n          if (!lineWasEmpty) {\n              ctx.print('(');\n          }\n          expr.receiver.visitExpression(this, ctx);\n          ctx.print(\"[\");\n          expr.index.visitExpression(this, ctx);\n          ctx.print(\"] = \");\n          expr.value.visitExpression(this, ctx);\n          if (!lineWasEmpty) {\n              ctx.print(')');\n          }\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n          var lineWasEmpty = ctx.lineIsEmpty();\n          if (!lineWasEmpty) {\n              ctx.print('(');\n          }\n          expr.receiver.visitExpression(this, ctx);\n          ctx.print(\".\" + expr.name + \" = \");\n          expr.value.visitExpression(this, ctx);\n          if (!lineWasEmpty) {\n              ctx.print(')');\n          }\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n          expr.receiver.visitExpression(this, ctx);\n          var name = expr.name;\n          if (isPresent(expr.builtin)) {\n              name = this.getBuiltinMethodName(expr.builtin);\n              if (isBlank(name)) {\n                  // some builtins just mean to skip the call.\n                  return null;\n              }\n          }\n          ctx.print(\".\" + name + \"(\");\n          this.visitAllExpressions(expr.args, ctx, \",\");\n          ctx.print(\")\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n          expr.fn.visitExpression(this, ctx);\n          ctx.print(\"(\");\n          this.visitAllExpressions(expr.args, ctx, ',');\n          ctx.print(\")\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n          var varName = ast.name;\n          if (isPresent(ast.builtin)) {\n              switch (ast.builtin) {\n                  case BuiltinVar.Super:\n                      varName = 'super';\n                      break;\n                  case BuiltinVar.This:\n                      varName = 'this';\n                      break;\n                  case BuiltinVar.CatchError:\n                      varName = CATCH_ERROR_VAR$2.name;\n                      break;\n                  case BuiltinVar.CatchStack:\n                      varName = CATCH_STACK_VAR$2.name;\n                      break;\n                  default:\n                      throw new Error(\"Unknown builtin variable \" + ast.builtin);\n              }\n          }\n          ctx.print(varName);\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n          ctx.print(\"new \");\n          ast.classExpr.visitExpression(this, ctx);\n          ctx.print(\"(\");\n          this.visitAllExpressions(ast.args, ctx, ',');\n          ctx.print(\")\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n          var value = ast.value;\n          if (typeof value === 'string') {\n              ctx.print(escapeIdentifier(value, this._escapeDollarInStrings));\n          }\n          else {\n              ctx.print(\"\" + value);\n          }\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n          ctx.print(\"(\");\n          ast.condition.visitExpression(this, ctx);\n          ctx.print('? ');\n          ast.trueCase.visitExpression(this, ctx);\n          ctx.print(': ');\n          ast.falseCase.visitExpression(this, ctx);\n          ctx.print(\")\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n          ctx.print('!');\n          ast.condition.visitExpression(this, ctx);\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n          var opStr;\n          switch (ast.operator) {\n              case BinaryOperator.Equals:\n                  opStr = '==';\n                  break;\n              case BinaryOperator.Identical:\n                  opStr = '===';\n                  break;\n              case BinaryOperator.NotEquals:\n                  opStr = '!=';\n                  break;\n              case BinaryOperator.NotIdentical:\n                  opStr = '!==';\n                  break;\n              case BinaryOperator.And:\n                  opStr = '&&';\n                  break;\n              case BinaryOperator.Or:\n                  opStr = '||';\n                  break;\n              case BinaryOperator.Plus:\n                  opStr = '+';\n                  break;\n              case BinaryOperator.Minus:\n                  opStr = '-';\n                  break;\n              case BinaryOperator.Divide:\n                  opStr = '/';\n                  break;\n              case BinaryOperator.Multiply:\n                  opStr = '*';\n                  break;\n              case BinaryOperator.Modulo:\n                  opStr = '%';\n                  break;\n              case BinaryOperator.Lower:\n                  opStr = '<';\n                  break;\n              case BinaryOperator.LowerEquals:\n                  opStr = '<=';\n                  break;\n              case BinaryOperator.Bigger:\n                  opStr = '>';\n                  break;\n              case BinaryOperator.BiggerEquals:\n                  opStr = '>=';\n                  break;\n              default:\n                  throw new Error(\"Unknown operator \" + ast.operator);\n          }\n          ctx.print(\"(\");\n          ast.lhs.visitExpression(this, ctx);\n          ctx.print(\" \" + opStr + \" \");\n          ast.rhs.visitExpression(this, ctx);\n          ctx.print(\")\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n          ast.receiver.visitExpression(this, ctx);\n          ctx.print(\".\");\n          ctx.print(ast.name);\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n          ast.receiver.visitExpression(this, ctx);\n          ctx.print(\"[\");\n          ast.index.visitExpression(this, ctx);\n          ctx.print(\"]\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n          var useNewLine = ast.entries.length > 1;\n          ctx.print(\"[\", useNewLine);\n          ctx.incIndent();\n          this.visitAllExpressions(ast.entries, ctx, ',', useNewLine);\n          ctx.decIndent();\n          ctx.print(\"]\", useNewLine);\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n          var _this = this;\n          var useNewLine = ast.entries.length > 1;\n          ctx.print(\"{\", useNewLine);\n          ctx.incIndent();\n          this.visitAllObjects(function (entry) {\n              ctx.print(escapeIdentifier(entry[0], _this._escapeDollarInStrings, false) + \": \");\n              entry[1].visitExpression(_this, ctx);\n          }, ast.entries, ctx, ',', useNewLine);\n          ctx.decIndent();\n          ctx.print(\"}\", useNewLine);\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator, newLine) {\n          var _this = this;\n          if (newLine === void 0) { newLine = false; }\n          this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator, newLine);\n      };\n      AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator, newLine) {\n          if (newLine === void 0) { newLine = false; }\n          for (var i = 0; i < expressions.length; i++) {\n              if (i > 0) {\n                  ctx.print(separator, newLine);\n              }\n              handler(expressions[i]);\n          }\n          if (newLine) {\n              ctx.println();\n          }\n      };\n      AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n          var _this = this;\n          statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n      };\n      return AbstractEmitterVisitor;\n  }());\n  function escapeIdentifier(input, escapeDollar, alwaysQuote) {\n      if (alwaysQuote === void 0) { alwaysQuote = true; }\n      if (isBlank(input)) {\n          return null;\n      }\n      var body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n          var match = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              match[_i - 0] = arguments[_i];\n          }\n          if (match[0] == '$') {\n              return escapeDollar ? '\\\\$' : '$';\n          }\n          else if (match[0] == '\\n') {\n              return '\\\\n';\n          }\n          else if (match[0] == '\\r') {\n              return '\\\\r';\n          }\n          else {\n              return \"\\\\\" + match[0];\n          }\n      });\n      var requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n      return requiresQuotes ? \"'\" + body + \"'\" : body;\n  }\n  function _createIndent(count) {\n      var res = '';\n      for (var i = 0; i < count; i++) {\n          res += '  ';\n      }\n      return res;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$18 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var _debugModuleUrl = 'asset://debug/lib';\n  function debugOutputAstAsTypeScript(ast) {\n      var converter = new _TsEmitterVisitor(_debugModuleUrl);\n      var ctx = EmitterVisitorContext.createRoot([]);\n      var asts = Array.isArray(ast) ? ast : [ast];\n      asts.forEach(function (ast) {\n          if (ast instanceof Statement) {\n              ast.visitStatement(converter, ctx);\n          }\n          else if (ast instanceof Expression) {\n              ast.visitExpression(converter, ctx);\n          }\n          else if (ast instanceof Type$1) {\n              ast.visitType(converter, ctx);\n          }\n          else {\n              throw new Error(\"Don't know how to print debug info for \" + ast);\n          }\n      });\n      return ctx.toSource();\n  }\n  var TypeScriptEmitter = (function () {\n      function TypeScriptEmitter(_importGenerator) {\n          this._importGenerator = _importGenerator;\n      }\n      TypeScriptEmitter.prototype.emitStatements = function (moduleUrl, stmts, exportedVars) {\n          var _this = this;\n          var converter = new _TsEmitterVisitor(moduleUrl);\n          var ctx = EmitterVisitorContext.createRoot(exportedVars);\n          converter.visitAllStatements(stmts, ctx);\n          var srcParts = [];\n          converter.importsWithPrefixes.forEach(function (prefix, importedModuleUrl) {\n              // Note: can't write the real word for import as it screws up system.js auto detection...\n              srcParts.push(\"imp\" +\n                  (\"ort * as \" + prefix + \" from '\" + _this._importGenerator.getImportPath(moduleUrl, importedModuleUrl) + \"';\"));\n          });\n          srcParts.push(ctx.toSource());\n          return srcParts.join('\\n');\n      };\n      return TypeScriptEmitter;\n  }());\n  var _TsEmitterVisitor = (function (_super) {\n      __extends$18(_TsEmitterVisitor, _super);\n      function _TsEmitterVisitor(_moduleUrl) {\n          _super.call(this, false);\n          this._moduleUrl = _moduleUrl;\n          this.importsWithPrefixes = new Map();\n      }\n      _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n          if (defaultType === void 0) { defaultType = 'any'; }\n          if (isPresent(t)) {\n              t.visitType(this, ctx);\n          }\n          else {\n              ctx.print(defaultType);\n          }\n      };\n      _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n          var value = ast.value;\n          if (isBlank(value) && ast.type != NULL_TYPE) {\n              ctx.print(\"(\" + value + \" as any)\");\n              return null;\n          }\n          return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n      };\n      // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n      // In SNC mode, [] have the type never[], so we cast here to any[].\n      // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n      // start with [].concat. see https://github.com/angular/angular/pull/11846\n      _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n          if (ast.entries.length === 0) {\n              ctx.print('(');\n          }\n          var result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n          if (ast.entries.length === 0) {\n              ctx.print(' as any[])');\n          }\n          return result;\n      };\n      _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n          this._visitIdentifier(ast.value, ast.typeParams, ctx);\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n          if (ctx.isExportedVar(stmt.name)) {\n              ctx.print(\"export \");\n          }\n          if (stmt.hasModifier(StmtModifier.Final)) {\n              ctx.print(\"const\");\n          }\n          else {\n              ctx.print(\"var\");\n          }\n          ctx.print(\" \" + stmt.name + \":\");\n          this.visitType(stmt.type, ctx);\n          ctx.print(\" = \");\n          stmt.value.visitExpression(this, ctx);\n          ctx.println(\";\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n          ctx.print(\"(<\");\n          ast.type.visitType(this, ctx);\n          ctx.print(\">\");\n          ast.value.visitExpression(this, ctx);\n          ctx.print(\")\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n          var _this = this;\n          ctx.pushClass(stmt);\n          if (ctx.isExportedVar(stmt.name)) {\n              ctx.print(\"export \");\n          }\n          ctx.print(\"class \" + stmt.name);\n          if (isPresent(stmt.parent)) {\n              ctx.print(\" extends \");\n              stmt.parent.visitExpression(this, ctx);\n          }\n          ctx.println(\" {\");\n          ctx.incIndent();\n          stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n          if (isPresent(stmt.constructorMethod)) {\n              this._visitClassConstructor(stmt, ctx);\n          }\n          stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n          stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n          ctx.decIndent();\n          ctx.println(\"}\");\n          ctx.popClass();\n          return null;\n      };\n      _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n          if (field.hasModifier(StmtModifier.Private)) {\n              // comment out as a workaround for #10967\n              ctx.print(\"/*private*/ \");\n          }\n          ctx.print(field.name);\n          ctx.print(':');\n          this.visitType(field.type, ctx);\n          ctx.println(\";\");\n      };\n      _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n          if (getter.hasModifier(StmtModifier.Private)) {\n              ctx.print(\"private \");\n          }\n          ctx.print(\"get \" + getter.name + \"()\");\n          ctx.print(':');\n          this.visitType(getter.type, ctx);\n          ctx.println(\" {\");\n          ctx.incIndent();\n          this.visitAllStatements(getter.body, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n      };\n      _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n          ctx.print(\"constructor(\");\n          this._visitParams(stmt.constructorMethod.params, ctx);\n          ctx.println(\") {\");\n          ctx.incIndent();\n          this.visitAllStatements(stmt.constructorMethod.body, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n      };\n      _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n          if (method.hasModifier(StmtModifier.Private)) {\n              ctx.print(\"private \");\n          }\n          ctx.print(method.name + \"(\");\n          this._visitParams(method.params, ctx);\n          ctx.print(\"):\");\n          this.visitType(method.type, ctx, 'void');\n          ctx.println(\" {\");\n          ctx.incIndent();\n          this.visitAllStatements(method.body, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n      };\n      _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n          ctx.print(\"(\");\n          this._visitParams(ast.params, ctx);\n          ctx.print(\"):\");\n          this.visitType(ast.type, ctx, 'void');\n          ctx.println(\" => {\");\n          ctx.incIndent();\n          this.visitAllStatements(ast.statements, ctx);\n          ctx.decIndent();\n          ctx.print(\"}\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n          if (ctx.isExportedVar(stmt.name)) {\n              ctx.print(\"export \");\n          }\n          ctx.print(\"function \" + stmt.name + \"(\");\n          this._visitParams(stmt.params, ctx);\n          ctx.print(\"):\");\n          this.visitType(stmt.type, ctx, 'void');\n          ctx.println(\" {\");\n          ctx.incIndent();\n          this.visitAllStatements(stmt.statements, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n          ctx.println(\"try {\");\n          ctx.incIndent();\n          this.visitAllStatements(stmt.bodyStmts, ctx);\n          ctx.decIndent();\n          ctx.println(\"} catch (\" + CATCH_ERROR_VAR$2.name + \") {\");\n          ctx.incIndent();\n          var catchStmts = [CATCH_STACK_VAR$2.set(CATCH_ERROR_VAR$2.prop('stack')).toDeclStmt(null, [\n                  StmtModifier.Final\n              ])].concat(stmt.catchStmts);\n          this.visitAllStatements(catchStmts, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n          var typeStr;\n          switch (type.name) {\n              case BuiltinTypeName.Bool:\n                  typeStr = 'boolean';\n                  break;\n              case BuiltinTypeName.Dynamic:\n                  typeStr = 'any';\n                  break;\n              case BuiltinTypeName.Function:\n                  typeStr = 'Function';\n                  break;\n              case BuiltinTypeName.Number:\n                  typeStr = 'number';\n                  break;\n              case BuiltinTypeName.Int:\n                  typeStr = 'number';\n                  break;\n              case BuiltinTypeName.String:\n                  typeStr = 'string';\n                  break;\n              default:\n                  throw new Error(\"Unsupported builtin type \" + type.name);\n          }\n          ctx.print(typeStr);\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitExternalType = function (ast, ctx) {\n          this._visitIdentifier(ast.value, ast.typeParams, ctx);\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n          this.visitType(type.of, ctx);\n          ctx.print(\"[]\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n          ctx.print(\"{[key: string]:\");\n          this.visitType(type.valueType, ctx);\n          ctx.print(\"}\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n          var name;\n          switch (method) {\n              case BuiltinMethod.ConcatArray:\n                  name = 'concat';\n                  break;\n              case BuiltinMethod.SubscribeObservable:\n                  name = 'subscribe';\n                  break;\n              case BuiltinMethod.Bind:\n                  name = 'bind';\n                  break;\n              default:\n                  throw new Error(\"Unknown builtin method: \" + method);\n          }\n          return name;\n      };\n      _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n          var _this = this;\n          this.visitAllObjects(function (param) {\n              ctx.print(param.name);\n              ctx.print(':');\n              _this.visitType(param.type, ctx);\n          }, params, ctx, ',');\n      };\n      _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n          var _this = this;\n          if (isBlank(value.name)) {\n              throw new Error(\"Internal error: unknown identifier \" + value);\n          }\n          if (isPresent(value.moduleUrl) && value.moduleUrl != this._moduleUrl) {\n              var prefix = this.importsWithPrefixes.get(value.moduleUrl);\n              if (isBlank(prefix)) {\n                  prefix = \"import\" + this.importsWithPrefixes.size;\n                  this.importsWithPrefixes.set(value.moduleUrl, prefix);\n              }\n              ctx.print(prefix + \".\");\n          }\n          if (value.reference && value.reference.members) {\n              ctx.print(value.reference.name);\n              ctx.print('.');\n              ctx.print(value.reference.members.join('.'));\n          }\n          else {\n              ctx.print(value.name);\n          }\n          if (isPresent(typeParams) && typeParams.length > 0) {\n              ctx.print(\"<\");\n              this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, typeParams, ctx, ',');\n              ctx.print(\">\");\n          }\n      };\n      return _TsEmitterVisitor;\n  }(AbstractEmitterVisitor));\n\n  function interpretStatements(statements, resultVar) {\n      var stmtsWithReturn = statements.concat([new ReturnStatement(variable(resultVar))]);\n      var ctx = new _ExecutionContext(null, null, null, new Map());\n      var visitor = new StatementInterpreter();\n      var result = visitor.visitAllStatements(stmtsWithReturn, ctx);\n      return isPresent(result) ? result.value : null;\n  }\n  function _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n      var childCtx = ctx.createChildWihtLocalVars();\n      for (var i = 0; i < varNames.length; i++) {\n          childCtx.vars.set(varNames[i], varValues[i]);\n      }\n      var result = visitor.visitAllStatements(statements, childCtx);\n      return isPresent(result) ? result.value : null;\n  }\n  var _ExecutionContext = (function () {\n      function _ExecutionContext(parent, instance, className, vars) {\n          this.parent = parent;\n          this.instance = instance;\n          this.className = className;\n          this.vars = vars;\n      }\n      _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n          return new _ExecutionContext(this, this.instance, this.className, new Map());\n      };\n      return _ExecutionContext;\n  }());\n  var ReturnValue = (function () {\n      function ReturnValue(value) {\n          this.value = value;\n      }\n      return ReturnValue;\n  }());\n  function createDynamicClass(_classStmt, _ctx, _visitor) {\n      var propertyDescriptors = {};\n      _classStmt.getters.forEach(function (getter) {\n          // Note: use `function` instead of arrow function to capture `this`\n          propertyDescriptors[getter.name] = {\n              configurable: false,\n              get: function () {\n                  var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                  return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n              }\n          };\n      });\n      _classStmt.methods.forEach(function (method) {\n          var paramNames = method.params.map(function (param) { return param.name; });\n          // Note: use `function` instead of arrow function to capture `this`\n          propertyDescriptors[method.name] = {\n              writable: false,\n              configurable: false,\n              value: function () {\n                  var args = [];\n                  for (var _i = 0; _i < arguments.length; _i++) {\n                      args[_i - 0] = arguments[_i];\n                  }\n                  var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                  return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n              }\n          };\n      });\n      var ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n      // Note: use `function` instead of arrow function to capture `this`\n      var ctor = function () {\n          var _this = this;\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i - 0] = arguments[_i];\n          }\n          var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n          _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n          _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n      };\n      var superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n      ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n      return ctor;\n  }\n  var StatementInterpreter = (function () {\n      function StatementInterpreter() {\n      }\n      StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n      StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n          ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n          return null;\n      };\n      StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n          var value = expr.value.visitExpression(this, ctx);\n          var currCtx = ctx;\n          while (currCtx != null) {\n              if (currCtx.vars.has(expr.name)) {\n                  currCtx.vars.set(expr.name, value);\n                  return value;\n              }\n              currCtx = currCtx.parent;\n          }\n          throw new Error(\"Not declared variable \" + expr.name);\n      };\n      StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n          var varName = ast.name;\n          if (isPresent(ast.builtin)) {\n              switch (ast.builtin) {\n                  case BuiltinVar.Super:\n                      return ctx.instance.__proto__;\n                  case BuiltinVar.This:\n                      return ctx.instance;\n                  case BuiltinVar.CatchError:\n                      varName = CATCH_ERROR_VAR$1;\n                      break;\n                  case BuiltinVar.CatchStack:\n                      varName = CATCH_STACK_VAR$1;\n                      break;\n                  default:\n                      throw new Error(\"Unknown builtin variable \" + ast.builtin);\n              }\n          }\n          var currCtx = ctx;\n          while (currCtx != null) {\n              if (currCtx.vars.has(varName)) {\n                  return currCtx.vars.get(varName);\n              }\n              currCtx = currCtx.parent;\n          }\n          throw new Error(\"Not declared variable \" + varName);\n      };\n      StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n          var receiver = expr.receiver.visitExpression(this, ctx);\n          var index = expr.index.visitExpression(this, ctx);\n          var value = expr.value.visitExpression(this, ctx);\n          receiver[index] = value;\n          return value;\n      };\n      StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n          var receiver = expr.receiver.visitExpression(this, ctx);\n          var value = expr.value.visitExpression(this, ctx);\n          receiver[expr.name] = value;\n          return value;\n      };\n      StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n          var receiver = expr.receiver.visitExpression(this, ctx);\n          var args = this.visitAllExpressions(expr.args, ctx);\n          var result;\n          if (isPresent(expr.builtin)) {\n              switch (expr.builtin) {\n                  case BuiltinMethod.ConcatArray:\n                      result = receiver.concat.apply(receiver, args);\n                      break;\n                  case BuiltinMethod.SubscribeObservable:\n                      result = receiver.subscribe({ next: args[0] });\n                      break;\n                  case BuiltinMethod.Bind:\n                      result = receiver.bind.apply(receiver, args);\n                      break;\n                  default:\n                      throw new Error(\"Unknown builtin method \" + expr.builtin);\n              }\n          }\n          else {\n              result = receiver[expr.name].apply(receiver, args);\n          }\n          return result;\n      };\n      StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n          var args = this.visitAllExpressions(stmt.args, ctx);\n          var fnExpr = stmt.fn;\n          if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n              ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n              return null;\n          }\n          else {\n              var fn = stmt.fn.visitExpression(this, ctx);\n              return fn.apply(null, args);\n          }\n      };\n      StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n          return new ReturnValue(stmt.value.visitExpression(this, ctx));\n      };\n      StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n          var clazz = createDynamicClass(stmt, ctx, this);\n          ctx.vars.set(stmt.name, clazz);\n          return null;\n      };\n      StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n          return stmt.expr.visitExpression(this, ctx);\n      };\n      StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n          var condition = stmt.condition.visitExpression(this, ctx);\n          if (condition) {\n              return this.visitAllStatements(stmt.trueCase, ctx);\n          }\n          else if (isPresent(stmt.falseCase)) {\n              return this.visitAllStatements(stmt.falseCase, ctx);\n          }\n          return null;\n      };\n      StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n          try {\n              return this.visitAllStatements(stmt.bodyStmts, ctx);\n          }\n          catch (e) {\n              var childCtx = ctx.createChildWihtLocalVars();\n              childCtx.vars.set(CATCH_ERROR_VAR$1, e);\n              childCtx.vars.set(CATCH_STACK_VAR$1, e.stack);\n              return this.visitAllStatements(stmt.catchStmts, childCtx);\n          }\n      };\n      StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n          throw stmt.error.visitExpression(this, ctx);\n      };\n      StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n      StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n          var args = this.visitAllExpressions(ast.args, ctx);\n          var clazz = ast.classExpr.visitExpression(this, ctx);\n          return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n      };\n      StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n      StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) {\n          return ast.value.reference;\n      };\n      StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n          if (ast.condition.visitExpression(this, ctx)) {\n              return ast.trueCase.visitExpression(this, ctx);\n          }\n          else if (isPresent(ast.falseCase)) {\n              return ast.falseCase.visitExpression(this, ctx);\n          }\n          return null;\n      };\n      StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n          return !ast.condition.visitExpression(this, ctx);\n      };\n      StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n          return ast.value.visitExpression(this, ctx);\n      };\n      StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n          var paramNames = ast.params.map(function (param) { return param.name; });\n          return _declareFn(paramNames, ast.statements, ctx, this);\n      };\n      StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n          var paramNames = stmt.params.map(function (param) { return param.name; });\n          ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n          return null;\n      };\n      StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n          var _this = this;\n          var lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n          var rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n          switch (ast.operator) {\n              case BinaryOperator.Equals:\n                  return lhs() == rhs();\n              case BinaryOperator.Identical:\n                  return lhs() === rhs();\n              case BinaryOperator.NotEquals:\n                  return lhs() != rhs();\n              case BinaryOperator.NotIdentical:\n                  return lhs() !== rhs();\n              case BinaryOperator.And:\n                  return lhs() && rhs();\n              case BinaryOperator.Or:\n                  return lhs() || rhs();\n              case BinaryOperator.Plus:\n                  return lhs() + rhs();\n              case BinaryOperator.Minus:\n                  return lhs() - rhs();\n              case BinaryOperator.Divide:\n                  return lhs() / rhs();\n              case BinaryOperator.Multiply:\n                  return lhs() * rhs();\n              case BinaryOperator.Modulo:\n                  return lhs() % rhs();\n              case BinaryOperator.Lower:\n                  return lhs() < rhs();\n              case BinaryOperator.LowerEquals:\n                  return lhs() <= rhs();\n              case BinaryOperator.Bigger:\n                  return lhs() > rhs();\n              case BinaryOperator.BiggerEquals:\n                  return lhs() >= rhs();\n              default:\n                  throw new Error(\"Unknown operator \" + ast.operator);\n          }\n      };\n      StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n          var result;\n          var receiver = ast.receiver.visitExpression(this, ctx);\n          result = receiver[ast.name];\n          return result;\n      };\n      StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n          var receiver = ast.receiver.visitExpression(this, ctx);\n          var prop = ast.index.visitExpression(this, ctx);\n          return receiver[prop];\n      };\n      StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n          return this.visitAllExpressions(ast.entries, ctx);\n      };\n      StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n          var _this = this;\n          var result = {};\n          ast.entries.forEach(function (entry) { return result[entry[0]] =\n              entry[1].visitExpression(_this, ctx); });\n          return result;\n      };\n      StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n          var _this = this;\n          return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n      };\n      StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n          for (var i = 0; i < statements.length; i++) {\n              var stmt = statements[i];\n              var val = stmt.visitStatement(this, ctx);\n              if (val instanceof ReturnValue) {\n                  return val;\n              }\n          }\n          return null;\n      };\n      return StatementInterpreter;\n  }());\n  function _declareFn(varNames, statements, ctx, visitor) {\n      return function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i - 0] = arguments[_i];\n          }\n          return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n      };\n  }\n  var CATCH_ERROR_VAR$1 = 'error';\n  var CATCH_STACK_VAR$1 = 'stack';\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$20 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var AbstractJsEmitterVisitor = (function (_super) {\n      __extends$20(AbstractJsEmitterVisitor, _super);\n      function AbstractJsEmitterVisitor() {\n          _super.call(this, false);\n      }\n      AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n          var _this = this;\n          ctx.pushClass(stmt);\n          this._visitClassConstructor(stmt, ctx);\n          if (isPresent(stmt.parent)) {\n              ctx.print(stmt.name + \".prototype = Object.create(\");\n              stmt.parent.visitExpression(this, ctx);\n              ctx.println(\".prototype);\");\n          }\n          stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n          stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n          ctx.popClass();\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n          ctx.print(\"function \" + stmt.name + \"(\");\n          if (isPresent(stmt.constructorMethod)) {\n              this._visitParams(stmt.constructorMethod.params, ctx);\n          }\n          ctx.println(\") {\");\n          ctx.incIndent();\n          if (isPresent(stmt.constructorMethod)) {\n              if (stmt.constructorMethod.body.length > 0) {\n                  ctx.println(\"var self = this;\");\n                  this.visitAllStatements(stmt.constructorMethod.body, ctx);\n              }\n          }\n          ctx.decIndent();\n          ctx.println(\"}\");\n      };\n      AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n          ctx.println(\"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n          ctx.incIndent();\n          if (getter.body.length > 0) {\n              ctx.println(\"var self = this;\");\n              this.visitAllStatements(getter.body, ctx);\n          }\n          ctx.decIndent();\n          ctx.println(\"}});\");\n      };\n      AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n          ctx.print(stmt.name + \".prototype.\" + method.name + \" = function(\");\n          this._visitParams(method.params, ctx);\n          ctx.println(\") {\");\n          ctx.incIndent();\n          if (method.body.length > 0) {\n              ctx.println(\"var self = this;\");\n              this.visitAllStatements(method.body, ctx);\n          }\n          ctx.decIndent();\n          ctx.println(\"};\");\n      };\n      AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n          if (ast.builtin === BuiltinVar.This) {\n              ctx.print('self');\n          }\n          else if (ast.builtin === BuiltinVar.Super) {\n              throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n          }\n          else {\n              _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n          }\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n          ctx.print(\"var \" + stmt.name + \" = \");\n          stmt.value.visitExpression(this, ctx);\n          ctx.println(\";\");\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n          ast.value.visitExpression(this, ctx);\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n          var fnExpr = expr.fn;\n          if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n              ctx.currentClass.parent.visitExpression(this, ctx);\n              ctx.print(\".call(this\");\n              if (expr.args.length > 0) {\n                  ctx.print(\", \");\n                  this.visitAllExpressions(expr.args, ctx, ',');\n              }\n              ctx.print(\")\");\n          }\n          else {\n              _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n          }\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n          ctx.print(\"function(\");\n          this._visitParams(ast.params, ctx);\n          ctx.println(\") {\");\n          ctx.incIndent();\n          this.visitAllStatements(ast.statements, ctx);\n          ctx.decIndent();\n          ctx.print(\"}\");\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n          ctx.print(\"function \" + stmt.name + \"(\");\n          this._visitParams(stmt.params, ctx);\n          ctx.println(\") {\");\n          ctx.incIndent();\n          this.visitAllStatements(stmt.statements, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n          ctx.println(\"try {\");\n          ctx.incIndent();\n          this.visitAllStatements(stmt.bodyStmts, ctx);\n          ctx.decIndent();\n          ctx.println(\"} catch (\" + CATCH_ERROR_VAR$2.name + \") {\");\n          ctx.incIndent();\n          var catchStmts = [CATCH_STACK_VAR$2.set(CATCH_ERROR_VAR$2.prop('stack')).toDeclStmt(null, [\n                  StmtModifier.Final\n              ])].concat(stmt.catchStmts);\n          this.visitAllStatements(catchStmts, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n          this.visitAllObjects(function (param) { return ctx.print(param.name); }, params, ctx, ',');\n      };\n      AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n          var name;\n          switch (method) {\n              case BuiltinMethod.ConcatArray:\n                  name = 'concat';\n                  break;\n              case BuiltinMethod.SubscribeObservable:\n                  name = 'subscribe';\n                  break;\n              case BuiltinMethod.Bind:\n                  name = 'bind';\n                  break;\n              default:\n                  throw new Error(\"Unknown builtin method: \" + method);\n          }\n          return name;\n      };\n      return AbstractJsEmitterVisitor;\n  }(AbstractEmitterVisitor));\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$19 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  function evalExpression(sourceUrl, expr, declarations, vars) {\n      var fnBody = declarations + \"\\nreturn \" + expr + \"\\n//# sourceURL=\" + sourceUrl;\n      var fnArgNames = [];\n      var fnArgValues = [];\n      for (var argName in vars) {\n          fnArgNames.push(argName);\n          fnArgValues.push(vars[argName]);\n      }\n      return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n  }\n  function jitStatements(sourceUrl, statements, resultVar) {\n      var converter = new JitEmitterVisitor();\n      var ctx = EmitterVisitorContext.createRoot([resultVar]);\n      converter.visitAllStatements(statements, ctx);\n      return evalExpression(sourceUrl, resultVar, ctx.toSource(), converter.getArgs());\n  }\n  var JitEmitterVisitor = (function (_super) {\n      __extends$19(JitEmitterVisitor, _super);\n      function JitEmitterVisitor() {\n          _super.apply(this, arguments);\n          this._evalArgNames = [];\n          this._evalArgValues = [];\n      }\n      JitEmitterVisitor.prototype.getArgs = function () {\n          var result = {};\n          for (var i = 0; i < this._evalArgNames.length; i++) {\n              result[this._evalArgNames[i]] = this._evalArgValues[i];\n          }\n          return result;\n      };\n      JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n          var value = ast.value.reference;\n          var id = this._evalArgValues.indexOf(value);\n          if (id === -1) {\n              id = this._evalArgValues.length;\n              this._evalArgValues.push(value);\n              var name_1 = isPresent(ast.value.name) ? sanitizeIdentifier(ast.value.name) : 'val';\n              this._evalArgNames.push(sanitizeIdentifier(\"jit_\" + name_1 + id));\n          }\n          ctx.print(this._evalArgNames[id]);\n          return null;\n      };\n      return JitEmitterVisitor;\n  }(AbstractJsEmitterVisitor));\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  /**\n   * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n   *\n   * Please make sure to keep to edits in sync with the source file.\n   *\n   * Source:\n   * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n   *\n   * The original file level comment is reproduced below\n   */\n  /*\n    This is a limited shim for ShadowDOM css styling.\n    https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n    The intention here is to support only the styling features which can be\n    relatively simply implemented. The goal is to allow users to avoid the\n    most obvious pitfalls and do so without compromising performance significantly.\n    For ShadowDOM styling that's not covered here, a set of best practices\n    can be provided that should allow users to accomplish more complex styling.\n\n    The following is a list of specific ShadowDOM styling features and a brief\n    discussion of the approach used to shim.\n\n    Shimmed features:\n\n    * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n    element using the :host rule. To shim this feature, the :host styles are\n    reformatted and prefixed with a given scope name and promoted to a\n    document level stylesheet.\n    For example, given a scope name of .foo, a rule like this:\n\n      :host {\n          background: red;\n        }\n      }\n\n    becomes:\n\n      .foo {\n        background: red;\n      }\n\n    * encapsulation: Styles defined within ShadowDOM, apply only to\n    dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n    this feature.\n\n    By default, rules are prefixed with the host element tag name\n    as a descendant selector. This ensures styling does not leak out of the 'top'\n    of the element's ShadowDOM. For example,\n\n    div {\n        font-weight: bold;\n      }\n\n    becomes:\n\n    x-foo div {\n        font-weight: bold;\n      }\n\n    becomes:\n\n\n    Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n    selectors are scoped by adding an attribute selector suffix to each\n    simple selector that contains the host element tag name. Each element\n    in the element's ShadowDOM template is also given the scope attribute.\n    Thus, these rules match only elements that have the scope attribute.\n    For example, given a scope name of x-foo, a rule like this:\n\n      div {\n        font-weight: bold;\n      }\n\n    becomes:\n\n      div[x-foo] {\n        font-weight: bold;\n      }\n\n    Note that elements that are dynamically added to a scope must have the scope\n    selector added to them manually.\n\n    * upper/lower bound encapsulation: Styles which are defined outside a\n    shadowRoot should not cross the ShadowDOM boundary and should not apply\n    inside a shadowRoot.\n\n    This styling behavior is not emulated. Some possible ways to do this that\n    were rejected due to complexity and/or performance concerns include: (1) reset\n    every possible property for every possible selector for a given scope name;\n    (2) re-implement css in javascript.\n\n    As an alternative, users should make sure to use selectors\n    specific to the scope in which they are working.\n\n    * ::distributed: This behavior is not emulated. It's often not necessary\n    to style the contents of a specific insertion point and instead, descendants\n    of the host element can be styled selectively. Users can also create an\n    extra node around an insertion point and style that node's contents\n    via descendent selectors. For example, with a shadowRoot like this:\n\n      <style>\n        ::content(div) {\n          background: red;\n        }\n      </style>\n      <content></content>\n\n    could become:\n\n      <style>\n        / *@polyfill .content-container div * /\n        ::content(div) {\n          background: red;\n        }\n      </style>\n      <div class=\"content-container\">\n        <content></content>\n      </div>\n\n    Note the use of @polyfill in the comment above a ShadowDOM specific style\n    declaration. This is a directive to the styling shim to use the selector\n    in comments in lieu of the next selector when running under polyfill.\n  */\n  var ShadowCss = (function () {\n      function ShadowCss() {\n          this.strictStyling = true;\n      }\n      /*\n      * Shim some cssText with the given selector. Returns cssText that can\n      * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n      *\n      * When strictStyling is true:\n      * - selector is the attribute added to all elements inside the host,\n      * - hostSelector is the attribute added to the host itself.\n      */\n      ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n          if (hostSelector === void 0) { hostSelector = ''; }\n          var sourceMappingUrl = extractSourceMappingUrl(cssText);\n          cssText = stripComments(cssText);\n          cssText = this._insertDirectives(cssText);\n          return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n      };\n      ShadowCss.prototype._insertDirectives = function (cssText) {\n          cssText = this._insertPolyfillDirectivesInCssText(cssText);\n          return this._insertPolyfillRulesInCssText(cssText);\n      };\n      /*\n       * Process styles to convert native ShadowDOM rules that will trip\n       * up the css parser; we rely on decorating the stylesheet with inert rules.\n       *\n       * For example, we convert this rule:\n       *\n       * polyfill-next-selector { content: ':host menu-item'; }\n       * ::content menu-item {\n       *\n       * to this:\n       *\n       * scopeName menu-item {\n       *\n      **/\n      ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n          // Difference with webcomponents.js: does not handle comments\n          return cssText.replace(_cssContentNextSelectorRe, function () {\n              var m = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                  m[_i - 0] = arguments[_i];\n              }\n              return m[2] + '{';\n          });\n      };\n      /*\n       * Process styles to add rules which will only apply under the polyfill\n       *\n       * For example, we convert this rule:\n       *\n       * polyfill-rule {\n       *   content: ':host menu-item';\n       * ...\n       * }\n       *\n       * to this:\n       *\n       * scopeName menu-item {...}\n       *\n      **/\n      ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n          // Difference with webcomponents.js: does not handle comments\n          return cssText.replace(_cssContentRuleRe, function () {\n              var m = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                  m[_i - 0] = arguments[_i];\n              }\n              var rule = m[0].replace(m[1], '').replace(m[2], '');\n              return m[4] + rule;\n          });\n      };\n      /* Ensure styles are scoped. Pseudo-scoping takes a rule like:\n       *\n       *  .foo {... }\n       *\n       *  and converts this to\n       *\n       *  scopeName .foo { ... }\n      */\n      ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n          var unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n          // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n          cssText = this._insertPolyfillHostInCssText(cssText);\n          cssText = this._convertColonHost(cssText);\n          cssText = this._convertColonHostContext(cssText);\n          cssText = this._convertShadowDOMSelectors(cssText);\n          if (scopeSelector) {\n              cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n          }\n          cssText = cssText + '\\n' + unscopedRules;\n          return cssText.trim();\n      };\n      /*\n       * Process styles to add rules which will only apply under the polyfill\n       * and do not process via CSSOM. (CSSOM is destructive to rules on rare\n       * occasions, e.g. -webkit-calc on Safari.)\n       * For example, we convert this rule:\n       *\n       * @polyfill-unscoped-rule {\n       *   content: 'menu-item';\n       * ... }\n       *\n       * to this:\n       *\n       * menu-item {...}\n       *\n      **/\n      ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n          // Difference with webcomponents.js: does not handle comments\n          var r = '';\n          var m;\n          _cssContentUnscopedRuleRe.lastIndex = 0;\n          while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n              var rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n              r += rule + '\\n\\n';\n          }\n          return r;\n      };\n      /*\n       * convert a rule like :host(.foo) > .bar { }\n       *\n       * to\n       *\n       * .foo<scopeName> > .bar\n      */\n      ShadowCss.prototype._convertColonHost = function (cssText) {\n          return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n      };\n      /*\n       * convert a rule like :host-context(.foo) > .bar { }\n       *\n       * to\n       *\n       * .foo<scopeName> > .bar, .foo scopeName > .bar { }\n       *\n       * and\n       *\n       * :host-context(.foo:host) .bar { ... }\n       *\n       * to\n       *\n       * .foo<scopeName> .bar { ... }\n      */\n      ShadowCss.prototype._convertColonHostContext = function (cssText) {\n          return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n      };\n      ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n          // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n          return cssText.replace(regExp, function () {\n              var m = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                  m[_i - 0] = arguments[_i];\n              }\n              if (m[2]) {\n                  var parts = m[2].split(',');\n                  var r = [];\n                  for (var i = 0; i < parts.length; i++) {\n                      var p = parts[i].trim();\n                      if (!p)\n                          break;\n                      r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                  }\n                  return r.join(',');\n              }\n              else {\n                  return _polyfillHostNoCombinator + m[3];\n              }\n          });\n      };\n      ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n          if (part.indexOf(_polyfillHost) > -1) {\n              return this._colonHostPartReplacer(host, part, suffix);\n          }\n          else {\n              return host + part + suffix + ', ' + part + ' ' + host + suffix;\n          }\n      };\n      ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n          return host + part.replace(_polyfillHost, '') + suffix;\n      };\n      /*\n       * Convert combinators like ::shadow and pseudo-elements like ::content\n       * by replacing with space.\n      */\n      ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n          return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n      };\n      // change a selector like 'div' to 'name div'\n      ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n          var _this = this;\n          return processRules(cssText, function (rule) {\n              var selector = rule.selector;\n              var content = rule.content;\n              if (rule.selector[0] != '@') {\n                  selector =\n                      _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n              }\n              else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                  rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                  content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n              }\n              return new CssRule(selector, content);\n          });\n      };\n      ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n          var _this = this;\n          return selector.split(',')\n              .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n              .map(function (deepParts) {\n              var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n              var applyScope = function (shallowPart) {\n                  if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                      return strict ?\n                          _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                          _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                  }\n                  else {\n                      return shallowPart;\n                  }\n              };\n              return [applyScope(shallowPart)].concat(otherParts).join(' ');\n          })\n              .join(', ');\n      };\n      ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n          var re = this._makeScopeMatcher(scopeSelector);\n          return !re.test(selector);\n      };\n      ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n          var lre = /\\[/g;\n          var rre = /\\]/g;\n          scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n          return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n      };\n      ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n          // Difference from webcomponents.js: scopeSelector could not be an array\n          return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n      };\n      // scope via name and [is=name]\n      ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n          // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n          _polyfillHostRe.lastIndex = 0;\n          if (_polyfillHostRe.test(selector)) {\n              var replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n              return selector\n                  .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                  return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                      return before + replaceBy_1 + colon + after;\n                  });\n              })\n                  .replace(_polyfillHostRe, replaceBy_1 + ' ');\n          }\n          return scopeSelector + ' ' + selector;\n      };\n      // return a selector with [name] suffix on each simple selector\n      // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */\n      ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n          var _this = this;\n          var isRe = /\\[is=([^\\]]*)\\]/g;\n          scopeSelector = scopeSelector.replace(isRe, function (_) {\n              var parts = [];\n              for (var _i = 1; _i < arguments.length; _i++) {\n                  parts[_i - 1] = arguments[_i];\n              }\n              return parts[0];\n          });\n          var attrName = '[' + scopeSelector + ']';\n          var _scopeSelectorPart = function (p) {\n              var scopedP = p.trim();\n              if (!scopedP) {\n                  return '';\n              }\n              if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                  scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n              }\n              else {\n                  // remove :host since it should be unnecessary\n                  var t = p.replace(_polyfillHostRe, '');\n                  if (t.length > 0) {\n                      var matches = t.match(/([^:]*)(:*)(.*)/);\n                      if (matches) {\n                          scopedP = matches[1] + attrName + matches[2] + matches[3];\n                      }\n                  }\n              }\n              return scopedP;\n          };\n          var safeContent = new SafeSelector(selector);\n          selector = safeContent.content();\n          var scopedSelector = '';\n          var startIndex = 0;\n          var res;\n          var sep = /( |>|\\+|~(?!=))\\s*/g;\n          var scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n          while ((res = sep.exec(selector)) !== null) {\n              var separator = res[1];\n              var part = selector.slice(startIndex, res.index).trim();\n              // if a selector appears before :host-context it should not be shimmed as it\n              // matches on ancestor elements and not on elements in the host's shadow\n              var scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n              scopedSelector += scopedPart + \" \" + separator + \" \";\n              startIndex = sep.lastIndex;\n          }\n          scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n          // replace the placeholders with their original values\n          return safeContent.restore(scopedSelector);\n      };\n      ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n          return selector.replace(_colonHostContextRe, _polyfillHostContext)\n              .replace(_colonHostRe, _polyfillHost);\n      };\n      return ShadowCss;\n  }());\n  var SafeSelector = (function () {\n      function SafeSelector(selector) {\n          var _this = this;\n          this.placeholders = [];\n          this.index = 0;\n          // Replaces attribute selectors with placeholders.\n          // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n          selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n              var replaceBy = \"__ph-\" + _this.index + \"__\";\n              _this.placeholders.push(keep);\n              _this.index++;\n              return replaceBy;\n          });\n          // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n          // WS and \"+\" would otherwise be interpreted as selector separators.\n          this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n              var replaceBy = \"__ph-\" + _this.index + \"__\";\n              _this.placeholders.push(exp);\n              _this.index++;\n              return pseudo + replaceBy;\n          });\n      }\n      ;\n      SafeSelector.prototype.restore = function (content) {\n          var _this = this;\n          return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n      };\n      SafeSelector.prototype.content = function () { return this._content; };\n      return SafeSelector;\n  }());\n  var _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\n  var _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n  var _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n  var _polyfillHost = '-shadowcsshost';\n  // note: :host-context pre-processed to -shadowcsshostcontext.\n  var _polyfillHostContext = '-shadowcsscontext';\n  var _parenSuffix = ')(?:\\\\((' +\n      '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n      ')\\\\))?([^,{]*)';\n  var _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\n  var _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\n  var _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\n  var _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\n  var _shadowDOMSelectorsRe = [\n      /::shadow/g,\n      /::content/g,\n      // Deprecated selectors\n      /\\/shadow-deep\\//g,\n      /\\/shadow\\//g,\n  ];\n  var _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)/g;\n  var _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\n  var _polyfillHostRe = /-shadowcsshost/gim;\n  var _colonHostRe = /:host/gim;\n  var _colonHostContextRe = /:host-context/gim;\n  var _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n  function stripComments(input) {\n      return input.replace(_commentRe, '');\n  }\n  // all comments except inline source mapping\n  var _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n  function extractSourceMappingUrl(input) {\n      var matcher = input.match(_sourceMappingUrlRe);\n      return matcher ? matcher[0] : '';\n  }\n  var _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\n  var _curlyRe = /([{}])/g;\n  var OPEN_CURLY = '{';\n  var CLOSE_CURLY = '}';\n  var BLOCK_PLACEHOLDER = '%BLOCK%';\n  var CssRule = (function () {\n      function CssRule(selector, content) {\n          this.selector = selector;\n          this.content = content;\n      }\n      return CssRule;\n  }());\n  function processRules(input, ruleCallback) {\n      var inputWithEscapedBlocks = escapeBlocks(input);\n      var nextBlockIndex = 0;\n      return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n          var m = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              m[_i - 0] = arguments[_i];\n          }\n          var selector = m[2];\n          var content = '';\n          var suffix = m[4];\n          var contentPrefix = '';\n          if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n              content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n              suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n              contentPrefix = '{';\n          }\n          var rule = ruleCallback(new CssRule(selector, content));\n          return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n      });\n  }\n  var StringWithEscapedBlocks = (function () {\n      function StringWithEscapedBlocks(escapedString, blocks) {\n          this.escapedString = escapedString;\n          this.blocks = blocks;\n      }\n      return StringWithEscapedBlocks;\n  }());\n  function escapeBlocks(input) {\n      var inputParts = input.split(_curlyRe);\n      var resultParts = [];\n      var escapedBlocks = [];\n      var bracketCount = 0;\n      var currentBlockParts = [];\n      for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n          var part = inputParts[partIndex];\n          if (part == CLOSE_CURLY) {\n              bracketCount--;\n          }\n          if (bracketCount > 0) {\n              currentBlockParts.push(part);\n          }\n          else {\n              if (currentBlockParts.length > 0) {\n                  escapedBlocks.push(currentBlockParts.join(''));\n                  resultParts.push(BLOCK_PLACEHOLDER);\n                  currentBlockParts = [];\n              }\n              resultParts.push(part);\n          }\n          if (part == OPEN_CURLY) {\n              bracketCount++;\n          }\n      }\n      if (currentBlockParts.length > 0) {\n          escapedBlocks.push(currentBlockParts.join(''));\n          resultParts.push(BLOCK_PLACEHOLDER);\n      }\n      return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n  }\n\n  var COMPONENT_VARIABLE = '%COMP%';\n  var HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\n  var CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n  var StylesCompileDependency = (function () {\n      function StylesCompileDependency(moduleUrl, isShimmed, valuePlaceholder) {\n          this.moduleUrl = moduleUrl;\n          this.isShimmed = isShimmed;\n          this.valuePlaceholder = valuePlaceholder;\n      }\n      return StylesCompileDependency;\n  }());\n  var StylesCompileResult = (function () {\n      function StylesCompileResult(componentStylesheet, externalStylesheets) {\n          this.componentStylesheet = componentStylesheet;\n          this.externalStylesheets = externalStylesheets;\n      }\n      return StylesCompileResult;\n  }());\n  var CompiledStylesheet = (function () {\n      function CompiledStylesheet(statements, stylesVar, dependencies, isShimmed, meta) {\n          this.statements = statements;\n          this.stylesVar = stylesVar;\n          this.dependencies = dependencies;\n          this.isShimmed = isShimmed;\n          this.meta = meta;\n      }\n      return CompiledStylesheet;\n  }());\n  var StyleCompiler = (function () {\n      function StyleCompiler(_urlResolver) {\n          this._urlResolver = _urlResolver;\n          this._shadowCss = new ShadowCss();\n      }\n      StyleCompiler.prototype.compileComponent = function (comp) {\n          var _this = this;\n          var externalStylesheets = [];\n          var componentStylesheet = this._compileStyles(comp, new CompileStylesheetMetadata({\n              styles: comp.template.styles,\n              styleUrls: comp.template.styleUrls,\n              moduleUrl: comp.type.moduleUrl\n          }), true);\n          comp.template.externalStylesheets.forEach(function (stylesheetMeta) {\n              var compiledStylesheet = _this._compileStyles(comp, stylesheetMeta, false);\n              externalStylesheets.push(compiledStylesheet);\n          });\n          return new StylesCompileResult(componentStylesheet, externalStylesheets);\n      };\n      StyleCompiler.prototype._compileStyles = function (comp, stylesheet, isComponentStylesheet) {\n          var _this = this;\n          var shim = comp.template.encapsulation === _angular_core.ViewEncapsulation.Emulated;\n          var styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n          var dependencies = [];\n          for (var i = 0; i < stylesheet.styleUrls.length; i++) {\n              var identifier = new CompileIdentifierMetadata({ name: getStylesVarName(null) });\n              dependencies.push(new StylesCompileDependency(stylesheet.styleUrls[i], shim, identifier));\n              styleExpressions.push(new ExternalExpr(identifier));\n          }\n          // styles variable contains plain strings and arrays of other styles arrays (recursive),\n          // so we set its type to dynamic.\n          var stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n          var stmt = variable(stylesVar)\n              .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n              .toDeclStmt(null, [StmtModifier.Final]);\n          return new CompiledStylesheet([stmt], stylesVar, dependencies, shim, stylesheet);\n      };\n      StyleCompiler.prototype._shimIfNeeded = function (style, shim) {\n          return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n      };\n      StyleCompiler.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      StyleCompiler.ctorParameters = [\n          { type: UrlResolver, },\n      ];\n      return StyleCompiler;\n  }());\n  function getStylesVarName(component) {\n      var result = \"styles\";\n      if (component) {\n          result += \"_\" + component.type.name;\n      }\n      return result;\n  }\n\n  /**\n   * An internal module of the Angular compiler that begins with component types,\n   * extracts templates, and eventually produces a compiled version of the component\n   * ready for linking into an application.\n   *\n   * @security  When compiling templates at runtime, you must ensure that the entire template comes\n   * from a trusted source. Attacker-controlled data introduced by a template could expose your\n   * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n   */\n  var RuntimeCompiler = (function () {\n      function RuntimeCompiler(_injector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _directiveWrapperCompiler, _compilerConfig, _animationParser) {\n          this._injector = _injector;\n          this._metadataResolver = _metadataResolver;\n          this._templateParser = _templateParser;\n          this._styleCompiler = _styleCompiler;\n          this._viewCompiler = _viewCompiler;\n          this._ngModuleCompiler = _ngModuleCompiler;\n          this._directiveWrapperCompiler = _directiveWrapperCompiler;\n          this._compilerConfig = _compilerConfig;\n          this._animationParser = _animationParser;\n          this._compiledTemplateCache = new Map();\n          this._compiledHostTemplateCache = new Map();\n          this._compiledDirectiveWrapperCache = new Map();\n          this._compiledNgModuleCache = new Map();\n          this._animationCompiler = new AnimationCompiler();\n      }\n      Object.defineProperty(RuntimeCompiler.prototype, \"injector\", {\n          get: function () { return this._injector; },\n          enumerable: true,\n          configurable: true\n      });\n      RuntimeCompiler.prototype.compileModuleSync = function (moduleType) {\n          return this._compileModuleAndComponents(moduleType, true).syncResult;\n      };\n      RuntimeCompiler.prototype.compileModuleAsync = function (moduleType) {\n          return this._compileModuleAndComponents(moduleType, false).asyncResult;\n      };\n      RuntimeCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n          return this._compileModuleAndAllComponents(moduleType, true).syncResult;\n      };\n      RuntimeCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n          return this._compileModuleAndAllComponents(moduleType, false).asyncResult;\n      };\n      RuntimeCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n          var _this = this;\n          var loadingPromise = this._loadModules(moduleType, isSync);\n          var createResult = function () {\n              _this._compileComponents(moduleType, null);\n              return _this._compileModule(moduleType);\n          };\n          if (isSync) {\n              return new SyncAsyncResult(createResult());\n          }\n          else {\n              return new SyncAsyncResult(null, loadingPromise.then(createResult));\n          }\n      };\n      RuntimeCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n          var _this = this;\n          var loadingPromise = this._loadModules(moduleType, isSync);\n          var createResult = function () {\n              var componentFactories = [];\n              _this._compileComponents(moduleType, componentFactories);\n              return new _angular_core.ModuleWithComponentFactories(_this._compileModule(moduleType), componentFactories);\n          };\n          if (isSync) {\n              return new SyncAsyncResult(createResult());\n          }\n          else {\n              return new SyncAsyncResult(null, loadingPromise.then(createResult));\n          }\n      };\n      RuntimeCompiler.prototype._loadModules = function (mainModule, isSync) {\n          var _this = this;\n          var loadingPromises = [];\n          var _a = this._metadataResolver.loadNgModuleMetadata(mainModule, isSync), ngModule = _a.ngModule, loading = _a.loading;\n          loadingPromises.push(loading);\n          // Note: the loadingPromise for a module only includes the loading of the exported directives\n          // of imported modules.\n          // However, for runtime compilation, we want to transitively compile all modules,\n          // so we also need to call loadNgModuleMetadata for all nested modules.\n          ngModule.transitiveModule.modules.forEach(function (localModuleMeta) {\n              loadingPromises.push(_this._metadataResolver.loadNgModuleMetadata(localModuleMeta.type.reference, isSync)\n                  .loading);\n          });\n          return Promise.all(loadingPromises);\n      };\n      RuntimeCompiler.prototype._compileModule = function (moduleType) {\n          var _this = this;\n          var ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n          if (!ngModuleFactory) {\n              var moduleMeta_1 = this._metadataResolver.getNgModuleMetadata(moduleType);\n              // Always provide a bound Compiler\n              var extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n              var compileResult = this._ngModuleCompiler.compile(moduleMeta_1, extraProviders);\n              compileResult.dependencies.forEach(function (dep) {\n                  dep.placeholder.reference =\n                      _this._assertComponentKnown(dep.comp.reference, true).proxyComponentFactory;\n                  dep.placeholder.name = \"compFactory_\" + dep.comp.name;\n              });\n              if (!this._compilerConfig.useJit) {\n                  ngModuleFactory =\n                      interpretStatements(compileResult.statements, compileResult.ngModuleFactoryVar);\n              }\n              else {\n                  ngModuleFactory = jitStatements(\"/\" + moduleMeta_1.type.name + \"/module.ngfactory.js\", compileResult.statements, compileResult.ngModuleFactoryVar);\n              }\n              this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n          }\n          return ngModuleFactory;\n      };\n      /**\n       * @internal\n       */\n      RuntimeCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n          var _this = this;\n          var ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n          var moduleByDirective = new Map();\n          var templates = new Set();\n          ngModule.transitiveModule.modules.forEach(function (localModuleSummary) {\n              var localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localModuleSummary.type.reference);\n              localModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n                  moduleByDirective.set(dirIdentifier.reference, localModuleMeta);\n                  var dirMeta = _this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n                  _this._compileDirectiveWrapper(dirMeta, localModuleMeta);\n                  if (dirMeta.isComponent) {\n                      templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                      if (allComponentFactories) {\n                          var template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                          templates.add(template);\n                          allComponentFactories.push(template.proxyComponentFactory);\n                      }\n                  }\n              });\n          });\n          ngModule.transitiveModule.modules.forEach(function (localModuleSummary) {\n              var localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localModuleSummary.type.reference);\n              localModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n                  var dirMeta = _this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n                  if (dirMeta.isComponent) {\n                      dirMeta.entryComponents.forEach(function (entryComponentType) {\n                          var moduleMeta = moduleByDirective.get(entryComponentType.reference);\n                          templates.add(_this._createCompiledHostTemplate(entryComponentType.reference, moduleMeta));\n                      });\n                  }\n              });\n              localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                  var moduleMeta = moduleByDirective.get(entryComponentType.reference);\n                  templates.add(_this._createCompiledHostTemplate(entryComponentType.reference, moduleMeta));\n              });\n          });\n          templates.forEach(function (template) { return _this._compileTemplate(template); });\n      };\n      RuntimeCompiler.prototype.clearCacheFor = function (type) {\n          this._compiledNgModuleCache.delete(type);\n          this._metadataResolver.clearCacheFor(type);\n          this._compiledHostTemplateCache.delete(type);\n          var compiledTemplate = this._compiledTemplateCache.get(type);\n          if (compiledTemplate) {\n              this._compiledTemplateCache.delete(type);\n          }\n      };\n      RuntimeCompiler.prototype.clearCache = function () {\n          this._metadataResolver.clearCache();\n          this._compiledTemplateCache.clear();\n          this._compiledHostTemplateCache.clear();\n          this._compiledNgModuleCache.clear();\n      };\n      RuntimeCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n          if (!ngModule) {\n              throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n          }\n          var compiledTemplate = this._compiledHostTemplateCache.get(compType);\n          if (!compiledTemplate) {\n              var compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n              assertComponent(compMeta);\n              var hostMeta = createHostComponentMeta(compMeta);\n              compiledTemplate = new CompiledTemplate(true, compMeta.selector, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n              this._compiledHostTemplateCache.set(compType, compiledTemplate);\n          }\n          return compiledTemplate;\n      };\n      RuntimeCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n          var compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n          if (!compiledTemplate) {\n              assertComponent(compMeta);\n              compiledTemplate = new CompiledTemplate(false, compMeta.selector, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n              this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n          }\n          return compiledTemplate;\n      };\n      RuntimeCompiler.prototype._assertComponentKnown = function (compType, isHost) {\n          var compiledTemplate = isHost ? this._compiledHostTemplateCache.get(compType) :\n              this._compiledTemplateCache.get(compType);\n          if (!compiledTemplate) {\n              throw new Error(\"Illegal state: Compiled view for component \" + stringify(compType) + \" (host: \" + isHost + \") does not exist!\");\n          }\n          return compiledTemplate;\n      };\n      RuntimeCompiler.prototype._assertDirectiveWrapper = function (dirType) {\n          var dirWrapper = this._compiledDirectiveWrapperCache.get(dirType);\n          if (!dirWrapper) {\n              throw new Error(\"Illegal state: Directive wrapper for \" + stringify(dirType) + \" has not been compiled!\");\n          }\n          return dirWrapper;\n      };\n      RuntimeCompiler.prototype._compileDirectiveWrapper = function (dirMeta, moduleMeta) {\n          var compileResult = this._directiveWrapperCompiler.compile(dirMeta);\n          var statements = compileResult.statements;\n          var directiveWrapperClass;\n          if (!this._compilerConfig.useJit) {\n              directiveWrapperClass = interpretStatements(statements, compileResult.dirWrapperClassVar);\n          }\n          else {\n              directiveWrapperClass = jitStatements(\"/\" + moduleMeta.type.name + \"/\" + dirMeta.type.name + \"/wrapper.ngfactory.js\", statements, compileResult.dirWrapperClassVar);\n          }\n          this._compiledDirectiveWrapperCache.set(dirMeta.type.reference, directiveWrapperClass);\n      };\n      RuntimeCompiler.prototype._compileTemplate = function (template) {\n          var _this = this;\n          if (template.isCompiled) {\n              return;\n          }\n          var compMeta = template.compMeta;\n          var externalStylesheetsByModuleUrl = new Map();\n          var stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n          stylesCompileResult.externalStylesheets.forEach(function (r) { externalStylesheetsByModuleUrl.set(r.meta.moduleUrl, r); });\n          this._resolveStylesCompileResult(stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n          var parsedAnimations = this._animationParser.parseComponent(compMeta);\n          var directives = template.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n          var pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n          var parsedTemplate = this._templateParser.parse(compMeta, compMeta.template.template, directives, pipes, template.ngModule.schemas, compMeta.type.name);\n          var compiledAnimations = this._animationCompiler.compile(compMeta.type.name, parsedAnimations);\n          var compileResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, variable(stylesCompileResult.componentStylesheet.stylesVar), pipes, compiledAnimations);\n          compileResult.dependencies.forEach(function (dep) {\n              var depTemplate;\n              if (dep instanceof ViewClassDependency) {\n                  var vfd = dep;\n                  depTemplate = _this._assertComponentKnown(vfd.comp.reference, false);\n                  vfd.placeholder.reference = depTemplate.proxyViewClass;\n                  vfd.placeholder.name = \"View_\" + vfd.comp.name;\n              }\n              else if (dep instanceof ComponentFactoryDependency) {\n                  var cfd = dep;\n                  depTemplate = _this._assertComponentKnown(cfd.comp.reference, true);\n                  cfd.placeholder.reference = depTemplate.proxyComponentFactory;\n                  cfd.placeholder.name = \"compFactory_\" + cfd.comp.name;\n              }\n              else if (dep instanceof DirectiveWrapperDependency) {\n                  var dwd = dep;\n                  dwd.placeholder.reference = _this._assertDirectiveWrapper(dwd.dir.reference);\n              }\n          });\n          var statements = (_a = stylesCompileResult.componentStylesheet.statements).concat.apply(_a, compiledAnimations.map(function (ca) { return ca.statements; }))\n              .concat(compileResult.statements);\n          var viewClass;\n          if (!this._compilerConfig.useJit) {\n              viewClass = interpretStatements(statements, compileResult.viewClassVar);\n          }\n          else {\n              viewClass = jitStatements(\"/\" + template.ngModule.type.name + \"/\" + template.compType.name + \"/\" + (template.isHost ? 'host' : 'component') + \".ngfactory.js\", statements, compileResult.viewClassVar);\n          }\n          template.compiled(viewClass);\n          var _a;\n      };\n      RuntimeCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n          var _this = this;\n          result.dependencies.forEach(function (dep, i) {\n              var nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n              var nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n              dep.valuePlaceholder.reference = nestedStylesArr;\n              dep.valuePlaceholder.name = \"importedStyles\" + i;\n          });\n      };\n      RuntimeCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n          this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n          if (!this._compilerConfig.useJit) {\n              return interpretStatements(result.statements, result.stylesVar);\n          }\n          else {\n              return jitStatements(\"/\" + result.meta.moduleUrl + \".css.js\", result.statements, result.stylesVar);\n          }\n      };\n      RuntimeCompiler.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      RuntimeCompiler.ctorParameters = [\n          { type: _angular_core.Injector, },\n          { type: CompileMetadataResolver, },\n          { type: TemplateParser, },\n          { type: StyleCompiler, },\n          { type: ViewCompiler, },\n          { type: NgModuleCompiler, },\n          { type: DirectiveWrapperCompiler, },\n          { type: CompilerConfig, },\n          { type: AnimationParser, },\n      ];\n      return RuntimeCompiler;\n  }());\n  var CompiledTemplate = (function () {\n      function CompiledTemplate(isHost, selector, compType, compMeta, ngModule, directives) {\n          this.isHost = isHost;\n          this.compType = compType;\n          this.compMeta = compMeta;\n          this.ngModule = ngModule;\n          this.directives = directives;\n          this._viewClass = null;\n          this.isCompiled = false;\n          var self = this;\n          this.proxyViewClass = function () {\n              if (!self._viewClass) {\n                  throw new Error(\"Illegal state: CompiledTemplate for \" + stringify(self.compType) + \" is not compiled yet!\");\n              }\n              return self._viewClass.apply(this, arguments);\n          };\n          this.proxyComponentFactory = isHost ?\n              new _angular_core.ComponentFactory(selector, this.proxyViewClass, compType.reference) :\n              null;\n      }\n      CompiledTemplate.prototype.compiled = function (viewClass) {\n          this._viewClass = viewClass;\n          this.proxyViewClass.prototype = viewClass.prototype;\n          this.isCompiled = true;\n      };\n      return CompiledTemplate;\n  }());\n  function assertComponent(meta) {\n      if (!meta.isComponent) {\n          throw new Error(\"Could not compile '\" + meta.type.name + \"' because it is not a component.\");\n      }\n  }\n  /**\n   * Implements `Compiler` by delegating to the RuntimeCompiler using a known module.\n   */\n  var ModuleBoundCompiler = (function () {\n      function ModuleBoundCompiler(_delegate, _ngModule) {\n          this._delegate = _delegate;\n          this._ngModule = _ngModule;\n      }\n      Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n          get: function () { return this._delegate.injector; },\n          enumerable: true,\n          configurable: true\n      });\n      ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n          return this._delegate.compileModuleSync(moduleType);\n      };\n      ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n          return this._delegate.compileModuleAsync(moduleType);\n      };\n      ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n          return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n      };\n      ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n          return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n      };\n      /**\n       * Clears all caches\n       */\n      ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n      /**\n       * Clears the cache for the given component/ngModule.\n       */\n      ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n      return ModuleBoundCompiler;\n  }());\n\n  // =================================================================================================\n  // =================================================================================================\n  // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n  // =================================================================================================\n  // =================================================================================================\n  //\n  //        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n  //                               Reach out to mprobst for details.\n  //\n  // =================================================================================================\n  /** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */\n  var SECURITY_SCHEMA = {};\n  function registerContext(ctx, specs) {\n      for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n          var spec = specs_1[_i];\n          SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n      }\n  }\n  // Case is insignificant below, all element and attribute names are lower-cased for lookup.\n  registerContext(_angular_core.SecurityContext.HTML, [\n      'iframe|srcdoc',\n      '*|innerHTML',\n      '*|outerHTML',\n  ]);\n  registerContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n  // NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\n  registerContext(_angular_core.SecurityContext.URL, [\n      '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n      'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n      'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n      'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n  ]);\n  registerContext(_angular_core.SecurityContext.RESOURCE_URL, [\n      'applet|code',\n      'applet|codebase',\n      'base|href',\n      'embed|src',\n      'frame|src',\n      'head|profile',\n      'html|manifest',\n      'iframe|src',\n      'link|href',\n      'media|src',\n      'object|codebase',\n      'object|data',\n      'script|src',\n  ]);\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$21 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var BOOLEAN = 'boolean';\n  var NUMBER = 'number';\n  var STRING = 'string';\n  var OBJECT = 'object';\n  /**\n   * This array represents the DOM schema. It encodes inheritance, properties, and events.\n   *\n   * ## Overview\n   *\n   * Each line represents one kind of element. The `element_inheritance` and properties are joined\n   * using `element_inheritance|properties` syntax.\n   *\n   * ## Element Inheritance\n   *\n   * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n   * Here the individual elements are separated by `,` (commas). Every element in the list\n   * has identical properties.\n   *\n   * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n   * specified then `\"\"` (blank) element is assumed.\n   *\n   * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n   * elements.\n   *\n   * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n   *\n   * ## Properties\n   *\n   * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n   * by a special character designating its type:\n   *\n   * - (no prefix): property is a string.\n   * - `*`: property represents an event.\n   * - `!`: property is a boolean.\n   * - `#`: property is a number.\n   * - `%`: property is an object.\n   *\n   * ## Query\n   *\n   * The class creates an internal squas representation which allows to easily answer the query of\n   * if a given property exist on a given element.\n   *\n   * NOTE: We don't yet support querying for types or events.\n   * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n   *       see dom_element_schema_registry_spec.ts\n   */\n  // =================================================================================================\n  // =================================================================================================\n  // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n  // =================================================================================================\n  // =================================================================================================\n  //\n  //                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n  //\n  // Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n  // dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n  //\n  // =================================================================================================\n  var SCHEMA = [\n      '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop',\n      '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n      'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n      'media^[HTMLElement]|!autoplay,!controls,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,#playbackRate,preload,src,%srcObject,#volume',\n      ':svg:^[HTMLElement]|*abort,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n      ':svg:graphics^:svg:|',\n      ':svg:animation^:svg:|*begin,*end,*repeat',\n      ':svg:geometry^:svg:|',\n      ':svg:componentTransferFunction^:svg:|',\n      ':svg:gradient^:svg:|',\n      ':svg:textContent^:svg:graphics|',\n      ':svg:textPositioning^:svg:textContent|',\n      'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n      'area^[HTMLElement]|alt,coords,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,search,shape,target,username',\n      'audio^media|',\n      'br^[HTMLElement]|clear',\n      'base^[HTMLElement]|href,target',\n      'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n      'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n      'canvas^[HTMLElement]|#height,#width',\n      'content^[HTMLElement]|select',\n      'dl^[HTMLElement]|!compact',\n      'datalist^[HTMLElement]|',\n      'details^[HTMLElement]|!open',\n      'dialog^[HTMLElement]|!open,returnValue',\n      'dir^[HTMLElement]|!compact',\n      'div^[HTMLElement]|align',\n      'embed^[HTMLElement]|align,height,name,src,type,width',\n      'fieldset^[HTMLElement]|!disabled,name',\n      'font^[HTMLElement]|color,face,size',\n      'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n      'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n      'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n      'hr^[HTMLElement]|align,color,!noShade,size,width',\n      'head^[HTMLElement]|',\n      'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n      'html^[HTMLElement]|version',\n      'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n      'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n      'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n      'keygen^[HTMLElement]|!autofocus,challenge,!disabled,keytype,name',\n      'li^[HTMLElement]|type,#value',\n      'label^[HTMLElement]|htmlFor',\n      'legend^[HTMLElement]|align',\n      'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,rel,%relList,rev,%sizes,target,type',\n      'map^[HTMLElement]|name',\n      'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n      'menu^[HTMLElement]|!compact',\n      'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n      'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n      'ins,del^[HTMLElement]|cite,dateTime',\n      'ol^[HTMLElement]|!compact,!reversed,#start,type',\n      'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n      'optgroup^[HTMLElement]|!disabled,label',\n      'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n      'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n      'p^[HTMLElement]|align',\n      'param^[HTMLElement]|name,type,value,valueType',\n      'picture^[HTMLElement]|',\n      'pre^[HTMLElement]|#width',\n      'progress^[HTMLElement]|#max,#value',\n      'q,blockquote,cite^[HTMLElement]|',\n      'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n      'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n      'shadow^[HTMLElement]|',\n      'source^[HTMLElement]|media,sizes,src,srcset,type',\n      'span^[HTMLElement]|',\n      'style^[HTMLElement]|!disabled,media,type',\n      'caption^[HTMLElement]|align',\n      'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n      'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n      'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n      'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n      'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n      'template^[HTMLElement]|',\n      'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n      'title^[HTMLElement]|text',\n      'track^[HTMLElement]|!default,kind,label,src,srclang',\n      'ul^[HTMLElement]|!compact,type',\n      'unknown^[HTMLElement]|',\n      'video^media|#height,poster,#width',\n      ':svg:a^:svg:graphics|',\n      ':svg:animate^:svg:animation|',\n      ':svg:animateMotion^:svg:animation|',\n      ':svg:animateTransform^:svg:animation|',\n      ':svg:circle^:svg:geometry|',\n      ':svg:clipPath^:svg:graphics|',\n      ':svg:cursor^:svg:|',\n      ':svg:defs^:svg:graphics|',\n      ':svg:desc^:svg:|',\n      ':svg:discard^:svg:|',\n      ':svg:ellipse^:svg:geometry|',\n      ':svg:feBlend^:svg:|',\n      ':svg:feColorMatrix^:svg:|',\n      ':svg:feComponentTransfer^:svg:|',\n      ':svg:feComposite^:svg:|',\n      ':svg:feConvolveMatrix^:svg:|',\n      ':svg:feDiffuseLighting^:svg:|',\n      ':svg:feDisplacementMap^:svg:|',\n      ':svg:feDistantLight^:svg:|',\n      ':svg:feDropShadow^:svg:|',\n      ':svg:feFlood^:svg:|',\n      ':svg:feFuncA^:svg:componentTransferFunction|',\n      ':svg:feFuncB^:svg:componentTransferFunction|',\n      ':svg:feFuncG^:svg:componentTransferFunction|',\n      ':svg:feFuncR^:svg:componentTransferFunction|',\n      ':svg:feGaussianBlur^:svg:|',\n      ':svg:feImage^:svg:|',\n      ':svg:feMerge^:svg:|',\n      ':svg:feMergeNode^:svg:|',\n      ':svg:feMorphology^:svg:|',\n      ':svg:feOffset^:svg:|',\n      ':svg:fePointLight^:svg:|',\n      ':svg:feSpecularLighting^:svg:|',\n      ':svg:feSpotLight^:svg:|',\n      ':svg:feTile^:svg:|',\n      ':svg:feTurbulence^:svg:|',\n      ':svg:filter^:svg:|',\n      ':svg:foreignObject^:svg:graphics|',\n      ':svg:g^:svg:graphics|',\n      ':svg:image^:svg:graphics|',\n      ':svg:line^:svg:geometry|',\n      ':svg:linearGradient^:svg:gradient|',\n      ':svg:mpath^:svg:|',\n      ':svg:marker^:svg:|',\n      ':svg:mask^:svg:|',\n      ':svg:metadata^:svg:|',\n      ':svg:path^:svg:geometry|',\n      ':svg:pattern^:svg:|',\n      ':svg:polygon^:svg:geometry|',\n      ':svg:polyline^:svg:geometry|',\n      ':svg:radialGradient^:svg:gradient|',\n      ':svg:rect^:svg:geometry|',\n      ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n      ':svg:script^:svg:|type',\n      ':svg:set^:svg:animation|',\n      ':svg:stop^:svg:|',\n      ':svg:style^:svg:|!disabled,media,title,type',\n      ':svg:switch^:svg:graphics|',\n      ':svg:symbol^:svg:|',\n      ':svg:tspan^:svg:textPositioning|',\n      ':svg:text^:svg:textPositioning|',\n      ':svg:textPath^:svg:textContent|',\n      ':svg:title^:svg:|',\n      ':svg:use^:svg:graphics|',\n      ':svg:view^:svg:|#zoomAndPan',\n      'data^[HTMLElement]|value',\n      'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n      'summary^[HTMLElement]|',\n      'time^[HTMLElement]|dateTime',\n  ];\n  var _ATTR_TO_PROP = {\n      'class': 'className',\n      'for': 'htmlFor',\n      'formaction': 'formAction',\n      'innerHtml': 'innerHTML',\n      'readonly': 'readOnly',\n      'tabindex': 'tabIndex',\n  };\n  var DomElementSchemaRegistry = (function (_super) {\n      __extends$21(DomElementSchemaRegistry, _super);\n      function DomElementSchemaRegistry() {\n          var _this = this;\n          _super.call(this);\n          this._schema = {};\n          SCHEMA.forEach(function (encodedType) {\n              var type = {};\n              var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n              var properties = strProperties.split(',');\n              var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n              typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n              var superType = superName && _this._schema[superName.toLowerCase()];\n              if (superType) {\n                  Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n              }\n              properties.forEach(function (property) {\n                  if (property.length > 0) {\n                      switch (property[0]) {\n                          case '*':\n                              // We don't yet support events.\n                              // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                              // will\n                              // almost certainly introduce bad XSS vulnerabilities.\n                              // type[property.substring(1)] = EVENT;\n                              break;\n                          case '!':\n                              type[property.substring(1)] = BOOLEAN;\n                              break;\n                          case '#':\n                              type[property.substring(1)] = NUMBER;\n                              break;\n                          case '%':\n                              type[property.substring(1)] = OBJECT;\n                              break;\n                          default:\n                              type[property] = STRING;\n                      }\n                  }\n              });\n          });\n      }\n      DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n          if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n              return true;\n          }\n          if (tagName.indexOf('-') > -1) {\n              if (tagName === 'ng-container' || tagName === 'ng-content') {\n                  return false;\n              }\n              if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                  // Can't tell now as we don't know which properties a custom element will get\n                  // once it is instantiated\n                  return true;\n              }\n          }\n          var elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n          return !!elementProperties[propName];\n      };\n      DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n          if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n              return true;\n          }\n          if (tagName.indexOf('-') > -1) {\n              if (tagName === 'ng-container' || tagName === 'ng-content') {\n                  return true;\n              }\n              if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                  // Allow any custom elements\n                  return true;\n              }\n          }\n          return !!this._schema[tagName.toLowerCase()];\n      };\n      /**\n       * securityContext returns the security context for the given property on the given DOM tag.\n       *\n       * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n       * possible to bind a value into a changing attribute or tag name.\n       *\n       * The filtering is white list based. All attributes in the schema above are assumed to have the\n       * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n       * attack vectors are assigned their appropriate context.\n       */\n      DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n          if (isAttribute) {\n              // NB: For security purposes, use the mapped property name, not the attribute name.\n              propName = this.getMappedPropName(propName);\n          }\n          // Make sure comparisons are case insensitive, so that case differences between attribute and\n          // property names do not have a security impact.\n          tagName = tagName.toLowerCase();\n          propName = propName.toLowerCase();\n          var ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n          if (ctx) {\n              return ctx;\n          }\n          ctx = SECURITY_SCHEMA['*|' + propName];\n          return ctx ? ctx : _angular_core.SecurityContext.NONE;\n      };\n      DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n      DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n      DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n          if (name.toLowerCase().startsWith('on')) {\n              var msg = (\"Binding to event property '\" + name + \"' is disallowed for security reasons, \") +\n                  (\"please use (\" + name.slice(2) + \")=...\") +\n                  (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                  \" current module.\";\n              return { error: true, msg: msg };\n          }\n          else {\n              return { error: false };\n          }\n      };\n      DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n          if (name.toLowerCase().startsWith('on')) {\n              var msg = (\"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \") +\n                  (\"please use (\" + name.slice(2) + \")=...\");\n              return { error: true, msg: msg };\n          }\n          else {\n              return { error: false };\n          }\n      };\n      DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n      DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n          return dashCaseToCamelCase(propName);\n      };\n      DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n          var unit = '';\n          var strVal = val.toString().trim();\n          var errorMsg = null;\n          if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n              if (typeof val === 'number') {\n                  unit = 'px';\n              }\n              else {\n                  var valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                  if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                      errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                  }\n              }\n          }\n          return { error: errorMsg, value: strVal + unit };\n      };\n      DomElementSchemaRegistry.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      DomElementSchemaRegistry.ctorParameters = [];\n      return DomElementSchemaRegistry;\n  }(ElementSchemaRegistry));\n  function _isPixelDimensionStyle(prop) {\n      switch (prop) {\n          case 'width':\n          case 'height':\n          case 'minWidth':\n          case 'minHeight':\n          case 'maxWidth':\n          case 'maxHeight':\n          case 'left':\n          case 'top':\n          case 'bottom':\n          case 'right':\n          case 'fontSize':\n          case 'outlineWidth':\n          case 'outlineOffset':\n          case 'paddingTop':\n          case 'paddingLeft':\n          case 'paddingBottom':\n          case 'paddingRight':\n          case 'marginTop':\n          case 'marginLeft':\n          case 'marginBottom':\n          case 'marginRight':\n          case 'borderRadius':\n          case 'borderWidth':\n          case 'borderTopWidth':\n          case 'borderLeftWidth':\n          case 'borderRightWidth':\n          case 'borderBottomWidth':\n          case 'textIndent':\n              return true;\n          default:\n              return false;\n      }\n  }\n\n  var _NO_RESOURCE_LOADER = {\n      get: function (url) {\n          throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n      }\n  };\n  /**\n   * A set of providers that provide `RuntimeCompiler` and its dependencies to use for\n   * template compilation.\n   */\n  var COMPILER_PROVIDERS = [\n      { provide: Reflector, useValue: reflector },\n      { provide: ReflectorReader, useExisting: Reflector },\n      { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n      Console,\n      Lexer,\n      Parser,\n      HtmlParser,\n      {\n          provide: I18NHtmlParser,\n          useFactory: function (parser, translations, format) {\n              return new I18NHtmlParser(parser, translations, format);\n          },\n          deps: [\n              HtmlParser,\n              [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n              [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n          ]\n      },\n      TemplateParser,\n      DirectiveNormalizer,\n      CompileMetadataResolver,\n      DEFAULT_PACKAGE_URL_PROVIDER,\n      StyleCompiler,\n      ViewCompiler,\n      NgModuleCompiler,\n      DirectiveWrapperCompiler,\n      { provide: CompilerConfig, useValue: new CompilerConfig() },\n      RuntimeCompiler,\n      { provide: _angular_core.Compiler, useExisting: RuntimeCompiler },\n      DomElementSchemaRegistry,\n      { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n      UrlResolver,\n      DirectiveResolver,\n      PipeResolver,\n      NgModuleResolver,\n      AnimationParser\n  ];\n  var RuntimeCompilerFactory = (function () {\n      function RuntimeCompilerFactory(defaultOptions) {\n          this._defaultOptions = [{\n                  useDebug: _angular_core.isDevMode(),\n                  useJit: true,\n                  defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated\n              }].concat(defaultOptions);\n      }\n      RuntimeCompilerFactory.prototype.createCompiler = function (options) {\n          if (options === void 0) { options = []; }\n          var mergedOptions = _mergeOptions(this._defaultOptions.concat(options));\n          var injector = _angular_core.ReflectiveInjector.resolveAndCreate([\n              COMPILER_PROVIDERS, {\n                  provide: CompilerConfig,\n                  useFactory: function () {\n                      return new CompilerConfig({\n                          // let explicit values from the compiler options overwrite options\n                          // from the app providers. E.g. important for the testing platform.\n                          genDebugInfo: mergedOptions.useDebug,\n                          // let explicit values from the compiler options overwrite options\n                          // from the app providers\n                          useJit: mergedOptions.useJit,\n                          // let explicit values from the compiler options overwrite options\n                          // from the app providers\n                          defaultEncapsulation: mergedOptions.defaultEncapsulation,\n                          logBindingUpdate: mergedOptions.useDebug\n                      });\n                  },\n                  deps: []\n              },\n              mergedOptions.providers\n          ]);\n          return injector.get(_angular_core.Compiler);\n      };\n      RuntimeCompilerFactory.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      RuntimeCompilerFactory.ctorParameters = [\n          { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n      ];\n      return RuntimeCompilerFactory;\n  }());\n  function _initReflector() {\n      reflector.reflectionCapabilities = new ReflectionCapabilities();\n  }\n  /**\n   * A platform that included corePlatform and the compiler.\n   *\n   * @experimental\n   */\n  var platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n      { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n      { provide: _angular_core.CompilerFactory, useClass: RuntimeCompilerFactory },\n      { provide: _angular_core.PLATFORM_INITIALIZER, useValue: _initReflector, multi: true },\n  ]);\n  function _mergeOptions(optionsArr) {\n      return {\n          useDebug: _lastDefined(optionsArr.map(function (options) { return options.useDebug; })),\n          useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n          defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n          providers: _mergeArrays(optionsArr.map(function (options) { return options.providers; }))\n      };\n  }\n  function _lastDefined(args) {\n      for (var i = args.length - 1; i >= 0; i--) {\n          if (args[i] !== undefined) {\n              return args[i];\n          }\n      }\n      return undefined;\n  }\n  function _mergeArrays(parts) {\n      var result = [];\n      parts.forEach(function (part) { return part && result.push.apply(result, part); });\n      return result;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  // asset:<package-name>/<realm>/<path-to-module>\n  var _ASSET_URL_RE = /asset:([^\\/]+)\\/([^\\/]+)\\/(.+)/;\n  /**\n   * Interface that defines how import statements should be generated.\n   */\n  var ImportGenerator = (function () {\n      function ImportGenerator() {\n      }\n      ImportGenerator.parseAssetUrl = function (url) { return AssetUrl.parse(url); };\n      return ImportGenerator;\n  }());\n  var AssetUrl = (function () {\n      function AssetUrl(packageName, firstLevelDir, modulePath) {\n          this.packageName = packageName;\n          this.firstLevelDir = firstLevelDir;\n          this.modulePath = modulePath;\n      }\n      AssetUrl.parse = function (url, allowNonMatching) {\n          if (allowNonMatching === void 0) { allowNonMatching = true; }\n          var match = url.match(_ASSET_URL_RE);\n          if (match !== null) {\n              return new AssetUrl(match[1], match[2], match[3]);\n          }\n          if (allowNonMatching) {\n              return null;\n          }\n          throw new Error(\"Url \" + url + \" is not a valid asset: url\");\n      };\n      return AssetUrl;\n  }());\n\n  exports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\n  exports.CompilerConfig = CompilerConfig;\n  exports.RenderTypes = RenderTypes;\n  exports.RuntimeCompiler = RuntimeCompiler;\n  exports.DirectiveResolver = DirectiveResolver;\n  exports.PipeResolver = PipeResolver;\n  exports.NgModuleResolver = NgModuleResolver;\n  exports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\n  exports.InterpolationConfig = InterpolationConfig;\n  exports.NgModuleCompiler = NgModuleCompiler;\n  exports.DirectiveWrapperCompiler = DirectiveWrapperCompiler;\n  exports.ViewCompiler = ViewCompiler;\n  exports.AnimationParser = AnimationParser;\n  exports.TextAst = TextAst;\n  exports.BoundTextAst = BoundTextAst;\n  exports.AttrAst = AttrAst;\n  exports.BoundElementPropertyAst = BoundElementPropertyAst;\n  exports.BoundEventAst = BoundEventAst;\n  exports.ReferenceAst = ReferenceAst;\n  exports.VariableAst = VariableAst;\n  exports.ElementAst = ElementAst;\n  exports.EmbeddedTemplateAst = EmbeddedTemplateAst;\n  exports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\n  exports.DirectiveAst = DirectiveAst;\n  exports.ProviderAst = ProviderAst;\n  exports.NgContentAst = NgContentAst;\n  exports.templateVisitAll = templateVisitAll;\n  exports.CompileMetadataWithIdentifier = CompileMetadataWithIdentifier;\n  exports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\n  exports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\n  exports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\n  exports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\n  exports.CompileAnimationMetadata = CompileAnimationMetadata;\n  exports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\n  exports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\n  exports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\n  exports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\n  exports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\n  exports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\n  exports.CompileIdentifierMetadata = CompileIdentifierMetadata;\n  exports.CompileDiDependencyMetadata = CompileDiDependencyMetadata;\n  exports.CompileProviderMetadata = CompileProviderMetadata;\n  exports.CompileFactoryMetadata = CompileFactoryMetadata;\n  exports.CompileTokenMetadata = CompileTokenMetadata;\n  exports.CompileTypeMetadata = CompileTypeMetadata;\n  exports.CompileQueryMetadata = CompileQueryMetadata;\n  exports.CompileStylesheetMetadata = CompileStylesheetMetadata;\n  exports.CompileTemplateMetadata = CompileTemplateMetadata;\n  exports.CompileDirectiveMetadata = CompileDirectiveMetadata;\n  exports.createHostComponentMeta = createHostComponentMeta;\n  exports.CompilePipeMetadata = CompilePipeMetadata;\n  exports.CompileNgModuleMetadata = CompileNgModuleMetadata;\n  exports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\n  exports.removeIdentifierDuplicates = removeIdentifierDuplicates;\n  exports.isStaticSymbol = isStaticSymbol;\n  exports.ProviderMeta = ProviderMeta;\n  exports.SourceModule = SourceModule;\n  exports.analyzeNgModules = analyzeNgModules;\n  exports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\n  exports.loadNgModuleDirectives = loadNgModuleDirectives;\n  exports.OfflineCompiler = OfflineCompiler;\n  exports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\n  exports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\n  exports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\n  exports.UrlResolver = UrlResolver;\n  exports.getUrlScheme = getUrlScheme;\n  exports.ResourceLoader = ResourceLoader;\n  exports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\n  exports.RuntimeCompilerFactory = RuntimeCompilerFactory;\n  exports.platformCoreDynamic = platformCoreDynamic;\n  exports.ElementSchemaRegistry = ElementSchemaRegistry;\n  exports.I18NHtmlParser = I18NHtmlParser;\n  exports.MessageBundle = MessageBundle;\n  exports.Xliff = Xliff;\n  exports.Xmb = Xmb;\n  exports.Xtb = Xtb;\n  exports.DirectiveNormalizer = DirectiveNormalizer;\n  exports.Lexer = Lexer;\n  exports.Token = Token;\n  exports.EOF = EOF;\n  exports.isIdentifier = isIdentifier;\n  exports.isQuote = isQuote;\n  exports.SplitInterpolation = SplitInterpolation;\n  exports.TemplateBindingParseResult = TemplateBindingParseResult;\n  exports.Parser = Parser;\n  exports._ParseAST = _ParseAST;\n  exports.CompileMetadataResolver = CompileMetadataResolver;\n  exports.HtmlParser = HtmlParser;\n  exports.ParseTreeResult = ParseTreeResult;\n  exports.TreeError = TreeError;\n  exports.ImportGenerator = ImportGenerator;\n  exports.AssetUrl = AssetUrl;\n  exports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\n  exports.TypeScriptEmitter = TypeScriptEmitter;\n  exports.ParseLocation = ParseLocation;\n  exports.ParseSourceFile = ParseSourceFile;\n  exports.ParseSourceSpan = ParseSourceSpan;\n  exports.ParseError = ParseError;\n  exports.DomElementSchemaRegistry = DomElementSchemaRegistry;\n  exports.CssSelector = CssSelector;\n  exports.SelectorMatcher = SelectorMatcher;\n  exports.SelectorListContext = SelectorListContext;\n  exports.SelectorContext = SelectorContext;\n  exports.StylesCompileDependency = StylesCompileDependency;\n  exports.StylesCompileResult = StylesCompileResult;\n  exports.CompiledStylesheet = CompiledStylesheet;\n  exports.StyleCompiler = StyleCompiler;\n  exports.TemplateParseError = TemplateParseError;\n  exports.TemplateParseResult = TemplateParseResult;\n  exports.TemplateParser = TemplateParser;\n  exports.splitClasses = splitClasses;\n  exports.removeSummaryDuplicates = removeSummaryDuplicates;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/compiler/bundles/compiler.umd.js\n ** module id = 136\n ** module chunks = 2\n **/","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/Observer.js\n ** module id = 147\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/SubjectSubscription.js\n ** module id = 148\n ** module chunks = 2\n **/","\"use strict\";\nvar root_1 = require('../util/root');\n/**\n * @param PromiseCtor\n * @return {Promise<T>}\n * @method toPromise\n * @owner Observable\n */\nfunction toPromise(PromiseCtor) {\n    var _this = this;\n    if (!PromiseCtor) {\n        if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n            PromiseCtor = root_1.root.Rx.config.Promise;\n        }\n        else if (root_1.root.Promise) {\n            PromiseCtor = root_1.root.Promise;\n        }\n    }\n    if (!PromiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return new PromiseCtor(function (resolve, reject) {\n        var value;\n        _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n    });\n}\nexports.toPromise = toPromise;\n//# sourceMappingURL=toPromise.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/toPromise.js\n ** module id = 164\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/UnsubscriptionError.js\n ** module id = 165\n ** module chunks = 2\n **/","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/isObject.js\n ** module id = 166\n ** module chunks = 2\n **/","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.$$rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber();\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/toSubscriber.js\n ** module id = 168\n ** module chunks = 2\n **/","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/tryCatch.js\n ** module id = 169\n ** module chunks = 2\n **/"],"mappings":";;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;AAQA;;;;;;;;ACtjxPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfn2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1kxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrnplxthkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;","sourceRoot":""}